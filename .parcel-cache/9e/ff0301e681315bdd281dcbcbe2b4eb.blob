{"mappings":"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CrBtF,QAAQ2K,eAAeA;AACvB3K,QAAQe,UAAUA;AAClBf,QAAQgE,iBAAiBA;AACzBhE,QAAQiD,iBAAiBA;AACzBjD,QAAQmI,iBAAiBA;AACzBnI,QAAQmD,mBAAmBA;AAC3BnD,QAAQwC,iBAAiBA;AACzBxC,QAAQtD,SAASA;AACjBsD,QAAQY,gBAAgBA;AACxBZ,QAAQ4K,iBAAiBA;AACzB5K,QAAQmG,kBAAkBA;AAC1BnG,QAAQoJ,eAAeA;AACvBpJ,QAAQ8J,WAAWA;AACnB9J,QAAQqI,YAAYA;AACpBrI,QAAQ6H,eAAeA;;;AC7iBvxalvexHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC9EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACxnjHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;A;A;A;ACnYA,MAAMgD,UAAU,GAAG,IAAnB;AACA,MAAMC,UAAU,GAAG,IAAnB;AACA,MAAMC,MAAM,GAAG,IAAf;AACA,MAAMC,QAAQ,GAAG,IAAjB;AACA,MAAMC,MAAM,GAAG,IAAf;AACA,MAAMC,OAAO,GAAG,IAAhB;AAcO,MAAMC,SAAN,CAAgB;AAarBC,EAAAA,WAAW,CAACC,KAAD,EAAgBC,IAAkB,GAAG,EAArC,EAAyC;AAAA,SAZpDD,KAYoD;AAAA,SAXpDE,OAWoD;AAAA,SAVpDV,UAUoD;AAAA,SATpDC,UASoD;AAAA,SARpDU,gBAQoD;AAAA,SAPpDT,MAOoD;AAAA,SANpDC,QAMoD;AAAA,SALpDC,MAKoD;AAAA,SAJpDC,OAIoD;AAAA,SAHpDO,KAGoD;AAAA,SAFpDC,aAEoD;AAClD,SAAKL,KAAL,GAAaA,KAAb;AACA,SAAKE,OAAL,GAAeD,IAAI,CAACC,OAApB;AACA,SAAKV,UAAL,GAAkB,CAAC,CAACS,IAAI,CAACT,UAAzB;AACA,SAAKC,UAAL,GAAkB,CAAC,CAACQ,IAAI,CAACR,UAAzB;AACA,SAAKU,gBAAL,GAAwB,CAAC,CAACF,IAAI,CAACE,gBAA/B;AACA,SAAKT,MAAL,GAAc,CAAC,CAACO,IAAI,CAACP,MAArB;AACA,SAAKC,QAAL,GAAgB,CAAC,CAACM,IAAI,CAACN,QAAvB;AACA,SAAKC,MAAL,GAAc,CAAC,CAACK,IAAI,CAACL,MAArB;AACA,SAAKC,OAAL,GAAe,CAAC,CAACI,IAAI,CAACJ,OAAtB;AACA,SAAKO,KAAL,GAAaH,IAAI,CAACG,KAAL,IAAc,IAAd,GAAqBH,IAAI,CAACG,KAA1B,GAAkC,IAA/C;AACA,SAAKC,aAAL,GAAqB,IAArB;AACD;A;AAzBoB;AA4BhB,MAAMC,UAAQ,GAAG,IAAIC,GAAJ,EAAjB;A;AAEP,SAASC,aAAT,CAAuBxJ,IAAvB,EAAqCyJ,OAAqB,GAAG,EAA7D,EAA4E;AAC1EA,EAAAA,OAAO,CAACP,OAAR,GAAkBlJ,IAAlB;AACA,QAAM0J,KAAK,GAAG,IAAIZ,SAAJ,CAAc9I,IAAd,EAAoByJ,OAApB,CAAd;AACAH,EAAAA,UAAQ,CAACK,GAAT,CAAa3J,IAAb,EAAmB0J,KAAnB;AACA,SAAOA,KAAP;AACD;A;AAED,SAASE,WAAT,CAAqB5J,IAArB,EAAmCoJ,KAAnC,EAAkD;AAChD,SAAO,IAAIN,SAAJ,CAAc9I,IAAd,EAAoB;AAAEwI,IAAAA,UAAF;AAAcY,IAAAA;AAAd,GAApB,CAAP;AACD;A;MAEYS,OAAoC,GAAG;AAClDC,EAAAA,GAAG,EAAE,IAAIhB,SAAJ,CAAc,KAAd,EAAqB;AAAEL,IAAAA;AAAF,GAArB,CAD6C;AAElDsB,EAAAA,MAAM,EAAE,IAAIjB,SAAJ,CAAc,QAAd,EAAwB;AAAEL,IAAAA;AAAF,GAAxB,CAF0C;AAGlDuB,EAAAA,OAAO,EAAE,IAAIlB,SAAJ,CAAc,SAAd,EAAyB;AAAEL,IAAAA;AAAF,GAAzB,CAHyC;AAIlDwB,EAAAA,MAAM,EAAE,IAAInB,SAAJ,CAAc,QAAd,EAAwB;AAAEL,IAAAA;AAAF,GAAxB,CAJ0C;AAKlDtG,EAAAA,MAAM,EAAE,IAAI2G,SAAJ,CAAc,QAAd,EAAwB;AAAEL,IAAAA;AAAF,GAAxB,CAL0C;AAMlDzI,EAAAA,IAAI,EAAE,IAAI8I,SAAJ,CAAc,MAAd,EAAsB;AAAEL,IAAAA;AAAF,GAAtB,CAN4C;AAOlDyB,EAAAA,WAAW,EAAE,IAAIpB,SAAJ,CAAc,OAAd,EAAuB;AAAEL,IAAAA;AAAF,GAAvB,CAPqC;AAQlD0B,EAAAA,GAAG,EAAE,IAAIrB,SAAJ,CAAc,KAAd,CAR6C;AAWlDsB,EAAAA,QAAQ,EAAE,IAAItB,SAAJ,CAAc,GAAd,EAAmB;AAAEN,IAAAA,UAAF;AAAcC,IAAAA;AAAd,GAAnB,CAXwC;AAYlD4B,EAAAA,YAAY,EAAE,IAAIvB,SAAJ,CAAc,IAAd,EAAoB;AAAEN,IAAAA,UAAF;AAAcC,IAAAA;AAAd,GAApB,CAZoC;AAalD6B,EAAAA,WAAW,EAAE,IAAIxB,SAAJ,CAAc,IAAd,EAAoB;AAAEN,IAAAA,UAAF;AAAcC,IAAAA;AAAd,GAApB,CAbqC;AAclD8B,EAAAA,QAAQ,EAAE,IAAIzB,SAAJ,CAAc,GAAd,CAdwC;AAelD0B,EAAAA,WAAW,EAAE,IAAI1B,SAAJ,CAAc,IAAd,CAfqC;AAgBlD2B,EAAAA,MAAM,EAAE,IAAI3B,SAAJ,CAAc,GAAd,EAAmB;AAAEN,IAAAA,UAAF;AAAcC,IAAAA;AAAd,GAAnB,CAhB0C;AAiBlDiC,EAAAA,SAAS,EAAE,IAAI5B,SAAJ,CAAc,IAAd,EAAoB;AAAEN,IAAAA,UAAF;AAAcC,IAAAA;AAAd,GAApB,CAjBuC;AAkBlDkC,EAAAA,UAAU,EAAE,IAAI7B,SAAJ,CAAc,IAAd,EAAoB;AAAEN,IAAAA,UAAF;AAAcC,IAAAA;AAAd,GAApB,CAlBsC;AAmBlDmC,EAAAA,MAAM,EAAE,IAAI9B,SAAJ,CAAc,GAAd,CAnB0C;AAoBlD+B,EAAAA,SAAS,EAAE,IAAI/B,SAAJ,CAAc,IAAd,CApBuC;AAqBlDgC,EAAAA,MAAM,EAAE,IAAIhC,SAAJ,CAAc,GAAd,EAAmB;AAAEN,IAAAA,UAAF;AAAcC,IAAAA;AAAd,GAAnB,CArB0C;AAsBlDsC,EAAAA,MAAM,EAAE,IAAIjC,SAAJ,CAAc,GAAd,CAtB0C;AAuBlDkC,EAAAA,KAAK,EAAE,IAAIlC,SAAJ,CAAc,GAAd,EAAmB;AAAEN,IAAAA;AAAF,GAAnB,CAvB2C;AAwBlDyC,EAAAA,IAAI,EAAE,IAAInC,SAAJ,CAAc,GAAd,EAAmB;AAAEN,IAAAA;AAAF,GAAnB,CAxB4C;AAyBlD0C,EAAAA,KAAK,EAAE,IAAIpC,SAAJ,CAAc,GAAd,EAAmB;AAAEN,IAAAA;AAAF,GAAnB,CAzB2C;AA0BlD2C,EAAAA,WAAW,EAAE,IAAIrC,SAAJ,CAAc,IAAd,EAAoB;AAAEN,IAAAA;AAAF,GAApB,CA1BqC;AA2BlD4C,EAAAA,GAAG,EAAE,IAAItC,SAAJ,CAAc,GAAd,CA3B6C;AA4BlDuC,EAAAA,QAAQ,EAAE,IAAIvC,SAAJ,CAAc,GAAd,EAAmB;AAAEN,IAAAA;AAAF,GAAnB,CA5BwC;AA6BlD8C,EAAAA,WAAW,EAAE,IAAIxC,SAAJ,CAAc,IAAd,CA7BqC;AA8BlDyC,EAAAA,KAAK,EAAE,IAAIzC,SAAJ,CAAc,IAAd,EAAoB;AAAEN,IAAAA;AAAF,GAApB,CA9B2C;AA+BlDgD,EAAAA,QAAQ,EAAE,IAAI1C,SAAJ,CAAc,UAAd,CA/BwC;AAgClD2C,EAAAA,QAAQ,EAAE,IAAI3C,SAAJ,CAAc,KAAd,EAAqB;AAAEN,IAAAA;AAAF,GAArB,CAhCwC;AAiClDkD,EAAAA,SAAS,EAAE,IAAI5C,SAAJ,CAAc,GAAd,EAAmB;AAAEL,IAAAA;AAAF,GAAnB,CAjCuC;AAkClDkD,EAAAA,YAAY,EAAE,IAAI7C,SAAJ,CAAc,IAAd,EAAoB;AAAEN,IAAAA,UAAF;AAAcC,IAAAA;AAAd,GAApB,CAlCoC;AAmClDmD,EAAAA,EAAE,EAAE,IAAI9C,SAAJ,CAAc,GAAd,CAnC8C;AAoClD+C,EAAAA,IAAI,EAAE,IAAI/C,SAAJ,CAAc,GAAd,EAAmB;AAAEL,IAAAA;AAAF,GAAnB,CApC4C;AAuClDqD,EAAAA,oBAAoB,EAAE,IAAIhD,SAAJ,CAAc,OAAd,CAvC4B;AAuDlDiD,EAAAA,EAAE,EAAE,IAAIjD,SAAJ,CAAc,GAAd,EAAmB;AAAEN,IAAAA,UAAF;AAAcG,IAAAA;AAAd,GAAnB,CAvD8C;AAwDlDxD,EAAAA,MAAM,EAAE,IAAI2D,SAAJ,CAAc,IAAd,EAAoB;AAAEN,IAAAA,UAAF;AAAcG,IAAAA;AAAd,GAApB,CAxD0C;AAyDlDqD,EAAAA,MAAM,EAAE,IAAIlD,SAAJ,CAAc,OAAd,EAAuB;AAAEF,IAAAA,MAAF;AAAUC,IAAAA,OAAV;AAAmBJ,IAAAA;AAAnB,GAAvB,CAzD0C;AA0DlDwD,EAAAA,IAAI,EAAE,IAAInD,SAAJ,CAAc,GAAd,EAAmB;AAAEN,IAAAA,UAAF;AAAcI,IAAAA,MAAd;AAAsBH,IAAAA;AAAtB,GAAnB,CA1D4C;AA2DlDyD,EAAAA,KAAK,EAAE,IAAIpD,SAAJ,CAAc,GAAd,EAAmB;AAAEN,IAAAA,UAAF;AAAcI,IAAAA,MAAd;AAAsBH,IAAAA;AAAtB,GAAnB,CA3D2C;AA4DlD0D,EAAAA,QAAQ,EAAEvC,WAAW,CAAC,IAAD,EAAO,CAAP,CA5D6B;AA6DlDwC,EAAAA,iBAAiB,EAAExC,WAAW,CAAC,IAAD,EAAO,CAAP,CA7DoB;AA8DlDyC,EAAAA,SAAS,EAAEzC,WAAW,CAAC,IAAD,EAAO,CAAP,CA9D4B;AA+DlD0C,EAAAA,UAAU,EAAE1C,WAAW,CAAC,IAAD,EAAO,CAAP,CA/D2B;AAgElD2C,EAAAA,SAAS,EAAE3C,WAAW,CAAC,GAAD,EAAM,CAAN,CAhE4B;AAiElD4C,EAAAA,UAAU,EAAE5C,WAAW,CAAC,GAAD,EAAM,CAAN,CAjE2B;AAkElD6C,EAAAA,UAAU,EAAE7C,WAAW,CAAC,GAAD,EAAM,CAAN,CAlE2B;AAmElD8C,EAAAA,QAAQ,EAAE9C,WAAW,CAAC,eAAD,EAAkB,CAAlB,CAnE6B;AAoElD+C,EAAAA,UAAU,EAAE/C,WAAW,CAAC,WAAD,EAAc,CAAd,CApE2B;AAqElDgD,EAAAA,QAAQ,EAAEhD,WAAW,CAAC,WAAD,EAAc,CAAd,CArE6B;AAsElDiD,EAAAA,OAAO,EAAE,IAAI/D,SAAJ,CAAc,KAAd,EAAqB;AAAEN,IAAAA,UAAF;AAAcY,IAAAA,KAAK,EAAE,CAArB;AAAwBR,IAAAA,MAAxB;AAAgCH,IAAAA;AAAhC,GAArB,CAtEyC;AAwElDqE,EAAAA,MAAM,EAAE,IAAIhE,SAAJ,CAAc,GAAd,EAAmB;AAAEN,IAAAA,UAAF;AAAcY,IAAAA,KAAK,EAAE,EAArB;AAAyBX,IAAAA;AAAzB,GAAnB,CAxE0C;AA0ElDsE,EAAAA,IAAI,EAAE,IAAIjE,SAAJ,CAAc,GAAd,EAAmB;AAAEM,IAAAA,KAAK,EAAE;AAAT,GAAnB,CA1E4C;AA2ElD4D,EAAAA,KAAK,EAAEpD,WAAW,CAAC,GAAD,EAAM,EAAN,CA3EgC;AA4ElDqD,EAAAA,QAAQ,EAAE,IAAInE,SAAJ,CAAc,IAAd,EAAoB;AAC5BN,IAAAA,UAD4B;AAE5BY,IAAAA,KAAK,EAAE,EAFqB;AAG5BD,IAAAA,gBAAgB,EAAE;AAHU,GAApB,CA5EwC;AAqFlD+D,EAAAA,MAAM,EAAE1D,aAAa,CAAC,OAAD,CArF6B;AAsFlD2D,EAAAA,KAAK,EAAE3D,aAAa,CAAC,MAAD,EAAS;AAAEhB,IAAAA;AAAF,GAAT,CAtF8B;AAuFlD4E,EAAAA,MAAM,EAAE5D,aAAa,CAAC,OAAD,CAvF6B;AAwFlD6D,EAAAA,SAAS,EAAE7D,aAAa,CAAC,UAAD,CAxF0B;AAyFlD8D,EAAAA,SAAS,EAAE9D,aAAa,CAAC,UAAD,CAzF0B;AA0FlD+D,EAAAA,QAAQ,EAAE/D,aAAa,CAAC,SAAD,EAAY;AAAEhB,IAAAA;AAAF,GAAZ,CA1F2B;AA2FlDgF,EAAAA,GAAG,EAAEhE,aAAa,CAAC,IAAD,EAAO;AAAEd,IAAAA,MAAF;AAAUF,IAAAA;AAAV,GAAP,CA3FgC;AA4FlDiF,EAAAA,KAAK,EAAEjE,aAAa,CAAC,MAAD,EAAS;AAAEhB,IAAAA;AAAF,GAAT,CA5F8B;AA6FlDkF,EAAAA,QAAQ,EAAElE,aAAa,CAAC,SAAD,CA7F2B;AA8FlDmE,EAAAA,IAAI,EAAEnE,aAAa,CAAC,KAAD,EAAQ;AAAEd,IAAAA;AAAF,GAAR,CA9F+B;AA+FlDkF,EAAAA,SAAS,EAAEpE,aAAa,CAAC,UAAD,EAAa;AAAEf,IAAAA;AAAF,GAAb,CA/F0B;AAgGlDoF,EAAAA,GAAG,EAAErE,aAAa,CAAC,IAAD,CAhGgC;AAiGlDsE,EAAAA,OAAO,EAAEtE,aAAa,CAAC,QAAD,EAAW;AAAEhB,IAAAA;AAAF,GAAX,CAjG4B;AAkGlDuF,EAAAA,OAAO,EAAEvE,aAAa,CAAC,QAAD,CAlG4B;AAmGlDwE,EAAAA,MAAM,EAAExE,aAAa,CAAC,OAAD,EAAU;AAAEhB,IAAAA,UAAF;AAAcI,IAAAA,MAAd;AAAsBH,IAAAA;AAAtB,GAAV,CAnG6B;AAoGlDwF,EAAAA,IAAI,EAAEzE,aAAa,CAAC,KAAD,CApG+B;AAqGlD0E,EAAAA,IAAI,EAAE1E,aAAa,CAAC,KAAD,CArG+B;AAsGlD2E,EAAAA,MAAM,EAAE3E,aAAa,CAAC,OAAD,CAtG6B;AAuGlD4E,EAAAA,MAAM,EAAE5E,aAAa,CAAC,OAAD,EAAU;AAAEd,IAAAA;AAAF,GAAV,CAvG6B;AAwGlD2F,EAAAA,KAAK,EAAE7E,aAAa,CAAC,MAAD,CAxG8B;AAyGlD8E,EAAAA,IAAI,EAAE9E,aAAa,CAAC,KAAD,EAAQ;AAAEhB,IAAAA,UAAF;AAAcC,IAAAA;AAAd,GAAR,CAzG+B;AA0GlD8F,EAAAA,KAAK,EAAE/E,aAAa,CAAC,MAAD,EAAS;AAAEf,IAAAA;AAAF,GAAT,CA1G8B;AA2GlD+F,EAAAA,MAAM,EAAEhF,aAAa,CAAC,OAAD,EAAU;AAAEf,IAAAA;AAAF,GAAV,CA3G6B;AA4GlDgG,EAAAA,MAAM,EAAEjF,aAAa,CAAC,OAAD,EAAU;AAAEf,IAAAA;AAAF,GAAV,CA5G6B;AA6GlDiG,EAAAA,QAAQ,EAAElF,aAAa,CAAC,SAAD,EAAY;AAAEhB,IAAAA;AAAF,GAAZ,CA7G2B;AA8GlDmG,EAAAA,OAAO,EAAEnF,aAAa,CAAC,QAAD,CA9G4B;AA+GlDoF,EAAAA,OAAO,EAAEpF,aAAa,CAAC,QAAD,EAAW;AAAEf,IAAAA;AAAF,GAAX,CA/G4B;AAgHlDoG,EAAAA,KAAK,EAAErF,aAAa,CAAC,MAAD,EAAS;AAAEf,IAAAA;AAAF,GAAT,CAhH8B;AAiHlDqG,EAAAA,KAAK,EAAEtF,aAAa,CAAC,MAAD,EAAS;AAAEf,IAAAA;AAAF,GAAT,CAjH8B;AAkHlDsG,EAAAA,MAAM,EAAEvF,aAAa,CAAC,OAAD,EAAU;AAAEf,IAAAA;AAAF,GAAV,CAlH6B;AAmHlDuG,EAAAA,GAAG,EAAExF,aAAa,CAAC,IAAD,EAAO;AAAEhB,IAAAA,UAAF;AAAcY,IAAAA,KAAK,EAAE;AAArB,GAAP,CAnHgC;AAoHlD6F,EAAAA,WAAW,EAAEzF,aAAa,CAAC,YAAD,EAAe;AAAEhB,IAAAA,UAAF;AAAcY,IAAAA,KAAK,EAAE;AAArB,GAAf,CApHwB;AAqHlD8F,EAAAA,OAAO,EAAE1F,aAAa,CAAC,QAAD,EAAW;AAAEhB,IAAAA,UAAF;AAAcI,IAAAA,MAAd;AAAsBH,IAAAA;AAAtB,GAAX,CArH4B;AAsHlD0G,EAAAA,KAAK,EAAE3F,aAAa,CAAC,MAAD,EAAS;AAAEhB,IAAAA,UAAF;AAAcI,IAAAA,MAAd;AAAsBH,IAAAA;AAAtB,GAAT,CAtH8B;AAuHlD2G,EAAAA,OAAO,EAAE5F,aAAa,CAAC,QAAD,EAAW;AAAEhB,IAAAA,UAAF;AAAcI,IAAAA,MAAd;AAAsBH,IAAAA;AAAtB,GAAX;AAvH4B;A;AC/E7C,MAAM4G,SAAS,GAAG,wBAAlB;AACA,MAAMC,UAAU,GAAG,IAAI7S,MAAJ,CAAW4S,SAAS,CAACzQ,MAArB,EAA6B,GAA7B,CAAnB;AAGA,SAAS2Q,SAAT,CAAmBC,IAAnB,EAA0C;AAC/C,UAAQA,IAAR;AACE;AACA;AACA;AACA;AACE,aAAO,IAAP;A;AAEF;AACE,aAAO,KAAP;AARJ;AAUD;AAEM,MAAMC,cAAc,GAAG,+BAAvB;AAGA,SAASC,YAAT,CAAsBF,IAAtB,EAA6C;AAClD,UAAQA,IAAR;AACE,SAAK,MAAL;AACA,SAAK,MAAL;AACA,SAAK,MAAL;AACA;AACA;AACA;AACA,SAAK,MAAL;AACA,SAAK,MAAL;AACA,SAAK,MAAL;AACA,SAAK,MAAL;AACA,SAAK,MAAL;AACA,SAAK,MAAL;AACA,SAAK,MAAL;AACA,SAAK,MAAL;AACA,SAAK,MAAL;AACA,SAAK,MAAL;AACA,SAAK,MAAL;AACA,SAAK,MAAL;AACA,SAAK,MAAL;AACA,SAAK,MAAL;AACA,SAAK,MAAL;AACE,aAAO,IAAP;A;AAEF;AACE,aAAO,KAAP;AAzBJ;AA2BD;A;AC3CM,MAAMG,QAAN,CAAe;AAIpB5G,EAAAA,WAAW,CAAC5J,IAAD,EAAeyQ,GAAf,EAA4B;AAAA,SAHvCzQ,IAGuC;AAAA,SAFvC0Q,MAEuC;AACrC,SAAK1Q,IAAL,GAAYA,IAAZ;AACA,SAAK0Q,MAAL,GAAcD,GAAd;AACD;A;AAPmB;AAUf,MAAME,cAAN,CAAqB;AAM1B/G,EAAAA,WAAW,CAAClK,KAAD,EAAkBC,GAAlB,EAAkC;AAAA,SAL7CD,KAK6C;AAAA,SAJ7CC,GAI6C;AAAA,SAH7CiR,QAG6C;AAAA,SAF7CC,cAE6C;AAC3C,SAAKnR,KAAL,GAAaA,KAAb;AAEA,SAAKC,GAAL,GAAWA,GAAX;AACD;A;AAVyB;AAmBrB,SAASmR,WAAT,CAAqBC,KAArB,EAAoCC,MAApC,EAA8D;AACnE,MAAIhR,IAAI,GAAG,CAAX;AACA,MAAIiR,SAAS,GAAG,CAAhB;AACA,MAAIhO,KAAJ;AACAkN,EAAAA,UAAU,CAAC9M,SAAX,GAAuB,CAAvB;A;AACA,SAAO,CAACJ,KAAK,GAAGkN,UAAU,CAACjN,IAAX,CAAgB6N,KAAhB,CAAT,KAAoC9N,KAAK,CAACG,KAAN,GAAc4N,MAAzD,EAAiE;AAC/DhR,IAAAA,IAAI;AACJiR,IAAAA,SAAS,GAAGd,UAAU,CAAC9M,SAAvB;AACD;A;AAED,SAAO,IAAImN,QAAJ,CAAaxQ,IAAb,EAAmBgR,MAAM,GAAGC,SAA5B,CAAP;AACD;A;ACzCc,MAAMC,UAAN,CAAiB;AAAA;AAAA,SAU9BC,iBAV8B,GAUD,KAVC;AAAA,SAW9BC,2BAX8B,GAWS,KAXT;AAAA;A;AAoB9BC,EAAAA,SAAS,CAACxQ,IAAD,EAAwB;AAC/B,WAAO,KAAKyQ,OAAL,CAAaC,GAAb,CAAiB1Q,IAAjB,CAAP;AACD;A;AAED2Q,EAAAA,eAAe,CAACC,MAAD,EAAiB5Q,IAAjB,EAA+B;AAE5C,QAAI,KAAKwQ,SAAL,CAAeI,MAAf,CAAJ,EAA4B,OAAO,KAAKH,OAAL,CAAaI,GAAb,CAAiBD,MAAjB,EAAyB5Q,IAAzB,CAAP;AAC7B;A;AA3B6B;A;ACmBhC,SAAS8Q,IAAT,CAAiB1X,KAAjB,EAA8C;AAC5C,SAAOA,KAAK,CAACA,KAAK,CAACP,MAAN,GAAe,CAAhB,CAAZ;AACD;A;AAEc,MAAMkY,cAAN,SAA6BV,UAA7B,CAAwC;AACrDW,EAAAA,UAAU,CAACC,OAAD,EAAyB;AACjC,QAAI,KAAKlB,QAAT,EAAmBkB,OAAO,CAACC,GAAR,CAAYnB,QAAZ,GAAuB,KAAKA,QAA5B;AACnB,SAAKoB,KAAL,CAAWC,gBAAX,CAA4B9a,IAA5B,CAAiC2a,OAAjC;AACA,SAAKE,KAAL,CAAWE,eAAX,CAA2B/a,IAA3B,CAAgC2a,OAAhC;AACD;A;AAEDK,EAAAA,gCAAgC,CAC9BC,IAD8B,EAE9BC,QAF8B,EAW9BC,eAX8B,EAY9B;AACA,QAAI,KAAKN,KAAL,CAAWE,eAAX,CAA2BxY,MAA3B,KAAsC,CAA1C,EAA6C;AAC3C;AACD;A;AAED,QAAI6Y,WAAW,GAAG,IAAlB;AACA,QAAI9Y,CAAC,GAAG4Y,QAAQ,CAAC3Y,MAAjB;A;AACA,WAAO6Y,WAAW,KAAK,IAAhB,IAAwB9Y,CAAC,GAAG,CAAnC,EAAsC;AACpC8Y,MAAAA,WAAW,GAAGF,QAAQ,CAAC,EAAE5Y,CAAH,CAAtB;AACD;A;AACD,QAAI8Y,WAAW,KAAK,IAApB,EAA0B;AACxB;AACD;A;AAED,SAAK,IAAIxS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKiS,KAAL,CAAWE,eAAX,CAA2BxY,MAA/C,EAAuDqG,CAAC,EAAxD,EAA4D;AAC1D,UACE,KAAKiS,KAAL,CAAWE,eAAX,CAA2BnS,CAA3B,EAA8BJ,GAA9B,GAAoC,KAAKqS,KAAL,CAAWQ,mBAAX,CAA+B7S,GADrE,EAEE;AACA,aAAKqS,KAAL,CAAWE,eAAX,CAA2BhM,MAA3B,CAAkCnG,CAAlC,EAAqC,CAArC;AACAA,QAAAA,CAAC;AACF;AACF;A;AAED,UAAM0S,mBAAmB,GAAG,EAA5B;A;AACA,SAAK,IAAIhZ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKuY,KAAL,CAAWE,eAAX,CAA2BxY,MAA/C,EAAuDD,CAAC,EAAxD,EAA4D;AAC1D,YAAMiZ,cAAc,GAAG,KAAKV,KAAL,CAAWE,eAAX,CAA2BzY,CAA3B,CAAvB;A;AACA,UAAIiZ,cAAc,CAAC/S,GAAf,GAAqByS,IAAI,CAACzS,GAA9B,EAAmC;AACjC8S,QAAAA,mBAAmB,CAACtb,IAApB,CAAyBub,cAAzB;A;AAGA,YAAI,CAACJ,eAAL,EAAsB;AACpB,eAAKN,KAAL,CAAWE,eAAX,CAA2BhM,MAA3B,CAAkCzM,CAAlC,EAAqC,CAArC;AACAA,UAAAA,CAAC;AACF;AACF,OARD,MAQO;AACL,YAAI2Y,IAAI,CAACH,gBAAL,KAA0B5a,SAA9B,EAAyC;AACvC+a,UAAAA,IAAI,CAACH,gBAAL,GAAwB,EAAxB;AACD;A;AACDG,QAAAA,IAAI,CAACH,gBAAL,CAAsB9a,IAAtB,CAA2Bub,cAA3B;AACD;AACF;A;AACD,QAAIJ,eAAJ,EAAqB,KAAKN,KAAL,CAAWE,eAAX,GAA6B,EAA7B;A;AAErB,QAAIO,mBAAmB,CAAC/Y,MAApB,GAA6B,CAAjC,EAAoC;AAClC6Y,MAAAA,WAAW,CAACN,gBAAZ,GAA+BQ,mBAA/B;AACD,KAFD,MAEO,IAAIF,WAAW,CAACN,gBAAZ,KAAiC5a,SAArC,EAAgD;AACrDkb,MAAAA,WAAW,CAACN,gBAAZ,GAA+B,EAA/B;AACD;AACF;A;AAEDU,EAAAA,cAAc,CAACP,IAAD,EAAmB;AAC/B,QAAIA,IAAI,CAAC3Z,IAAL,KAAc,SAAd,IAA2B2Z,IAAI,CAACzX,IAAL,CAAUjB,MAAV,GAAmB,CAAlD,EAAqD;AAErD,UAAMO,KAAK,GAAG,KAAK+X,KAAL,CAAWY,YAAzB;AAEA,QAAIC,UAAJ,EAAgBC,SAAhB,EAA2Bb,gBAA3B,EAA6CxY,CAA7C,EAAgDsG,CAAhD;A;AAEA,QAAI,KAAKiS,KAAL,CAAWC,gBAAX,CAA4BvY,MAA5B,GAAqC,CAAzC,EAA4C;AAK1C,UAAI,KAAKsY,KAAL,CAAWC,gBAAX,CAA4B,CAA5B,EAA+BvS,KAA/B,IAAwC0S,IAAI,CAACzS,GAAjD,EAAsD;AACpDsS,QAAAA,gBAAgB,GAAG,KAAKD,KAAL,CAAWC,gBAA9B;AACA,aAAKD,KAAL,CAAWC,gBAAX,GAA8B,EAA9B;AACD,OAHD,MAGO;AAOL,aAAKD,KAAL,CAAWC,gBAAX,CAA4BvY,MAA5B,GAAqC,CAArC;AACD;AACF,KAjBD,MAiBO,IAAIO,KAAK,CAACP,MAAN,GAAe,CAAnB,EAAsB;AAC3B,YAAMqZ,WAAW,GAAGpB,IAAI,CAAC1X,KAAD,CAAxB;A;AACA,UACE8Y,WAAW,CAACd,gBAAZ,IACAc,WAAW,CAACd,gBAAZ,CAA6B,CAA7B,EAAgCvS,KAAhC,IAAyC0S,IAAI,CAACzS,GAFhD,EAGE;AACAsS,QAAAA,gBAAgB,GAAGc,WAAW,CAACd,gBAA/B;AACA,eAAOc,WAAW,CAACd,gBAAnB;AACD;AACF;A;AAGD,QAAIhY,KAAK,CAACP,MAAN,GAAe,CAAf,IAAoBiY,IAAI,CAAC1X,KAAD,CAAJ,CAAYyF,KAAZ,IAAqB0S,IAAI,CAAC1S,KAAlD,EAAyD;AACvDmT,MAAAA,UAAU,GAAG5Y,KAAK,CAAC+Y,GAAN,EAAb;AACD;A;AAED,WAAO/Y,KAAK,CAACP,MAAN,GAAe,CAAf,IAAoBiY,IAAI,CAAC1X,KAAD,CAAJ,CAAYyF,KAAZ,IAAqB0S,IAAI,CAAC1S,KAArD,EAA4D;AAC1DoT,MAAAA,SAAS,GAAG7Y,KAAK,CAAC+Y,GAAN,EAAZ;AACD;A;AAED,QAAI,CAACF,SAAD,IAAcD,UAAlB,EAA8BC,SAAS,GAAGD,UAAZ;A;AAK9B,QAAIA,UAAJ,EAAgB;AACd,cAAQT,IAAI,CAAC3Z,IAAb;AACE,aAAK,kBAAL;AACE,eAAK0Z,gCAAL,CAAsCC,IAAtC,EAA4CA,IAAI,CAACa,UAAjD;AACA;A;AACF,aAAK,eAAL;AACE,eAAKd,gCAAL,CAAsCC,IAAtC,EAA4CA,IAAI,CAACa,UAAjD,EAA6D,IAA7D;AACA;A;AACF,aAAK,gBAAL;AACE,eAAKd,gCAAL,CAAsCC,IAAtC,EAA4CA,IAAI,CAACc,SAAjD;AACA;A;AACF,aAAK,iBAAL;AACE,eAAKf,gCAAL,CAAsCC,IAAtC,EAA4CA,IAAI,CAACC,QAAjD;AACA;A;AACF,aAAK,cAAL;AACE,eAAKF,gCAAL,CAAsCC,IAAtC,EAA4CA,IAAI,CAACC,QAAjD,EAA2D,IAA3D;AACA;AAfJ;AAiBD,KAlBD,MAkBO,IACL,KAAKL,KAAL,CAAWQ,mBAAX,KACE,KAAKR,KAAL,CAAWQ,mBAAX,CAA+B/Z,IAA/B,KAAwC,iBAAxC,IACA2Z,IAAI,CAAC3Z,IAAL,KAAc,iBADf,IAEE,KAAKuZ,KAAL,CAAWQ,mBAAX,CAA+B/Z,IAA/B,KAAwC,iBAAxC,IACC2Z,IAAI,CAAC3Z,IAAL,KAAc,iBAJlB,CADK,EAML;AACA,WAAK0Z,gCAAL,CAAsCC,IAAtC,EAA4C,CAC1C,KAAKJ,KAAL,CAAWQ,mBAD+B,CAA5C;AAGD;A;AAED,QAAIM,SAAJ,EAAe;AACb,UAAIA,SAAS,CAACZ,eAAd,EAA+B;AAC7B,YACEY,SAAS,KAAKV,IAAd,IACAU,SAAS,CAACZ,eAAV,CAA0BxY,MAA1B,GAAmC,CADnC,IAEAiY,IAAI,CAACmB,SAAS,CAACZ,eAAX,CAAJ,CAAgCvS,GAAhC,IAAuCyS,IAAI,CAAC1S,KAH9C,EAIE;AACA0S,UAAAA,IAAI,CAACF,eAAL,GAAuBY,SAAS,CAACZ,eAAjC;AACA,iBAAOY,SAAS,CAACZ,eAAjB;AACD,SAPD,MAOO;AAIL,eAAKzY,CAAC,GAAGqZ,SAAS,CAACZ,eAAV,CAA0BxY,MAA1B,GAAmC,CAA5C,EAA+CD,CAAC,IAAI,CAApD,EAAuD,EAAEA,CAAzD,EAA4D;AAC1D,gBAAIqZ,SAAS,CAACZ,eAAV,CAA0BzY,CAA1B,EAA6BkG,GAA7B,IAAoCyS,IAAI,CAAC1S,KAA7C,EAAoD;AAClD0S,cAAAA,IAAI,CAACF,eAAL,GAAuBY,SAAS,CAACZ,eAAV,CAA0BhM,MAA1B,CAAiC,CAAjC,EAAoCzM,CAAC,GAAG,CAAxC,CAAvB;AACA;AACD;AACF;AACF;AACF;AACF,KArBD,MAqBO,IAAI,KAAKuY,KAAL,CAAWE,eAAX,CAA2BxY,MAA3B,GAAoC,CAAxC,EAA2C;AAChD,UAAIiY,IAAI,CAAC,KAAKK,KAAL,CAAWE,eAAZ,CAAJ,CAAiCvS,GAAjC,IAAwCyS,IAAI,CAAC1S,KAAjD,EAAwD;AACtD,YAAI,KAAKsS,KAAL,CAAWQ,mBAAf,EAAoC;AAClC,eAAKzS,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,KAAKiS,KAAL,CAAWE,eAAX,CAA2BxY,MAA3C,EAAmDqG,CAAC,EAApD,EAAwD;AACtD,gBACE,KAAKiS,KAAL,CAAWE,eAAX,CAA2BnS,CAA3B,EAA8BJ,GAA9B,GACA,KAAKqS,KAAL,CAAWQ,mBAAX,CAA+B7S,GAFjC,EAGE;AACA,mBAAKqS,KAAL,CAAWE,eAAX,CAA2BhM,MAA3B,CAAkCnG,CAAlC,EAAqC,CAArC;AACAA,cAAAA,CAAC;AACF;AACF;AACF;A;AACD,YAAI,KAAKiS,KAAL,CAAWE,eAAX,CAA2BxY,MAA3B,GAAoC,CAAxC,EAA2C;AACzC0Y,UAAAA,IAAI,CAACF,eAAL,GAAuB,KAAKF,KAAL,CAAWE,eAAlC;AACA,eAAKF,KAAL,CAAWE,eAAX,GAA6B,EAA7B;AACD;AACF,OAhBD,MAgBO;AAYL,aAAKzY,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,KAAKuY,KAAL,CAAWE,eAAX,CAA2BxY,MAA3C,EAAmDD,CAAC,EAApD,EAAwD;AACtD,cAAI,KAAKuY,KAAL,CAAWE,eAAX,CAA2BzY,CAA3B,EAA8BkG,GAA9B,GAAoCyS,IAAI,CAAC1S,KAA7C,EAAoD;AAClD;AACD;AACF;A;AAMD,cAAMwS,eAAe,GAAG,KAAKF,KAAL,CAAWE,eAAX,CAA2BpL,KAA3B,CAAiC,CAAjC,EAAoCrN,CAApC,CAAxB;A;AAEA,YAAIyY,eAAe,CAACxY,MAApB,EAA4B;AAC1B0Y,UAAAA,IAAI,CAACF,eAAL,GAAuBA,eAAvB;AACD;A;AAIDD,QAAAA,gBAAgB,GAAG,KAAKD,KAAL,CAAWE,eAAX,CAA2BpL,KAA3B,CAAiCrN,CAAjC,CAAnB;A;AACA,YAAIwY,gBAAgB,CAACvY,MAAjB,KAA4B,CAAhC,EAAmC;AACjCuY,UAAAA,gBAAgB,GAAG,IAAnB;AACD;AACF;AACF;A;AAED,SAAKD,KAAL,CAAWQ,mBAAX,GAAiCJ,IAAjC;A;AAEA,QAAIH,gBAAJ,EAAsB;AACpB,UACEA,gBAAgB,CAACvY,MAAjB,IACAuY,gBAAgB,CAAC,CAAD,CAAhB,CAAoBvS,KAApB,IAA6B0S,IAAI,CAAC1S,KADlC,IAEAiS,IAAI,CAACM,gBAAD,CAAJ,CAAuBtS,GAAvB,IAA8ByS,IAAI,CAACzS,GAHrC,EAIE;AACAyS,QAAAA,IAAI,CAACe,aAAL,GAAqBlB,gBAArB;AACD,OAND,MAMO;AAEL,cAAMmB,yBAAyB,GAAGnB,gBAAgB,CAACvN,SAAjB,CAChCoN,OAAO,IAAIA,OAAO,CAACnS,GAAR,IAAeyS,IAAI,CAACzS,GADC,CAAlC;A;AAIA,YAAIyT,yBAAyB,GAAG,CAAhC,EAAmC;AACjChB,UAAAA,IAAI,CAACe,aAAL,GAAqBlB,gBAAgB,CAACnL,KAAjB,CACnB,CADmB,EAEnBsM,yBAFmB,CAArB;AAIAhB,UAAAA,IAAI,CAACH,gBAAL,GAAwBA,gBAAgB,CAACnL,KAAjB,CACtBsM,yBADsB,CAAxB;AAGD,SARD,MAQO;AACLhB,UAAAA,IAAI,CAACH,gBAAL,GAAwBA,gBAAxB;AACD;AACF;AACF;A;AAEDhY,IAAAA,KAAK,CAAC9C,IAAN,CAAWib,IAAX;AACD;A;AA7PoD;A;AC/BhD,MAAMiB,UAAU,GAAG3U,MAAM,CAAC8G,MAAP,CAAc;AACtC8N,EAAAA,WAAW,EAAE,2BADyB;AAEtCC,EAAAA,qBAAqB,EAAE;AAFe,CAAd,CAAnB;A;ACSA,MAAMC,aAAa,GAAGC,kBAAkB,CAC7C;AACEC,EAAAA,mBAAmB,EAAE,gCADvB;AAEEC,EAAAA,gBAAgB,EACd,6DAHJ;AAIEC,EAAAA,qCAAqC,EACnC,0EALJ;AAMEC,EAAAA,sBAAsB,EACpB,6DAPJ;AAQEC,EAAAA,mCAAmC,EACjC,0DATJ;AAUEC,EAAAA,8BAA8B,EAC5B,sDAXJ;AAYEC,EAAAA,sBAAsB,EACpB,kFAbJ;AAcEC,EAAAA,uBAAuB,EAAE,iDAd3B;AAeEC,EAAAA,cAAc,EAAE,sDAflB;AAgBEC,EAAAA,cAAc,EAAE,yDAhBlB;AAiBEC,EAAAA,sBAAsB,EACpB,iEAlBJ;AAmBEC,EAAAA,qBAAqB,EAAE,mDAnBzB;AAoBEC,EAAAA,4BAA4B,EAC1B,4DArBJ;AAsBEC,EAAAA,qBAAqB,EAAE,2CAtBzB;AAuBEC,EAAAA,kBAAkB,EAAE,yCAvBtB;AAwBEC,EAAAA,sBAAsB,EAAE,mCAxB1B;AAyBEC,EAAAA,6BAA6B,EAAE,uCAzBjC;AA0BEC,EAAAA,qBAAqB,EACnB,mKA3BJ;AA4BEC,EAAAA,oBAAoB,EAClB,iFA7BJ;AA8BEC,EAAAA,oBAAoB,EAClB,kHA/BJ;AAgCEC,EAAAA,kBAAkB,EAAE,iDAhCtB;AAiCEC,EAAAA,oBAAoB,EAAE,+CAjCxB;AAkCEC,EAAAA,kBAAkB,EAAE,0CAlCtB;AAmCEC,EAAAA,sBAAsB,EACpB,oGApCJ;AAqCEC,EAAAA,oBAAoB,EAAE,0CArCxB;AAsCEC,EAAAA,sBAAsB,EAAE,6CAtC1B;AAuCEC,EAAAA,eAAe,EACb,sEAxCJ;AAyCEC,EAAAA,cAAc,EAAE,qCAzClB;AA0CEC,EAAAA,oBAAoB,EAAE,oCA1CxB;AA2CEC,EAAAA,gBAAgB,EAAE,oCA3CpB;AA4CEC,EAAAA,0BAA0B,EAAE,yBA5C9B;AA6CEC,EAAAA,qBAAqB,EACnB,sIA9CJ;AA+CEC,EAAAA,6BAA6B,EAC3B,gEAhDJ;AAiDEC,EAAAA,sBAAsB,EACpB,6DAlDJ;AAmDEC,EAAAA,UAAU,EAAE,yDAnDd;AAoDEC,EAAAA,QAAQ,EAAE,+DApDZ;AAqDEC,EAAAA,iCAAiC,EAC/B,qEAtDJ;AAuDEC,EAAAA,oBAAoB,EAAE,iBAvDxB;AAwDEC,EAAAA,4BAA4B,EAC1B,4EAzDJ;AA0DEC,EAAAA,aAAa,EAAE,+BA1DjB;AA2DEC,EAAAA,qBAAqB,EACnB,mGA5DJ;AA6DEC,EAAAA,+BAA+B,EAC7B,4DA9DJ;AA+DEC,EAAAA,eAAe,EAAE,iCA/DnB;AAgEEC,EAAAA,0BAA0B,EAAE,kCAhE9B;AAiEEC,EAAAA,wBAAwB,EAAE,qCAjE5B;AAkEEC,EAAAA,oBAAoB,EAAE,wBAlExB;AAmEEC,EAAAA,gBAAgB,EAAE,2BAnEpB;AAoEEC,EAAAA,cAAc,EAAE,kBApElB;AAqEEC,EAAAA,YAAY,EAAE,8BArEhB;AAsEEC,EAAAA,qBAAqB,EAAE,gCAtEzB;AAuEEC,EAAAA,6BAA6B,EAAE,sCAvEjC;AAwEEC,EAAAA,0BAA0B,EAAE,gCAxE9B;AAyEEC,EAAAA,iBAAiB,EAAE,wBAzErB;AA0EEC,EAAAA,UAAU,EAAE,+BA1Ed;AA2EEC,EAAAA,iBAAiB,EAAE,uCA3ErB;AA4EEC,EAAAA,aAAa,EAAE,iBA5EjB;AA6EEC,EAAAA,wBAAwB,EACtB,gEA9EJ;AA+EEC,EAAAA,wBAAwB,EAAE,4BA/E5B;AAgFEC,EAAAA,8BAA8B,EAAE,2CAhFlC;AAiFEC,EAAAA,6BAA6B,EAAE,kCAjFjC;AAkFEC,EAAAA,6BAA6B,EAAE,4BAlFjC;AAmFEC,EAAAA,qBAAqB,EACnB,wEApFJ;AAqFEC,EAAAA,4BAA4B,EAAE,mCArFhC;AAsFEC,EAAAA,kBAAkB,EAAE,iCAtFtB;AAuFEC,EAAAA,mBAAmB,EACjB,6EAxFJ;AAyFEC,EAAAA,yBAAyB,EAAE,uCAzF7B;AA0FEC,EAAAA,oBAAoB,EAAE,kCA1FxB;AA2FEC,EAAAA,gBAAgB,EAAE,2BA3FpB;AA4FEC,EAAAA,qBAAqB,EACnB,6DA7FJ;AA8FEC,EAAAA,gBAAgB,EAAE,oBA9FpB;AA+FEC,EAAAA,oBAAoB,EAAE,4CA/FxB;AAgGEC,EAAAA,yBAAyB,EACvB,qFAjGJ;AAkGEC,EAAAA,gCAAgC,EAC9B,+CAnGJ;AAoGEC,EAAAA,2BAA2B,EACzB,8DArGJ;AAsGEC,EAAAA,iCAAiC,EAC/B,yDAvGJ;AAwGEC,EAAAA,gCAAgC,EAC9B,gEAzGJ;AA0GEC,EAAAA,qBAAqB,EAAE,6BA1GzB;AA2GEC,EAAAA,wBAAwB,EAAE,2BA3G5B;AA4GEC,EAAAA,iBAAiB,EAAE,8BA5GrB;AA6GEC,EAAAA,gBAAgB,EAAE,kCA7GpB;AA8GEC,EAAAA,gBAAgB,EAAE,mCA9GpB;AA+GEC,EAAAA,gCAAgC,EAC9B,6FAhHJ;AAiHEC,EAAAA,iBAAiB,EACf,yFAlHJ;AAmHEC,EAAAA,qBAAqB,EACnB,0DApHJ;AAqHEC,EAAAA,0BAA0B,EACxB,4DAtHJ;AAuHEC,EAAAA,qBAAqB,EACnB,iEAxHJ;AAyHEC,EAAAA,SAAS,EAAE,sBAzHb;AA0HEC,EAAAA,kBAAkB,EAAE,gDA1HtB;AA2HEC,EAAAA,gBAAgB,EAAE,uCA3HpB;AA4HEC,EAAAA,mBAAmB,EACjB,mGA7HJ;AA8HEC,EAAAA,8BAA8B,EAC5B,iEA/HJ;AAgIEC,EAAAA,8BAA8B,EAC5B,oEAjIJ;AAkIEC,EAAAA,mBAAmB,EACjB,8DAnIJ;AAoIEC,EAAAA,sBAAsB,EACpB,sEArIJ;AAsIEC,EAAAA,iCAAiC,EAC/B,8FAvIJ;AAwIEC,EAAAA,mBAAmB,EACjB,wGAzIJ;AA0IEC,EAAAA,wBAAwB,EAAE,6BA1I5B;AA2IEC,EAAAA,yCAAyC,EACvC,mIA5IJ;AA6IEC,EAAAA,2CAA2C,EACzC,qIA9IJ;AA+IEC,EAAAA,4CAA4C,EAC1C,sIAhJJ;AAiJEC,EAAAA,aAAa,EAAE,mDAjJjB;AAkJEC,EAAAA,iBAAiB,EAAE,+CAlJrB;AAmJEC,EAAAA,cAAc,EACZ,0HApJJ;AAqJEC,EAAAA,eAAe,EAAE,uDArJnB;AAsJEC,EAAAA,YAAY,EAAE,yCAtJhB;AAuJEC,EAAAA,mBAAmB,EAAE,mCAvJvB;AAwJEC,EAAAA,0BAA0B,EAAE,8BAxJ9B;AAyJEC,EAAAA,cAAc,EACZ,qFA1JJ;AA2JEC,EAAAA,mBAAmB,EACjB,wDA5JJ;AA6JEC,EAAAA,kBAAkB,EAAE,uDA7JtB;AA8JEC,EAAAA,UAAU,EAAE,wBA9Jd;AA+JEC,EAAAA,eAAe,EACb,mJAhKJ;AAiKEC,EAAAA,iBAAiB,EAAE,4CAjKrB;AAkKEC,EAAAA,iBAAiB,EAAE,iDAlKrB;AAmKEC,EAAAA,wCAAwC,EACtC,kIApKJ;AAqKEC,EAAAA,0CAA0C,EACxC,oIAtKJ;AAuKEC,EAAAA,2CAA2C,EACzC,qIAxKJ;AAyKEC,EAAAA,6BAA6B,EAAE,kCAzKjC;AA0KEC,EAAAA,gCAAgC,EAC9B,0FA3KJ;AA4KEC,EAAAA,wBAAwB,EAAE,oCA5K5B;AA6KEC,EAAAA,sBAAsB,EACpB,yDA9KJ;AA+KEC,EAAAA,iBAAiB,EAAE,0BA/KrB;AAgLEC,EAAAA,0BAA0B,EACxB,6DAjLJ;AAkLEC,EAAAA,4BAA4B,EAC1B,kEAnLJ;AAoLEC,EAAAA,mBAAmB,EACjB,iEArLJ;AAsLEC,EAAAA,0BAA0B,EACxB,yDAvLJ;AAwLEC,EAAAA,sBAAsB,EACpB,yJAzLJ;AA0LEC,EAAAA,sBAAsB,EAAE,gCA1L1B;AA2LEC,EAAAA,eAAe,EAAE,wDA3LnB;AA4LEC,EAAAA,eAAe,EAAE,wBA5LnB;AA6LEC,EAAAA,kCAAkC,EAChC,kFA9LJ;AA+LEC,EAAAA,eAAe,EAAE,iDA/LnB;AAgMEC,EAAAA,0BAA0B,EACxB,qDAjMJ;AAkMEC,EAAAA,wBAAwB,EACtB,6EAnMJ;AAoMEC,EAAAA,iBAAiB,EACf,2DArMJ;AAsMEC,EAAAA,uBAAuB,EAAE,+CAtM3B;AAuMEC,EAAAA,6BAA6B,EAC3B,mDAxMJ;AAyMEC,EAAAA,4BAA4B,EAC1B,kEA1MJ;AA2MEC,EAAAA,gBAAgB,EACd,uHA5MJ;AA6MEC,EAAAA,mBAAmB,EAAE,uBA7MvB;AA8MEC,EAAAA,kBAAkB,EAAE,kCA9MtB;AA+MEC,EAAAA,kBAAkB,EAAE,+BA/MtB;AAgNEC,EAAAA,oBAAoB,EAAE,wBAhNxB;AAiNEC,EAAAA,gBAAgB,EAAE,4CAjNpB;AAkNEC,EAAAA,sBAAsB,EACpB,uDAnNJ;AAoNEC,EAAAA,gBAAgB,EAAE,uDApNpB;AAqNEC,EAAAA,yBAAyB,EACvB;AAtNJ,CAD6C,EAyNlCvJ,UAAU,CAACC,WAzNuB,CAAxC;AA4NA,MAAMuJ,6BAA6B,GAAGpJ,kBAAkB,CAC7D;AACEqJ,EAAAA,uBAAuB,EAAG,yDAD5B;AAEEC,EAAAA,mBAAmB,EAAG;AAFxB,CAD6D,EAKlD1J,UAAU,CAACE,qBALuC,CAAxD;A;ACzMA,SAASE,kBAAT,CACLuJ,QADK,EAIL3M,IAJK,EAKW;AAChB,QAAM4M,SAAyB,GAAG,EAAlC;AACAve,EAAAA,MAAM,CAAC2F,IAAP,CAAY2Y,QAAZ,EAAsBhkB,OAAtB,CAA8BkkB,UAAU,IAAI;AAC1CD,IAAAA,SAAS,CAACC,UAAD,CAAT,GAAwBxe,MAAM,CAAC8G,MAAP,CAAc;AACpC6K,MAAAA,IADoC;AAEpC6M,MAAAA,UAFoC;AAGpC7Q,MAAAA,QAAQ,EAAE2Q,QAAQ,CAACE,UAAD;AAHkB,KAAd,CAAxB;AAKD,GAND;AAOA,SAAOxe,MAAM,CAAC8G,MAAP,CAAcyX,SAAd,CAAP;AACD;AAUc,MAAME,WAAN,SAA0BvL,cAA1B,CAAyC;AAMtDwL,EAAAA,sBAAsB,CAACC,GAAD,EAAwB;AAC5C,QAAItL,GAAJ;AACA,QAAIsL,GAAG,KAAK,KAAKrL,KAAL,CAAWtS,KAAvB,EAA8BqS,GAAG,GAAG,KAAKC,KAAL,CAAWsL,QAAjB,CAA9B,KACK,IAAID,GAAG,KAAK,KAAKrL,KAAL,CAAWuL,YAAvB,EAAqCxL,GAAG,GAAG,KAAKC,KAAL,CAAWwL,eAAjB,CAArC,KACA,IAAIH,GAAG,KAAK,KAAKrL,KAAL,CAAWrS,GAAvB,EAA4BoS,GAAG,GAAG,KAAKC,KAAL,CAAWyL,MAAjB,CAA5B,KACA,IAAIJ,GAAG,KAAK,KAAKrL,KAAL,CAAW0L,UAAvB,EAAmC3L,GAAG,GAAG,KAAKC,KAAL,CAAW2L,aAAjB,CAAnC,KACA5L,GAAG,GAAGjB,WAAW,CAAC,KAAKC,KAAN,EAAasM,GAAb,CAAjB;AAEL,WAAOtL,GAAP;AACD;A;AAED6L,EAAAA,KAAK,CACHP,GADG,EAEH;AAAEhN,IAAAA,IAAF;AAAQ6M,IAAAA,UAAR;AAAoB7Q,IAAAA;AAApB,GAFG,EAGH,GAAGwR,MAHA,EAIY;AACf,WAAO,KAAKC,aAAL,CAAmBT,GAAnB,EAAwB;AAAEhN,MAAAA,IAAF;AAAQ6M,MAAAA;AAAR,KAAxB,EAA8C7Q,QAA9C,EAAwD,GAAGwR,MAA3D,CAAP;AACD;A;AAcDE,EAAAA,cAAc,CACZV,GADY,EAEZ;AAAEhN,IAAAA,IAAF;AAAQhE,IAAAA;AAAR,GAFY,EAGZ,GAAGwR,MAHS,EAIG;AACf,UAAM9L,GAAG,GAAG,KAAKqL,sBAAL,CAA4BC,GAA5B,CAAZ;AACA,UAAMjjB,OAAO,GACXiS,QAAQ,CAAC3I,OAAT,CAAiB,SAAjB,EAA4B,CAAC4D,CAAD,EAAI7N,CAAJ,KAAkBokB,MAAM,CAACpkB,CAAD,CAApD,IACC,KAAIsY,GAAG,CAAC/R,IAAK,IAAG+R,GAAG,CAACrB,MAAO,GAF9B;A;AAGA,QAAI,KAAKpG,OAAL,CAAa0T,aAAjB,EAAgC;AAC9B,YAAMC,MAAM,GAAG,KAAKjM,KAAL,CAAWiM,MAA1B;A;AACA,WAAK,IAAIxkB,CAAC,GAAGwkB,MAAM,CAACvkB,MAAP,GAAgB,CAA7B,EAAgCD,CAAC,IAAI,CAArC,EAAwCA,CAAC,EAAzC,EAA6C;AAC3C,cAAMU,KAAK,GAAG8jB,MAAM,CAACxkB,CAAD,CAApB;A;AACA,YAAIU,KAAK,CAACkjB,GAAN,KAAcA,GAAlB,EAAuB;AACrB,iBAAO3e,MAAM,CAACsH,MAAP,CAAc7L,KAAd,EAAqB;AAAEC,YAAAA;AAAF,WAArB,CAAP;AACD,SAFD,MAEO,IAAID,KAAK,CAACkjB,GAAN,GAAYA,GAAhB,EAAqB;AAC1B;AACD;AACF;AACF;A;AACD,WAAO,KAAKa,MAAL,CAAY;AAAE7N,MAAAA,IAAF;AAAQ0B,MAAAA,GAAR;AAAasL,MAAAA;AAAb,KAAZ,EAAgCjjB,OAAhC,CAAP;AACD;A;AAED0jB,EAAAA,aAAa,CACXT,GADW,EAEXxmB,IAFW,EAMXsnB,aANW,EAOX,GAAGN,MAPQ,EAQI;AACf,UAAM9L,GAAG,GAAG,KAAKqL,sBAAL,CAA4BC,GAA5B,CAAZ;AACA,UAAMjjB,OAAO,GACX+jB,aAAa,CAACza,OAAd,CAAsB,SAAtB,EAAiC,CAAC4D,CAAD,EAAI7N,CAAJ,KAAkBokB,MAAM,CAACpkB,CAAD,CAAzD,IACC,KAAIsY,GAAG,CAAC/R,IAAK,IAAG+R,GAAG,CAACrB,MAAO,GAF9B;AAGA,WAAO,KAAKwN,MAAL,CAAYxf,MAAM,CAACsH,MAAP,CAAe;AAAE+L,MAAAA,GAAF;AAAOsL,MAAAA;AAAP,KAAf,EAAsCxmB,IAAtC,CAAZ,EAAyDuD,OAAzD,CAAP;AACD;A;AAED8jB,EAAAA,MAAM,CAACE,YAAD,EAA6BhkB,OAA7B,EAA6D;AAEjE,UAAMikB,GAA+B,GAAG,IAAI/K,WAAJ,CAAgBlZ,OAAhB,CAAxC;AACAsE,IAAAA,MAAM,CAACsH,MAAP,CAAcqY,GAAd,EAAmBD,YAAnB;A;AACA,QAAI,KAAK9T,OAAL,CAAa0T,aAAjB,EAAgC;AAC9B,UAAI,CAAC,KAAKM,WAAV,EAAuB,KAAKtM,KAAL,CAAWiM,MAAX,CAAkB9mB,IAAlB,CAAuBknB,GAAvB;AACvB,aAAOA,GAAP;AACD,KAHD,MAGO;AACL,YAAMA,GAAN;AACD;AACF;A;AAtFqD;A;AC9CxD,cAAgBE,UAAD,IACb,cAAcA,UAAd,CAAyB;AACvBC,EAAAA,kBAAkB,CAAC;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAD,EAA6B;AAC7C,QAAIC,KAAK,GAAG,IAAZ;A;AACA,QAAI;AACFA,MAAAA,KAAK,GAAG,IAAIrhB,MAAJ,CAAWmhB,OAAX,EAAoBC,KAApB,CAAR;AACD,KAFD,CAEE,OAAO5jB,CAAP,EAAU;A;AAIZ,UAAMsX,IAAI,GAAG,KAAKwM,kBAAL,CAA+CD,KAA/C,CAAb;AACAvM,IAAAA,IAAI,CAACuM,KAAL,GAAa;AAAEF,MAAAA,OAAF;AAAWC,MAAAA;AAAX,KAAb;AAEA,WAAOtM,IAAP;AACD;A;AAEDyM,EAAAA,kBAAkB,CAACjgB,KAAD,EAAqB;AAErC,QAAIkgB,MAAJ;A;AACA,QAAI;AAEFA,MAAAA,MAAM,GAAGC,MAAM,CAACngB,KAAD,CAAf;AACD,KAHD,CAGE,gBAAM;AACNkgB,MAAAA,MAAM,GAAG,IAAT;AACD;A;AACD,UAAM1M,IAAI,GAAG,KAAKwM,kBAAL,CAA+CE,MAA/C,CAAb;AACA1M,IAAAA,IAAI,CAACxH,MAAL,GAAcxK,MAAM,CAACgS,IAAI,CAACxT,KAAL,IAAcA,KAAf,CAApB;AAEA,WAAOwT,IAAP;AACD;A;AAED4M,EAAAA,mBAAmB,CAACpgB,KAAD,EAAqB;AAGtC,UAAMiM,OAAO,GAAG,IAAhB;AACA,UAAMuH,IAAI,GAAG,KAAKwM,kBAAL,CAAwB/T,OAAxB,CAAb;AACAuH,IAAAA,IAAI,CAACvH,OAAL,GAAezK,MAAM,CAACgS,IAAI,CAACxT,KAAL,IAAcA,KAAf,CAArB;AAEA,WAAOwT,IAAP;AACD;A;AAEDwM,EAAAA,kBAAkB,CAAYhgB,KAAZ,EAAwB;AACxC,WAAO,KAAKqgB,YAAL,CAAqBrgB,KAArB,EAA4B,SAA5B,CAAP;AACD;A;AAEDsgB,EAAAA,kBAAkB,CAACtgB,KAAD,EAAqB;AACrC,WAAO,KAAKggB,kBAAL,CAAwBhgB,KAAxB,CAAP;AACD;A;AAEDugB,EAAAA,mBAAmB,CAACvgB,KAAD,EAAkB;AACnC,WAAO,KAAKggB,kBAAL,CAAwBhgB,KAAxB,CAAP;AACD;A;AAEDwgB,EAAAA,gBAAgB,GAAW;AACzB,WAAO,KAAKR,kBAAL,CAAwB,IAAxB,CAAP;AACD;A;AAEDS,EAAAA,mBAAmB,CAACzgB,KAAD,EAAmC;AACpD,WAAO,KAAKggB,kBAAL,CAAwBhgB,KAAxB,CAAP;AACD;A;AAED0gB,EAAAA,eAAe,CAACC,SAAD,EAAgD;AAC7D,UAAMC,gBAAgB,GAAGD,SAAS,CAAC3gB,KAAnC;AAEA,UAAM6gB,IAAI,GAAG,KAAKC,WAAL,CAAiBH,SAAS,CAAC7f,KAA3B,EAAkC6f,SAAS,CAACxN,GAAV,CAAcrS,KAAhD,CAAb;AACA,UAAMigB,UAAU,GAAG,KAAKD,WAAL,CACjBF,gBAAgB,CAAC9f,KADA,EAEjB8f,gBAAgB,CAACzN,GAAjB,CAAqBrS,KAFJ,CAAnB;AAKAigB,IAAAA,UAAU,CAAC/gB,KAAX,GAAmB4gB,gBAAgB,CAACI,KAAjB,CAAuBC,eAA1C;AACAF,IAAAA,UAAU,CAACG,GAAX,GAAiBN,gBAAgB,CAACI,KAAjB,CAAuBE,GAAxC;AAEAL,IAAAA,IAAI,CAACE,UAAL,GAAkB,KAAKI,YAAL,CAChBJ,UADgB,EAEhB,SAFgB,EAGhBH,gBAAgB,CAAC7f,GAHD,EAIhB6f,gBAAgB,CAACzN,GAAjB,CAAqBpS,GAJL,CAAlB;AAMA8f,IAAAA,IAAI,CAACF,SAAL,GAAiBC,gBAAgB,CAACI,KAAjB,CAAuBE,GAAvB,CAA2BhZ,KAA3B,CAAiC,CAAjC,EAAoC,CAAC,CAArC,CAAjB;AAEA,WAAO,KAAKiZ,YAAL,CACLN,IADK,EAEL,qBAFK,EAGLF,SAAS,CAAC5f,GAHL,EAIL4f,SAAS,CAACxN,GAAV,CAAcpS,GAJT,CAAP;AAMD;A;AAMDqgB,EAAAA,YAAY,CACV5N,IADU,EAEV6N,OAFU,EAGJ;AACN,UAAMD,YAAN,CAAmB5N,IAAnB,EAAyB6N,OAAzB;AACA7N,IAAAA,IAAI,CAACuN,UAAL,GAAkB,KAAlB;AACD;A;AAEDO,EAAAA,gBAAgB,CAAC9N,IAAD,EAA2C;AACzD,QAAIA,IAAI,IAAI,IAAR,IAAgB,KAAK+N,gBAAL,CAAsB/N,IAAtB,CAApB,EAAiD;AAC/C,WAAK8N,gBAAL,CAAwB9N,IAAF,CAAgCxT,KAAtD;AACD,KAFD,MAEO;AACL,YAAMshB,gBAAN,CAAuB9N,IAAvB;AACD;AACF;A;AAEDgO,EAAAA,4BAA4B,CAACC,MAAD,EAAyC;AACnE,WAASA,MAAF,CAA6DzhB,KAA7D,CACJif,MADH;AAED;A;AAEDyC,EAAAA,gBAAgB,CAACb,IAAD,EAA6B;AAAA;A;AAC3C,WACEA,IAAI,CAAChnB,IAAL,KAAc,qBAAd,IACAgnB,IAAI,CAACE,UAAL,CAAgBlnB,IAAhB,KAAyB,SADzB,IAEA,OAAOgnB,IAAI,CAACE,UAAL,CAAgB/gB,KAAvB,KAAiC,QAFjC,IAGA,2BAAC6gB,IAAI,CAACE,UAAL,CAAgBC,KAAjB,aAAC,sBAAuBW,aAAxB,CAJF;AAMD;A;AAEDC,EAAAA,eAAe,CAACf,IAAD,EAAiC;AAC9C,UAAMF,SAAS,GAAG,MAAMiB,eAAN,CAAsBf,IAAtB,CAAlB;AACA,UAAM7gB,KAAK,GAAG6gB,IAAI,CAACE,UAAL,CAAgB/gB,KAA9B;AAKA,SAAK6hB,QAAL,CAAclB,SAAS,CAAC3gB,KAAxB,EAA+B,iBAA/B,EAAkDA,KAAlD;AAEA,WAAO2gB,SAAP;AACD;A;AAEDmB,EAAAA,cAAc,CACZtO,IADY,EAEZ,GAAGuO,IAFS,EAGN;AACN,UAAMD,cAAN,CAAqBtO,IAArB,EAA2B,GAAGuO,IAA9B;AAEA,UAAMC,mBAAmB,GAAGxO,IAAI,CAACyO,UAAL,CAAgBtlB,GAAhB,CAAoBM,CAAC,IAC/C,KAAKyjB,eAAL,CAAqBzjB,CAArB,CAD0B,CAA5B;AAGAuW,IAAAA,IAAI,CAACzX,IAAL,GAAYimB,mBAAmB,CAAC3kB,MAApB,CAA2BmW,IAAI,CAACzX,IAAhC,CAAZ;AAEA,WAAOyX,IAAI,CAACyO,UAAZ;AACD;A;AAEDC,EAAAA,eAAe,CACbC,SADa,EAEbV,MAFa,EAGbW,WAHa,EAIbf,OAJa,EAKbgB,aALa,EAMbC,iBANa,EAOP;AACN,SAAKC,WAAL,CACEd,MADF,EAEEW,WAFF,EAGEf,OAHF,EAIEgB,aAJF,EAKEC,iBALF,EAME,aANF,EAOE,IAPF;A;AASA,QAAIb,MAAM,CAACe,cAAX,EAA2B;AAEzBf,MAAAA,MAAM,CAACzhB,KAAP,CAAawiB,cAAb,GAA8Bf,MAAM,CAACe,cAArC;AACA,aAAOf,MAAM,CAACe,cAAd;AACD;A;AACDL,IAAAA,SAAS,CAACpmB,IAAV,CAAexD,IAAf,CAAoBkpB,MAApB;AACD;A;AAEDgB,EAAAA,qBAAqB,CAAC,GAAGV,IAAJ,EAA0B;AAC7C,UAAMvO,IAAI,GAAG,MAAMiP,qBAAN,CAA4B,GAAGV,IAA/B,CAAb;A;AACA,QACEvO,IAAI,CAAC3Z,IAAL,KAAc,aAAd,IACA,KAAK+Y,eAAL,CAAqB,QAArB,EAA+B,eAA/B,CAFF,EAGE;AACA,aAAO,KAAK8P,qCAAL,CAA2ClP,IAA3C,CAAP;AACD;A;AACD,WAAOA,IAAP;AACD;A;AAEDkP,EAAAA,qCAAqC,CACnClP,IADmC,EAER;AAC3B,UAAMvR,IAAI,GAAG,MAAM0gB,gBAAN,CAAuBnP,IAAvB,CAAb;AACAA,IAAAA,IAAI,GAAIA,IAAR;AACA,WAAOA,IAAI,CAAChZ,EAAZ;AACAgZ,IAAAA,IAAI,CAACvR,IAAL,GAAYA,IAAZ;AACAuR,IAAAA,IAAI,CAAC3Z,IAAL,GAAY,mBAAZ;AACA,WAAO2Z,IAAP;AACD;A;AAEDoP,EAAAA,aAAa,CAACpP,IAAD,EAAwB;AACnC,QAAI,CAAC,KAAKZ,eAAL,CAAqB,QAArB,EAA+B,eAA/B,CAAL,EAAsD;AACpD,aAAO,MAAMgQ,aAAN,CAAoBpP,IAApB,CAAP;AACD;A;AACD,WAAOA,IAAI,CAAC3Z,IAAL,KAAc,mBAArB;AACD;A;AAED8oB,EAAAA,gBAAgB,CAACnP,IAAD,EAAuB;AACrC,QAAI,CAAC,KAAKZ,eAAL,CAAqB,QAArB,EAA+B,eAA/B,CAAL,EAAsD;AACpD,aAAO,MAAM+P,gBAAN,CAAuBnP,IAAvB,CAAP;AACD;A;AACD,WAAOA,IAAI,CAACvR,IAAZ;AACD;A;AAEDoe,EAAAA,YAAY,CAAYrgB,KAAZ,EAAwBnG,IAAxB,EAA0D;AACpE,UAAM2Z,IAAI,GAAG,MAAM6M,YAAN,CAAsBrgB,KAAtB,EAA6BnG,IAA7B,CAAb;AACA2Z,IAAAA,IAAI,CAAC0N,GAAL,GAAW1N,IAAI,CAACwN,KAAL,CAAWE,GAAtB;AACA,WAAO1N,IAAI,CAACwN,KAAZ;AAEA,WAAOxN,IAAP;AACD;A;AAEDqP,EAAAA,iBAAiB,CACfrP,IADe,EAEfsP,eAFe,EAGfC,QAAkB,GAAG,KAHN,EAIT;AACN,UAAMF,iBAAN,CAAwBrP,IAAxB,EAA8BsP,eAA9B,EAA+CC,QAA/C;AACAvP,IAAAA,IAAI,CAACuN,UAAL,GAAkBvN,IAAI,CAACzX,IAAL,CAAUlC,IAAV,KAAmB,gBAArC;AACD;A;AAED0oB,EAAAA,WAAW,CACT/O,IADS,EAET4O,WAFS,EAGTf,OAHS,EAITgB,aAJS,EAKTW,gBALS,EAMTnpB,IANS,EAOTopB,YAAqB,GAAG,KAPf,EAQN;AACH,QAAIC,QAAQ,GAAG,KAAKC,SAAL,EAAf;AACAD,IAAAA,QAAQ,CAACE,IAAT,GAAgB5P,IAAI,CAAC4P,IAArB;AACAF,IAAAA,QAAQ,GAAG,MAAMX,WAAN,CACTW,QADS,EAETd,WAFS,EAGTf,OAHS,EAITgB,aAJS,EAKTW,gBALS,EAMTnpB,IANS,EAOTopB,YAPS,CAAX;AASAC,IAAAA,QAAQ,CAACrpB,IAAT,GAAgB,oBAAhB;AACA,WAAOqpB,QAAQ,CAACE,IAAhB;AAEA5P,IAAAA,IAAI,CAACxT,KAAL,GAAakjB,QAAb;A;AACA,QAAIrpB,IAAI,KAAK,oBAAb,EAAmC;AAEjC2Z,MAAAA,IAAI,CAAC6P,QAAL,GAAgB,KAAhB;AACD;A;AACDxpB,IAAAA,IAAI,GAAG,kBAAP;AACA,WAAO,KAAKypB,UAAL,CAAgB9P,IAAhB,EAAsB3Z,IAAtB,CAAP;AACD;A;AAED0pB,EAAAA,kBAAkB,CAAC,GAAGxB,IAAJ,EAAkC;AAClD,UAAMyB,YAAY,GAAI,MAAMD,kBAAN,CAAyB,GAAGxB,IAA5B,CAAtB;A;AACA,QAAI,KAAKnP,eAAL,CAAqB,QAArB,EAA+B,eAA/B,CAAJ,EAAqD;AACnD4Q,MAAAA,YAAY,CAAC3pB,IAAb,GAAoB,oBAApB;AACD;A;AACD,WAAQ2pB,YAAR;AACD;A;AAEDC,EAAAA,yBAAyB,CAAC,GAAG1B,IAAJ,EAAyC;AAChE,UAAMyB,YAAY,GAAI,MAAMC,yBAAN,CAAgC,GAAG1B,IAAnC,CAAtB;A;AACA,QAAI,KAAKnP,eAAL,CAAqB,QAArB,EAA+B,eAA/B,CAAJ,EAAqD;AACnD4Q,MAAAA,YAAY,CAAC3pB,IAAb,GAAoB,oBAApB;AACA2pB,MAAAA,YAAY,CAACH,QAAb,GAAwB,KAAxB;AACD;A;AACD,WAAQG,YAAR;AACD;A;AAEDE,EAAAA,iBAAiB,CACfC,IADe,EAEfvB,WAFe,EAGff,OAHe,EAIfuC,SAJe,EAKfC,UALe,EAME;AACjB,UAAMrQ,IAAsB,GAAI,MAAMkQ,iBAAN,CAC9BC,IAD8B,EAE9BvB,WAF8B,EAG9Bf,OAH8B,EAI9BuC,SAJ8B,EAK9BC,UAL8B,CAAhC;A;AAQA,QAAIrQ,IAAJ,EAAU;AACRA,MAAAA,IAAI,CAAC3Z,IAAL,GAAY,UAAZ;AACA,UAAM2Z,IAAF,CAA6B4P,IAA7B,KAAsC,QAA1C,EAAoD5P,IAAI,CAAC4P,IAAL,GAAY,MAAZ;AACpD5P,MAAAA,IAAI,CAACsQ,SAAL,GAAiB,KAAjB;AACD;A;AAED,WAAQtQ,IAAR;AACD;A;AAEDuQ,EAAAA,mBAAmB,CACjBJ,IADiB,EAEjBK,QAFiB,EAGjBtF,QAHiB,EAIjBkF,SAJiB,EAKjBK,mBALiB,EAME;AACnB,UAAMzQ,IAAsB,GAAI,MAAMuQ,mBAAN,CAC9BJ,IAD8B,EAE9BK,QAF8B,EAG9BtF,QAH8B,EAI9BkF,SAJ8B,EAK9BK,mBAL8B,CAAhC;A;AAQA,QAAIzQ,IAAJ,EAAU;AACRA,MAAAA,IAAI,CAAC4P,IAAL,GAAY,MAAZ;AACA5P,MAAAA,IAAI,CAAC3Z,IAAL,GAAY,UAAZ;AACD;A;AAED,WAAQ2Z,IAAR;AACD;A;AAED0Q,EAAAA,YAAY,CAAC1Q,IAAD,EAAe2Q,KAAc,GAAG,KAAhC,EAA+C;AACzD,QAAI3Q,IAAI,IAAI,IAAR,IAAgB,KAAK+N,gBAAL,CAAsB/N,IAAtB,CAApB,EAAiD;AAC/C,WAAK0Q,YAAL,CAAkB1Q,IAAI,CAACxT,KAAvB,EAA8BmkB,KAA9B;AAEA,aAAO3Q,IAAP;AACD;A;AAED,WAAO,MAAM0Q,YAAN,CAAmB1Q,IAAnB,EAAyB2Q,KAAzB,CAAP;AACD;A;AAEDC,EAAAA,gCAAgC,CAACT,IAAD,EAAe,GAAG5B,IAAlB,EAAwB;AACtD,QAAI4B,IAAI,CAACP,IAAL,KAAc,KAAd,IAAuBO,IAAI,CAACP,IAAL,KAAc,KAAzC,EAAgD;AAC9C,WAAKpE,KAAL,CAAW2E,IAAI,CAAC3gB,GAAL,CAASlC,KAApB,EAA2BujB,aAAM,CAAChK,kBAAlC;AACD,KAFD,MAEO,IAAIsJ,IAAI,CAAClC,MAAT,EAAiB;AACtB,WAAKzC,KAAL,CAAW2E,IAAI,CAAC3gB,GAAL,CAASlC,KAApB,EAA2BujB,aAAM,CAAC/J,gBAAlC;AACD,KAFM,MAEA;AACL,YAAM8J,gCAAN,CAAuCT,IAAvC,EAA6C,GAAG5B,IAAhD;AACD;AACF;A;AAEDuC,EAAAA,oBAAoB,CAClB9Q,IADkB,EAElB+Q,QAFkB,EAGJ;AACd,UAAMD,oBAAN,CAA2B9Q,IAA3B,EAAiC+Q,QAAjC;A;AAEA,QAAI/Q,IAAI,CAACgR,MAAL,CAAY3qB,IAAZ,KAAqB,QAAzB,EAAmC;AAC/B2Z,MAAAA,IAAF,CAA2C3Z,IAA3C,GAAkD,kBAAlD;AACE2Z,MAAAA,IAAF,CAA2C3S,MAA3C,GAAoD2S,IAAI,CAACc,SAAL,CAAe,CAAf,CAApD;A;AACA,UAAI,KAAK7B,SAAL,CAAe,kBAAf,CAAJ,EAAwC;AAAA;A;AACpCe,QAAAA,IAAF,CAA2CiR,UAA3C,uBACEjR,IAAI,CAACc,SAAL,CAAe,CAAf,CADF,+BACuB,IADvB;AAED;A;AAED,aAAOd,IAAI,CAACc,SAAZ;AAEA,aAAOd,IAAI,CAACgR,MAAZ;AACD;A;AAED,WAAOhR,IAAP;AACD;A;AAEDkR,EAAAA,qBAAqB,CACnBlR,IADmB,EAMnB;AAEA,QAAIA,IAAI,CAAC3Z,IAAL,KAAc,kBAAlB,EAAsC;AACpC;AACD;A;AAED,UAAM6qB,qBAAN,CAA4BlR,IAA5B;AACD;A;AAEDmR,EAAAA,WAAW,CAACnR,IAAD,EAAe;AACxB,UAAMmR,WAAN,CAAkBnR,IAAlB;A;AAEA,YAAQA,IAAI,CAAC3Z,IAAb;AACE,WAAK,sBAAL;AACE2Z,QAAAA,IAAI,CAACoR,QAAL,GAAgB,IAAhB;AACA;A;AAEF,WAAK,wBAAL;AACE,YACEpR,IAAI,CAACqR,UAAL,CAAgB/pB,MAAhB,KAA2B,CAA3B,IACA0Y,IAAI,CAACqR,UAAL,CAAgB,CAAhB,EAAmBhrB,IAAnB,KAA4B,0BAF9B,EAGE;AACA2Z,UAAAA,IAAI,CAAC3Z,IAAL,GAAY,sBAAZ;AACA2Z,UAAAA,IAAI,CAACoR,QAAL,GAAgBpR,IAAI,CAACqR,UAAL,CAAgB,CAAhB,EAAmBD,QAAnC;AACA,iBAAOpR,IAAI,CAACqR,UAAZ;AACD;A;AAED;AAfJ;A;AAkBA,WAAOrR,IAAP;AACD;A;AAEDsR,EAAAA,cAAc,CACZC,IADY,EAEZf,QAFY,EAGZtF,QAHY,EAIZsG,OAJY,EAKZ5R,KALY,EAMZ;AACA,UAAMI,IAAI,GAAG,MAAMsR,cAAN,CACXC,IADW,EAEXf,QAFW,EAGXtF,QAHW,EAIXsG,OAJW,EAKX5R,KALW,CAAb;A;AAQA,QAAIA,KAAK,CAAC6R,mBAAV,EAA+B;AAE7B,UACEzR,IAAI,CAAC3Z,IAAL,KAAc,0BAAd,IACA2Z,IAAI,CAAC3Z,IAAL,KAAc,wBAFhB,EAGE;AACA2Z,QAAAA,IAAI,CAAC3Z,IAAL,GAAY2Z,IAAI,CAAC3Z,IAAL,CAAU8K,SAAV,CAAoB,CAApB,CAAZ;AACD;A;AACD,UAAIyO,KAAK,CAAC8R,IAAV,EAAgB;AACd,cAAMC,KAAK,GAAG,KAAKC,eAAL,CAAqB5R,IAArB,CAAd;AACA2R,QAAAA,KAAK,CAACpE,UAAN,GAAmBvN,IAAnB;AACA,eAAO,KAAK8P,UAAL,CAAgB6B,KAAhB,EAAuB,iBAAvB,CAAP;AACD;AACF,KAbD,MAaO,IACL3R,IAAI,CAAC3Z,IAAL,KAAc,kBAAd,IACA2Z,IAAI,CAAC3Z,IAAL,KAAc,gBAFT,EAGL;AACA2Z,MAAAA,IAAI,CAAC+Q,QAAL,GAAgB,KAAhB;AACD;A;AAED,WAAO/Q,IAAP;AACD;A;AAED6R,EAAAA,wBAAwB,CAAC7R,IAAD,EAAwB;AAC9C,QAAIA,IAAI,CAAC3Z,IAAL,KAAc,iBAAlB,EAAqC;AACnC2Z,MAAAA,IAAI,GAAGA,IAAI,CAACuN,UAAZ;AACD;A;AACD,WAAO,MAAMsE,wBAAN,CAA+B7R,IAA/B,CAAP;AACD;A;AAED8R,EAAAA,eAAe,CAAC9R,IAAD,EAAwB;AACrC,WAAOA,IAAI,CAAC3Z,IAAL,KAAc,iBAArB;AACD;A;AAED0nB,EAAAA,gBAAgB,CAAC/N,IAAD,EAAwB;AACtC,WAAOA,IAAI,CAAC3Z,IAAL,KAAc,UAAd,IAA4B2Z,IAAI,CAAC4P,IAAL,KAAc,MAA1C,IAAoD,CAAC5P,IAAI,CAACiO,MAAjE;AACD;A;AAED8D,EAAAA,cAAc,CAAC/R,IAAD,EAAwB;AACpC,WAAOA,IAAI,CAACiO,MAAL,IAAejO,IAAI,CAAC4P,IAAL,KAAc,KAA7B,IAAsC5P,IAAI,CAAC4P,IAAL,KAAc,KAA3D;AACD;A;AA1csB,CAD3B;A;ACDO,MAAMoC,UAAN,CAAiB;AACtBxa,EAAAA,WAAW,CAACW,KAAD,EAAgB8Z,MAAhB,EAAkCC,aAAlC,EAA2D;AAAA,SAMtE/Z,KANsE;AAAA,SAOtE8Z,MAPsE;AAAA,SAQtEC,aARsE;AACpE,SAAK/Z,KAAL,GAAaA,KAAb;AACA,SAAK8Z,MAAL,GAAc,CAAC,CAACA,MAAhB;AACA,SAAKC,aAAL,GAAqB,CAAC,CAACA,aAAvB;AACD;A;AALqB;AAYjB,MAAM5Z,KAEZ,GAAG;AACF6Z,EAAAA,cAAc,EAAE,IAAIH,UAAJ,CAAe,GAAf,EAAoB,KAApB,CADd;AAEFI,EAAAA,eAAe,EAAE,IAAIJ,UAAJ,CAAe,GAAf,EAAoB,IAApB,CAFf;AAGFK,EAAAA,gBAAgB,EAAE,IAAIL,UAAJ,CAAe,IAAf,EAAqB,IAArB,CAHhB;AAIFM,EAAAA,aAAa,EAAE,IAAIN,UAAJ,CAAe,IAAf,EAAqB,KAArB,CAJb;AAKFO,EAAAA,cAAc,EAAE,IAAIP,UAAJ,CAAe,GAAf,EAAoB,KAApB,CALd;AAMFQ,EAAAA,eAAe,EAAE,IAAIR,UAAJ,CAAe,GAAf,EAAoB,IAApB,CANf;AAOF/X,EAAAA,QAAQ,EAAE,IAAI+X,UAAJ,CAAe,GAAf,EAAoB,IAApB,EAA0B,IAA1B,CAPR;AAQFS,EAAAA,kBAAkB,EAAE,IAAIT,UAAJ,CAAe,UAAf,EAA2B,IAA3B,CARlB;AASFU,EAAAA,iBAAiB,EAAE,IAAIV,UAAJ,CAAe,UAAf,EAA2B,KAA3B;AATjB,CAFG;A;AAwBPW,OAAE,CAACnZ,MAAH,CAAU1B,aAAV,GAA0B6a,OAAE,CAACtZ,MAAH,CAAUvB,aAAV,GAA0B,YAAY;AAC9D,MAAI,KAAK8H,KAAL,CAAWgT,OAAX,CAAmBtrB,MAAnB,KAA8B,CAAlC,EAAqC;AACnC,SAAKsY,KAAL,CAAWiT,WAAX,GAAyB,IAAzB;AACA;AACD;A;AAED,MAAIC,GAAG,GAAG,KAAKlT,KAAL,CAAWgT,OAAX,CAAmBhS,GAAnB,EAAV;A;AACA,MAAIkS,GAAG,KAAKxa,KAAK,CAAC6Z,cAAd,IAAgC,KAAKY,UAAL,GAAkB5a,KAAlB,KAA4B,UAAhE,EAA4E;AAC1E2a,IAAAA,GAAG,GAAG,KAAKlT,KAAL,CAAWgT,OAAX,CAAmBhS,GAAnB,EAAN;AACD;A;AAED,OAAKhB,KAAL,CAAWiT,WAAX,GAAyB,CAACC,GAAG,CAACb,MAA9B;AACD,CAZD;A;AAcAU,OAAE,CAAClkB,IAAH,CAAQqJ,aAAR,GAAwB,UAAUkb,QAAV,EAAoB;AAC1C,MAAIC,OAAO,GAAG,KAAd;A;AACA,MAAID,QAAQ,KAAKL,OAAE,CAAC9Y,GAApB,EAAyB;AACvB,QACE,KAAK+F,KAAL,CAAWpT,KAAX,KAAqB,IAArB,IACA,CAAC,KAAKoT,KAAL,CAAWiT,WADZ,IAEAG,QAAQ,KAAKL,OAAE,CAACtW,SAFhB,IAGA2W,QAAQ,KAAKL,OAAE,CAACzV,MAJlB,EAKE;AACA+V,MAAAA,OAAO,GAAG,IAAV;AACD;AACF;A;AACD,OAAKrT,KAAL,CAAWiT,WAAX,GAAyBI,OAAzB;AACD,CAbD;A;AAeAN,OAAE,CAACzZ,MAAH,CAAUpB,aAAV,GAA0B,UAAUkb,QAAV,EAAoB;AAC5C,OAAKpT,KAAL,CAAWgT,OAAX,CAAmB7tB,IAAnB,CACE,KAAKmuB,YAAL,CAAkBF,QAAlB,IAA8B1a,KAAK,CAAC6Z,cAApC,GAAqD7Z,KAAK,CAAC8Z,eAD7D;AAGA,OAAKxS,KAAL,CAAWiT,WAAX,GAAyB,IAAzB;AACD,CALD;A;AAOAF,OAAE,CAACvY,YAAH,CAAgBtC,aAAhB,GAAgC,YAAY;AAC1C,OAAK8H,KAAL,CAAWgT,OAAX,CAAmB7tB,IAAnB,CAAwBuT,KAAK,CAACga,aAA9B;AACA,OAAK1S,KAAL,CAAWiT,WAAX,GAAyB,IAAzB;AACD,CAHD;A;AAKAF,OAAE,CAACpZ,MAAH,CAAUzB,aAAV,GAA0B,UAAUkb,QAAV,EAAoB;AAC5C,QAAMG,eAAe,GACnBH,QAAQ,KAAKL,OAAE,CAACrW,GAAhB,IACA0W,QAAQ,KAAKL,OAAE,CAACvW,IADhB,IAEA4W,QAAQ,KAAKL,OAAE,CAAC7V,KAFhB,IAGAkW,QAAQ,KAAKL,OAAE,CAAC9V,MAJlB;AAKA,OAAK+C,KAAL,CAAWgT,OAAX,CAAmB7tB,IAAnB,CACEouB,eAAe,GAAG7a,KAAK,CAACia,cAAT,GAA0Bja,KAAK,CAACka,eADjD;AAGA,OAAK5S,KAAL,CAAWiT,WAAX,GAAyB,IAAzB;AACD,CAVD;A;AAYAF,OAAE,CAAClY,MAAH,CAAU3C,aAAV,GAA0B,YAAY,EAAtC;A;AAIA6a,OAAE,CAACtW,SAAH,CAAavE,aAAb,GAA6B6a,OAAE,CAACzV,MAAH,CAAUpF,aAAV,GAA0B,UAAUkb,QAAV,EAAoB;AACzE,MACEA,QAAQ,CAAC/b,UAAT,IACA+b,QAAQ,KAAKL,OAAE,CAACjZ,IADhB,IAEAsZ,QAAQ,KAAKL,OAAE,CAACzW,KAFhB,IAGA,EAAE8W,QAAQ,KAAKL,OAAE,CAACpW,OAAhB,IAA2B,KAAK6W,qBAAL,EAA7B,CAHA,IAIA,EACE,CAACJ,QAAQ,KAAKL,OAAE,CAAChZ,KAAhB,IAAyBqZ,QAAQ,KAAKL,OAAE,CAACzZ,MAA1C,KACA,KAAK6Z,UAAL,OAAsBza,KAAK,CAAC+a,MAF9B,CALF,EASE;AACA,SAAKzT,KAAL,CAAWgT,OAAX,CAAmB7tB,IAAnB,CAAwBuT,KAAK,CAACma,kBAA9B;AACD,GAXD,MAWO;AACL,SAAK7S,KAAL,CAAWgT,OAAX,CAAmB7tB,IAAnB,CAAwBuT,KAAK,CAACoa,iBAA9B;AACD;A;AAED,OAAK9S,KAAL,CAAWiT,WAAX,GAAyB,KAAzB;AACD,CAjBD;A;AAmBAF,OAAE,CAACxY,SAAH,CAAarC,aAAb,GAA6B,YAAY;AACvC,MAAI,KAAKib,UAAL,OAAsBza,KAAK,CAAC2B,QAAhC,EAA0C;AACxC,SAAK2F,KAAL,CAAWgT,OAAX,CAAmBhS,GAAnB;AACD,GAFD,MAEO;AACL,SAAKhB,KAAL,CAAWgT,OAAX,CAAmB7tB,IAAnB,CAAwBuT,KAAK,CAAC2B,QAA9B;AACD;A;AACD,OAAK2F,KAAL,CAAWiT,WAAX,GAAyB,KAAzB;AACD,CAPD;A;AAUAF,OAAE,CAACvZ,UAAH,CAActB,aAAd,GAA8B,YAAY;AACxC,OAAK8H,KAAL,CAAWgT,OAAX,CAAmB7tB,IAAnB,CAAwBuT,KAAK,CAAC+Z,gBAA9B;AACA,OAAKzS,KAAL,CAAWiT,WAAX,GAAyB,IAAzB;AACD,CAHD;A;ACvHA,IAAIS,4BAA4B,GAAG,urIAAnC;AAEA,IAAIC,uBAAuB,GAAG,sjFAA9B;AAEA,MAAMC,uBAAuB,GAAG,IAAItoB,MAAJ,CAC9B,MAAMooB,4BAAN,GAAqC,GADP,CAAhC;AAGA,MAAMG,kBAAkB,GAAG,IAAIvoB,MAAJ,CACzB,MAAMooB,4BAAN,GAAqCC,uBAArC,GAA+D,GADtC,CAA3B;AAIAD,4BAA4B,GAAGC,uBAAuB,GAAG,IAAzD;AASA,MAAMG,0BAA0B,GAAG,CAAC,CAAD,EAAG,EAAH,EAAM,CAAN,EAAQ,EAAR,EAAW,CAAX,EAAa,EAAb,EAAgB,CAAhB,EAAkB,CAAlB,EAAoB,CAApB,EAAsB,EAAtB,EAAyB,CAAzB,EAA2B,EAA3B,EAA8B,EAA9B,EAAiC,GAAjC,EAAqC,EAArC,EAAwC,EAAxC,EAA2C,GAA3C,EAA+C,EAA/C,EAAkD,CAAlD,EAAoD,EAApD,EAAuD,EAAvD,EAA0D,EAA1D,EAA6D,EAA7D,EAAgE,EAAhE,EAAmE,CAAnE,EAAqE,EAArE,EAAwE,EAAxE,EAA2E,EAA3E,EAA8E,CAA9E,EAAgF,EAAhF,EAAmF,CAAnF,EAAqF,CAArF,EAAuF,CAAvF,EAAyF,CAAzF,EAA2F,EAA3F,EAA8F,GAA9F,EAAkG,EAAlG,EAAqG,EAArG,EAAwG,CAAxG,EAA0G,EAA1G,EAA6G,CAA7G,EAA+G,EAA/G,EAAkH,CAAlH,EAAoH,EAApH,EAAuH,GAAvH,EAA2H,GAA3H,EAA+H,EAA/H,EAAkI,EAAlI,EAAqI,EAArI,EAAwI,CAAxI,EAA0I,GAA1I,EAA8I,CAA9I,EAAgJ,CAAhJ,EAAkJ,CAAlJ,EAAoJ,CAApJ,EAAsJ,EAAtJ,EAAyJ,CAAzJ,EAA2J,CAA3J,EAA6J,CAA7J,EAA+J,CAA/J,EAAiK,CAAjK,EAAmK,EAAnK,EAAsK,EAAtK,EAAyK,EAAzK,EAA4K,EAA5K,EAA+K,EAA/K,EAAkL,EAAlL,EAAqL,EAArL,EAAwL,CAAxL,EAA0L,CAA1L,EAA4L,EAA5L,EAA+L,EAA/L,EAAkM,EAAlM,EAAqM,EAArM,EAAwM,EAAxM,EAA2M,EAA3M,EAA8M,CAA9M,EAAgN,CAAhN,EAAkN,EAAlN,EAAqN,CAArN,EAAuN,EAAvN,EAA0N,CAA1N,EAA4N,CAA5N,EAA8N,CAA9N,EAAgO,CAAhO,EAAkO,EAAlO,EAAqO,EAArO,EAAwO,EAAxO,EAA2O,CAA3O,EAA6O,EAA7O,EAAgP,EAAhP,EAAmP,CAAnP,EAAqP,CAArP,EAAuP,EAAvP,EAA0P,EAA1P,EAA6P,EAA7P,EAAgQ,EAAhQ,EAAmQ,EAAnQ,EAAsQ,EAAtQ,EAAyQ,EAAzQ,EAA4Q,EAA5Q,EAA+Q,EAA/Q,EAAkR,GAAlR,EAAsR,EAAtR,EAAyR,EAAzR,EAA4R,EAA5R,EAA+R,EAA/R,EAAkS,EAAlS,EAAqS,EAArS,EAAwS,EAAxS,EAA2S,GAA3S,EAA+S,EAA/S,EAAkT,CAAlT,EAAoT,CAApT,EAAsT,EAAtT,EAAyT,EAAzT,EAA4T,EAA5T,EAA+T,CAA/T,EAAiU,CAAjU,EAAmU,EAAnU,EAAsU,GAAtU,EAA0U,EAA1U,EAA6U,EAA7U,EAAgV,EAAhV,EAAmV,EAAnV,EAAsV,EAAtV,EAAyV,EAAzV,EAA4V,EAA5V,EAA+V,EAA/V,EAAkW,EAAlW,EAAqW,EAArW,EAAwW,EAAxW,EAA2W,EAA3W,EAA8W,CAA9W,EAAgX,CAAhX,EAAkX,CAAlX,EAAoX,CAApX,EAAsX,EAAtX,EAAyX,CAAzX,EAA2X,CAA3X,EAA6X,EAA7X,EAAgY,EAAhY,EAAmY,EAAnY,EAAsY,CAAtY,EAAwY,EAAxY,EAA2Y,CAA3Y,EAA6Y,CAA7Y,EAA+Y,CAA/Y,EAAiZ,EAAjZ,EAAoZ,EAApZ,EAAuZ,CAAvZ,EAAyZ,EAAzZ,EAA4Z,EAA5Z,EAA+Z,CAA/Z,EAAia,CAAja,EAAma,CAAna,EAAqa,CAAra,EAAua,CAAva,EAAya,CAAza,EAA2a,EAA3a,EAA8a,CAA9a,EAAgb,CAAhb,EAAkb,CAAlb,EAAob,EAApb,EAAub,EAAvb,EAA0b,CAA1b,EAA4b,CAA5b,EAA8b,CAA9b,EAAgc,CAAhc,EAAkc,EAAlc,EAAqc,CAArc,EAAuc,CAAvc,EAAyc,CAAzc,EAA2c,CAA3c,EAA6c,CAA7c,EAA+c,CAA/c,EAAid,CAAjd,EAAmd,CAAnd,EAAqd,EAArd,EAAwd,CAAxd,EAA0d,EAA1d,EAA6d,CAA7d,EAA+d,GAA/d,EAAme,EAAne,EAAse,EAAte,EAAye,CAAze,EAA2e,EAA3e,EAA8e,CAA9e,EAAgf,EAAhf,EAAmf,EAAnf,EAAsf,EAAtf,EAAyf,CAAzf,EAA2f,CAA3f,EAA6f,CAA7f,EAA+f,GAA/f,EAAmgB,EAAngB,EAAsgB,EAAtgB,EAAygB,CAAzgB,EAA2gB,EAA3gB,EAA8gB,EAA9gB,EAAihB,EAAjhB,EAAohB,CAAphB,EAAshB,EAAthB,EAAyhB,EAAzhB,EAA4hB,EAA5hB,EAA+hB,CAA/hB,EAAiiB,EAAjiB,EAAoiB,EAApiB,EAAuiB,GAAviB,EAA2iB,EAA3iB,EAA8iB,GAA9iB,EAAkjB,EAAljB,EAAqjB,EAArjB,EAAwjB,CAAxjB,EAA0jB,CAA1jB,EAA4jB,CAA5jB,EAA8jB,CAA9jB,EAAgkB,CAAhkB,EAAkkB,CAAlkB,EAAokB,CAApkB,EAAskB,CAAtkB,EAAwkB,EAAxkB,EAA2kB,EAA3kB,EAA8kB,CAA9kB,EAAglB,CAAhlB,EAAklB,CAAllB,EAAolB,EAAplB,EAAulB,CAAvlB,EAAylB,CAAzlB,EAA2lB,EAA3lB,EAA8lB,EAA9lB,EAAimB,CAAjmB,EAAmmB,CAAnmB,EAAqmB,CAArmB,EAAumB,EAAvmB,EAA0mB,CAA1mB,EAA4mB,EAA5mB,EAA+mB,EAA/mB,EAAknB,CAAlnB,EAAonB,CAApnB,EAAsnB,EAAtnB,EAAynB,CAAznB,EAA2nB,EAA3nB,EAA8nB,EAA9nB,EAAioB,EAAjoB,EAAooB,CAApoB,EAAsoB,EAAtoB,EAAyoB,EAAzoB,EAA4oB,GAA5oB,EAAgpB,CAAhpB,EAAkpB,CAAlpB,EAAopB,EAAppB,EAAupB,EAAvpB,EAA0pB,CAA1pB,EAA4pB,EAA5pB,EAA+pB,EAA/pB,EAAkqB,GAAlqB,EAAsqB,CAAtqB,EAAwqB,CAAxqB,EAA0qB,CAA1qB,EAA4qB,CAA5qB,EAA8qB,EAA9qB,EAAirB,EAAjrB,EAAorB,CAAprB,EAAsrB,EAAtrB,EAAyrB,CAAzrB,EAA2rB,CAA3rB,EAA6rB,CAA7rB,EAA+rB,CAA/rB,EAAisB,EAAjsB,EAAosB,EAApsB,EAAusB,CAAvsB,EAAysB,GAAzsB,EAA6sB,EAA7sB,EAAgtB,GAAhtB,EAAotB,CAAptB,EAAstB,EAAttB,EAAytB,GAAztB,EAA6tB,GAA7tB,EAAiuB,GAAjuB,EAAquB,EAAruB,EAAwuB,GAAxuB,EAA4uB,IAA5uB,EAAivB,IAAjvB,EAAsvB,IAAtvB,EAA2vB,GAA3vB,EAA+vB,IAA/vB,EAAowB,GAApwB,EAAwwB,CAAxwB,EAA0wB,EAA1wB,EAA6wB,GAA7wB,EAAixB,EAAjxB,EAAoxB,EAApxB,EAAuxB,EAAvxB,EAA0xB,EAA1xB,EAA6xB,CAA7xB,EAA+xB,EAA/xB,EAAkyB,EAAlyB,EAAqyB,CAAryB,EAAuyB,EAAvyB,EAA0yB,GAA1yB,EAA8yB,EAA9yB,EAAizB,GAAjzB,EAAqzB,EAArzB,EAAwzB,CAAxzB,EAA0zB,CAA1zB,EAA4zB,EAA5zB,EAA+zB,EAA/zB,EAAk0B,EAAl0B,EAAq0B,CAAr0B,EAAu0B,CAAv0B,EAAy0B,CAAz0B,EAA20B,EAA30B,EAA80B,IAA90B,EAAm1B,CAAn1B,EAAq1B,IAAr1B,EAA01B,EAA11B,EAA61B,CAA71B,EAA+1B,IAA/1B,EAAo2B,GAAp2B,EAAw2B,EAAx2B,EAA22B,CAA32B,EAA62B,EAA72B,EAAg3B,CAAh3B,EAAk3B,CAAl3B,EAAo3B,GAAp3B,EAAw3B,IAAx3B,EAA63B,GAA73B,EAAi4B,CAAj4B,EAAm4B,EAAn4B,EAAs4B,CAAt4B,EAAw4B,CAAx4B,EAA04B,CAA14B,EAA44B,CAA54B,EAA84B,IAA94B,EAAm5B,EAAn5B,EAAs5B,CAAt5B,EAAw5B,EAAx5B,EAA25B,CAA35B,EAA65B,CAA75B,EAA+5B,CAA/5B,EAAi6B,CAAj6B,EAAm6B,CAAn6B,EAAq6B,CAAr6B,EAAu6B,CAAv6B,EAAy6B,CAAz6B,EAA26B,CAA36B,EAA66B,EAA76B,EAAg7B,CAAh7B,EAAk7B,CAAl7B,EAAo7B,CAAp7B,EAAs7B,CAAt7B,EAAw7B,CAAx7B,EAA07B,EAA17B,EAA67B,CAA77B,EAA+7B,CAA/7B,EAAi8B,CAAj8B,EAAm8B,CAAn8B,EAAq8B,CAAr8B,EAAu8B,CAAv8B,EAAy8B,CAAz8B,EAA28B,EAA38B,EAA88B,CAA98B,EAAg9B,CAAh9B,EAAk9B,CAAl9B,EAAo9B,CAAp9B,EAAs9B,CAAt9B,EAAw9B,CAAx9B,EAA09B,CAA19B,EAA49B,CAA59B,EAA89B,CAA99B,EAAg+B,GAAh+B,EAAo+B,CAAp+B,EAAs+B,EAAt+B,EAAy+B,CAAz+B,EAA2+B,EAA3+B,EAA8+B,CAA9+B,EAAg/B,EAAh/B,EAAm/B,CAAn/B,EAAq/B,EAAr/B,EAAw/B,CAAx/B,EAA0/B,EAA1/B,EAA6/B,CAA7/B,EAA+/B,EAA//B,EAAkgC,CAAlgC,EAAogC,EAApgC,EAAugC,CAAvgC,EAAygC,EAAzgC,EAA4gC,CAA5gC,EAA8gC,EAA9gC,EAAihC,CAAjhC,EAAmhC,EAAnhC,EAAshC,CAAthC,EAAwhC,CAAxhC,EAA0hC,IAA1hC,EAA+hC,EAA/hC,EAAkiC,EAAliC,EAAqiC,CAAriC,EAAuiC,EAAviC,EAA0iC,CAA1iC,EAA4iC,GAA5iC,EAAgjC,EAAhjC,EAAmjC,IAAnjC,EAAwjC,GAAxjC,EAA4jC,EAA5jC,EAA+jC,EAA/jC,EAAkkC,CAAlkC,EAAokC,CAApkC,EAAskC,IAAtkC,EAA2kC,CAA3kC,EAA6kC,CAA7kC,EAA+kC,EAA/kC,EAAklC,CAAllC,EAAolC,CAAplC,EAAslC,CAAtlC,EAAwlC,CAAxlC,EAA0lC,CAA1lC,EAA4lC,CAA5lC,EAA8lC,CAA9lC,EAAgmC,CAAhmC,EAAkmC,CAAlmC,EAAomC,CAApmC,EAAsmC,CAAtmC,EAAwmC,CAAxmC,EAA0mC,CAA1mC,EAA4mC,CAA5mC,EAA8mC,CAA9mC,EAAgnC,CAAhnC,EAAknC,CAAlnC,EAAonC,CAApnC,EAAsnC,CAAtnC,EAAwnC,CAAxnC,EAA0nC,CAA1nC,EAA4nC,CAA5nC,EAA8nC,CAA9nC,EAAgoC,CAAhoC,EAAkoC,CAAloC,EAAooC,CAApoC,EAAsoC,CAAtoC,EAAwoC,CAAxoC,EAA0oC,CAA1oC,EAA4oC,CAA5oC,EAA8oC,CAA9oC,EAAgpC,CAAhpC,EAAkpC,CAAlpC,EAAopC,CAAppC,EAAspC,CAAtpC,EAAwpC,CAAxpC,EAA0pC,CAA1pC,EAA4pC,CAA5pC,EAA8pC,CAA9pC,EAAgqC,CAAhqC,EAAkqC,CAAlqC,EAAoqC,CAApqC,EAAsqC,CAAtqC,EAAwqC,CAAxqC,EAA0qC,CAA1qC,EAA4qC,CAA5qC,EAA8qC,CAA9qC,EAAgrC,CAAhrC,EAAkrC,CAAlrC,EAAorC,CAAprC,EAAsrC,CAAtrC,EAAwrC,CAAxrC,EAA0rC,CAA1rC,EAA4rC,CAA5rC,EAA8rC,CAA9rC,EAAgsC,EAAhsC,EAAmsC,CAAnsC,EAAqsC,CAArsC,EAAusC,CAAvsC,EAAysC,CAAzsC,EAA2sC,CAA3sC,EAA6sC,EAA7sC,EAAgtC,IAAhtC,EAAqtC,KAArtC,EAA2tC,EAA3tC,EAA8tC,IAA9tC,EAAmuC,EAAnuC,EAAsuC,GAAtuC,EAA0uC,CAA1uC,EAA4uC,IAA5uC,EAAivC,EAAjvC,EAAovC,IAApvC,EAAyvC,IAAzvC,EAA8vC,GAA9vC,EAAkwC,IAAlwC,EAAuwC,IAAvwC,CAAnC;AAEA,MAAMC,qBAAqB,GAAG,CAAC,GAAD,EAAK,CAAL,EAAO,GAAP,EAAW,CAAX,EAAa,GAAb,EAAiB,CAAjB,EAAmB,GAAnB,EAAuB,CAAvB,EAAyB,IAAzB,EAA8B,CAA9B,EAAgC,CAAhC,EAAkC,CAAlC,EAAoC,CAApC,EAAsC,CAAtC,EAAwC,EAAxC,EAA2C,CAA3C,EAA6C,CAA7C,EAA+C,CAA/C,EAAiD,GAAjD,EAAqD,CAArD,EAAuD,GAAvD,EAA2D,CAA3D,EAA6D,CAA7D,EAA+D,CAA/D,EAAiE,GAAjE,EAAqE,CAArE,EAAuE,GAAvE,EAA2E,EAA3E,EAA8E,GAA9E,EAAkF,CAAlF,EAAoF,EAApF,EAAuF,EAAvF,EAA0F,EAA1F,EAA6F,CAA7F,EAA+F,EAA/F,EAAkG,CAAlG,EAAoG,EAApG,EAAuG,EAAvG,EAA0G,EAA1G,EAA6G,CAA7G,EAA+G,CAA/G,EAAiH,CAAjH,EAAmH,EAAnH,EAAsH,EAAtH,EAAyH,CAAzH,EAA2H,CAA3H,EAA6H,CAA7H,EAA+H,CAA/H,EAAiI,EAAjI,EAAoI,CAApI,EAAsI,EAAtI,EAAyI,CAAzI,EAA2I,EAA3I,EAA8I,EAA9I,EAAiJ,CAAjJ,EAAmJ,CAAnJ,EAAqJ,CAArJ,EAAuJ,EAAvJ,EAA0J,EAA1J,EAA6J,EAA7J,EAAgK,CAAhK,EAAkK,CAAlK,EAAoK,GAApK,EAAwK,EAAxK,EAA2K,CAA3K,EAA6K,CAA7K,EAA+K,CAA/K,EAAiL,CAAjL,EAAmL,EAAnL,EAAsL,CAAtL,EAAwL,CAAxL,EAA0L,CAA1L,EAA4L,CAA5L,EAA8L,CAA9L,EAAgM,CAAhM,EAAkM,CAAlM,EAAoM,EAApM,EAAuM,CAAvM,EAAyM,EAAzM,EAA4M,CAA5M,EAA8M,CAA9M,EAAgN,CAAhN,EAAkN,CAAlN,EAAoN,CAApN,EAAsN,GAAtN,EAA0N,EAA1N,EAA6N,EAA7N,EAAgO,CAAhO,EAAkO,CAAlO,EAAoO,CAApO,EAAsO,EAAtO,EAAyO,EAAzO,EAA4O,EAA5O,EAA+O,CAA/O,EAAiP,GAAjP,EAAqP,CAArP,EAAuP,CAAvP,EAAyP,CAAzP,EAA2P,EAA3P,EAA8P,CAA9P,EAAgQ,EAAhQ,EAAmQ,EAAnQ,EAAsQ,EAAtQ,EAAyQ,CAAzQ,EAA2Q,EAA3Q,EAA8Q,EAA9Q,EAAiR,CAAjR,EAAmR,CAAnR,EAAqR,EAArR,EAAwR,EAAxR,EAA2R,CAA3R,EAA6R,CAA7R,EAA+R,GAA/R,EAAmS,EAAnS,EAAsS,GAAtS,EAA0S,CAA1S,EAA4S,EAA5S,EAA+S,CAA/S,EAAiT,CAAjT,EAAmT,CAAnT,EAAqT,CAArT,EAAuT,CAAvT,EAAyT,CAAzT,EAA2T,CAA3T,EAA6T,CAA7T,EAA+T,CAA/T,EAAiU,EAAjU,EAAoU,CAApU,EAAsU,GAAtU,EAA0U,CAA1U,EAA4U,CAA5U,EAA8U,CAA9U,EAAgV,CAAhV,EAAkV,CAAlV,EAAoV,EAApV,EAAuV,CAAvV,EAAyV,EAAzV,EAA4V,CAA5V,EAA8V,CAA9V,EAAgW,CAAhW,EAAkW,CAAlW,EAAoW,CAApW,EAAsW,EAAtW,EAAyW,EAAzW,EAA4W,EAA5W,EAA+W,EAA/W,EAAkX,GAAlX,EAAsX,CAAtX,EAAwX,CAAxX,EAA0X,CAA1X,EAA4X,EAA5X,EAA+X,CAA/X,EAAiY,EAAjY,EAAoY,EAApY,EAAuY,CAAvY,EAAyY,EAAzY,EAA4Y,GAA5Y,EAAgZ,CAAhZ,EAAkZ,CAAlZ,EAAoZ,CAApZ,EAAsZ,CAAtZ,EAAwZ,CAAxZ,EAA0Z,CAA1Z,EAA4Z,CAA5Z,EAA8Z,CAA9Z,EAAga,CAAha,EAAka,CAAla,EAAoa,CAApa,EAAsa,EAAta,EAAya,CAAza,EAA2a,CAA3a,EAA6a,CAA7a,EAA+a,CAA/a,EAAib,CAAjb,EAAmb,CAAnb,EAAqb,CAArb,EAAub,GAAvb,EAA2b,CAA3b,EAA6b,KAA7b,EAAmc,CAAnc,EAAqc,GAArc,EAAyc,CAAzc,EAA2c,EAA3c,EAA8c,CAA9c,EAAgd,EAAhd,EAAmd,CAAnd,EAAqd,IAArd,EAA0d,CAA1d,EAA4d,CAA5d,EAA8d,EAA9d,EAAie,CAAje,EAAme,CAAne,EAAqe,EAAre,EAAwe,CAAxe,EAA0e,EAA1e,EAA6e,CAA7e,EAA+e,KAA/e,EAAqf,CAArf,EAAuf,IAAvf,EAA4f,CAA5f,EAA8f,CAA9f,EAAggB,CAAhgB,EAAkgB,CAAlgB,EAAogB,CAApgB,EAAsgB,CAAtgB,EAAwgB,CAAxgB,EAA0gB,EAA1gB,EAA6gB,CAA7gB,EAA+gB,GAA/gB,EAAmhB,CAAnhB,EAAqhB,IAArhB,EAA0hB,EAA1hB,EAA6hB,GAA7hB,EAAiiB,EAAjiB,EAAoiB,CAApiB,EAAsiB,EAAtiB,EAAyiB,CAAziB,EAA2iB,CAA3iB,EAA6iB,EAA7iB,EAAgjB,CAAhjB,EAAkjB,EAAljB,EAAqjB,CAArjB,EAAujB,CAAvjB,EAAyjB,EAAzjB,EAA4jB,IAA5jB,EAAikB,CAAjkB,EAAmkB,CAAnkB,EAAqkB,EAArkB,EAAwkB,CAAxkB,EAA0kB,CAA1kB,EAA4kB,CAA5kB,EAA8kB,CAA9kB,EAAglB,CAAhlB,EAAklB,CAAllB,EAAolB,GAAplB,EAAwlB,CAAxlB,EAA0lB,EAA1lB,EAA6lB,CAA7lB,EAA+lB,GAA/lB,EAAmmB,EAAnmB,EAAsmB,IAAtmB,EAA2mB,CAA3mB,EAA6mB,GAA7mB,EAAinB,CAAjnB,EAAmnB,CAAnnB,EAAqnB,CAArnB,EAAunB,IAAvnB,EAA4nB,CAA5nB,EAA8nB,MAA9nB,EAAqoB,GAAroB,CAA9B;A;AAKA,SAASC,aAAT,CAAuB3V,IAAvB,EAAqC7F,GAArC,EAAsE;AACpE,MAAI6S,GAAG,GAAG,OAAV;A;AACA,OAAK,IAAI5jB,CAAC,GAAG,CAAR,EAAWC,MAAM,GAAG8Q,GAAG,CAAC9Q,MAA7B,EAAqCD,CAAC,GAAGC,MAAzC,EAAiDD,CAAC,IAAI,CAAtD,EAAyD;AACvD4jB,IAAAA,GAAG,IAAI7S,GAAG,CAAC/Q,CAAD,CAAV;AACA,QAAI4jB,GAAG,GAAGhN,IAAV,EAAgB,OAAO,KAAP;AAEhBgN,IAAAA,GAAG,IAAI7S,GAAG,CAAC/Q,CAAC,GAAG,CAAL,CAAV;AACA,QAAI4jB,GAAG,IAAIhN,IAAX,EAAiB,OAAO,IAAP;AAClB;A;AACD,SAAO,KAAP;AACD;A;AAIM,SAAS4V,iBAAT,CAA2B5V,IAA3B,EAAkD;AACvD,MAAIA,IAAI,KAAR,EAAiC,OAAOA,IAAI,OAAX;AACjC,MAAIA,IAAI,MAAR,EAAkC,OAAO,IAAP;AAClC,MAAIA,IAAI,KAAR,EAAiC,OAAOA,IAAI,OAAX;AACjC,MAAIA,IAAI,OAAR,EAAkC,OAAO,IAAP;A;AAClC,MAAIA,IAAI,IAAI,MAAZ,EAAoB;AAClB,WACEA,IAAI,IAAI,IAAR,IAAgBuV,uBAAuB,CAACztB,IAAxB,CAA6BiI,MAAM,CAAC8lB,YAAP,CAAoB7V,IAApB,CAA7B,CADlB;AAGD;A;AACD,SAAO2V,aAAa,CAAC3V,IAAD,EAAOyV,0BAAP,CAApB;AACD;AAIM,SAASK,gBAAT,CAA0B9V,IAA1B,EAAiD;AACtD,MAAIA,IAAI,KAAR,EAA6B,OAAOA,IAAI,OAAX;AAC7B,MAAIA,IAAI,KAAR,EAA4B,OAAO,IAAP;AAC5B,MAAIA,IAAI,KAAR,EAAiC,OAAO,KAAP;AACjC,MAAIA,IAAI,MAAR,EAAkC,OAAO,IAAP;AAClC,MAAIA,IAAI,KAAR,EAAiC,OAAOA,IAAI,OAAX;AACjC,MAAIA,IAAI,OAAR,EAAkC,OAAO,IAAP;A;AAClC,MAAIA,IAAI,IAAI,MAAZ,EAAoB;AAClB,WAAOA,IAAI,IAAI,IAAR,IAAgBwV,kBAAkB,CAAC1tB,IAAnB,CAAwBiI,MAAM,CAAC8lB,YAAP,CAAoB7V,IAApB,CAAxB,CAAvB;AACD;A;AACD,SACE2V,aAAa,CAAC3V,IAAD,EAAOyV,0BAAP,CAAb,IACAE,aAAa,CAAC3V,IAAD,EAAO0V,qBAAP,CAFf;AAID;A;ACjFD,MAAMK,aAAa,GAAG;AACpBrc,EAAAA,OAAO,EAAE,CACP,OADO,EAEP,MAFO,EAGP,OAHO,EAIP,UAJO,EAKP,UALO,EAMP,SANO,EAOP,IAPO,EAQP,MARO,EASP,SATO,EAUP,KAVO,EAWP,UAXO,EAYP,IAZO,EAaP,QAbO,EAcP,QAdO,EAeP,OAfO,EAgBP,KAhBO,EAiBP,KAjBO,EAkBP,OAlBO,EAmBP,OAnBO,EAoBP,MApBO,EAqBP,KArBO,EAsBP,MAtBO,EAuBP,OAvBO,EAwBP,OAxBO,EAyBP,SAzBO,EA0BP,QA1BO,EA2BP,QA3BO,EA4BP,MA5BO,EA6BP,MA7BO,EA8BP,OA9BO,EA+BP,IA/BO,EAgCP,YAhCO,EAiCP,QAjCO,EAkCP,MAlCO,EAmCP,QAnCO,CADW;AAsCpBsc,EAAAA,MAAM,EAAE,CACN,YADM,EAEN,WAFM,EAGN,KAHM,EAIN,SAJM,EAKN,SALM,EAMN,WANM,EAON,QAPM,EAQN,QARM,EASN,OATM,CAtCY;AAiDpBC,EAAAA,UAAU,EAAE,CAAC,MAAD,EAAS,WAAT;AAjDQ,CAAtB;AAmDA,MAAMnc,QAAQ,GAAG,IAAIoc,GAAJ,CAAQH,aAAa,CAACrc,OAAtB,CAAjB;AACA,MAAMyc,sBAAsB,GAAG,IAAID,GAAJ,CAAQH,aAAa,CAACC,MAAtB,CAA/B;AACA,MAAMI,0BAA0B,GAAG,IAAIF,GAAJ,CAAQH,aAAa,CAACE,UAAtB,CAAnC;AAKO,SAASI,cAAT,CAAwBC,IAAxB,EAAsCC,QAAtC,EAAkE;AACvE,SAAQA,QAAQ,IAAID,IAAI,KAAK,OAAtB,IAAkCA,IAAI,KAAK,MAAlD;AACD;AAOM,SAASE,oBAAT,CAA8BF,IAA9B,EAA4CC,QAA5C,EAAwE;AAC7E,SAAOF,cAAc,CAACC,IAAD,EAAOC,QAAP,CAAd,IAAkCJ,sBAAsB,CAACjV,GAAvB,CAA2BoV,IAA3B,CAAzC;AACD;AAMM,SAASG,4BAAT,CAAsCH,IAAtC,EAA6D;AAClE,SAAOF,0BAA0B,CAAClV,GAA3B,CAA+BoV,IAA/B,CAAP;AACD;AAOM,SAASI,wBAAT,CACLJ,IADK,EAELC,QAFK,EAGI;AACT,SACEC,oBAAoB,CAACF,IAAD,EAAOC,QAAP,CAApB,IAAwCE,4BAA4B,CAACH,IAAD,CADtE;AAGD;AAEM,SAASK,SAAT,CAAmBL,IAAnB,EAA0C;AAC/C,SAAOxc,QAAQ,CAACoH,GAAT,CAAaoV,IAAb,CAAP;AACD;A;AC3EM,SAASM,eAAT,CAAyBC,OAAzB,EAA0CC,IAA1C,EAAiE;AACtE,SAAOD,OAAO,OAAP,IAAgCC,IAAI,OAA3C;AACD;A;AClBM,MAAMC,WAAW,GAAU,WAA3B;AAAA,MACMC,aAAa,GAAQ,WAD3B;AAAA,MAEMC,cAAc,GAAO,WAF3B;AAAA,MAGMC,WAAW,GAAU,WAH3B;AAAA,MAIMC,kBAAkB,GAAG,WAJ3B;AAAA,MAKMC,WAAW,GAAU,WAL3B;AAAA,MAMMC,kBAAkB,GAAG,WAN3B;AAAA,MAOMC,WAAW,GAAU,WAP3B;AAAA,MAQMC,kBAAkB,GAAG,WAR3B;AAAA,MASMC,eAAe,GAAM,WAT3B;AAAA,MAUMC,SAAS,GAAGT,aAAa,GAAGC,cAAhB,GAAiCO,eAVnD;MA0BME,eAAe,GAAc,cAAnC;AAAA,MACMC,cAAc,GAAe,cADnC;AAAA,MAGMC,cAAc,GAAe,cAHnC;AAAA,MAIMC,kBAAkB,GAAW,cAJnC;AAAA,MAKMC,mBAAmB,GAAU,cALnC;AAAA,MASMC,eAAe,GAAc,cATnC;AAAA,MAUMC,gBAAgB,GAAa,cAVnC;AAAA,MAWMC,kBAAkB,GAAW,cAXnC;AAAA,MAYMC,wBAAwB,GAAK,cAZnC;AAAA,MAaMC,yBAAyB,GAAI,cAbnC;AAAA,MAcMC,0BAA0B,GAAG;AAKnC,MAAMC,UAAU,GAAWX,eAAe,GAAGC,cAAlB,GAAmCE,kBAAnC,GAAyDG,gBAApF;AAAA,MACMM,YAAY,GAASZ,eAAe,GAAG,CAAlB,GAAmCG,kBAAnC,GAAyD,CADpF;AAAA,MAEMU,QAAQ,GAAab,eAAe,GAAG,CAAlB,GAAmCE,cAAnC,GAAyD,CAFpF;AAAA,MAGMY,aAAa,GAAQd,eAAe,GAAG,CAAlB,GAAmCI,mBAAnC,GAAyD,CAHpF;AAAA,MAIMW,iBAAiB,GAAI,IAAkBd,cAAlB,GAAmC,CAAnC,GAAyDK,gBAJpF;AAAA,MAKMU,YAAY,GAAS,IAAkBf,cAAlB,GAAmC,CAAnC,GAAyD,CALpF;AAAA,MAMMgB,YAAY,GAASjB,eAAe,GAAGC,cAAlB,GAAmCE,kBAAnC,GAAyDI,kBANpF;AAAA,MAOMW,eAAe,GAAM,IAAkB,CAAlB,GAAmC,CAAnC,GAAkDT,yBAP7E;AAAA,MAUMU,SAAS,GAAY,IAAkB,CAAlB,GAAmC,CAAnC,GAAyDd,eAVpF;AAAA,MAWMe,YAAY,GAASpB,eAAe,GAAG,CAAlB,GAAmC,CAAnC,GAAyDK,eAXpF;AAAA,MAaMgB,kBAAkB,GAAGJ,YAAY,GAAGT,wBAb1C;AAAA,MAcMc,iBAAiB,GAAI,IAAkB,CAAlB,GAAmC,CAAnC,GAAkDb,yBAd7E;AAAA,MAgBMc,oBAAoB,GAAGb,0BAhB7B;AAgCA,MAAMc,yBAAyB,GAAG,KAAlC;AAAA,MACMC,yBAAyB,GAAG,KADlC;AAAA,MAEMC,yBAAyB,GAAG,KAFlC;AAAA,MAGMC,2BAA2B,GAAGF,yBAAyB,GAAGC,yBAHhE;AAMA,MAAME,2BAA2B,GAAKH,yBAAyB,GAAGD,yBAAlE;AAAA,MACMK,2BAA2B,GAAKH,yBAAyB,GAAGF,yBADlE;AAAA,MAEMM,6BAA6B,GAAGL,yBAFtC;AAAA,MAGMM,6BAA6B,GAAGL,yBAHtC;AAAA,MAIMM,mBAAmB,GAAa,CAJtC;A;ACjEA,MAAMC,KAAN,CAAY;AASjBpgB,EAAAA,WAAW,CAAC8U,KAAD,EAAoB;AAAA,SAR/BA,KAQ+B;AAAA,SAN/BuL,GAM+B,GANf,EAMe;AAAA,SAJ/BC,OAI+B,GAJX,EAIW;AAAA,SAF/BC,SAE+B,GAFT,EAES;AAC7B,SAAKzL,KAAL,GAAaA,KAAb;AACD;A;AAXgB;AAgBJ,MAAM0L,YAAN,CAA0C;AAOvDxgB,EAAAA,WAAW,CAACgU,KAAD,EAAuBgJ,QAAvB,EAA0C;AAAA,SANrDyD,UAMqD,GANzB,EAMyB;AAAA,SAHrDC,gBAGqD,GAHb,IAAIlgB,GAAJ,EAGa;AAAA,SAFrDmgB,qBAEqD,GAFR,IAAIngB,GAAJ,EAEQ;AACnD,SAAKwT,KAAL,GAAaA,KAAb;AACA,SAAKgJ,QAAL,GAAgBA,QAAhB;AACD;A;AAEa,MAAV4D,UAAU,GAAG;AACf,WAAO,CAAC,KAAKC,eAAL,GAAuB/L,KAAvB,GAA+B4I,cAAhC,IAAkD,CAAzD;AACD;A;AACa,MAAVoD,UAAU,GAAG;AACf,WAAO,CAAC,KAAKC,gBAAL,GAAwBjM,KAAxB,GAAgC+I,WAAjC,IAAgD,CAAvD;AACD;A;AACmB,MAAhB7F,gBAAgB,GAAG;AACrB,WAAO,CAAC,KAAK+I,gBAAL,GAAwBjM,KAAxB,GAAgCgJ,kBAAjC,IAAuD,CAA9D;AACD;A;AACU,MAAPkD,OAAO,GAAG;AACZ,WAAO,CAAC,KAAKD,gBAAL,GAAwBjM,KAAxB,GAAgCiJ,WAAjC,IAAgD,CAAvD;AACD;A;AACgB,MAAbkD,aAAa,GAAG;AAClB,WAAO,CAAC,KAAKF,gBAAL,GAAwBjM,KAAxB,GAAgCkJ,kBAAjC,IAAuD,CAA9D;AACD;A;AACqB,MAAlBkD,kBAAkB,GAAG;AACvB,WAAO,CAAC,KAAKH,gBAAL,GAAwBjM,KAAxB,GAAgC4I,cAAjC,IAAmD,CAA1D;AACD;A;AACsB,MAAnByD,mBAAmB,GAAG;AACxB,WAAO,KAAKC,0BAAL,CAAgC,KAAKC,YAAL,EAAhC,CAAP;AACD;A;AAEDC,EAAAA,WAAW,CAACxM,KAAD,EAA2B;AACpC,WAAO,IAAIsL,KAAJ,CAAUtL,KAAV,CAAP;AACD;A;AAIDyM,EAAAA,KAAK,CAACzM,KAAD,EAAoB;AACvB,SAAK2L,UAAL,CAAgBlzB,IAAhB,CAAqB,KAAK+zB,WAAL,CAAiBxM,KAAjB,CAArB;AACD;A;AAED0M,EAAAA,IAAI,GAAG;AACL,SAAKf,UAAL,CAAgBrX,GAAhB;AACD;A;AAKDgY,EAAAA,0BAA0B,CAACK,KAAD,EAAyB;AACjD,WAAO,CAAC,EACNA,KAAK,CAAC3M,KAAN,GAAc4I,cAAd,IACC,CAAC,KAAKV,QAAN,IAAkByE,KAAK,CAAC3M,KAAN,GAAc2I,aAF3B,CAAR;AAID;A;AAEDiE,EAAAA,WAAW,CAACzqB,IAAD,EAAe0qB,WAAf,EAA0ClO,GAA1C,EAAuD;AAChE,QAAIgO,KAAK,GAAG,KAAKJ,YAAL,EAAZ;A;AACA,QAAIM,WAAW,GAAGrD,kBAAd,IAAoCqD,WAAW,GAAGpD,mBAAtD,EAA2E;AACzE,WAAKqD,yBAAL,CAA+BH,KAA/B,EAAsCxqB,IAAtC,EAA4C0qB,WAA5C,EAAyDlO,GAAzD;A;AAEA,UAAIkO,WAAW,GAAGpD,mBAAlB,EAAuC;AACrCkD,QAAAA,KAAK,CAAClB,SAAN,CAAgBhzB,IAAhB,CAAqB0J,IAArB;AACD,OAFD,MAEO;AACLwqB,QAAAA,KAAK,CAACnB,OAAN,CAAc/yB,IAAd,CAAmB0J,IAAnB;AACD;A;AAED,UAAI0qB,WAAW,GAAGrD,kBAAlB,EAAsC;AACpC,aAAKuD,kBAAL,CAAwBJ,KAAxB,EAA+BxqB,IAA/B;AACD;AACF,KAZD,MAYO,IAAI0qB,WAAW,GAAGtD,cAAlB,EAAkC;AACvC,WAAK,IAAIxuB,CAAC,GAAG,KAAK4wB,UAAL,CAAgB3wB,MAAhB,GAAyB,CAAtC,EAAyCD,CAAC,IAAI,CAA9C,EAAiD,EAAEA,CAAnD,EAAsD;AACpD4xB,QAAAA,KAAK,GAAG,KAAKhB,UAAL,CAAgB5wB,CAAhB,CAAR;AACA,aAAK+xB,yBAAL,CAA+BH,KAA/B,EAAsCxqB,IAAtC,EAA4C0qB,WAA5C,EAAyDlO,GAAzD;AACAgO,QAAAA,KAAK,CAACpB,GAAN,CAAU9yB,IAAV,CAAe0J,IAAf;AACA,aAAK4qB,kBAAL,CAAwBJ,KAAxB,EAA+BxqB,IAA/B;AAEA,YAAIwqB,KAAK,CAAC3M,KAAN,GAAcoJ,SAAlB,EAA6B;AAC9B;AACF;A;AACD,QAAI,KAAKlB,QAAL,IAAiByE,KAAK,CAAC3M,KAAN,GAAc2I,aAAnC,EAAkD;AAChD,WAAKiD,gBAAL,CAAsBoB,MAAtB,CAA6B7qB,IAA7B;AACD;AACF;A;AAED4qB,EAAAA,kBAAkB,CAACJ,KAAD,EAAgBxqB,IAAhB,EAA8B;AAC9C,QAAI,KAAK+lB,QAAL,IAAiByE,KAAK,CAAC3M,KAAN,GAAc2I,aAAnC,EAAkD;AAChD,WAAKiD,gBAAL,CAAsBoB,MAAtB,CAA6B7qB,IAA7B;AACD;AACF;A;AAED2qB,EAAAA,yBAAyB,CACvBH,KADuB,EAEvBxqB,IAFuB,EAGvB0qB,WAHuB,EAIvBlO,GAJuB,EAKvB;AACA,QAAI,KAAKsO,mBAAL,CAAyBN,KAAzB,EAAgCxqB,IAAhC,EAAsC0qB,WAAtC,CAAJ,EAAwD;AACtD,WAAK3N,KAAL,CAAWP,GAAX,EAAgB4F,aAAM,CAACxG,gBAAvB,EAAyC5b,IAAzC;AACD;AACF;A;AAED8qB,EAAAA,mBAAmB,CACjBN,KADiB,EAEjBxqB,IAFiB,EAGjB0qB,WAHiB,EAIR;AACT,QAAI,EAAEA,WAAW,GAAGxD,eAAhB,CAAJ,EAAsC,OAAO,KAAP;A;AAEtC,QAAIwD,WAAW,GAAGrD,kBAAlB,EAAsC;AACpC,aACEmD,KAAK,CAACnB,OAAN,CAAcvyB,OAAd,CAAsBkJ,IAAtB,IAA8B,CAAC,CAA/B,IACAwqB,KAAK,CAAClB,SAAN,CAAgBxyB,OAAhB,CAAwBkJ,IAAxB,IAAgC,CAAC,CADjC,IAEAwqB,KAAK,CAACpB,GAAN,CAAUtyB,OAAV,CAAkBkJ,IAAlB,IAA0B,CAAC,CAH7B;AAKD;A;AAED,QAAI0qB,WAAW,GAAGpD,mBAAlB,EAAuC;AACrC,aACEkD,KAAK,CAACnB,OAAN,CAAcvyB,OAAd,CAAsBkJ,IAAtB,IAA8B,CAAC,CAA/B,IACC,CAAC,KAAKmqB,0BAAL,CAAgCK,KAAhC,CAAD,IACCA,KAAK,CAACpB,GAAN,CAAUtyB,OAAV,CAAkBkJ,IAAlB,IAA0B,CAAC,CAH/B;AAKD;A;AAED,WACGwqB,KAAK,CAACnB,OAAN,CAAcvyB,OAAd,CAAsBkJ,IAAtB,IAA8B,CAAC,CAA/B,IACC,EAAEwqB,KAAK,CAAC3M,KAAN,GAAc8I,kBAAd,IAAoC6D,KAAK,CAACnB,OAAN,CAAc,CAAd,MAAqBrpB,IAA3D,CADF,IAEC,CAAC,KAAKmqB,0BAAL,CAAgCK,KAAhC,CAAD,IACCA,KAAK,CAAClB,SAAN,CAAgBxyB,OAAhB,CAAwBkJ,IAAxB,IAAgC,CAAC,CAJrC;AAMD;A;AAED+qB,EAAAA,gBAAgB,CAACxyB,EAAD,EAAmB;AACjC,QACE,KAAKixB,UAAL,CAAgB,CAAhB,EAAmBH,OAAnB,CAA2BvyB,OAA3B,CAAmCyB,EAAE,CAACyH,IAAtC,MAAgD,CAAC,CAAjD,IACA,KAAKwpB,UAAL,CAAgB,CAAhB,EAAmBJ,GAAnB,CAAuBtyB,OAAvB,CAA+ByB,EAAE,CAACyH,IAAlC,MAA4C,CAAC,CAD7C,IAKA,KAAKwpB,UAAL,CAAgB,CAAhB,EAAmBF,SAAnB,CAA6BxyB,OAA7B,CAAqCyB,EAAE,CAACyH,IAAxC,MAAkD,CAAC,CANrD,EAOE;AACA,WAAKypB,gBAAL,CAAsB9f,GAAtB,CAA0BpR,EAAE,CAACyH,IAA7B,EAAmCzH,EAAE,CAACsG,KAAtC;AACD;AACF;A;AAEDurB,EAAAA,YAAY,GAAW;AACrB,WAAO,KAAKZ,UAAL,CAAgB,KAAKA,UAAL,CAAgB3wB,MAAhB,GAAyB,CAAzC,CAAP;AACD;A;AAGD+wB,EAAAA,eAAe,GAAW;AACxB,SAAK,IAAIhxB,CAAC,GAAG,KAAK4wB,UAAL,CAAgB3wB,MAAhB,GAAyB,CAAtC,GAA2CD,CAAC,EAA5C,EAAgD;AAC9C,YAAM4xB,KAAK,GAAG,KAAKhB,UAAL,CAAgB5wB,CAAhB,CAAd;A;AACA,UAAI4xB,KAAK,CAAC3M,KAAN,GAAcoJ,SAAlB,EAA6B;AAC3B,eAAOuD,KAAP;AACD;AACF;AACF;A;AAIDV,EAAAA,gBAAgB,GAAW;AACzB,SAAK,IAAIlxB,CAAC,GAAG,KAAK4wB,UAAL,CAAgB3wB,MAAhB,GAAyB,CAAtC,GAA2CD,CAAC,EAA5C,EAAgD;AAC9C,YAAM4xB,KAAK,GAAG,KAAKhB,UAAL,CAAgB5wB,CAAhB,CAAd;A;AACA,UACE,CAAC4xB,KAAK,CAAC3M,KAAN,GAAcoJ,SAAd,IAA2BuD,KAAK,CAAC3M,KAAN,GAAciJ,WAA1C,KACA,EAAE0D,KAAK,CAAC3M,KAAN,GAAc6I,WAAhB,CAFF,EAGE;AACA,eAAO8D,KAAP;AACD;AACF;AACF;A;AA9KsD;A;AC3BzD,MAAMQ,SAAN,SAAwB7B,KAAxB,CAA8B;AAAA;AAAA;AAAA,SAE5B8B,gBAF4B,GAEC,EAFD;AAAA;A;AAAA;A;AAKf,MAAMC,gBAAN,SAA+B3B,YAA/B,CAAuD;AACpEc,EAAAA,WAAW,CAACxM,KAAD,EAA+B;AACxC,WAAO,IAAImN,SAAJ,CAAcnN,KAAd,CAAP;AACD;A;AAED4M,EAAAA,WAAW,CAACzqB,IAAD,EAAe0qB,WAAf,EAA0ClO,GAA1C,EAAuD;AAChE,UAAMgO,KAAK,GAAG,KAAKJ,YAAL,EAAd;A;AACA,QAAIM,WAAW,GAAG9C,0BAAlB,EAA8C;AAC5C,WAAK+C,yBAAL,CAA+BH,KAA/B,EAAsCxqB,IAAtC,EAA4C0qB,WAA5C,EAAyDlO,GAAzD;AACA,WAAKoO,kBAAL,CAAwBJ,KAAxB,EAA+BxqB,IAA/B;AACAwqB,MAAAA,KAAK,CAACS,gBAAN,CAAuB30B,IAAvB,CAA4B0J,IAA5B;AACA;AACD;A;AAED,UAAMyqB,WAAN,CAAkB,GAAGpY,SAArB;AACD;A;AAEDyY,EAAAA,mBAAmB,CACjBN,KADiB,EAEjBxqB,IAFiB,EAGjB0qB,WAHiB,EAIR;AACT,QAAI,MAAMI,mBAAN,CAA0B,GAAGzY,SAA7B,CAAJ,EAA6C,OAAO,IAAP;A;AAE7C,QAAIqY,WAAW,GAAG9C,0BAAlB,EAA8C;AAC5C,aACE,CAAC4C,KAAK,CAACS,gBAAN,CAAuBE,QAAvB,CAAgCnrB,IAAhC,CAAD,KACCwqB,KAAK,CAACnB,OAAN,CAAc8B,QAAd,CAAuBnrB,IAAvB,KAAgCwqB,KAAK,CAAClB,SAAN,CAAgB6B,QAAhB,CAAyBnrB,IAAzB,CADjC,CADF;AAID;A;AAED,WAAO,KAAP;AACD;A;AAED+qB,EAAAA,gBAAgB,CAACxyB,EAAD,EAAmB;AACjC,QAAI,KAAKixB,UAAL,CAAgB,CAAhB,EAAmByB,gBAAnB,CAAoCn0B,OAApC,CAA4CyB,EAAE,CAACyH,IAA/C,MAAyD,CAAC,CAA9D,EAAiE;AAC/D,YAAM+qB,gBAAN,CAAuBxyB,EAAvB;AACD;AACF;A;AAtCmE;A;ACYtE,MAAM6yB,aAAa,GAAG,IAAI1F,GAAJ,CAAQ,CAC5B,GAD4B,EAE5B,KAF4B,EAG5B,MAH4B,EAI5B,SAJ4B,EAK5B,OAL4B,EAM5B,SAN4B,EAO5B,OAP4B,EAQ5B,WAR4B,EAS5B,OAT4B,EAU5B,MAV4B,EAW5B,QAX4B,EAY5B,QAZ4B,EAa5B,QAb4B,EAc5B,MAd4B,EAe5B,QAf4B,EAgB5B,MAhB4B,CAAR,CAAtB;AAqBA,MAAM2F,UAAU,GAAGzY,kBAAkB,CACnC;AACE0Y,EAAAA,yBAAyB,EACvB,gFAFJ;AAGEC,EAAAA,0BAA0B,EACxB,wKAJJ;AAKEC,EAAAA,kBAAkB,EAAE,oCALtB;AAMEC,EAAAA,mBAAmB,EACjB,yDAPJ;AAQEC,EAAAA,4BAA4B,EAC1B,qEATJ;AAUEC,EAAAA,6BAA6B,EAC3B,+CAXJ;AAYEC,EAAAA,+BAA+B,EAC7B,qGAbJ;AAcEC,EAAAA,uBAAuB,EACrB,mGAfJ;AAgBEC,EAAAA,4BAA4B,EAC1B,8KAjBJ;AAkBEC,EAAAA,uBAAuB,EACrB,kGAnBJ;AAoBEC,EAAAA,sCAAsC,EACpC,sGArBJ;AAsBEC,EAAAA,uCAAuC,EACrC,+EAvBJ;AAwBEC,EAAAA,sCAAsC,EACpC,oEAzBJ;AA0BEC,EAAAA,uCAAuC,EACrC,gHA3BJ;AA4BEC,EAAAA,qBAAqB,EACnB,0HA7BJ;AA8BEC,EAAAA,8BAA8B,EAC5B,yEA/BJ;AAgCEC,EAAAA,yCAAyC,EACvC,6GAjCJ;AAkCEC,EAAAA,yBAAyB,EAAE,0CAlC7B;AAmCEC,EAAAA,mCAAmC,EACjC,wKApCJ;AAqCEC,EAAAA,kBAAkB,EAChB,6EAtCJ;AAuCEC,EAAAA,sBAAsB,EACpB,0EAxCJ;AAyCEC,EAAAA,eAAe,EAAE,+CAzCnB;AA0CEC,EAAAA,mCAAmC,EACjC,yFA3CJ;AA4CEC,EAAAA,uBAAuB,EACrB,yGA7CJ;AA8CEC,EAAAA,mBAAmB,EACjB,kEA/CJ;AAgDEC,EAAAA,iBAAiB,EACf,yDAjDJ;AAkDEC,EAAAA,sBAAsB,EACpB,gFAnDJ;AAoDEC,EAAAA,yBAAyB,EAAE,0CApD7B;AAqDEC,EAAAA,cAAc,EAAE,yCArDlB;AAsDEC,EAAAA,2BAA2B,EACzB,yDAvDJ;AAwDEC,EAAAA,4BAA4B,EAC1B,mGAzDJ;AA0DEC,EAAAA,yBAAyB,EAAE,0CA1D7B;AA2DEC,EAAAA,oBAAoB,EAClB,4DA5DJ;AA6DEC,EAAAA,kBAAkB,EAAE,oDA7DtB;AA8DEC,EAAAA,qBAAqB,EACnB,mHA/DJ;AAgEEC,EAAAA,iBAAiB,EACf,sEAjEJ;AAkEEC,EAAAA,iCAAiC,EAC/B,sEAnEJ;AAoEEC,EAAAA,sBAAsB,EAAE,8BApE1B;AAqEEC,EAAAA,4BAA4B,EAC1B,wDAtEJ;AAuEEC,EAAAA,kCAAkC,EAChC,uDAxEJ;AAyEEC,EAAAA,oBAAoB,EAClB,kEA1EJ;AA2EEC,EAAAA,4BAA4B,EAC1B,kDA5EJ;AA6EEC,EAAAA,iCAAiC,EAC/B,mEA9EJ;AA+EEC,EAAAA,+CAA+C,EAC7C,mHAhFJ;AAiFEC,EAAAA,4BAA4B,EAC1B,yDAlFJ;AAmFEC,EAAAA,mCAAmC,EACjC,mEApFJ;AAqFEC,EAAAA,uBAAuB,EAAE;AArF3B,CADmC,EAwFxB5b,UAAU,CAACC,WAxFa,CAArC;A;AA4FA,SAAS4b,cAAT,CAAwBC,WAAxB,EAAsD;AACpD,SACEA,WAAW,CAAC12B,IAAZ,KAAqB,6BAArB,IACC02B,WAAW,CAAC12B,IAAZ,KAAqB,0BAArB,KACE,CAAC02B,WAAW,CAACC,WAAb,IACED,WAAW,CAACC,WAAZ,CAAwB32B,IAAxB,KAAiC,WAAjC,IACC02B,WAAW,CAACC,WAAZ,CAAwB32B,IAAxB,KAAiC,sBAHtC,CAFH;AAOD;A;AAED,SAAS42B,iBAAT,CAA2Bjd,IAA3B,EAAkD;AAChD,SAAOA,IAAI,CAACkd,UAAL,KAAoB,MAApB,IAA8Bld,IAAI,CAACkd,UAAL,KAAoB,QAAzD;AACD;A;AAED,SAASC,oBAAT,CAA8Bvd,KAA9B,EAA+E;AAC7E,SACE,CAACA,KAAK,CAACvZ,IAAN,KAAessB,OAAE,CAAClkB,IAAlB,IAA0B,CAAC,CAACmR,KAAK,CAACvZ,IAAN,CAAWsR,OAAxC,KAAoDiI,KAAK,CAACpT,KAAN,KAAgB,MADtE;AAGD;A;AAED,MAAM4wB,iBAAiB,GAAG;AACxBC,EAAAA,KAAK,EAAE,oBADiB;AAExBC,EAAAA,GAAG,EAAE,oBAFmB;AAGxBj3B,EAAAA,IAAI,EAAE,aAHkB;AAIxBk3B,EAAAA,SAAS,EAAE;AAJa,CAA1B;A;AAQA,SAASC,SAAT,CACE5wB,IADF,EAEE7G,IAFF,EAGc;AACZ,QAAM03B,KAAK,GAAG,EAAd;AACA,QAAMC,KAAK,GAAG,EAAd;A;AACA,OAAK,IAAIr2B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuF,IAAI,CAACtF,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpC,KAACtB,IAAI,CAAC6G,IAAI,CAACvF,CAAD,CAAL,EAAUA,CAAV,EAAauF,IAAb,CAAJ,GAAyB6wB,KAAzB,GAAiCC,KAAlC,EAAyC34B,IAAzC,CAA8C6H,IAAI,CAACvF,CAAD,CAAlD;AACD;A;AACD,SAAO,CAACo2B,KAAD,EAAQC,KAAR,CAAP;AACD;A;AAED,MAAMC,iBAAiB,GAAG,wBAA1B;AAgBA,YAAgBxR,UAAD,IACb,cAAcA,UAAd,CAAyB;AAAA;AAAA;AAAA,SAIvByR,UAJuB,GAIuB34B,SAJvB;AAAA;A;AAMvB44B,EAAAA,eAAe,GAA4B;AACzC,WAAOlE,gBAAP;AACD;A;AAEDmE,EAAAA,gBAAgB,GAAY;AAC1B,WAAO,KAAK1e,eAAL,CAAqB,MAArB,EAA6B,KAA7B,KAAuC,KAAKwe,UAAL,KAAoB,MAAlE;AACD;A;AAEDG,EAAAA,gBAAgB,GAAY;AAC1B,WAAO,CAAC,CAAC,KAAK3e,eAAL,CAAqB,MAArB,EAA6B,OAA7B,CAAT;AACD;A;AAED4e,EAAAA,WAAW,CAAC33B,IAAD,EAAkBwG,GAAlB,EAAkC;AAC3C,QACExG,IAAI,KAAKssB,OAAE,CAAC/hB,MAAZ,IACAvK,IAAI,KAAKssB,OAAE,CAACjZ,IADZ,IAEArT,IAAI,KAAKssB,OAAE,CAACpY,oBAHd,EAIE;AACA,UAAI,KAAKqjB,UAAL,KAAoB34B,SAAxB,EAAmC;AACjC,aAAK24B,UAAL,GAAkB,IAAlB;AACD;AACF;A;AACD,WAAO,MAAMI,WAAN,CAAkB33B,IAAlB,EAAwBwG,GAAxB,CAAP;AACD;A;AAED4S,EAAAA,UAAU,CAACC,OAAD,EAA2B;AACnC,QAAI,KAAKke,UAAL,KAAoB34B,SAAxB,EAAmC;AAEjC,YAAMg5B,OAAO,GAAGN,iBAAiB,CAAC7sB,IAAlB,CAAuB4O,OAAO,CAAClT,KAA/B,CAAhB;A;AACA,UAAI,CAACyxB,OAAL,EAAc,CAAd,MAEO,IAAIA,OAAO,CAAC,CAAD,CAAP,KAAe,MAAnB,EAA2B;AAChC,aAAKL,UAAL,GAAkB,MAAlB;AACD,OAFM,MAEA,IAAIK,OAAO,CAAC,CAAD,CAAP,KAAe,QAAnB,EAA6B;AAClC,aAAKL,UAAL,GAAkB,QAAlB;AACD,OAFM,MAEA;AACL,cAAM,IAAIM,KAAJ,CAAU,wBAAV,CAAN;AACD;AACF;A;AACD,WAAO,MAAMze,UAAN,CAAiBC,OAAjB,CAAP;AACD;A;AAEDye,EAAAA,wBAAwB,CAACC,GAAD,EAA8B;AACpD,UAAMC,SAAS,GAAG,KAAKze,KAAL,CAAW0e,MAA7B;AACA,SAAK1e,KAAL,CAAW0e,MAAX,GAAoB,IAApB;AACA,SAAKC,MAAL,CAAYH,GAAG,IAAIzL,OAAE,CAAChZ,KAAtB;AAEA,UAAMtT,IAAI,GAAG,KAAKm4B,aAAL,EAAb;AACA,SAAK5e,KAAL,CAAW0e,MAAX,GAAoBD,SAApB;AACA,WAAOh4B,IAAP;AACD;A;AAEDo4B,EAAAA,kBAAkB,GAAe;AAC/B,UAAMze,IAAI,GAAG,KAAK2P,SAAL,EAAb;AACA,UAAM+O,SAAS,GAAG,KAAK9e,KAAL,CAAWtS,KAA7B;AACA,SAAKynB,IAAL;AACA,SAAK4J,gBAAL,CAAsB,QAAtB;A;AAEA,QAAI,KAAK/e,KAAL,CAAWuL,YAAX,GAA0BuT,SAAS,GAAG,CAA1C,EAA6C;AAC3C,WAAKlT,KAAL,CAAWkT,SAAX,EAAsB5E,UAAU,CAACwC,kCAAjC;AACD;A;AACD,QAAI,KAAKsC,GAAL,CAASjM,OAAE,CAACpZ,MAAZ,CAAJ,EAAyB;AACvByG,MAAAA,IAAI,CAACxT,KAAL,GAAa,KAAKqyB,eAAL,EAAb;AACA,WAAKN,MAAL,CAAY5L,OAAE,CAACnZ,MAAf;AACA,aAAO,KAAKsW,UAAL,CAAgB9P,IAAhB,EAAsB,mBAAtB,CAAP;AACD,KAJD,MAIO;AACL,aAAO,KAAK8P,UAAL,CAAgB9P,IAAhB,EAAsB,mBAAtB,CAAP;AACD;AACF;A;AAED8e,EAAAA,oCAAoC,GAAoC;AACtE,UAAMT,SAAS,GAAG,KAAKze,KAAL,CAAW0e,MAA7B;AACA,SAAK1e,KAAL,CAAW0e,MAAX,GAAoB,IAApB;AACA,SAAKC,MAAL,CAAY5L,OAAE,CAAChZ,KAAf;AACA,QAAItT,IAAI,GAAG,IAAX;AACA,QAAI04B,SAAS,GAAG,IAAhB;A;AACA,QAAI,KAAKluB,KAAL,CAAW8hB,OAAE,CAACpX,MAAd,CAAJ,EAA2B;AACzB,WAAKqE,KAAL,CAAW0e,MAAX,GAAoBD,SAApB;AACAU,MAAAA,SAAS,GAAG,KAAKN,kBAAL,EAAZ;AACD,KAHD,MAGO;AACLp4B,MAAAA,IAAI,GAAG,KAAKm4B,aAAL,EAAP;AACA,WAAK5e,KAAL,CAAW0e,MAAX,GAAoBD,SAApB;A;AACA,UAAI,KAAKxtB,KAAL,CAAW8hB,OAAE,CAACpX,MAAd,CAAJ,EAA2B;AACzBwjB,QAAAA,SAAS,GAAG,KAAKN,kBAAL,EAAZ;AACD;AACF;A;AACD,WAAO,CAACp4B,IAAD,EAAO04B,SAAP,CAAP;AACD;A;AAEDC,EAAAA,qBAAqB,CAAChf,IAAD,EAA+C;AAClE,SAAK+U,IAAL;AACA,SAAKkK,qBAAL,CAA2Bjf,IAA3B,EAA6C,IAA7C;AACA,WAAO,KAAK8P,UAAL,CAAgB9P,IAAhB,EAAsB,cAAtB,CAAP;AACD;A;AAEDkf,EAAAA,wBAAwB,CACtBlf,IADsB,EAEC;AACvB,SAAK+U,IAAL;AAEA,UAAM/tB,EAAE,GAAIgZ,IAAI,CAAChZ,EAAL,GAAU,KAAKm4B,eAAL,EAAtB;AAEA,UAAMC,QAAQ,GAAG,KAAKzP,SAAL,EAAjB;AACA,UAAM0P,aAAa,GAAG,KAAK1P,SAAL,EAAtB;A;AAEA,QAAI,KAAK2P,YAAL,CAAkB,GAAlB,CAAJ,EAA4B;AAC1BF,MAAAA,QAAQ,CAACpQ,cAAT,GAA0B,KAAKuQ,iCAAL,EAA1B;AACD,KAFD,MAEO;AACLH,MAAAA,QAAQ,CAACpQ,cAAT,GAA0B,IAA1B;AACD;A;AAED,SAAKuP,MAAL,CAAY5L,OAAE,CAACpZ,MAAf;AACA,UAAMzJ,GAAG,GAAG,KAAK0vB,2BAAL,EAAZ;AACAJ,IAAAA,QAAQ,CAAC3T,MAAT,GAAkB3b,GAAG,CAAC2b,MAAtB;AACA2T,IAAAA,QAAQ,CAACK,IAAT,GAAgB3vB,GAAG,CAAC2vB,IAApB;AACAL,IAAAA,QAAQ,CAACM,IAAT,GAAgB5vB,GAAG,CAACkN,KAApB;AACA,SAAKuhB,MAAL,CAAY5L,OAAE,CAACnZ,MAAf;AAEA,KAEE4lB,QAAQ,CAACO,UAFX,EAIE3f,IAAI,CAAC+e,SAJP,IAKI,KAAKD,oCAAL,EALJ;AAOAO,IAAAA,aAAa,CAACO,cAAd,GAA+B,KAAK9P,UAAL,CAC7BsP,QAD6B,EAE7B,wBAF6B,CAA/B;AAKAp4B,IAAAA,EAAE,CAAC44B,cAAH,GAAoB,KAAK9P,UAAL,CAAgBuP,aAAhB,EAA+B,gBAA/B,CAApB;AAEA,SAAKQ,gBAAL,CAAsB74B,EAAtB;AACA,SAAK84B,SAAL;AAEA,SAAK7G,KAAL,CAAWC,WAAX,CAAuBlZ,IAAI,CAAChZ,EAAL,CAAQyH,IAA/B,EAAqCyoB,oBAArC,EAA2DlX,IAAI,CAAChZ,EAAL,CAAQsG,KAAnE;AAEA,WAAO,KAAKwiB,UAAL,CAAgB9P,IAAhB,EAAsB,iBAAtB,CAAP;AACD;A;AAED+f,EAAAA,gBAAgB,CACd/f,IADc,EAEdggB,YAFc,EAGC;AACf,QAAI,KAAKnvB,KAAL,CAAW8hB,OAAE,CAACzV,MAAd,CAAJ,EAA2B;AACzB,aAAO,KAAK8hB,qBAAL,CAA2Bhf,IAA3B,CAAP;AACD,KAFD,MAEO,IAAI,KAAKnP,KAAL,CAAW8hB,OAAE,CAACtW,SAAd,CAAJ,EAA8B;AACnC,aAAO,KAAK6iB,wBAAL,CAA8Blf,IAA9B,CAAP;AACD,KAFM,MAEA,IAAI,KAAKnP,KAAL,CAAW8hB,OAAE,CAAChW,IAAd,CAAJ,EAAyB;AAC9B,aAAO,KAAKsjB,wBAAL,CAA8BjgB,IAA9B,CAAP;AACD,KAFM,MAEA,IAAI,KAAKkgB,aAAL,CAAmB,QAAnB,CAAJ,EAAkC;AACvC,UAAI,KAAKrvB,KAAL,CAAW8hB,OAAE,CAAC9Y,GAAd,CAAJ,EAAwB;AACtB,eAAO,KAAKsmB,6BAAL,CAAmCngB,IAAnC,CAAP;AACD,OAFD,MAEO;AACL,YAAIggB,YAAJ,EAAkB;AAChB,eAAKxU,KAAL,CAAW,KAAK5L,KAAL,CAAWuL,YAAtB,EAAoC2O,UAAU,CAACyB,mBAA/C;AACD;A;AACD,eAAO,KAAK6E,sBAAL,CAA4BpgB,IAA5B,CAAP;AACD;AACF,KATM,MASA,IAAI,KAAKqgB,YAAL,CAAkB,MAAlB,CAAJ,EAA+B;AACpC,aAAO,KAAKC,yBAAL,CAA+BtgB,IAA/B,CAAP;AACD,KAFM,MAEA,IAAI,KAAKqgB,YAAL,CAAkB,QAAlB,CAAJ,EAAiC;AACtC,aAAO,KAAKE,0BAAL,CAAgCvgB,IAAhC,CAAP;AACD,KAFM,MAEA,IAAI,KAAKqgB,YAAL,CAAkB,WAAlB,CAAJ,EAAoC;AACzC,aAAO,KAAKG,yBAAL,CAA+BxgB,IAA/B,CAAP;AACD,KAFM,MAEA,IAAI,KAAKnP,KAAL,CAAW8hB,OAAE,CAACvV,OAAd,CAAJ,EAA4B;AACjC,aAAO,KAAKqjB,iCAAL,CAAuCzgB,IAAvC,EAA6CggB,YAA7C,CAAP;AACD,KAFM,MAEA;AACL,YAAM,KAAKU,UAAL,EAAN;AACD;AACF;A;AAEDT,EAAAA,wBAAwB,CACtBjgB,IADsB,EAEC;AACvB,SAAK+U,IAAL;AACA/U,IAAAA,IAAI,CAAChZ,EAAL,GAAU,KAAK25B,kCAAL,CACmB,IADnB,CAAV;AAGA,SAAK1H,KAAL,CAAWC,WAAX,CAAuBlZ,IAAI,CAAChZ,EAAL,CAAQyH,IAA/B,EAAqC+nB,QAArC,EAA+CxW,IAAI,CAAChZ,EAAL,CAAQsG,KAAvD;AACA,SAAKwyB,SAAL;AACA,WAAO,KAAKhQ,UAAL,CAAgB9P,IAAhB,EAAsB,iBAAtB,CAAP;AACD;A;AAEDogB,EAAAA,sBAAsB,CAACpgB,IAAD,EAAiD;AACrE,SAAKiZ,KAAL,CAAWF,KAAX,CAAiB/D,WAAjB;A;AAEA,QAAI,KAAKnkB,KAAL,CAAW8hB,OAAE,CAAC/hB,MAAd,CAAJ,EAA2B;AACzBoP,MAAAA,IAAI,CAAChZ,EAAL,GAAU,KAAK45B,aAAL,EAAV;AACD,KAFD,MAEO;AACL5gB,MAAAA,IAAI,CAAChZ,EAAL,GAAU,KAAKm4B,eAAL,EAAV;AACD;A;AAED,UAAM0B,QAAQ,GAAI7gB,IAAI,CAACzX,IAAL,GAAY,KAAKonB,SAAL,EAA9B;AACA,UAAMpnB,IAAI,GAAIs4B,QAAQ,CAACt4B,IAAT,GAAgB,EAA9B;AACA,SAAKg2B,MAAL,CAAY5L,OAAE,CAACzZ,MAAf;A;AACA,WAAO,CAAC,KAAKrI,KAAL,CAAW8hB,OAAE,CAACtZ,MAAd,CAAR,EAA+B;AAC7B,UAAIwnB,QAAQ,GAAG,KAAKlR,SAAL,EAAf;A;AAEA,UAAI,KAAK9e,KAAL,CAAW8hB,OAAE,CAACtV,OAAd,CAAJ,EAA4B;AAC1B,aAAK0X,IAAL;A;AACA,YAAI,CAAC,KAAKsL,YAAL,CAAkB,MAAlB,CAAD,IAA8B,CAAC,KAAKxvB,KAAL,CAAW8hB,OAAE,CAAChV,OAAd,CAAnC,EAA2D;AACzD,eAAK6N,KAAL,CACE,KAAK5L,KAAL,CAAWuL,YADb,EAEE2O,UAAU,CAACuB,mCAFb;AAID;A;AACD,aAAKyF,WAAL,CAAiBD,QAAjB;AACD,OATD,MASO;AACL,aAAKlC,gBAAL,CACE,SADF,EAEE7E,UAAU,CAAC8C,mCAFb;AAKAiE,QAAAA,QAAQ,GAAG,KAAKd,gBAAL,CAAsBc,QAAtB,EAAgC,IAAhC,CAAX;AACD;A;AAEDt4B,MAAAA,IAAI,CAACxD,IAAL,CAAU87B,QAAV;AACD;A;AAED,SAAK5H,KAAL,CAAWD,IAAX;AAEA,SAAKuF,MAAL,CAAY5L,OAAE,CAACtZ,MAAf;AAEA,SAAKyW,UAAL,CAAgB+Q,QAAhB,EAA0B,gBAA1B;AAEA,QAAIjR,IAAI,GAAG,IAAX;AACA,QAAImR,eAAe,GAAG,KAAtB;AACAx4B,IAAAA,IAAI,CAAC3B,OAAL,CAAam2B,WAAW,IAAI;AAC1B,UAAID,cAAc,CAACC,WAAD,CAAlB,EAAiC;AAC/B,YAAInN,IAAI,KAAK,UAAb,EAAyB;AACvB,eAAKpE,KAAL,CACEuR,WAAW,CAACzvB,KADd,EAEEwsB,UAAU,CAACE,0BAFb;AAID;A;AACDpK,QAAAA,IAAI,GAAG,IAAP;AACD,OARD,MAQO,IAAImN,WAAW,CAAC12B,IAAZ,KAAqB,sBAAzB,EAAiD;AACtD,YAAI06B,eAAJ,EAAqB;AACnB,eAAKvV,KAAL,CACEuR,WAAW,CAACzvB,KADd,EAEEwsB,UAAU,CAACM,6BAFb;AAID;A;AACD,YAAIxK,IAAI,KAAK,IAAb,EAAmB;AACjB,eAAKpE,KAAL,CACEuR,WAAW,CAACzvB,KADd,EAEEwsB,UAAU,CAACE,0BAFb;AAID;A;AACDpK,QAAAA,IAAI,GAAG,UAAP;AACAmR,QAAAA,eAAe,GAAG,IAAlB;AACD;AACF,KAzBD;AA2BA/gB,IAAAA,IAAI,CAAC4P,IAAL,GAAYA,IAAI,IAAI,UAApB;AACA,WAAO,KAAKE,UAAL,CAAgB9P,IAAhB,EAAsB,eAAtB,CAAP;AACD;A;AAEDygB,EAAAA,iCAAiC,CAC/BzgB,IAD+B,EAE/BggB,YAF+B,EAGC;AAChC,SAAKzB,MAAL,CAAY5L,OAAE,CAACvV,OAAf;A;AAEA,QAAI,KAAKwhB,GAAL,CAASjM,OAAE,CAAC3W,QAAZ,CAAJ,EAA2B;AACzB,UAAI,KAAKnL,KAAL,CAAW8hB,OAAE,CAACtW,SAAd,KAA4B,KAAKxL,KAAL,CAAW8hB,OAAE,CAACzV,MAAd,CAAhC,EAAuD;AAGrD8C,QAAAA,IAAI,CAACgd,WAAL,GAAmB,KAAK+C,gBAAL,CAAsB,KAAKpQ,SAAL,EAAtB,CAAnB;AACD,OAJD,MAIO;AAEL3P,QAAAA,IAAI,CAACgd,WAAL,GAAmB,KAAKwB,aAAL,EAAnB;AACA,aAAKsB,SAAL;AACD;A;AACD9f,MAAAA,IAAI,CAACghB,OAAL,GAAe,IAAf;AAEA,aAAO,KAAKlR,UAAL,CAAgB9P,IAAhB,EAAsB,0BAAtB,CAAP;AACD,KAbD,MAaO;AACL,UACE,KAAKnP,KAAL,CAAW8hB,OAAE,CAAC/V,MAAd,KACA,KAAKqkB,KAAL,EADA,IAEC,CAAC,KAAKZ,YAAL,CAAkB,MAAlB,KAA6B,KAAKA,YAAL,CAAkB,WAAlB,CAA9B,KACC,CAACL,YAJL,EAKE;AACA,cAAMvoB,KAAK,GAAG,KAAKmI,KAAL,CAAWpT,KAAzB;AACA,cAAM00B,UAAU,GAAG9D,iBAAiB,CAAC3lB,KAAD,CAApC;AAEA,cAAM,KAAK+T,KAAL,CACJ,KAAK5L,KAAL,CAAWtS,KADP,EAEJwsB,UAAU,CAAC6C,4BAFP,EAGJllB,KAHI,EAIJypB,UAJI,CAAN;AAMD;A;AAED,UACE,KAAKrwB,KAAL,CAAW8hB,OAAE,CAAChW,IAAd,KACA,KAAK9L,KAAL,CAAW8hB,OAAE,CAACtW,SAAd,CADA,IAEA,KAAKxL,KAAL,CAAW8hB,OAAE,CAACzV,MAAd,CAFA,IAGA,KAAKmjB,YAAL,CAAkB,QAAlB,CAJF,EAKE;AACArgB,UAAAA,IAAI,CAACgd,WAAL,GAAmB,KAAK+C,gBAAL,CAAsB,KAAKpQ,SAAL,EAAtB,CAAnB;AACA3P,UAAAA,IAAI,CAACghB,OAAL,GAAe,KAAf;AAEA,iBAAO,KAAKlR,UAAL,CAAgB9P,IAAhB,EAAsB,0BAAtB,CAAP;AACD,SAVD,MAUO,IACL,KAAKnP,KAAL,CAAW8hB,OAAE,CAACnX,IAAd,KACA,KAAK3K,KAAL,CAAW8hB,OAAE,CAACzZ,MAAd,CADA,IAEA,KAAKmnB,YAAL,CAAkB,WAAlB,CAFA,IAGA,KAAKA,YAAL,CAAkB,MAAlB,CAHA,IAIA,KAAKA,YAAL,CAAkB,QAAlB,CALK,EAML;AACArgB,UAAAA,IAAI,GAAG,KAAKmR,WAAL,CAAiBnR,IAAjB,CAAP;A;AACA,cAAIA,IAAI,CAAC3Z,IAAL,KAAc,wBAAlB,EAA4C;AAG1C2Z,YAAAA,IAAI,CAAC3Z,IAAL,GAAY,mBAAZ;AAEA2Z,YAAAA,IAAI,CAACghB,OAAL,GAAe,KAAf;AACA,mBAAOhhB,IAAI,CAACmhB,UAAZ;AACD;A;AAGDnhB,UAAAA,IAAI,CAAC3Z,IAAL,GAAY,YAAY2Z,IAAI,CAAC3Z,IAA7B;AAEA,iBAAO2Z,IAAP;AACD;AACF;A;AAED,UAAM,KAAK0gB,UAAL,EAAN;AACD;A;AAEDP,EAAAA,6BAA6B,CAC3BngB,IAD2B,EAEC;AAC5B,SAAK+U,IAAL;AACA,SAAK4J,gBAAL,CAAsB,SAAtB;AACA3e,IAAAA,IAAI,CAAC4f,cAAL,GAAsB,KAAKwB,uBAAL,EAAtB;AACA,SAAKtB,SAAL;AAEA,WAAO,KAAKhQ,UAAL,CAAgB9P,IAAhB,EAAsB,sBAAtB,CAAP;AACD;A;AAEDsgB,EAAAA,yBAAyB,CACvBtgB,IADuB,EAEC;AACxB,SAAK+U,IAAL;AACA,SAAKsM,kBAAL,CAAwBrhB,IAAxB;AAEAA,IAAAA,IAAI,CAAC3Z,IAAL,GAAY,kBAAZ;AACA,WAAO2Z,IAAP;AACD;A;AAEDugB,EAAAA,0BAA0B,CACxBvgB,IADwB,EAEC;AACzB,SAAK+U,IAAL;AACA,SAAKuM,mBAAL,CAAyBthB,IAAzB,EAA+B,IAA/B;AAEAA,IAAAA,IAAI,CAAC3Z,IAAL,GAAY,mBAAZ;AACA,WAAO2Z,IAAP;AACD;A;AAEDwgB,EAAAA,yBAAyB,CACvBxgB,IADuB,EAEC;AACxB,SAAK+U,IAAL;AACA,SAAKkK,qBAAL,CAA2Bjf,IAA3B;AACA,WAAO,KAAK8P,UAAL,CAAgB9P,IAAhB,EAAsB,kBAAtB,CAAP;AACD;A;AAIDif,EAAAA,qBAAqB,CACnBjf,IADmB,EAEnBuhB,OAAiB,GAAG,KAFD,EAGb;AACNvhB,IAAAA,IAAI,CAAChZ,EAAL,GAAU,KAAKw6B,6BAAL,CACM,CAACD,OADP,EAEU,IAFV,CAAV;AAKA,SAAKtI,KAAL,CAAWC,WAAX,CACElZ,IAAI,CAAChZ,EAAL,CAAQyH,IADV,EAEE8yB,OAAO,GAAG9K,aAAH,GAAmBF,YAF5B,EAGEvW,IAAI,CAAChZ,EAAL,CAAQsG,KAHV;A;AAMA,QAAI,KAAKgyB,YAAL,CAAkB,GAAlB,CAAJ,EAA4B;AAC1Btf,MAAAA,IAAI,CAACgP,cAAL,GAAsB,KAAKuQ,iCAAL,EAAtB;AACD,KAFD,MAEO;AACLvf,MAAAA,IAAI,CAACgP,cAAL,GAAsB,IAAtB;AACD;A;AAEDhP,IAAAA,IAAI,CAACyhB,OAAL,GAAe,EAAf;AACAzhB,IAAAA,IAAI,CAAC0hB,UAAL,GAAkB,EAAlB;AACA1hB,IAAAA,IAAI,CAAC2hB,MAAL,GAAc,EAAd;A;AAEA,QAAI,KAAK/C,GAAL,CAASjM,OAAE,CAACxV,QAAZ,CAAJ,EAA2B;AACzB,SAAG;AACD6C,QAAAA,IAAI,CAACyhB,OAAL,CAAa18B,IAAb,CAAkB,KAAK68B,yBAAL,EAAlB;AACD,OAFD,QAES,CAACL,OAAD,IAAY,KAAK3C,GAAL,CAASjM,OAAE,CAAClZ,KAAZ,CAFrB;AAGD;A;AAED,QAAI,KAAK4mB,YAAL,CAAkB,QAAlB,CAAJ,EAAiC;AAC/B,WAAKtL,IAAL;A;AACA,SAAG;AACD/U,QAAAA,IAAI,CAAC2hB,MAAL,CAAY58B,IAAZ,CAAiB,KAAK68B,yBAAL,EAAjB;AACD,OAFD,QAES,KAAKhD,GAAL,CAASjM,OAAE,CAAClZ,KAAZ,CAFT;AAGD;A;AAED,QAAI,KAAK4mB,YAAL,CAAkB,YAAlB,CAAJ,EAAqC;AACnC,WAAKtL,IAAL;A;AACA,SAAG;AACD/U,QAAAA,IAAI,CAAC0hB,UAAL,CAAgB38B,IAAhB,CAAqB,KAAK68B,yBAAL,EAArB;AACD,OAFD,QAES,KAAKhD,GAAL,CAASjM,OAAE,CAAClZ,KAAZ,CAFT;AAGD;A;AAEDuG,IAAAA,IAAI,CAACzX,IAAL,GAAY,KAAKs5B,mBAAL,CAAyB;AACnCC,MAAAA,WAAW,EAAEP,OADsB;AAEnCQ,MAAAA,UAAU,EAAE,KAFuB;AAGnCC,MAAAA,WAAW,EAAE,KAHsB;AAInCC,MAAAA,UAAU,EAAEV,OAJuB;AAKnCW,MAAAA,YAAY,EAAE;AALqB,KAAzB,CAAZ;AAOD;A;AAEDN,EAAAA,yBAAyB,GAA2B;AAClD,UAAM5hB,IAAI,GAAG,KAAK2P,SAAL,EAAb;AAEA3P,IAAAA,IAAI,CAAChZ,EAAL,GAAU,KAAKm7B,gCAAL,EAAV;A;AACA,QAAI,KAAK7C,YAAL,CAAkB,GAAlB,CAAJ,EAA4B;AAC1Btf,MAAAA,IAAI,CAACgP,cAAL,GAAsB,KAAKoT,mCAAL,EAAtB;AACD,KAFD,MAEO;AACLpiB,MAAAA,IAAI,CAACgP,cAAL,GAAsB,IAAtB;AACD;A;AAED,WAAO,KAAKc,UAAL,CAAgB9P,IAAhB,EAAsB,kBAAtB,CAAP;AACD;A;AAEDqiB,EAAAA,kBAAkB,CAACriB,IAAD,EAAyC;AACzD,SAAKif,qBAAL,CAA2Bjf,IAA3B;AACA,WAAO,KAAK8P,UAAL,CAAgB9P,IAAhB,EAAsB,sBAAtB,CAAP;AACD;A;AAEDsiB,EAAAA,kBAAkB,CAAC/N,IAAD,EAAe;AAC/B,QAAIA,IAAI,KAAK,GAAb,EAAkB;AAChB,WAAK/I,KAAL,CAAW,KAAK5L,KAAL,CAAWtS,KAAtB,EAA6BwsB,UAAU,CAACuC,4BAAxC;AACD;AACF;A;AAEDkG,EAAAA,iBAAiB,CAAChO,IAAD,EAAerJ,QAAf,EAAiC8R,WAAjC,EAAwD;AACvE,QAAI,CAACnD,aAAa,CAAC1a,GAAd,CAAkBoV,IAAlB,CAAL,EAA8B;AAE9B,SAAK/I,KAAL,CACEN,QADF,EAEE8R,WAAW,GACPlD,UAAU,CAACG,kBADJ,GAEPH,UAAU,CAACsC,sBAJjB,EAKE7H,IALF;AAOD;A;AAEDiN,EAAAA,6BAA6B,CAC3BgB,OAD2B,EAE3BxF,WAF2B,EAGb;AACd,SAAKuF,iBAAL,CAAuB,KAAK3iB,KAAL,CAAWpT,KAAlC,EAAyC,KAAKoT,KAAL,CAAWtS,KAApD,EAA2D0vB,WAA3D;AACA,WAAO,KAAKmC,eAAL,CAAqBqD,OAArB,CAAP;AACD;A;AAIDnB,EAAAA,kBAAkB,CAACrhB,IAAD,EAAyC;AACzDA,IAAAA,IAAI,CAAChZ,EAAL,GAAU,KAAKw6B,6BAAL,CACM,KADN,EAEU,IAFV,CAAV;AAIA,SAAKvI,KAAL,CAAWC,WAAX,CAAuBlZ,IAAI,CAAChZ,EAAL,CAAQyH,IAA/B,EAAqC8nB,YAArC,EAAmDvW,IAAI,CAAChZ,EAAL,CAAQsG,KAA3D;A;AAEA,QAAI,KAAKgyB,YAAL,CAAkB,GAAlB,CAAJ,EAA4B;AAC1Btf,MAAAA,IAAI,CAACgP,cAAL,GAAsB,KAAKuQ,iCAAL,EAAtB;AACD,KAFD,MAEO;AACLvf,MAAAA,IAAI,CAACgP,cAAL,GAAsB,IAAtB;AACD;A;AAEDhP,IAAAA,IAAI,CAACyiB,KAAL,GAAa,KAAKtE,wBAAL,CAA8BxL,OAAE,CAACnY,EAAjC,CAAb;AACA,SAAKslB,SAAL;AAEA,WAAO,KAAKhQ,UAAL,CAAgB9P,IAAhB,EAAsB,WAAtB,CAAP;AACD;A;AAEDshB,EAAAA,mBAAmB,CACjBthB,IADiB,EAEjB0iB,OAFiB,EAGC;AAClB,SAAK/D,gBAAL,CAAsB,MAAtB;AACA3e,IAAAA,IAAI,CAAChZ,EAAL,GAAU,KAAKw6B,6BAAL,CACM,IADN,EAEU,IAFV,CAAV;AAIA,SAAKvI,KAAL,CAAWC,WAAX,CAAuBlZ,IAAI,CAAChZ,EAAL,CAAQyH,IAA/B,EAAqC8nB,YAArC,EAAmDvW,IAAI,CAAChZ,EAAL,CAAQsG,KAA3D;A;AAEA,QAAI,KAAKgyB,YAAL,CAAkB,GAAlB,CAAJ,EAA4B;AAC1Btf,MAAAA,IAAI,CAACgP,cAAL,GAAsB,KAAKuQ,iCAAL,EAAtB;AACD,KAFD,MAEO;AACLvf,MAAAA,IAAI,CAACgP,cAAL,GAAsB,IAAtB;AACD;A;AAGDhP,IAAAA,IAAI,CAAC2iB,SAAL,GAAiB,IAAjB;A;AACA,QAAI,KAAK9xB,KAAL,CAAW8hB,OAAE,CAAChZ,KAAd,CAAJ,EAA0B;AACxBqG,MAAAA,IAAI,CAAC2iB,SAAL,GAAiB,KAAKxE,wBAAL,CAA8BxL,OAAE,CAAChZ,KAAjC,CAAjB;AACD;A;AAEDqG,IAAAA,IAAI,CAAC4iB,QAAL,GAAgB,IAAhB;A;AACA,QAAI,CAACF,OAAL,EAAc;AACZ1iB,MAAAA,IAAI,CAAC4iB,QAAL,GAAgB,KAAKzE,wBAAL,CAA8BxL,OAAE,CAACnY,EAAjC,CAAhB;AACD;A;AACD,SAAKslB,SAAL;AAEA,WAAO,KAAKhQ,UAAL,CAAgB9P,IAAhB,EAAsB,YAAtB,CAAP;AACD;A;AAID6iB,EAAAA,sBAAsB,CAACC,cAAwB,GAAG,KAA5B,EAAoD;AACxE,UAAMC,SAAS,GAAG,KAAKnjB,KAAL,CAAWtS,KAA7B;AAEA,UAAM0S,IAAI,GAAG,KAAK2P,SAAL,EAAb;AAEA,UAAMqT,QAAQ,GAAG,KAAKC,iBAAL,EAAjB;AAEA,UAAMC,KAAK,GAAG,KAAKvC,kCAAL,EAAd;AACA3gB,IAAAA,IAAI,CAACvR,IAAL,GAAYy0B,KAAK,CAACz0B,IAAlB;AACAuR,IAAAA,IAAI,CAACgjB,QAAL,GAAgBA,QAAhB;AACAhjB,IAAAA,IAAI,CAACmjB,KAAL,GAAaD,KAAK,CAACtD,cAAnB;A;AAEA,QAAI,KAAK/uB,KAAL,CAAW8hB,OAAE,CAACnY,EAAd,CAAJ,EAAuB;AACrB,WAAKokB,GAAL,CAASjM,OAAE,CAACnY,EAAZ;AACAwF,MAAAA,IAAI,CAACghB,OAAL,GAAe,KAAKxC,aAAL,EAAf;AACD,KAHD,MAGO;AACL,UAAIsE,cAAJ,EAAoB;AAClB,aAAKtX,KAAL,CAAWuX,SAAX,EAAsBjJ,UAAU,CAACwB,uBAAjC;AACD;AACF;A;AAED,WAAO,KAAKxL,UAAL,CAAgB9P,IAAhB,EAAsB,eAAtB,CAAP;AACD;A;AAEDuf,EAAAA,iCAAiC,GAA+B;AAC9D,UAAMlB,SAAS,GAAG,KAAKze,KAAL,CAAW0e,MAA7B;AACA,UAAMte,IAAI,GAAG,KAAK2P,SAAL,EAAb;AACA3P,IAAAA,IAAI,CAACyL,MAAL,GAAc,EAAd;AAEA,SAAK7L,KAAL,CAAW0e,MAAX,GAAoB,IAApB;A;AAGA,QAAI,KAAKgB,YAAL,CAAkB,GAAlB,KAA0B,KAAKzuB,KAAL,CAAW8hB,OAAE,CAACyQ,WAAd,CAA9B,EAA0D;AACxD,WAAKrO,IAAL;AACD,KAFD,MAEO;AACL,WAAK2L,UAAL;AACD;A;AAED,QAAI2C,eAAe,GAAG,KAAtB;A;AAEA,OAAG;AACD,YAAMC,aAAa,GAAG,KAAKT,sBAAL,CAA4BQ,eAA5B,CAAtB;AAEArjB,MAAAA,IAAI,CAACyL,MAAL,CAAY1mB,IAAZ,CAAiBu+B,aAAjB;A;AAEA,UAAIA,aAAa,CAACtC,OAAlB,EAA2B;AACzBqC,QAAAA,eAAe,GAAG,IAAlB;AACD;A;AAED,UAAI,CAAC,KAAK/D,YAAL,CAAkB,GAAlB,CAAL,EAA6B;AAC3B,aAAKf,MAAL,CAAY5L,OAAE,CAAClZ,KAAf;AACD;AACF,KAZD,QAYS,CAAC,KAAK6lB,YAAL,CAAkB,GAAlB,CAZV;A;AAaA,SAAKiE,gBAAL,CAAsB,GAAtB;AAEA,SAAK3jB,KAAL,CAAW0e,MAAX,GAAoBD,SAApB;AAEA,WAAO,KAAKvO,UAAL,CAAgB9P,IAAhB,EAAsB,0BAAtB,CAAP;AACD;A;AAEDoiB,EAAAA,mCAAmC,GAAiC;AAClE,UAAMpiB,IAAI,GAAG,KAAK2P,SAAL,EAAb;AACA,UAAM0O,SAAS,GAAG,KAAKze,KAAL,CAAW0e,MAA7B;AACAte,IAAAA,IAAI,CAACyL,MAAL,GAAc,EAAd;AAEA,SAAK7L,KAAL,CAAW0e,MAAX,GAAoB,IAApB;AAEA,SAAKiF,gBAAL,CAAsB,GAAtB;AACA,UAAMC,qBAAqB,GAAG,KAAK5jB,KAAL,CAAW6jB,kBAAzC;AACA,SAAK7jB,KAAL,CAAW6jB,kBAAX,GAAgC,KAAhC;A;AACA,WAAO,CAAC,KAAKnE,YAAL,CAAkB,GAAlB,CAAR,EAAgC;AAC9Btf,MAAAA,IAAI,CAACyL,MAAL,CAAY1mB,IAAZ,CAAiB,KAAKy5B,aAAL,EAAjB;A;AACA,UAAI,CAAC,KAAKc,YAAL,CAAkB,GAAlB,CAAL,EAA6B;AAC3B,aAAKf,MAAL,CAAY5L,OAAE,CAAClZ,KAAf;AACD;AACF;A;AACD,SAAKmG,KAAL,CAAW6jB,kBAAX,GAAgCD,qBAAhC;AACA,SAAKD,gBAAL,CAAsB,GAAtB;AAEA,SAAK3jB,KAAL,CAAW0e,MAAX,GAAoBD,SAApB;AAEA,WAAO,KAAKvO,UAAL,CAAgB9P,IAAhB,EAAsB,4BAAtB,CAAP;AACD;A;AAED0jB,EAAAA,4CAA4C,GAAiC;AAC3E,UAAM1jB,IAAI,GAAG,KAAK2P,SAAL,EAAb;AACA,UAAM0O,SAAS,GAAG,KAAKze,KAAL,CAAW0e,MAA7B;AACAte,IAAAA,IAAI,CAACyL,MAAL,GAAc,EAAd;AAEA,SAAK7L,KAAL,CAAW0e,MAAX,GAAoB,IAApB;AAEA,SAAKiF,gBAAL,CAAsB,GAAtB;A;AACA,WAAO,CAAC,KAAKjE,YAAL,CAAkB,GAAlB,CAAR,EAAgC;AAC9Btf,MAAAA,IAAI,CAACyL,MAAL,CAAY1mB,IAAZ,CAAiB,KAAK4+B,oCAAL,EAAjB;A;AACA,UAAI,CAAC,KAAKrE,YAAL,CAAkB,GAAlB,CAAL,EAA6B;AAC3B,aAAKf,MAAL,CAAY5L,OAAE,CAAClZ,KAAf;AACD;AACF;A;AACD,SAAK8pB,gBAAL,CAAsB,GAAtB;AAEA,SAAK3jB,KAAL,CAAW0e,MAAX,GAAoBD,SAApB;AAEA,WAAO,KAAKvO,UAAL,CAAgB9P,IAAhB,EAAsB,4BAAtB,CAAP;AACD;A;AAED4jB,EAAAA,sBAAsB,GAAwB;AAC5C,UAAM5jB,IAAI,GAAG,KAAK2P,SAAL,EAAb;AACA,SAAKgP,gBAAL,CAAsB,WAAtB;AAEA3e,IAAAA,IAAI,CAACyhB,OAAL,GAAe,EAAf;A;AACA,QAAI,KAAK7C,GAAL,CAASjM,OAAE,CAACxV,QAAZ,CAAJ,EAA2B;AACzB,SAAG;AACD6C,QAAAA,IAAI,CAACyhB,OAAL,CAAa18B,IAAb,CAAkB,KAAK68B,yBAAL,EAAlB;AACD,OAFD,QAES,KAAKhD,GAAL,CAASjM,OAAE,CAAClZ,KAAZ,CAFT;AAGD;A;AAEDuG,IAAAA,IAAI,CAACzX,IAAL,GAAY,KAAKs5B,mBAAL,CAAyB;AACnCC,MAAAA,WAAW,EAAE,KADsB;AAEnCC,MAAAA,UAAU,EAAE,KAFuB;AAGnCC,MAAAA,WAAW,EAAE,KAHsB;AAInCC,MAAAA,UAAU,EAAE,KAJuB;AAKnCC,MAAAA,YAAY,EAAE;AALqB,KAAzB,CAAZ;AAQA,WAAO,KAAKpS,UAAL,CAAgB9P,IAAhB,EAAsB,yBAAtB,CAAP;AACD;A;AAED6jB,EAAAA,0BAA0B,GAAiB;AACzC,WAAO,KAAKhzB,KAAL,CAAW8hB,OAAE,CAACpa,GAAd,KAAsB,KAAK1H,KAAL,CAAW8hB,OAAE,CAAC/hB,MAAd,CAAtB,GACH,KAAKgwB,aAAL,EADG,GAEH,KAAKzB,eAAL,CAAqB,IAArB,CAFJ;AAGD;A;AAED2E,EAAAA,0BAA0B,CACxB9jB,IADwB,EAExB+jB,QAFwB,EAGxBf,QAHwB,EAIC;AACzBhjB,IAAAA,IAAI,CAACgkB,MAAL,GAAcD,QAAd;A;AAGA,QAAI,KAAKE,SAAL,GAAiB59B,IAAjB,KAA0BssB,OAAE,CAAChZ,KAAjC,EAAwC;AACtCqG,MAAAA,IAAI,CAAChZ,EAAL,GAAU,KAAK68B,0BAAL,EAAV;AACA7jB,MAAAA,IAAI,CAACxQ,GAAL,GAAW,KAAK2uB,wBAAL,EAAX;AACD,KAHD,MAGO;AACLne,MAAAA,IAAI,CAAChZ,EAAL,GAAU,IAAV;AACAgZ,MAAAA,IAAI,CAACxQ,GAAL,GAAW,KAAKgvB,aAAL,EAAX;AACD;A;AACD,SAAKD,MAAL,CAAY5L,OAAE,CAAC3Z,QAAf;AACAgH,IAAAA,IAAI,CAACxT,KAAL,GAAa,KAAK2xB,wBAAL,EAAb;AACAne,IAAAA,IAAI,CAACgjB,QAAL,GAAgBA,QAAhB;AAEA,WAAO,KAAKlT,UAAL,CAAgB9P,IAAhB,EAAsB,mBAAtB,CAAP;AACD;A;AAEDkkB,EAAAA,+BAA+B,CAC7BlkB,IAD6B,EAE7B+jB,QAF6B,EAGC;AAC9B/jB,IAAAA,IAAI,CAACgkB,MAAL,GAAcD,QAAd;AAEA/jB,IAAAA,IAAI,CAAChZ,EAAL,GAAU,KAAK68B,0BAAL,EAAV;AACA,SAAKtF,MAAL,CAAY5L,OAAE,CAAC3Z,QAAf;AACA,SAAKulB,MAAL,CAAY5L,OAAE,CAAC3Z,QAAf;A;AACA,QAAI,KAAKsmB,YAAL,CAAkB,GAAlB,KAA0B,KAAKzuB,KAAL,CAAW8hB,OAAE,CAACpZ,MAAd,CAA9B,EAAqD;AACnDyG,MAAAA,IAAI,CAACiO,MAAL,GAAc,IAAd;AACAjO,MAAAA,IAAI,CAAC+Q,QAAL,GAAgB,KAAhB;AACA/Q,MAAAA,IAAI,CAACxT,KAAL,GAAa,KAAK23B,4BAAL,CACX,KAAK7W,WAAL,CAAiBtN,IAAI,CAAC1S,KAAtB,EAA6B0S,IAAI,CAACL,GAAL,CAASrS,KAAtC,CADW,CAAb;AAGD,KAND,MAMO;AACL0S,MAAAA,IAAI,CAACiO,MAAL,GAAc,KAAd;A;AACA,UAAI,KAAK2Q,GAAL,CAASjM,OAAE,CAAC7Y,QAAZ,CAAJ,EAA2B;AACzBkG,QAAAA,IAAI,CAAC+Q,QAAL,GAAgB,IAAhB;AACD;A;AACD/Q,MAAAA,IAAI,CAACxT,KAAL,GAAa,KAAK2xB,wBAAL,EAAb;AACD;A;AACD,WAAO,KAAKrO,UAAL,CAAgB9P,IAAhB,EAAsB,wBAAtB,CAAP;AACD;A;AAEDmkB,EAAAA,4BAA4B,CAC1BnkB,IAD0B,EAEI;AAC9BA,IAAAA,IAAI,CAACyL,MAAL,GAAc,EAAd;AACAzL,IAAAA,IAAI,CAACyf,IAAL,GAAY,IAAZ;AACAzf,IAAAA,IAAI,CAACgP,cAAL,GAAsB,IAAtB;AACAhP,IAAAA,IAAI,CAAC0f,IAAL,GAAY,IAAZ;A;AAEA,QAAI,KAAKJ,YAAL,CAAkB,GAAlB,CAAJ,EAA4B;AAC1Btf,MAAAA,IAAI,CAACgP,cAAL,GAAsB,KAAKuQ,iCAAL,EAAtB;AACD;A;AAED,SAAKhB,MAAL,CAAY5L,OAAE,CAACpZ,MAAf;A;AACA,QAAI,KAAK1I,KAAL,CAAW8hB,OAAE,CAAC3V,KAAd,CAAJ,EAA0B;AACxBgD,MAAAA,IAAI,CAAC0f,IAAL,GAAY,KAAK0E,0BAAL,CAA4C,IAA5C,CAAZ;AAEApkB,MAAAA,IAAI,CAAC0f,IAAL,CAAUjxB,IAAV,GAAiB,IAAjB;A;AACA,UAAI,CAAC,KAAKoC,KAAL,CAAW8hB,OAAE,CAACnZ,MAAd,CAAL,EAA4B;AAC1B,aAAK+kB,MAAL,CAAY5L,OAAE,CAAClZ,KAAf;AACD;AACF;A;AACD,WAAO,CAAC,KAAK5I,KAAL,CAAW8hB,OAAE,CAACnZ,MAAd,CAAD,IAA0B,CAAC,KAAK3I,KAAL,CAAW8hB,OAAE,CAACzY,QAAd,CAAlC,EAA2D;AACzD8F,MAAAA,IAAI,CAACyL,MAAL,CAAY1mB,IAAZ,CAAiB,KAAKq/B,0BAAL,CAAgC,KAAhC,CAAjB;A;AACA,UAAI,CAAC,KAAKvzB,KAAL,CAAW8hB,OAAE,CAACnZ,MAAd,CAAL,EAA4B;AAC1B,aAAK+kB,MAAL,CAAY5L,OAAE,CAAClZ,KAAf;AACD;AACF;A;AAED,QAAI,KAAKmlB,GAAL,CAASjM,OAAE,CAACzY,QAAZ,CAAJ,EAA2B;AACzB8F,MAAAA,IAAI,CAACyf,IAAL,GAAY,KAAK2E,0BAAL,CAAgC,KAAhC,CAAZ;AACD;A;AACD,SAAK7F,MAAL,CAAY5L,OAAE,CAACnZ,MAAf;AACAwG,IAAAA,IAAI,CAAC2f,UAAL,GAAkB,KAAKxB,wBAAL,EAAlB;AAEA,WAAO,KAAKrO,UAAL,CAAgB9P,IAAhB,EAAsB,wBAAtB,CAAP;AACD;A;AAEDqkB,EAAAA,+BAA+B,CAC7BrkB,IAD6B,EAE7B+jB,QAF6B,EAGC;AAC9B,UAAMO,SAAS,GAAG,KAAK3U,SAAL,EAAlB;AACA3P,IAAAA,IAAI,CAACgkB,MAAL,GAAcD,QAAd;AACA/jB,IAAAA,IAAI,CAACxT,KAAL,GAAa,KAAK23B,4BAAL,CAAkCG,SAAlC,CAAb;AACA,WAAO,KAAKxU,UAAL,CAAgB9P,IAAhB,EAAsB,wBAAtB,CAAP;AACD;A;AAED6hB,EAAAA,mBAAmB,CAAC;AAClBC,IAAAA,WADkB;AAElBC,IAAAA,UAFkB;AAGlBC,IAAAA,WAHkB;AAIlBC,IAAAA,UAJkB;AAKlBC,IAAAA;AALkB,GAAD,EAYY;AAC7B,UAAM7D,SAAS,GAAG,KAAKze,KAAL,CAAW0e,MAA7B;AACA,SAAK1e,KAAL,CAAW0e,MAAX,GAAoB,IAApB;AAEA,UAAMyE,SAAS,GAAG,KAAKpT,SAAL,EAAlB;AAEAoT,IAAAA,SAAS,CAACwB,cAAV,GAA2B,EAA3B;AACAxB,IAAAA,SAAS,CAACliB,UAAV,GAAuB,EAAvB;AACAkiB,IAAAA,SAAS,CAACyB,QAAV,GAAqB,EAArB;AACAzB,IAAAA,SAAS,CAAC0B,aAAV,GAA0B,EAA1B;AAEA,QAAIC,QAAJ;AACA,QAAIC,KAAJ;AACA,QAAIC,OAAO,GAAG,KAAd;A;AACA,QAAI7C,UAAU,IAAI,KAAKlxB,KAAL,CAAW8hB,OAAE,CAACxZ,SAAd,CAAlB,EAA4C;AAC1C,WAAKolB,MAAL,CAAY5L,OAAE,CAACxZ,SAAf;AACAurB,MAAAA,QAAQ,GAAG/R,OAAE,CAACrZ,SAAd;AACAqrB,MAAAA,KAAK,GAAG,IAAR;AACD,KAJD,MAIO;AACL,WAAKpG,MAAL,CAAY5L,OAAE,CAACzZ,MAAf;AACAwrB,MAAAA,QAAQ,GAAG/R,OAAE,CAACtZ,MAAd;AACAsrB,MAAAA,KAAK,GAAG,KAAR;AACD;A;AAED5B,IAAAA,SAAS,CAAC4B,KAAV,GAAkBA,KAAlB;A;AAEA,WAAO,CAAC,KAAK9zB,KAAL,CAAW6zB,QAAX,CAAR,EAA8B;AAC5B,UAAIX,QAAQ,GAAG,KAAf;AACA,UAAIc,UAAmB,GAAG,IAA1B;AACA,UAAIC,YAAqB,GAAG,IAA5B;AACA,YAAM9kB,IAAI,GAAG,KAAK2P,SAAL,EAAb;A;AAEA,UAAIsS,UAAU,IAAI,KAAK5B,YAAL,CAAkB,OAAlB,CAAlB,EAA8C;AAC5C,cAAM4D,SAAS,GAAG,KAAKA,SAAL,EAAlB;A;AAEA,YAAIA,SAAS,CAAC59B,IAAV,KAAmBssB,OAAE,CAAChZ,KAAtB,IAA+BsqB,SAAS,CAAC59B,IAAV,KAAmBssB,OAAE,CAAC7Y,QAAzD,EAAmE;AACjE,eAAKib,IAAL;AACA8P,UAAAA,UAAU,GAAG,KAAKjlB,KAAL,CAAWtS,KAAxB;AACAw0B,UAAAA,WAAW,GAAG,KAAd;AACD;AACF;A;AAED,UAAIA,WAAW,IAAI,KAAKzB,YAAL,CAAkB,QAAlB,CAAnB,EAAgD;AAC9C,cAAM4D,SAAS,GAAG,KAAKA,SAAL,EAAlB;A;AAGA,YAAIA,SAAS,CAAC59B,IAAV,KAAmBssB,OAAE,CAAChZ,KAAtB,IAA+BsqB,SAAS,CAAC59B,IAAV,KAAmBssB,OAAE,CAAC7Y,QAAzD,EAAmE;AACjE,eAAKib,IAAL;AACAgP,UAAAA,QAAQ,GAAG,IAAX;AACD;AACF;A;AAED,YAAMf,QAAQ,GAAG,KAAKC,iBAAL,EAAjB;A;AAEA,UAAI,KAAKrE,GAAL,CAASjM,OAAE,CAAC9Z,QAAZ,CAAJ,EAA2B;AACzB,YAAIgsB,UAAU,IAAI,IAAlB,EAAwB;AACtB,eAAKnE,UAAL,CAAgBmE,UAAhB;AACD;A;AACD,YAAI,KAAKjG,GAAL,CAASjM,OAAE,CAAC9Z,QAAZ,CAAJ,EAA2B;AACzB,cAAImqB,QAAJ,EAAc;AACZ,iBAAKtC,UAAL,CAAgBsC,QAAQ,CAAC11B,KAAzB;AACD;A;AACDy1B,UAAAA,SAAS,CAAC0B,aAAV,CAAwB1/B,IAAxB,CACE,KAAKm/B,+BAAL,CAAqClkB,IAArC,EAA2C+jB,QAA3C,CADF;AAGD,SAPD,MAOO;AACLhB,UAAAA,SAAS,CAACyB,QAAV,CAAmBz/B,IAAnB,CACE,KAAK++B,0BAAL,CAAgC9jB,IAAhC,EAAsC+jB,QAAtC,EAAgDf,QAAhD,CADF;AAGD;AACF,OAhBD,MAgBO,IAAI,KAAKnyB,KAAL,CAAW8hB,OAAE,CAACpZ,MAAd,KAAyB,KAAK+lB,YAAL,CAAkB,GAAlB,CAA7B,EAAqD;AAC1D,YAAIuF,UAAU,IAAI,IAAlB,EAAwB;AACtB,eAAKnE,UAAL,CAAgBmE,UAAhB;AACD;A;AACD,YAAI7B,QAAJ,EAAc;AACZ,eAAKtC,UAAL,CAAgBsC,QAAQ,CAAC11B,KAAzB;AACD;A;AACDy1B,QAAAA,SAAS,CAACwB,cAAV,CAAyBx/B,IAAzB,CACE,KAAKs/B,+BAAL,CAAqCrkB,IAArC,EAA2C+jB,QAA3C,CADF;AAGD,OAVM,MAUA;AACL,YAAInU,IAAI,GAAG,MAAX;A;AAEA,YAAI,KAAKyQ,YAAL,CAAkB,KAAlB,KAA4B,KAAKA,YAAL,CAAkB,KAAlB,CAAhC,EAA0D;AACxD,gBAAM4D,SAAS,GAAG,KAAKA,SAAL,EAAlB;A;AACA,cACEA,SAAS,CAAC59B,IAAV,KAAmBssB,OAAE,CAAClkB,IAAtB,IACAw1B,SAAS,CAAC59B,IAAV,KAAmBssB,OAAE,CAAC/hB,MADtB,IAEAqzB,SAAS,CAAC59B,IAAV,KAAmBssB,OAAE,CAACpa,GAHxB,EAIE;AACAqX,YAAAA,IAAI,GAAG,KAAKhQ,KAAL,CAAWpT,KAAlB;AACA,iBAAKuoB,IAAL;AACD;AACF;A;AAED,cAAMgQ,aAAa,GAAG,KAAKC,2BAAL,CACpBhlB,IADoB,EAEpB+jB,QAFoB,EAGpBc,UAHoB,EAIpB7B,QAJoB,EAKpBpT,IALoB,EAMpBoS,WANoB,EAOpBE,YAPoB,WAOpBA,YAPoB,GAOJ,CAACyC,KAPG,CAAtB;A;AAUA,YAAII,aAAa,KAAK,IAAtB,EAA4B;AAC1BH,UAAAA,OAAO,GAAG,IAAV;AACAE,UAAAA,YAAY,GAAG,KAAKllB,KAAL,CAAWuL,YAA1B;AACD,SAHD,MAGO;AACL4X,UAAAA,SAAS,CAACliB,UAAV,CAAqB9b,IAArB,CAA0BggC,aAA1B;AACD;AACF;A;AAED,WAAKE,uBAAL;A;AAEA,UACEH,YAAY,IACZ,CAAC,KAAKj0B,KAAL,CAAW8hB,OAAE,CAACtZ,MAAd,CADD,IAEA,CAAC,KAAKxI,KAAL,CAAW8hB,OAAE,CAACrZ,SAAd,CAHH,EAIE;AACA,aAAKkS,KAAL,CACEsZ,YADF,EAEEhL,UAAU,CAACqC,iCAFb;AAID;AACF;A;AAED,SAAKoC,MAAL,CAAYmG,QAAZ;A;AAOA,QAAI1C,WAAJ,EAAiB;AACfe,MAAAA,SAAS,CAAC6B,OAAV,GAAoBA,OAApB;AACD;A;AAED,UAAM9R,GAAG,GAAG,KAAKhD,UAAL,CAAgBiT,SAAhB,EAA2B,sBAA3B,CAAZ;AAEA,SAAKnjB,KAAL,CAAW0e,MAAX,GAAoBD,SAApB;AAEA,WAAOvL,GAAP;AACD;A;AAEDkS,EAAAA,2BAA2B,CACzBhlB,IADyB,EAEzB+jB,QAFyB,EAGzBc,UAHyB,EAIzB7B,QAJyB,EAKzBpT,IALyB,EAMzBoS,WANyB,EAOzBE,YAPyB,EAQ2C;AACpE,QAAI,KAAKtD,GAAL,CAASjM,OAAE,CAACzY,QAAZ,CAAJ,EAA2B;AACzB,YAAMgrB,cAAc,GAClB,KAAKr0B,KAAL,CAAW8hB,OAAE,CAAClZ,KAAd,KACA,KAAK5I,KAAL,CAAW8hB,OAAE,CAACjZ,IAAd,CADA,IAEA,KAAK7I,KAAL,CAAW8hB,OAAE,CAACtZ,MAAd,CAFA,IAGA,KAAKxI,KAAL,CAAW8hB,OAAE,CAACrZ,SAAd,CAJF;A;AAMA,UAAI4rB,cAAJ,EAAoB;AAClB,YAAI,CAAClD,WAAL,EAAkB;AAChB,eAAKxW,KAAL,CACE,KAAK5L,KAAL,CAAWuL,YADb,EAEE2O,UAAU,CAACqB,sBAFb;AAID,SALD,MAKO,IAAI,CAAC+G,YAAL,EAAmB;AACxB,eAAK1W,KAAL,CAAW,KAAK5L,KAAL,CAAWuL,YAAtB,EAAoC2O,UAAU,CAACoB,kBAA/C;AACD;A;AACD,YAAI8H,QAAJ,EAAc;AACZ,eAAKxX,KAAL,CAAWwX,QAAQ,CAAC11B,KAApB,EAA2BwsB,UAAU,CAACsB,eAAtC;AACD;A;AAED,eAAO,IAAP;AACD;A;AAED,UAAI,CAAC4G,WAAL,EAAkB;AAChB,aAAKxW,KAAL,CAAW,KAAK5L,KAAL,CAAWuL,YAAtB,EAAoC2O,UAAU,CAACyC,oBAA/C;AACD;A;AACD,UAAIsI,UAAU,IAAI,IAAlB,EAAwB;AACtB,aAAKnE,UAAL,CAAgBmE,UAAhB;AACD;A;AACD,UAAI7B,QAAJ,EAAc;AACZ,aAAKxX,KAAL,CAAWwX,QAAQ,CAAC11B,KAApB,EAA2BwsB,UAAU,CAAC6B,cAAtC;AACD;A;AAED3b,MAAAA,IAAI,CAACmlB,QAAL,GAAgB,KAAK3G,aAAL,EAAhB;AACA,aAAO,KAAK1O,UAAL,CAAgB9P,IAAhB,EAAsB,0BAAtB,CAAP;AACD,KAnCD,MAmCO;AACLA,MAAAA,IAAI,CAACxQ,GAAL,GAAW,KAAKq0B,0BAAL,EAAX;AACA7jB,MAAAA,IAAI,CAACgkB,MAAL,GAAcD,QAAd;AACA/jB,MAAAA,IAAI,CAAColB,KAAL,GAAaP,UAAU,IAAI,IAA3B;AACA7kB,MAAAA,IAAI,CAAC4P,IAAL,GAAYA,IAAZ;AAEA,UAAImB,QAAQ,GAAG,KAAf;A;AACA,UAAI,KAAKuO,YAAL,CAAkB,GAAlB,KAA0B,KAAKzuB,KAAL,CAAW8hB,OAAE,CAACpZ,MAAd,CAA9B,EAAqD;AAEnDyG,QAAAA,IAAI,CAACiO,MAAL,GAAc,IAAd;A;AAEA,YAAI4W,UAAU,IAAI,IAAlB,EAAwB;AACtB,eAAKnE,UAAL,CAAgBmE,UAAhB;AACD;A;AACD,YAAI7B,QAAJ,EAAc;AACZ,eAAKtC,UAAL,CAAgBsC,QAAQ,CAAC11B,KAAzB;AACD;A;AAED0S,QAAAA,IAAI,CAACxT,KAAL,GAAa,KAAK23B,4BAAL,CACX,KAAK7W,WAAL,CAAiBtN,IAAI,CAAC1S,KAAtB,EAA6B0S,IAAI,CAACL,GAAL,CAASrS,KAAtC,CADW,CAAb;A;AAGA,YAAIsiB,IAAI,KAAK,KAAT,IAAkBA,IAAI,KAAK,KAA/B,EAAsC;AACpC,eAAKyV,2BAAL,CAAiCrlB,IAAjC;AACD;A;AAED,YACE,CAACgiB,WAAD,IACAhiB,IAAI,CAACxQ,GAAL,CAASf,IAAT,KAAkB,aADlB,IAEAuR,IAAI,CAACxT,KAAL,CAAWkzB,IAHb,EAIE;AACA,eAAKlU,KAAL,CACExL,IAAI,CAACxT,KAAL,CAAWkzB,IAAX,CAAgBpyB,KADlB,EAEEwsB,UAAU,CAAC+B,4BAFb;AAID;AACF,OA5BD,MA4BO;AACL,YAAIjM,IAAI,KAAK,MAAb,EAAqB,KAAK8Q,UAAL;AAErB1gB,QAAAA,IAAI,CAACiO,MAAL,GAAc,KAAd;A;AAEA,YAAI,KAAK2Q,GAAL,CAASjM,OAAE,CAAC7Y,QAAZ,CAAJ,EAA2B;AACzBiX,UAAAA,QAAQ,GAAG,IAAX;AACD;A;AACD/Q,QAAAA,IAAI,CAACxT,KAAL,GAAa,KAAK2xB,wBAAL,EAAb;AACAne,QAAAA,IAAI,CAACgjB,QAAL,GAAgBA,QAAhB;AACD;A;AAEDhjB,MAAAA,IAAI,CAAC+Q,QAAL,GAAgBA,QAAhB;AAEA,aAAO,KAAKjB,UAAL,CAAgB9P,IAAhB,EAAsB,oBAAtB,CAAP;AACD;AACF;A;AAIDqlB,EAAAA,2BAA2B,CACzBC,QADyB,EAEnB;AACN,UAAMC,UAAU,GAAGD,QAAQ,CAAC1V,IAAT,KAAkB,KAAlB,GAA0B,CAA1B,GAA8B,CAAjD;AACA,UAAMtiB,KAAK,GAAGg4B,QAAQ,CAACh4B,KAAvB;AACA,UAAMhG,MAAM,GACVg+B,QAAQ,CAAC94B,KAAT,CAAeif,MAAf,CAAsBnkB,MAAtB,IAAgCg+B,QAAQ,CAAC94B,KAAT,CAAeizB,IAAf,GAAsB,CAAtB,GAA0B,CAA1D,CADF;A;AAGA,QAAI6F,QAAQ,CAAC94B,KAAT,CAAekzB,IAAnB,EAAyB;AACvB,WAAKlU,KAAL,CACE8Z,QAAQ,CAAC94B,KAAT,CAAekzB,IAAf,CAAoBpyB,KADtB,EAEEg4B,QAAQ,CAAC1V,IAAT,KAAkB,KAAlB,GACIkK,UAAU,CAACkB,yBADf,GAEIlB,UAAU,CAAC4B,yBAJjB;AAMD;A;AAED,QAAIp0B,MAAM,KAAKi+B,UAAf,EAA2B;AACzB,UAAID,QAAQ,CAAC1V,IAAT,KAAkB,KAAtB,EAA6B;AAC3B,aAAKpE,KAAL,CAAWle,KAAX,EAAkBujB,aAAM,CAAC/O,cAAzB;AACD,OAFD,MAEO;AACL,aAAK0J,KAAL,CAAWle,KAAX,EAAkBujB,aAAM,CAAC9O,cAAzB;AACD;AACF;A;AAED,QAAIujB,QAAQ,CAAC1V,IAAT,KAAkB,KAAlB,IAA2B0V,QAAQ,CAAC94B,KAAT,CAAeizB,IAA9C,EAAoD;AAClD,WAAKjU,KAAL,CAAWle,KAAX,EAAkBujB,aAAM,CAAC7O,sBAAzB;AACD;AACF;A;AAEDijB,EAAAA,uBAAuB,GAAS;AAC9B,QACE,CAAC,KAAKrG,GAAL,CAASjM,OAAE,CAACjZ,IAAZ,CAAD,IACA,CAAC,KAAKklB,GAAL,CAASjM,OAAE,CAAClZ,KAAZ,CADD,IAEA,CAAC,KAAK5I,KAAL,CAAW8hB,OAAE,CAACtZ,MAAd,CAFD,IAGA,CAAC,KAAKxI,KAAL,CAAW8hB,OAAE,CAACrZ,SAAd,CAJH,EAKE;AACA,WAAKonB,UAAL;AACD;AACF;A;AAEDyB,EAAAA,gCAAgC,CAC9B3R,QAD8B,EAE9BtF,QAF8B,EAG9BlkB,EAH8B,EAIC;AAC/BwpB,IAAAA,QAAQ,GAAGA,QAAQ,IAAI,KAAK5Q,KAAL,CAAWtS,KAAlC;AACA4d,IAAAA,QAAQ,GAAGA,QAAQ,IAAI,KAAKtL,KAAL,CAAWsL,QAAlC;AACA,QAAIlL,IAAI,GAAGhZ,EAAE,IAAI,KAAKw6B,6BAAL,CAAmC,IAAnC,CAAjB;A;AAEA,WAAO,KAAK5C,GAAL,CAASjM,OAAE,CAAC9Y,GAAZ,CAAP,EAAyB;AACvB,YAAM2rB,KAAK,GAAG,KAAKlY,WAAL,CAAiBkD,QAAjB,EAA2BtF,QAA3B,CAAd;AACAsa,MAAAA,KAAK,CAACC,aAAN,GAAsBzlB,IAAtB;AACAwlB,MAAAA,KAAK,CAACx+B,EAAN,GAAW,KAAKw6B,6BAAL,CAAmC,IAAnC,CAAX;AACAxhB,MAAAA,IAAI,GAAG,KAAK8P,UAAL,CAAgB0V,KAAhB,EAAuB,yBAAvB,CAAP;AACD;A;AAED,WAAOxlB,IAAP;AACD;A;AAED0lB,EAAAA,oBAAoB,CAClBlV,QADkB,EAElBtF,QAFkB,EAGlBlkB,EAHkB,EAIW;AAC7B,UAAMgZ,IAAI,GAAG,KAAKsN,WAAL,CAAiBkD,QAAjB,EAA2BtF,QAA3B,CAAb;AAEAlL,IAAAA,IAAI,CAACgP,cAAL,GAAsB,IAAtB;AACAhP,IAAAA,IAAI,CAAChZ,EAAL,GAAU,KAAKm7B,gCAAL,CAAsC3R,QAAtC,EAAgDtF,QAAhD,EAA0DlkB,EAA1D,CAAV;A;AAEA,QAAI,KAAKs4B,YAAL,CAAkB,GAAlB,CAAJ,EAA4B;AAC1Btf,MAAAA,IAAI,CAACgP,cAAL,GAAsB,KAAKoT,mCAAL,EAAtB;AACD;A;AAED,WAAO,KAAKtS,UAAL,CAAgB9P,IAAhB,EAAsB,uBAAtB,CAAP;AACD;A;AAED2lB,EAAAA,mBAAmB,GAA+B;AAChD,UAAM3lB,IAAI,GAAG,KAAK2P,SAAL,EAAb;AACA,SAAK4O,MAAL,CAAY5L,OAAE,CAAChV,OAAf;AACAqC,IAAAA,IAAI,CAACmlB,QAAL,GAAgB,KAAKS,oBAAL,EAAhB;AACA,WAAO,KAAK9V,UAAL,CAAgB9P,IAAhB,EAAsB,sBAAtB,CAAP;AACD;A;AAED6lB,EAAAA,kBAAkB,GAA8B;AAC9C,UAAM7lB,IAAI,GAAG,KAAK2P,SAAL,EAAb;AACA3P,IAAAA,IAAI,CAAC1H,KAAL,GAAa,EAAb;AACA,SAAKimB,MAAL,CAAY5L,OAAE,CAAC9Z,QAAf;A;AAEA,WAAO,KAAK+G,KAAL,CAAWqL,GAAX,GAAiB,KAAK3jB,MAAtB,IAAgC,CAAC,KAAKuJ,KAAL,CAAW8hB,OAAE,CAAC3Z,QAAd,CAAxC,EAAiE;AAC/DgH,MAAAA,IAAI,CAAC1H,KAAL,CAAWvT,IAAX,CAAgB,KAAKy5B,aAAL,EAAhB;AACA,UAAI,KAAK3tB,KAAL,CAAW8hB,OAAE,CAAC3Z,QAAd,CAAJ,EAA6B;AAC7B,WAAKulB,MAAL,CAAY5L,OAAE,CAAClZ,KAAf;AACD;A;AACD,SAAK8kB,MAAL,CAAY5L,OAAE,CAAC3Z,QAAf;AACA,WAAO,KAAK8W,UAAL,CAAgB9P,IAAhB,EAAsB,qBAAtB,CAAP;AACD;A;AAEDokB,EAAAA,0BAA0B,CAAC0B,KAAD,EAA0C;AAClE,QAAIr3B,IAAI,GAAG,IAAX;AACA,QAAIsiB,QAAQ,GAAG,KAAf;AACA,QAAI6O,cAAc,GAAG,IAArB;AACA,UAAM5f,IAAI,GAAG,KAAK2P,SAAL,EAAb;AACA,UAAMoW,EAAE,GAAG,KAAK9B,SAAL,EAAX;AACA,UAAM+B,MAAM,GAAG,KAAKpmB,KAAL,CAAWvZ,IAAX,KAAoBssB,OAAE,CAAC3V,KAAtC;A;AAEA,QAAI+oB,EAAE,CAAC1/B,IAAH,KAAYssB,OAAE,CAAChZ,KAAf,IAAwBosB,EAAE,CAAC1/B,IAAH,KAAYssB,OAAE,CAAC7Y,QAA3C,EAAqD;AACnD,UAAIksB,MAAM,IAAI,CAACF,KAAf,EAAsB;AACpB,aAAKta,KAAL,CAAWxL,IAAI,CAAC1S,KAAhB,EAAuBwsB,UAAU,CAACiC,oBAAlC;AACD;A;AACDttB,MAAAA,IAAI,GAAG,KAAK0wB,eAAL,CAAqB6G,MAArB,CAAP;A;AACA,UAAI,KAAKpH,GAAL,CAASjM,OAAE,CAAC7Y,QAAZ,CAAJ,EAA2B;AACzBiX,QAAAA,QAAQ,GAAG,IAAX;A;AACA,YAAIiV,MAAJ,EAAY;AACV,eAAKxa,KAAL,CAAWxL,IAAI,CAAC1S,KAAhB,EAAuBwsB,UAAU,CAACgC,yBAAlC;AACD;AACF;A;AACD8D,MAAAA,cAAc,GAAG,KAAKzB,wBAAL,EAAjB;AACD,KAZD,MAYO;AACLyB,MAAAA,cAAc,GAAG,KAAKpB,aAAL,EAAjB;AACD;A;AACDxe,IAAAA,IAAI,CAACvR,IAAL,GAAYA,IAAZ;AACAuR,IAAAA,IAAI,CAAC+Q,QAAL,GAAgBA,QAAhB;AACA/Q,IAAAA,IAAI,CAAC4f,cAAL,GAAsBA,cAAtB;AACA,WAAO,KAAK9P,UAAL,CAAgB9P,IAAhB,EAAsB,mBAAtB,CAAP;AACD;A;AAEDimB,EAAAA,kCAAkC,CAChC5/B,IADgC,EAEP;AACzB,UAAM2Z,IAAI,GAAG,KAAKsN,WAAL,CAAiBjnB,IAAI,CAACiH,KAAtB,EAA6BjH,IAAI,CAACsZ,GAAL,CAASrS,KAAtC,CAAb;AACA0S,IAAAA,IAAI,CAACvR,IAAL,GAAY,IAAZ;AACAuR,IAAAA,IAAI,CAAC+Q,QAAL,GAAgB,KAAhB;AACA/Q,IAAAA,IAAI,CAAC4f,cAAL,GAAsBv5B,IAAtB;AACA,WAAO,KAAKypB,UAAL,CAAgB9P,IAAhB,EAAsB,mBAAtB,CAAP;AACD;A;AAEDwf,EAAAA,2BAA2B,CAAC/T,MAAiC,GAAG,EAArC,EAIzB;AACA,QAAIgU,IAA8B,GAAG,IAArC;AACA,QAAIziB,KAA+B,GAAG,IAAtC;A;AACA,QAAI,KAAKnM,KAAL,CAAW8hB,OAAE,CAAC3V,KAAd,CAAJ,EAA0B;AACxBA,MAAAA,KAAK,GAAG,KAAKonB,0BAAL,CAA4C,IAA5C,CAAR;AAEApnB,MAAAA,KAAK,CAACvO,IAAN,GAAa,IAAb;A;AACA,UAAI,CAAC,KAAKoC,KAAL,CAAW8hB,OAAE,CAACnZ,MAAd,CAAL,EAA4B;AAC1B,aAAK+kB,MAAL,CAAY5L,OAAE,CAAClZ,KAAf;AACD;AACF;A;AACD,WAAO,CAAC,KAAK5I,KAAL,CAAW8hB,OAAE,CAACnZ,MAAd,CAAD,IAA0B,CAAC,KAAK3I,KAAL,CAAW8hB,OAAE,CAACzY,QAAd,CAAlC,EAA2D;AACzDuR,MAAAA,MAAM,CAAC1mB,IAAP,CAAY,KAAKq/B,0BAAL,CAAgC,KAAhC,CAAZ;A;AACA,UAAI,CAAC,KAAKvzB,KAAL,CAAW8hB,OAAE,CAACnZ,MAAd,CAAL,EAA4B;AAC1B,aAAK+kB,MAAL,CAAY5L,OAAE,CAAClZ,KAAf;AACD;AACF;A;AACD,QAAI,KAAKmlB,GAAL,CAASjM,OAAE,CAACzY,QAAZ,CAAJ,EAA2B;AACzBulB,MAAAA,IAAI,GAAG,KAAK2E,0BAAL,CAAgC,KAAhC,CAAP;AACD;A;AACD,WAAO;AAAE3Y,MAAAA,MAAF;AAAUgU,MAAAA,IAAV;AAAgBziB,MAAAA;AAAhB,KAAP;AACD;A;AAEDkpB,EAAAA,yBAAyB,CACvB1V,QADuB,EAEvBtF,QAFuB,EAGvBlL,IAHuB,EAIvBhZ,EAJuB,EAKD;AACtB,YAAQA,EAAE,CAACyH,IAAX;AACE,WAAK,KAAL;AACE,eAAO,KAAKqhB,UAAL,CAAgB9P,IAAhB,EAAsB,mBAAtB,CAAP;A;AAEF,WAAK,MAAL;AACA,WAAK,SAAL;AACE,eAAO,KAAK8P,UAAL,CAAgB9P,IAAhB,EAAsB,uBAAtB,CAAP;A;AAEF,WAAK,OAAL;AACE,eAAO,KAAK8P,UAAL,CAAgB9P,IAAhB,EAAsB,qBAAtB,CAAP;A;AAEF,WAAK,OAAL;AACE,eAAO,KAAK8P,UAAL,CAAgB9P,IAAhB,EAAsB,qBAAtB,CAAP;A;AAEF,WAAK,QAAL;AACE,eAAO,KAAK8P,UAAL,CAAgB9P,IAAhB,EAAsB,sBAAtB,CAAP;A;AAEF,WAAK,QAAL;AACE,eAAO,KAAK8P,UAAL,CAAgB9P,IAAhB,EAAsB,sBAAtB,CAAP;A;AAEF,WAAK,QAAL;AACE,eAAO,KAAK8P,UAAL,CAAgB9P,IAAhB,EAAsB,sBAAtB,CAAP;A;AAEF;AACE,aAAKsiB,kBAAL,CAAwBt7B,EAAE,CAACyH,IAA3B;AACA,eAAO,KAAKi3B,oBAAL,CAA0BlV,QAA1B,EAAoCtF,QAApC,EAA8ClkB,EAA9C,CAAP;AAzBJ;AA2BD;A;AAKD4+B,EAAAA,oBAAoB,GAAyB;AAC3C,UAAMpV,QAAQ,GAAG,KAAK5Q,KAAL,CAAWtS,KAA5B;AACA,UAAM4d,QAAQ,GAAG,KAAKtL,KAAL,CAAWsL,QAA5B;AACA,UAAMlL,IAAI,GAAG,KAAK2P,SAAL,EAAb;AACA,QAAI7f,GAAJ;AACA,QAAIzJ,IAAJ;AACA,QAAI8/B,aAAa,GAAG,KAApB;AACA,UAAM3C,qBAAqB,GAAG,KAAK5jB,KAAL,CAAW6jB,kBAAzC;A;AAEA,YAAQ,KAAK7jB,KAAL,CAAWvZ,IAAnB;AACE,WAAKssB,OAAE,CAAClkB,IAAR;AACE,YAAI,KAAK4xB,YAAL,CAAkB,WAAlB,CAAJ,EAAoC;AAClC,iBAAO,KAAKuD,sBAAL,EAAP;AACD;A;AAED,eAAO,KAAKsC,yBAAL,CACL1V,QADK,EAELtF,QAFK,EAGLlL,IAHK,EAIL,KAAKmf,eAAL,EAJK,CAAP;A;AAOF,WAAKxM,OAAE,CAACzZ,MAAR;AACE,eAAO,KAAK2oB,mBAAL,CAAyB;AAC9BC,UAAAA,WAAW,EAAE,KADiB;AAE9BC,UAAAA,UAAU,EAAE,KAFkB;AAG9BC,UAAAA,WAAW,EAAE,IAHiB;AAI9BC,UAAAA,UAAU,EAAE,KAJkB;AAK9BC,UAAAA,YAAY,EAAE;AALgB,SAAzB,CAAP;A;AAQF,WAAKvP,OAAE,CAACxZ,SAAR;AACE,eAAO,KAAK0oB,mBAAL,CAAyB;AAC9BC,UAAAA,WAAW,EAAE,KADiB;AAE9BC,UAAAA,UAAU,EAAE,IAFkB;AAG9BC,UAAAA,WAAW,EAAE,IAHiB;AAI9BC,UAAAA,UAAU,EAAE,KAJkB;AAK9BC,UAAAA,YAAY,EAAE;AALgB,SAAzB,CAAP;A;AAQF,WAAKvP,OAAE,CAAC9Z,QAAR;AACE,aAAK+G,KAAL,CAAW6jB,kBAAX,GAAgC,KAAhC;AACAp9B,QAAAA,IAAI,GAAG,KAAKw/B,kBAAL,EAAP;AACA,aAAKjmB,KAAL,CAAW6jB,kBAAX,GAAgCD,qBAAhC;AACA,eAAOn9B,IAAP;A;AAEF,WAAKssB,OAAE,CAACvX,UAAR;AACE,YAAI,KAAKwE,KAAL,CAAWpT,KAAX,KAAqB,GAAzB,EAA8B;AAC5BwT,UAAAA,IAAI,CAACgP,cAAL,GAAsB,KAAKuQ,iCAAL,EAAtB;AACA,eAAKhB,MAAL,CAAY5L,OAAE,CAACpZ,MAAf;AACAzJ,UAAAA,GAAG,GAAG,KAAK0vB,2BAAL,EAAN;AACAxf,UAAAA,IAAI,CAACyL,MAAL,GAAc3b,GAAG,CAAC2b,MAAlB;AACAzL,UAAAA,IAAI,CAACyf,IAAL,GAAY3vB,GAAG,CAAC2vB,IAAhB;AACAzf,UAAAA,IAAI,CAAC0f,IAAL,GAAY5vB,GAAG,CAACkN,KAAhB;AACA,eAAKuhB,MAAL,CAAY5L,OAAE,CAACnZ,MAAf;AAEA,eAAK+kB,MAAL,CAAY5L,OAAE,CAAC3Y,KAAf;AAEAgG,UAAAA,IAAI,CAAC2f,UAAL,GAAkB,KAAKnB,aAAL,EAAlB;AAEA,iBAAO,KAAK1O,UAAL,CAAgB9P,IAAhB,EAAsB,wBAAtB,CAAP;AACD;A;AACD;A;AAEF,WAAK2S,OAAE,CAACpZ,MAAR;AACE,aAAKwb,IAAL;A;AAGA,YAAI,CAAC,KAAKlkB,KAAL,CAAW8hB,OAAE,CAACnZ,MAAd,CAAD,IAA0B,CAAC,KAAK3I,KAAL,CAAW8hB,OAAE,CAACzY,QAAd,CAA/B,EAAwD;AACtD,cAAI,KAAKrJ,KAAL,CAAW8hB,OAAE,CAAClkB,IAAd,KAAuB,KAAKoC,KAAL,CAAW8hB,OAAE,CAAC3V,KAAd,CAA3B,EAAiD;AAC/C,kBAAM7E,KAAK,GAAG,KAAK8rB,SAAL,GAAiB59B,IAA/B;AACA8/B,YAAAA,aAAa,GAAGhuB,KAAK,KAAKwa,OAAE,CAAC7Y,QAAb,IAAyB3B,KAAK,KAAKwa,OAAE,CAAChZ,KAAtD;AACD,WAHD,MAGO;AACLwsB,YAAAA,aAAa,GAAG,IAAhB;AACD;AACF;A;AAED,YAAIA,aAAJ,EAAmB;AACjB,eAAKvmB,KAAL,CAAW6jB,kBAAX,GAAgC,KAAhC;AACAp9B,UAAAA,IAAI,GAAG,KAAKm4B,aAAL,EAAP;AACA,eAAK5e,KAAL,CAAW6jB,kBAAX,GAAgCD,qBAAhC;A;AAGA,cACE,KAAK5jB,KAAL,CAAW6jB,kBAAX,IACA,EACE,KAAK5yB,KAAL,CAAW8hB,OAAE,CAAClZ,KAAd,KACC,KAAK5I,KAAL,CAAW8hB,OAAE,CAACnZ,MAAd,KAAyB,KAAKyqB,SAAL,GAAiB59B,IAAjB,KAA0BssB,OAAE,CAAC3Y,KAFzD,CAFF,EAME;AACA,iBAAKukB,MAAL,CAAY5L,OAAE,CAACnZ,MAAf;AACA,mBAAOnT,IAAP;AACD,WATD,MASO;AAEL,iBAAKu4B,GAAL,CAASjM,OAAE,CAAClZ,KAAZ;AACD;AACF;A;AAED,YAAIpT,IAAJ,EAAU;AACRyJ,UAAAA,GAAG,GAAG,KAAK0vB,2BAAL,CAAiC,CACrC,KAAKyG,kCAAL,CAAwC5/B,IAAxC,CADqC,CAAjC,CAAN;AAGD,SAJD,MAIO;AACLyJ,UAAAA,GAAG,GAAG,KAAK0vB,2BAAL,EAAN;AACD;A;AAEDxf,QAAAA,IAAI,CAACyL,MAAL,GAAc3b,GAAG,CAAC2b,MAAlB;AACAzL,QAAAA,IAAI,CAACyf,IAAL,GAAY3vB,GAAG,CAAC2vB,IAAhB;AACAzf,QAAAA,IAAI,CAAC0f,IAAL,GAAY5vB,GAAG,CAACkN,KAAhB;AAEA,aAAKuhB,MAAL,CAAY5L,OAAE,CAACnZ,MAAf;AAEA,aAAK+kB,MAAL,CAAY5L,OAAE,CAAC3Y,KAAf;AAEAgG,QAAAA,IAAI,CAAC2f,UAAL,GAAkB,KAAKnB,aAAL,EAAlB;AAEAxe,QAAAA,IAAI,CAACgP,cAAL,GAAsB,IAAtB;AAEA,eAAO,KAAKc,UAAL,CAAgB9P,IAAhB,EAAsB,wBAAtB,CAAP;A;AAEF,WAAK2S,OAAE,CAAC/hB,MAAR;AACE,eAAO,KAAKic,YAAL,CACL,KAAKjN,KAAL,CAAWpT,KADN,EAEL,6BAFK,CAAP;A;AAKF,WAAKmmB,OAAE,CAACpV,KAAR;AACA,WAAKoV,OAAE,CAACnV,MAAR;AACEwC,QAAAA,IAAI,CAACxT,KAAL,GAAa,KAAKqE,KAAL,CAAW8hB,OAAE,CAACpV,KAAd,CAAb;AACA,aAAKwX,IAAL;AACA,eAAO,KAAKjF,UAAL,CACL9P,IADK,EAEL,8BAFK,CAAP;A;AAKF,WAAK2S,OAAE,CAACrX,OAAR;AACE,YAAI,KAAKsE,KAAL,CAAWpT,KAAX,KAAqB,GAAzB,EAA8B;AAC5B,eAAKuoB,IAAL;A;AACA,cAAI,KAAKlkB,KAAL,CAAW8hB,OAAE,CAACpa,GAAd,CAAJ,EAAwB;AACtB,mBAAO,KAAK6tB,kBAAL,CACL,CAAC,KAAKxmB,KAAL,CAAWpT,KADP,EAEL,6BAFK,EAGLwT,IAHK,CAAP;AAKD;A;AAED,cAAI,KAAKnP,KAAL,CAAW8hB,OAAE,CAACna,MAAd,CAAJ,EAA2B;AACzB,mBAAO,KAAK4tB,kBAAL,CACL,CAAC,KAAKxmB,KAAL,CAAWpT,KADP,EAEL,6BAFK,EAGLwT,IAHK,CAAP;AAKD;A;AAED,gBAAM,KAAKwL,KAAL,CACJ,KAAK5L,KAAL,CAAWtS,KADP,EAEJwsB,UAAU,CAAC0C,4BAFP,CAAN;AAID;A;AAED,cAAM,KAAKkE,UAAL,EAAN;A;AACF,WAAK/N,OAAE,CAACpa,GAAR;AACE,eAAO,KAAKsU,YAAL,CACL,KAAKjN,KAAL,CAAWpT,KADN,EAEL,6BAFK,CAAP;A;AAKF,WAAKmmB,OAAE,CAACna,MAAR;AACE,eAAO,KAAKqU,YAAL,CACL,KAAKjN,KAAL,CAAWpT,KADN,EAEL,6BAFK,CAAP;A;AAKF,WAAKmmB,OAAE,CAAC/U,KAAR;AACE,aAAKmX,IAAL;AACA,eAAO,KAAKjF,UAAL,CAAgB9P,IAAhB,EAAsB,oBAAtB,CAAP;A;AAEF,WAAK2S,OAAE,CAACrV,KAAR;AACE,aAAKyX,IAAL;AACA,eAAO,KAAKjF,UAAL,CAAgB9P,IAAhB,EAAsB,2BAAtB,CAAP;A;AAEF,WAAK2S,OAAE,CAAC3V,KAAR;AACE,aAAK+X,IAAL;AACA,eAAO,KAAKjF,UAAL,CAAgB9P,IAAhB,EAAsB,oBAAtB,CAAP;A;AAEF,WAAK2S,OAAE,CAACnX,IAAR;AACE,aAAKuZ,IAAL;AACA,eAAO,KAAKjF,UAAL,CAAgB9P,IAAhB,EAAsB,sBAAtB,CAAP;A;AAEF;AACE,YAAI,KAAKJ,KAAL,CAAWvZ,IAAX,CAAgBsR,OAAhB,KAA4B,QAAhC,EAA0C;AACxC,iBAAO,KAAKguB,mBAAL,EAAP;AACD,SAFD,MAEO,IAAI,KAAK/lB,KAAL,CAAWvZ,IAAX,CAAgBsR,OAApB,EAA6B;AAClC,gBAAMF,KAAK,GAAG,KAAKmI,KAAL,CAAWvZ,IAAX,CAAgBoR,KAA9B;AACA,eAAKsd,IAAL;AACA,iBAAO,MAAMsR,gBAAN,CAAuBrmB,IAAvB,EAA6BvI,KAA7B,CAAP;AACD;A;AA3LL;A;AA8LA,UAAM,KAAKipB,UAAL,EAAN;AACD;A;AAED4F,EAAAA,oBAAoB,GAAyB;AAC3C,UAAM9V,QAAQ,GAAG,KAAK5Q,KAAL,CAAWtS,KAA5B;AACA,UAAM4d,QAAQ,GAAG,KAAKtL,KAAL,CAAWsL,QAA5B;AACA,QAAI7kB,IAAI,GAAG,KAAKu/B,oBAAL,EAAX;AACA,QAAIW,yBAAyB,GAAG,KAAhC;A;AACA,WACE,CAAC,KAAK11B,KAAL,CAAW8hB,OAAE,CAAC9Z,QAAd,KAA2B,KAAKhI,KAAL,CAAW8hB,OAAE,CAAC5Y,WAAd,CAA5B,KACA,CAAC,KAAKysB,kBAAL,EAFH,EAGE;AACA,YAAMxmB,IAAI,GAAG,KAAKsN,WAAL,CAAiBkD,QAAjB,EAA2BtF,QAA3B,CAAb;AACA,YAAM6F,QAAQ,GAAG,KAAK6N,GAAL,CAASjM,OAAE,CAAC5Y,WAAZ,CAAjB;AACAwsB,MAAAA,yBAAyB,GAAGA,yBAAyB,IAAIxV,QAAzD;AACA,WAAKwN,MAAL,CAAY5L,OAAE,CAAC9Z,QAAf;A;AACA,UAAI,CAACkY,QAAD,IAAa,KAAKlgB,KAAL,CAAW8hB,OAAE,CAAC3Z,QAAd,CAAjB,EAA0C;AACxCgH,QAAAA,IAAI,CAACymB,WAAL,GAAmBpgC,IAAnB;AACA,aAAK0uB,IAAL;AACA1uB,QAAAA,IAAI,GAAG,KAAKypB,UAAL,CAAgB9P,IAAhB,EAAsB,qBAAtB,CAAP;AACD,OAJD,MAIO;AACLA,QAAAA,IAAI,CAAC0mB,UAAL,GAAkBrgC,IAAlB;AACA2Z,QAAAA,IAAI,CAAC2mB,SAAL,GAAiB,KAAKnI,aAAL,EAAjB;AACA,aAAKD,MAAL,CAAY5L,OAAE,CAAC3Z,QAAf;A;AACA,YAAIutB,yBAAJ,EAA+B;AAC7BvmB,UAAAA,IAAI,CAAC+Q,QAAL,GAAgBA,QAAhB;AACA1qB,UAAAA,IAAI,GAAG,KAAKypB,UAAL,CACL9P,IADK,EAEL,2BAFK,CAAP;AAID,SAND,MAMO;AACL3Z,UAAAA,IAAI,GAAG,KAAKypB,UAAL,CACL9P,IADK,EAEL,mBAFK,CAAP;AAID;AACF;AACF;A;AACD,WAAO3Z,IAAP;AACD;A;AAEDugC,EAAAA,mBAAmB,GAAyB;AAC1C,UAAM5mB,IAAI,GAAG,KAAK2P,SAAL,EAAb;A;AACA,QAAI,KAAKiP,GAAL,CAASjM,OAAE,CAAC7Y,QAAZ,CAAJ,EAA2B;AACzBkG,MAAAA,IAAI,CAAC4f,cAAL,GAAsB,KAAKgH,mBAAL,EAAtB;AACA,aAAO,KAAK9W,UAAL,CAAgB9P,IAAhB,EAAsB,wBAAtB,CAAP;AACD,KAHD,MAGO;AACL,aAAO,KAAKsmB,oBAAL,EAAP;AACD;AACF;A;AAEDO,EAAAA,kCAAkC,GAAyB;AACzD,UAAMC,KAAK,GAAG,KAAKF,mBAAL,EAAd;A;AACA,QAAI,CAAC,KAAKhnB,KAAL,CAAW6jB,kBAAZ,IAAkC,KAAK7E,GAAL,CAASjM,OAAE,CAAC3Y,KAAZ,CAAtC,EAA0D;AAExD,YAAMgG,IAAI,GAAG,KAAKsN,WAAL,CAAiBwZ,KAAK,CAACx5B,KAAvB,EAA8Bw5B,KAAK,CAACnnB,GAAN,CAAUrS,KAAxC,CAAb;AACA0S,MAAAA,IAAI,CAACyL,MAAL,GAAc,CAAC,KAAKwa,kCAAL,CAAwCa,KAAxC,CAAD,CAAd;AACA9mB,MAAAA,IAAI,CAACyf,IAAL,GAAY,IAAZ;AACAzf,MAAAA,IAAI,CAAC0f,IAAL,GAAY,IAAZ;AACA1f,MAAAA,IAAI,CAAC2f,UAAL,GAAkB,KAAKnB,aAAL,EAAlB;AACAxe,MAAAA,IAAI,CAACgP,cAAL,GAAsB,IAAtB;AACA,aAAO,KAAKc,UAAL,CAAgB9P,IAAhB,EAAsB,wBAAtB,CAAP;AACD;A;AACD,WAAO8mB,KAAP;AACD;A;AAEDC,EAAAA,yBAAyB,GAAyB;AAChD,UAAM/mB,IAAI,GAAG,KAAK2P,SAAL,EAAb;AACA,SAAKiP,GAAL,CAASjM,OAAE,CAACzX,UAAZ;AACA,UAAM7U,IAAI,GAAG,KAAKwgC,kCAAL,EAAb;AACA7mB,IAAAA,IAAI,CAAC1H,KAAL,GAAa,CAACjS,IAAD,CAAb;A;AACA,WAAO,KAAKu4B,GAAL,CAASjM,OAAE,CAACzX,UAAZ,CAAP,EAAgC;AAC9B8E,MAAAA,IAAI,CAAC1H,KAAL,CAAWvT,IAAX,CAAgB,KAAK8hC,kCAAL,EAAhB;AACD;A;AACD,WAAO7mB,IAAI,CAAC1H,KAAL,CAAWhR,MAAX,KAAsB,CAAtB,GACHjB,IADG,GAEH,KAAKypB,UAAL,CAAgB9P,IAAhB,EAAsB,4BAAtB,CAFJ;AAGD;A;AAEDgnB,EAAAA,kBAAkB,GAAyB;AACzC,UAAMhnB,IAAI,GAAG,KAAK2P,SAAL,EAAb;AACA,SAAKiP,GAAL,CAASjM,OAAE,CAAC3X,SAAZ;AACA,UAAM3U,IAAI,GAAG,KAAK0gC,yBAAL,EAAb;AACA/mB,IAAAA,IAAI,CAAC1H,KAAL,GAAa,CAACjS,IAAD,CAAb;A;AACA,WAAO,KAAKu4B,GAAL,CAASjM,OAAE,CAAC3X,SAAZ,CAAP,EAA+B;AAC7BgF,MAAAA,IAAI,CAAC1H,KAAL,CAAWvT,IAAX,CAAgB,KAAKgiC,yBAAL,EAAhB;AACD;A;AACD,WAAO/mB,IAAI,CAAC1H,KAAL,CAAWhR,MAAX,KAAsB,CAAtB,GACHjB,IADG,GAEH,KAAKypB,UAAL,CAAgB9P,IAAhB,EAAsB,qBAAtB,CAFJ;AAGD;A;AAEDwe,EAAAA,aAAa,GAAyB;AACpC,UAAMH,SAAS,GAAG,KAAKze,KAAL,CAAW0e,MAA7B;AACA,SAAK1e,KAAL,CAAW0e,MAAX,GAAoB,IAApB;AACA,UAAMj4B,IAAI,GAAG,KAAK2gC,kBAAL,EAAb;AACA,SAAKpnB,KAAL,CAAW0e,MAAX,GAAoBD,SAApB;AAGA,SAAKze,KAAL,CAAWiT,WAAX,GACE,KAAKjT,KAAL,CAAWiT,WAAX,IAA0B,KAAKjT,KAAL,CAAW6jB,kBADvC;AAEA,WAAOp9B,IAAP;AACD;A;AAEDs9B,EAAAA,oCAAoC,GAAyB;AAC3D,QAAI,KAAK/jB,KAAL,CAAWvZ,IAAX,KAAoBssB,OAAE,CAAClkB,IAAvB,IAA+B,KAAKmR,KAAL,CAAWpT,KAAX,KAAqB,GAAxD,EAA6D;AAC3D,YAAMgkB,QAAQ,GAAG,KAAK5Q,KAAL,CAAWtS,KAA5B;AACA,YAAM4d,QAAQ,GAAG,KAAKtL,KAAL,CAAWsL,QAA5B;AACA,YAAMlL,IAAI,GAAG,KAAKmf,eAAL,EAAb;AACA,aAAO,KAAKuG,oBAAL,CAA0BlV,QAA1B,EAAoCtF,QAApC,EAA8ClL,IAA9C,CAAP;AACD,KALD,MAKO;AACL,aAAO,KAAKwe,aAAL,EAAP;AACD;AACF;A;AAED4C,EAAAA,uBAAuB,GAAyB;AAC9C,UAAMphB,IAAI,GAAG,KAAK2P,SAAL,EAAb;AACA3P,IAAAA,IAAI,CAAC4f,cAAL,GAAsB,KAAKzB,wBAAL,EAAtB;AACA,WAAO,KAAKrO,UAAL,CAAgB9P,IAAhB,EAAsB,gBAAtB,CAAP;AACD;A;AAED2gB,EAAAA,kCAAkC,CAChCsG,sBADgC,EAElB;AACd,UAAM/D,KAAK,GAAG+D,sBAAsB,GAChC,KAAK9H,eAAL,EADgC,GAEhC,KAAKqC,6BAAL,EAFJ;A;AAGA,QAAI,KAAK3wB,KAAL,CAAW8hB,OAAE,CAAChZ,KAAd,CAAJ,EAA0B;AACxBupB,MAAAA,KAAK,CAACtD,cAAN,GAAuB,KAAKwB,uBAAL,EAAvB;AACA,WAAKvB,gBAAL,CAAsBqD,KAAtB;AACD;A;AACD,WAAOA,KAAP;AACD;A;AAEDgE,EAAAA,mBAAmB,CAAClnB,IAAD,EAAuB;AACxCA,IAAAA,IAAI,CAACuN,UAAL,CAAgBqS,cAAhB,GAAiC5f,IAAI,CAAC4f,cAAtC;AAEA,SAAKC,gBAAL,CACE7f,IAAI,CAACuN,UADP,EAEEvN,IAAI,CAAC4f,cAAL,CAAoBryB,GAFtB,EAGEyS,IAAI,CAAC4f,cAAL,CAAoBjgB,GAApB,CAAwBpS,GAH1B;AAMA,WAAOyS,IAAI,CAACuN,UAAZ;AACD;A;AAED0V,EAAAA,iBAAiB,GAAoB;AACnC,QAAID,QAAQ,GAAG,IAAf;A;AACA,QAAI,KAAKnyB,KAAL,CAAW8hB,OAAE,CAACrX,OAAd,CAAJ,EAA4B;AAC1B0nB,MAAAA,QAAQ,GAAG,KAAKrT,SAAL,EAAX;A;AACA,UAAI,KAAK/P,KAAL,CAAWpT,KAAX,KAAqB,GAAzB,EAA8B;AAC5Bw2B,QAAAA,QAAQ,CAACpT,IAAT,GAAgB,MAAhB;AACD,OAFD,MAEO;AACLoT,QAAAA,QAAQ,CAACpT,IAAT,GAAgB,OAAhB;AACD;A;AACD,WAAKmF,IAAL;AACA,WAAKjF,UAAL,CAAgBkT,QAAhB,EAA0B,UAA1B;AACD;A;AACD,WAAOA,QAAP;AACD;A;AAMD3T,EAAAA,iBAAiB,CACfrP,IADe,EAEfmnB,mBAFe,EAGf5X,QAAkB,GAAG,KAHN,EAIT;AACN,QAAI4X,mBAAJ,EAAyB;AACvB,aAAO,KAAKC,gCAAL,CAAsCpnB,IAAtC,EAA4C,MACjD,MAAMqP,iBAAN,CAAwBrP,IAAxB,EAA8B,IAA9B,EAAoCuP,QAApC,CADK,CAAP;AAGD;A;AAED,WAAO,MAAMF,iBAAN,CAAwBrP,IAAxB,EAA8B,KAA9B,EAAqCuP,QAArC,CAAP;AACD;A;AAED8X,EAAAA,0BAA0B,CACxBrnB,IADwB,EAExB3Z,IAFwB,EAGxBkpB,QAAkB,GAAG,KAHG,EAIlB;AACN,QAAI,KAAK1e,KAAL,CAAW8hB,OAAE,CAAChZ,KAAd,CAAJ,EAA0B;AACxB,YAAMylB,QAAQ,GAAG,KAAKzP,SAAL,EAAjB;AAEA,OAEEyP,QAAQ,CAACQ,cAFX,EAIE5f,IAAI,CAAC+e,SAJP,IAKI,KAAKD,oCAAL,EALJ;AAOA9e,MAAAA,IAAI,CAAC2f,UAAL,GAAkBP,QAAQ,CAACQ,cAAT,GACd,KAAK9P,UAAL,CAAgBsP,QAAhB,EAA0B,gBAA1B,CADc,GAEd,IAFJ;AAGD;A;AAED,UAAMiI,0BAAN,CAAiCrnB,IAAjC,EAAuC3Z,IAAvC,EAA6CkpB,QAA7C;AACD;A;AAGD+X,EAAAA,cAAc,CAAC1U,OAAD,EAAmB2U,QAAnB,EAAoD;AAEhE,QACE,KAAK3nB,KAAL,CAAWqU,MAAX,IACA,KAAKpjB,KAAL,CAAW8hB,OAAE,CAAClkB,IAAd,CADA,IAEA,KAAKmR,KAAL,CAAWpT,KAAX,KAAqB,WAHvB,EAIE;AACA,YAAMy3B,SAAS,GAAG,KAAKA,SAAL,EAAlB;A;AACA,UAAIA,SAAS,CAAC59B,IAAV,KAAmBssB,OAAE,CAAClkB,IAAtB,IAA8BmmB,SAAS,CAACqP,SAAS,CAACz3B,KAAX,CAA3C,EAA8D;AAC5D,cAAMwT,IAAI,GAAG,KAAK2P,SAAL,EAAb;AACA,aAAKoF,IAAL;AACA,eAAO,KAAKsN,kBAAL,CAAwBriB,IAAxB,CAAP;AACD;AACF,KAXD,MAWO,IAAI,KAAK+d,gBAAL,MAA2B,KAAKsC,YAAL,CAAkB,MAAlB,CAA/B,EAA0D;AAC/D,YAAMrgB,IAAI,GAAG,KAAK2P,SAAL,EAAb;AACA,WAAKoF,IAAL;AACA,aAAO,KAAKyS,wBAAL,CAA8BxnB,IAA9B,CAAP;AACD;A;AACD,UAAMqN,IAAI,GAAG,MAAMia,cAAN,CAAqB1U,OAArB,EAA8B2U,QAA9B,CAAb;A;AAEA,QAAI,KAAK3J,UAAL,KAAoB34B,SAApB,IAAiC,CAAC,KAAKipB,gBAAL,CAAsBb,IAAtB,CAAtC,EAAmE;AACjE,WAAKuQ,UAAL,GAAkB,IAAlB;AACD;A;AACD,WAAOvQ,IAAP;AACD;A;AAGDoa,EAAAA,wBAAwB,CACtBznB,IADsB,EAEtB0nB,IAFsB,EAGC;AACvB,QAAIA,IAAI,CAACrhC,IAAL,KAAc,YAAlB,EAAgC;AAC9B,UAAIqhC,IAAI,CAACj5B,IAAL,KAAc,SAAlB,EAA6B;AAC3B,YACE,KAAKoC,KAAL,CAAW8hB,OAAE,CAACzV,MAAd,KACA,KAAKrM,KAAL,CAAW8hB,OAAE,CAAClkB,IAAd,CADA,IAEA,KAAKoC,KAAL,CAAW8hB,OAAE,CAACtW,SAAd,CAFA,IAGA,KAAKxL,KAAL,CAAW8hB,OAAE,CAAChW,IAAd,CAHA,IAIA,KAAK9L,KAAL,CAAW8hB,OAAE,CAACvV,OAAd,CALF,EAME;AACA,iBAAO,KAAK2iB,gBAAL,CAAsB/f,IAAtB,CAAP;AACD;AACF,OAVD,MAUO,IAAI,KAAKnP,KAAL,CAAW8hB,OAAE,CAAClkB,IAAd,CAAJ,EAAyB;AAC9B,YAAIi5B,IAAI,CAACj5B,IAAL,KAAc,WAAlB,EAA+B;AAC7B,iBAAO,KAAK4zB,kBAAL,CAAwBriB,IAAxB,CAAP;AACD,SAFD,MAEO,IAAI0nB,IAAI,CAACj5B,IAAL,KAAc,MAAlB,EAA0B;AAC/B,iBAAO,KAAK4yB,kBAAL,CAAwBrhB,IAAxB,CAAP;AACD,SAFM,MAEA,IAAI0nB,IAAI,CAACj5B,IAAL,KAAc,QAAlB,EAA4B;AACjC,iBAAO,KAAK6yB,mBAAL,CAAyBthB,IAAzB,EAA+B,KAA/B,CAAP;AACD;AACF;AACF;A;AAED,WAAO,MAAMynB,wBAAN,CAA+BznB,IAA/B,EAAqC0nB,IAArC,CAAP;AACD;A;AAGDC,EAAAA,4BAA4B,GAAY;AACtC,WACE,KAAKtH,YAAL,CAAkB,MAAlB,KACA,KAAKA,YAAL,CAAkB,WAAlB,CADA,IAEA,KAAKA,YAAL,CAAkB,QAAlB,CAFA,IAGC,KAAKtC,gBAAL,MAA2B,KAAKsC,YAAL,CAAkB,MAAlB,CAH5B,IAIA,MAAMsH,4BAAN,EALF;AAOD;A;AAEDC,EAAAA,wBAAwB,GAAY;AAClC,QACE,KAAK/2B,KAAL,CAAW8hB,OAAE,CAAClkB,IAAd,MACC,KAAKmR,KAAL,CAAWpT,KAAX,KAAqB,MAArB,IACC,KAAKoT,KAAL,CAAWpT,KAAX,KAAqB,WADtB,IAEC,KAAKoT,KAAL,CAAWpT,KAAX,KAAqB,QAFtB,IAGE,KAAKuxB,gBAAL,MAA2B,KAAKne,KAAL,CAAWpT,KAAX,KAAqB,MAJnD,CADF,EAME;AACA,aAAO,KAAP;AACD;A;AAED,WAAO,MAAMo7B,wBAAN,EAAP;AACD;A;AAEDC,EAAAA,4BAA4B,GAAiC;AAC3D,QAAI,KAAK9J,gBAAL,MAA2B,KAAKsC,YAAL,CAAkB,MAAlB,CAA/B,EAA0D;AACxD,YAAMrgB,IAAI,GAAG,KAAK2P,SAAL,EAAb;AACA,WAAKoF,IAAL;AACA,aAAO,KAAKyS,wBAAL,CAA8BxnB,IAA9B,CAAP;AACD;A;AACD,WAAO,MAAM6nB,4BAAN,EAAP;AACD;A;AAEDC,EAAAA,gBAAgB,CACdJ,IADc,EAEdlX,QAFc,EAGdtF,QAHc,EAId6c,gBAJc,EAKA;AACd,QAAI,CAAC,KAAKl3B,KAAL,CAAW8hB,OAAE,CAAC7Y,QAAd,CAAL,EAA8B,OAAO4tB,IAAP;A;AAI9B,QAAIK,gBAAJ,EAAsB;AACpB,YAAMC,MAAM,GAAG,KAAKC,QAAL,CAAc,MAC3B,MAAMH,gBAAN,CAAuBJ,IAAvB,EAA6BlX,QAA7B,EAAuCtF,QAAvC,CADa,CAAf;A;AAIA,UAAI,CAAC8c,MAAM,CAAChoB,IAAZ,EAAkB;AAEhB+nB,QAAAA,gBAAgB,CAACz6B,KAAjB,GAAyB06B,MAAM,CAACjgC,KAAP,CAAakjB,GAAb,IAAoB,KAAKrL,KAAL,CAAWtS,KAAxD;AACA,eAAOo6B,IAAP;AACD;A;AAED,UAAIM,MAAM,CAACjgC,KAAX,EAAkB,KAAK6X,KAAL,GAAaooB,MAAM,CAACE,SAApB;AAClB,aAAOF,MAAM,CAAChoB,IAAd;AACD;A;AAED,SAAKue,MAAL,CAAY5L,OAAE,CAAC7Y,QAAf;AACA,UAAM8F,KAAK,GAAG,KAAKA,KAAL,CAAWuoB,KAAX,EAAd;AACA,UAAMC,iBAAiB,GAAG,KAAKxoB,KAAL,CAAWyoB,SAArC;AACA,UAAMroB,IAAI,GAAG,KAAKsN,WAAL,CAAiBkD,QAAjB,EAA2BtF,QAA3B,CAAb;AACA,QAAI;AAAEod,MAAAA,UAAF;AAAcC,MAAAA;AAAd,QAAyB,KAAKC,6BAAL,EAA7B;AACA,QAAI,CAACC,KAAD,EAAQC,OAAR,IAAmB,KAAKC,uBAAL,CAA6BL,UAA7B,CAAvB;A;AAEA,QAAIC,MAAM,IAAIG,OAAO,CAACphC,MAAR,GAAiB,CAA/B,EAAkC;AAChC,YAAM+gC,SAAS,GAAG,CAAC,GAAGD,iBAAJ,CAAlB;A;AAEA,UAAIM,OAAO,CAACphC,MAAR,GAAiB,CAArB,EAAwB;AACtB,aAAKsY,KAAL,GAAaA,KAAb;AACA,aAAKA,KAAL,CAAWyoB,SAAX,GAAuBA,SAAvB;A;AAEA,aAAK,IAAIhhC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqhC,OAAO,CAACphC,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACvCghC,UAAAA,SAAS,CAACtjC,IAAV,CAAe2jC,OAAO,CAACrhC,CAAD,CAAP,CAAWiG,KAA1B;AACD;A;AAED,SAAC;AAAEg7B,UAAAA,UAAF;AAAcC,UAAAA;AAAd,YAAyB,KAAKC,6BAAL,EAA1B;AACA,SAACC,KAAD,EAAQC,OAAR,IAAmB,KAAKC,uBAAL,CAA6BL,UAA7B,CAAnB;AACD;A;AAED,UAAIC,MAAM,IAAIE,KAAK,CAACnhC,MAAN,GAAe,CAA7B,EAAgC;AAM9B,aAAKkkB,KAAL,CAAW5L,KAAK,CAACtS,KAAjB,EAAwBwsB,UAAU,CAACC,yBAAnC;AACD;A;AAED,UAAIwO,MAAM,IAAIE,KAAK,CAACnhC,MAAN,KAAiB,CAA/B,EAAkC;AAChC,aAAKsY,KAAL,GAAaA,KAAb;AACA,aAAKA,KAAL,CAAWyoB,SAAX,GAAuBA,SAAS,CAACx+B,MAAV,CAAiB4+B,KAAK,CAAC,CAAD,CAAL,CAASn7B,KAA1B,CAAvB;AACA,SAAC;AAAEg7B,UAAAA,UAAF;AAAcC,UAAAA;AAAd,YAAyB,KAAKC,6BAAL,EAA1B;AACD;AACF;A;AAED,SAAKG,uBAAL,CAA6BL,UAA7B,EAAyC,IAAzC;AAEA,SAAK1oB,KAAL,CAAWyoB,SAAX,GAAuBD,iBAAvB;AACA,SAAK7J,MAAL,CAAY5L,OAAE,CAAChZ,KAAf;AAEAqG,IAAAA,IAAI,CAACja,IAAL,GAAY2hC,IAAZ;AACA1nB,IAAAA,IAAI,CAACsoB,UAAL,GAAkBA,UAAlB;AACAtoB,IAAAA,IAAI,CAAC4oB,SAAL,GAAiB,KAAKxB,gCAAL,CAAsCpnB,IAAtC,EAA4C,MAC3D,KAAK6oB,gBAAL,CAAsB5jC,SAAtB,EAAiCA,SAAjC,EAA4CA,SAA5C,CADe,CAAjB;AAIA,WAAO,KAAK6qB,UAAL,CAAgB9P,IAAhB,EAAsB,uBAAtB,CAAP;AACD;A;AAEDwoB,EAAAA,6BAA6B,GAG3B;AACA,SAAK5oB,KAAL,CAAWkpB,yBAAX,CAAqC/jC,IAArC,CAA0C,KAAK6a,KAAL,CAAWtS,KAArD;AAEA,UAAMg7B,UAAU,GAAG,KAAKS,uBAAL,EAAnB;AACA,UAAMR,MAAM,GAAG,CAAC,KAAK13B,KAAL,CAAW8hB,OAAE,CAAChZ,KAAd,CAAhB;AAEA,SAAKiG,KAAL,CAAWkpB,yBAAX,CAAqCloB,GAArC;AAEA,WAAO;AAAE0nB,MAAAA,UAAF;AAAcC,MAAAA;AAAd,KAAP;AACD;A;AASDI,EAAAA,uBAAuB,CACrB3oB,IADqB,EAErBgpB,eAFqB,EAGuC;AAC5D,UAAMnhC,KAAK,GAAG,CAACmY,IAAD,CAAd;AACA,UAAMipB,MAAmC,GAAG,EAA5C;A;AAEA,WAAOphC,KAAK,CAACP,MAAN,KAAiB,CAAxB,EAA2B;AACzB,YAAM0Y,IAAI,GAAGnY,KAAK,CAAC+Y,GAAN,EAAb;A;AACA,UAAIZ,IAAI,CAAC3Z,IAAL,KAAc,yBAAlB,EAA6C;AAC3C,YAAI2Z,IAAI,CAACgP,cAAL,IAAuB,CAAChP,IAAI,CAAC2f,UAAjC,EAA6C;AAE3C,eAAKuJ,qBAAL,CAA2BlpB,IAA3B;AACD,SAHD,MAGO;AACLipB,UAAAA,MAAM,CAAClkC,IAAP,CAAYib,IAAZ;AACD;A;AACDnY,QAAAA,KAAK,CAAC9C,IAAN,CAAWib,IAAI,CAACzX,IAAhB;AACD,OARD,MAQO,IAAIyX,IAAI,CAAC3Z,IAAL,KAAc,uBAAlB,EAA2C;AAChDwB,QAAAA,KAAK,CAAC9C,IAAN,CAAWib,IAAI,CAACsoB,UAAhB;AACAzgC,QAAAA,KAAK,CAAC9C,IAAN,CAAWib,IAAI,CAAC4oB,SAAhB;AACD;AACF;A;AAED,QAAII,eAAJ,EAAqB;AACnBC,MAAAA,MAAM,CAACriC,OAAP,CAAeoZ,IAAI,IAAI,KAAKkpB,qBAAL,CAA2BlpB,IAA3B,CAAvB;AACA,aAAO,CAACipB,MAAD,EAAS,EAAT,CAAP;AACD;A;AAED,WAAOzL,SAAS,CAACyL,MAAD,EAASjpB,IAAI,IAC3BA,IAAI,CAACyL,MAAL,CAAY0d,KAAZ,CAAkBrC,KAAK,IAAI,KAAKsC,YAAL,CAAkBtC,KAAlB,EAAyB,IAAzB,CAA3B,CADc,CAAhB;AAGD;A;AAEDoC,EAAAA,qBAAqB,CAAClpB,IAAD,EAAkC;AAAA;A;AACrD,SAAKqpB,gBAAL,CAGIrpB,IAAI,CAACyL,MAHT,iBAIEzL,IAAI,CAACwN,KAJP,qBAIE,YAAY8b,aAJd,EAKc,KALd;AAQA,SAAKrQ,KAAL,CAAWF,KAAX,CAAiB7D,cAAc,GAAGC,WAAlC;AAEA,UAAMoU,WAAN,CAAkBvpB,IAAlB,EAAwB,KAAxB,EAA+B,IAA/B;AACA,SAAKiZ,KAAL,CAAWD,IAAX;AACD;A;AAEDoO,EAAAA,gCAAgC,CAAIpnB,IAAJ,EAAkB5Z,KAAlB,EAAqC;AACnE,QAAI4hC,MAAJ;A;AACA,QAAI,KAAKpoB,KAAL,CAAWkpB,yBAAX,CAAqCvjC,OAArC,CAA6Cya,IAAI,CAAC1S,KAAlD,MAA6D,CAAC,CAAlE,EAAqE;AACnE,WAAKsS,KAAL,CAAWkpB,yBAAX,CAAqC/jC,IAArC,CAA0C,KAAK6a,KAAL,CAAWtS,KAArD;AACA06B,MAAAA,MAAM,GAAG5hC,KAAK,EAAd;AACA,WAAKwZ,KAAL,CAAWkpB,yBAAX,CAAqCloB,GAArC;AACD,KAJD,MAIO;AACLonB,MAAAA,MAAM,GAAG5hC,KAAK,EAAd;AACD;A;AAED,WAAO4hC,MAAP;AACD;A;AAEDwB,EAAAA,cAAc,CACZxpB,IADY,EAEZwQ,QAFY,EAGZtF,QAHY,EAIE;AACdlL,IAAAA,IAAI,GAAG,MAAMwpB,cAAN,CAAqBxpB,IAArB,EAA2BwQ,QAA3B,EAAqCtF,QAArC,CAAP;A;AACA,QAAI,KAAK0T,GAAL,CAASjM,OAAE,CAAC7Y,QAAZ,CAAJ,EAA2B;AACzBkG,MAAAA,IAAI,CAAC+Q,QAAL,GAAgB,IAAhB;AAIA,WAAK8O,gBAAL,CAAsB7f,IAAtB;AACD;A;AAED,QAAI,KAAKnP,KAAL,CAAW8hB,OAAE,CAAChZ,KAAd,CAAJ,EAA0B;AACxB,YAAM8vB,YAAY,GAAG,KAAKnc,WAAL,CAAiBkD,QAAjB,EAA2BtF,QAA3B,CAArB;AACAue,MAAAA,YAAY,CAAClc,UAAb,GAA0BvN,IAA1B;AACAypB,MAAAA,YAAY,CAAC7J,cAAb,GAA8B,KAAKwB,uBAAL,EAA9B;AAEA,aAAO,KAAKtR,UAAL,CAAgB2Z,YAAhB,EAA8B,oBAA9B,CAAP;AACD;A;AAED,WAAOzpB,IAAP;AACD;A;AAED0pB,EAAAA,uBAAuB,CAAC1pB,IAAD,EAAe;AACpC,QACGA,IAAI,CAAC3Z,IAAL,KAAc,mBAAd,KACE2Z,IAAI,CAACkd,UAAL,KAAoB,MAApB,IAA8Bld,IAAI,CAACkd,UAAL,KAAoB,QADpD,CAAD,IAECld,IAAI,CAAC3Z,IAAL,KAAc,wBAAd,IACC2Z,IAAI,CAACmhB,UAAL,KAAoB,MAHtB,IAICnhB,IAAI,CAAC3Z,IAAL,KAAc,sBAAd,IAAwC2Z,IAAI,CAACmhB,UAAL,KAAoB,MAL/D,EAME;AAGA;AACD;A;AAED,UAAMuI,uBAAN,CAA8B1pB,IAA9B;AACD;A;AAEDmR,EAAAA,WAAW,CAACnR,IAAD,EAA4B;AACrC,UAAM2pB,IAAI,GAAG,MAAMxY,WAAN,CAAkBnR,IAAlB,CAAb;A;AACA,QACE2pB,IAAI,CAACtjC,IAAL,KAAc,wBAAd,IACAsjC,IAAI,CAACtjC,IAAL,KAAc,sBAFhB,EAGE;AACAsjC,MAAAA,IAAI,CAACxI,UAAL,GAAkBwI,IAAI,CAACxI,UAAL,IAAmB,OAArC;AACD;A;AACD,WAAOwI,IAAP;AACD;A;AAEDC,EAAAA,sBAAsB,CAAC5pB,IAAD,EAAiD;AACrE,QAAI,KAAKqgB,YAAL,CAAkB,MAAlB,CAAJ,EAA+B;AAC7BrgB,MAAAA,IAAI,CAACmhB,UAAL,GAAkB,MAAlB;AAEA,YAAM0I,eAAe,GAAG,KAAKla,SAAL,EAAxB;AACA,WAAKoF,IAAL;A;AAEA,UAAI,KAAKlkB,KAAL,CAAW8hB,OAAE,CAACzZ,MAAd,CAAJ,EAA2B;AAEzB8G,QAAAA,IAAI,CAACqR,UAAL,GAAkB,KAAKyY,qBAAL,EAAlB;AACA,aAAKC,eAAL,CAAqB/pB,IAArB;AACA,eAAO,IAAP;AACD,OALD,MAKO;AAEL,eAAO,KAAKqhB,kBAAL,CAAwBwI,eAAxB,CAAP;AACD;AACF,KAfD,MAeO,IAAI,KAAKxJ,YAAL,CAAkB,QAAlB,CAAJ,EAAiC;AACtCrgB,MAAAA,IAAI,CAACmhB,UAAL,GAAkB,MAAlB;AAEA,YAAM0I,eAAe,GAAG,KAAKla,SAAL,EAAxB;AACA,WAAKoF,IAAL;AAEA,aAAO,KAAKuM,mBAAL,CAAyBuI,eAAzB,EAA0C,KAA1C,CAAP;AACD,KAPM,MAOA,IAAI,KAAKxJ,YAAL,CAAkB,WAAlB,CAAJ,EAAoC;AACzCrgB,MAAAA,IAAI,CAACmhB,UAAL,GAAkB,MAAlB;AACA,YAAM0I,eAAe,GAAG,KAAKla,SAAL,EAAxB;AACA,WAAKoF,IAAL;AACA,aAAO,KAAKsN,kBAAL,CAAwBwH,eAAxB,CAAP;AACD,KALM,MAKA,IAAI,KAAK9L,gBAAL,MAA2B,KAAKsC,YAAL,CAAkB,MAAlB,CAA/B,EAA0D;AAC/DrgB,MAAAA,IAAI,CAACmhB,UAAL,GAAkB,OAAlB;AACA,YAAM0I,eAAe,GAAG,KAAKla,SAAL,EAAxB;AACA,WAAKoF,IAAL;AACA,aAAO,KAAKyS,wBAAL,CAA8BqC,eAA9B,CAAP;AACD,KALM,MAKA;AACL,aAAO,MAAMD,sBAAN,CAA6B5pB,IAA7B,CAAP;AACD;AACF;A;AAEDgqB,EAAAA,aAAa,CAAChqB,IAAD,EAAwB;AACnC,QAAI,MAAMgqB,aAAN,CAAoB,GAAGlpB,SAAvB,CAAJ,EAAuC,OAAO,IAAP;A;AAEvC,QAAI,KAAKuf,YAAL,CAAkB,MAAlB,KAA6B,KAAK4D,SAAL,GAAiB59B,IAAjB,KAA0BssB,OAAE,CAACnX,IAA9D,EAAoE;AAClEwE,MAAAA,IAAI,CAACmhB,UAAL,GAAkB,MAAlB;AACA,WAAKpM,IAAL;AACA,WAAKA,IAAL;AACA,aAAO,IAAP;AACD;A;AAED,WAAO,KAAP;AACD;A;AAEDkV,EAAAA,kCAAkC,CAACjqB,IAAD,EAAwB;AACxD,UAAMiL,GAAG,GAAG,KAAKrL,KAAL,CAAWtS,KAAvB;AACA,UAAM48B,YAAY,GAAG,MAAMD,kCAAN,CAAyCjqB,IAAzC,CAArB;A;AACA,QAAIkqB,YAAY,IAAIlqB,IAAI,CAACmhB,UAAL,KAAoB,MAAxC,EAAgD;AAC9C,WAAKT,UAAL,CAAgBzV,GAAhB;AACD;A;AACD,WAAOif,YAAP;AACD;A;AAEDC,EAAAA,YAAY,CAACnqB,IAAD,EAAgBoqB,WAAhB,EAAsCC,UAAtC,EAA4D;AACtE,UAAMF,YAAN,CAAmBnqB,IAAnB,EAAyBoqB,WAAzB,EAAsCC,UAAtC;A;AACA,QAAI,KAAK/K,YAAL,CAAkB,GAAlB,CAAJ,EAA4B;AAC1Btf,MAAAA,IAAI,CAACgP,cAAL,GAAsB,KAAKuQ,iCAAL,EAAtB;AACD;AACF;A;AAED+K,EAAAA,gBAAgB,CACd3b,SADc,EAEd4b,MAFc,EAGd3qB,KAHc,EAIR;AACN,UAAMqL,GAAG,GAAG,KAAKrL,KAAL,CAAWtS,KAAvB;A;AACA,QAAI,KAAK+yB,YAAL,CAAkB,SAAlB,CAAJ,EAAkC;AAChC,UAAI,KAAKmK,4BAAL,CAAkC7b,SAAlC,EAA6C4b,MAA7C,CAAJ,EAA0D;AAExD;AACD;A;AAEDA,MAAAA,MAAM,CAAC7H,OAAP,GAAiB,IAAjB;AACD;A;AAED,UAAM4H,gBAAN,CAAuB3b,SAAvB,EAAkC4b,MAAlC,EAA0C3qB,KAA1C;A;AAEA,QAAI2qB,MAAM,CAAC7H,OAAX,EAAoB;AAClB,UACE6H,MAAM,CAAClkC,IAAP,KAAgB,eAAhB,IACAkkC,MAAM,CAAClkC,IAAP,KAAgB,sBADhB,IAEAkkC,MAAM,CAAClkC,IAAP,KAAgB,oBAHlB,EAIE;AACA,eAAKmlB,KAAL,CAAWP,GAAX,EAAgB6O,UAAU,CAACI,mBAA3B;AACD,SAND,MAMO,IAAIqQ,MAAM,CAAC/9B,KAAX,EAAkB;AACvB,aAAKgf,KAAL,CACE+e,MAAM,CAAC/9B,KAAP,CAAac,KADf,EAEEwsB,UAAU,CAACK,4BAFb;AAID;AACF;AACF;A;AAEDsQ,EAAAA,UAAU,CAAClW,IAAD,EAAwB;AAChC,WAAOA,IAAI,KAAK,UAAT,IAAuBA,IAAI,KAAK,eAAvC;AACD;A;AAEDmW,EAAAA,YAAY,GAAS;AACnB,UAAMnW,IAAI,GAAG,MAAMoW,SAAN,EAAb;AACA,UAAMC,QAAQ,GAAG,OAAOrW,IAAxB;A;AAGA,QAAI,CAAC,KAAKkW,UAAL,CAAgBlW,IAAhB,CAAD,IAA0B,CAAC,KAAK3U,KAAL,CAAW0e,MAA1C,EAAkD;AAChD,WAAK9S,KAAL,CAAW,KAAK5L,KAAL,CAAWqL,GAAtB,EAA2B4F,aAAM,CAACnM,iBAAlC,EAAqDkmB,QAArD;AACD;A;AAED,SAAK5M,WAAL,CAAiBrL,OAAE,CAAClkB,IAApB,EAA0Bm8B,QAA1B;AACD;A;AAGDC,EAAAA,gBAAgB,CAAC5sB,IAAD,EAAqB;AACnC,UAAM8W,IAAI,GAAG,KAAKpW,KAAL,CAAWzN,UAAX,CAAsB,KAAK0O,KAAL,CAAWqL,GAAX,GAAiB,CAAvC,CAAb;A;AACA,QAAIhN,IAAI,QAAJ,IAAqC8W,IAAI,QAA7C,EAAyE;AACvE,aAAO,KAAK+V,QAAL,CAAcnY,OAAE,CAACxZ,SAAjB,EAA4B,CAA5B,CAAP;AACD,KAFD,MAEO,IACL,KAAKyG,KAAL,CAAW0e,MAAX,KACCrgB,IAAI,OAAJ,IAAkCA,IAAI,OADvC,CADK,EAGL;AACA,aAAO,KAAK6sB,QAAL,CAAcnY,OAAE,CAACvX,UAAjB,EAA6B,CAA7B,CAAP;AACD,KALM,MAKA,IAAI,KAAKwE,KAAL,CAAW0e,MAAX,IAAqBrgB,IAAI,OAA7B,EAA0D;AAC/D,UAAI8W,IAAI,OAAR,EAA4B;AAC1B,eAAO,KAAK+V,QAAL,CAAcnY,OAAE,CAAC5Y,WAAjB,EAA8B,CAA9B,CAAP;AACD;A;AAED,aAAO,KAAK+wB,QAAL,CAAcnY,OAAE,CAAC7Y,QAAjB,EAA2B,CAA3B,CAAP;AACD,KANM,MAMA,IAAI+a,eAAe,CAAC5W,IAAD,EAAO8W,IAAP,CAAnB,EAAiC;AACtC,WAAKnV,KAAL,CAAWqL,GAAX,IAAkB,CAAlB;AACA,aAAO,KAAKyf,YAAL,EAAP;AACD,KAHM,MAGA;AACL,aAAO,MAAMG,gBAAN,CAAuB5sB,IAAvB,CAAP;AACD;AACF;A;AAEDmrB,EAAAA,YAAY,CAACppB,IAAD,EAAe+qB,SAAf,EAA6C;AACvD,YAAQ/qB,IAAI,CAAC3Z,IAAb;AACE,WAAK,YAAL;AACA,WAAK,eAAL;AACA,WAAK,cAAL;AACA,WAAK,mBAAL;AACE,eAAO,IAAP;A;AAEF,WAAK,kBAAL;AAAyB;AACvB,gBAAMkZ,IAAI,GAAGS,IAAI,CAACa,UAAL,CAAgBvZ,MAAhB,GAAyB,CAAtC;AACA,iBAAO0Y,IAAI,CAACa,UAAL,CAAgBsoB,KAAhB,CAAsB,CAAChZ,IAAD,EAAO9oB,CAAP,KAAa;AACxC,mBACE8oB,IAAI,CAAC9pB,IAAL,KAAc,cAAd,KACCgB,CAAC,KAAKkY,IAAN,IAAc4Q,IAAI,CAAC9pB,IAAL,KAAc,eAD7B,KAEA,KAAK+iC,YAAL,CAAkBjZ,IAAlB,CAHF;AAKD,WANM,CAAP;AAOD;A;AAED,WAAK,gBAAL;AACE,eAAO,KAAKiZ,YAAL,CAAkBppB,IAAI,CAACxT,KAAvB,CAAP;A;AAEF,WAAK,eAAL;AACE,eAAO,KAAK48B,YAAL,CAAkBppB,IAAI,CAACmlB,QAAvB,CAAP;A;AAEF,WAAK,iBAAL;AACE,eAAOnlB,IAAI,CAACC,QAAL,CAAckpB,KAAd,CAAoB6B,OAAO,IAAI,KAAK5B,YAAL,CAAkB4B,OAAlB,CAA/B,CAAP;A;AAEF,WAAK,sBAAL;AACE,eAAOhrB,IAAI,CAACirB,QAAL,KAAkB,GAAzB;A;AAEF,WAAK,yBAAL;AACA,WAAK,oBAAL;AACE,eAAO,KAAK7B,YAAL,CAAkBppB,IAAI,CAACuN,UAAvB,CAAP;A;AAEF,WAAK,kBAAL;AACA,WAAK,0BAAL;AACE,eAAO,CAACwd,SAAR;A;AAEF;AACE,eAAO,KAAP;AAvCJ;AAyCD;A;AAEDra,EAAAA,YAAY,CAAC1Q,IAAD,EAAe2Q,KAAc,GAAG,KAAhC,EAA+C;AACzD,QAAI3Q,IAAI,CAAC3Z,IAAL,KAAc,oBAAlB,EAAwC;AACtC,aAAO,MAAMqqB,YAAN,CAAmB,KAAKwW,mBAAL,CAAyBlnB,IAAzB,CAAnB,EAAmD2Q,KAAnD,CAAP;AACD,KAFD,MAEO;AACL,aAAO,MAAMD,YAAN,CAAmB1Q,IAAnB,EAAyB2Q,KAAzB,CAAP;AACD;AACF;A;AAGD0Y,EAAAA,gBAAgB,CACd6B,QADc,EAEdC,gBAFc,EAGdxa,KAHc,EAIa;AAC3B,SAAK,IAAItpB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG6jC,QAAQ,CAAC5jC,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACxC,YAAMqgC,IAAI,GAAGwD,QAAQ,CAAC7jC,CAAD,CAArB;A;AACA,UAAI,CAAAqgC,IAAI,QAAJ,YAAAA,IAAI,CAAErhC,IAAN,MAAe,oBAAnB,EAAyC;AACvC6kC,QAAAA,QAAQ,CAAC7jC,CAAD,CAAR,GAAc,KAAK6/B,mBAAL,CAAyBQ,IAAzB,CAAd;AACD;AACF;A;AACD,WAAO,MAAM2B,gBAAN,CAAuB6B,QAAvB,EAAiCC,gBAAjC,EAAmDxa,KAAnD,CAAP;AACD;A;AAIDya,EAAAA,gBAAgB,CACdF,QADc,EAEdG,mBAFc,EAGiB;AAC/B,SAAK,IAAIhkC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG6jC,QAAQ,CAAC5jC,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AAAA;A;AACxC,YAAMqgC,IAAI,GAAGwD,QAAQ,CAAC7jC,CAAD,CAArB;A;AACA,UACEqgC,IAAI,IACJA,IAAI,CAACrhC,IAAL,KAAc,oBADd,IAEA,iBAACqhC,IAAI,CAACla,KAAN,aAAC,YAAYW,aAAb,CAFA,KAGC+c,QAAQ,CAAC5jC,MAAT,GAAkB,CAAlB,IAAuB,CAAC+jC,mBAHzB,CADF,EAKE;AACA,aAAK7f,KAAL,CAAWkc,IAAI,CAAC9H,cAAL,CAAoBtyB,KAA/B,EAAsCwsB,UAAU,CAACoC,iBAAjD;AACD;AACF;A;AAED,WAAOgP,QAAP;AACD;A;AAEDI,EAAAA,cAAc,CACZC,KADY,EAEZC,YAFY,EAGZC,OAHY,EAIZhb,mBAJY,EAK2B;AACvC,UAAMzQ,IAAI,GAAG,MAAMsrB,cAAN,CACXC,KADW,EAEXC,YAFW,EAGXC,OAHW,EAIXhb,mBAJW,CAAb;A;AAYA,QAAI+a,YAAY,IAAI,CAAC,KAAK5rB,KAAL,CAAW8rB,sBAAhC,EAAwD;AACtD,WAAKN,gBAAL,CAAsBprB,IAAI,CAACC,QAA3B;AACD;A;AAED,WAAOD,IAAP;AACD;A;AAED2rB,EAAAA,SAAS,CACPjE,IADO,EAEP,GAAGnZ,IAFI,EAWD;AACN,QAAImZ,IAAI,CAACrhC,IAAL,KAAc,oBAAlB,EAAwC;AACtC,aAAO,MAAMslC,SAAN,CAAgBjE,IAAhB,EAAsB,GAAGnZ,IAAzB,CAAP;AACD;AACF;A;AAGDwB,EAAAA,kBAAkB,CAAC/P,IAAD,EAAyC;AACzD,QAAI,KAAKnP,KAAL,CAAW8hB,OAAE,CAAChZ,KAAd,CAAJ,EAA0B;AACxBqG,MAAAA,IAAI,CAAC4f,cAAL,GAAsB,KAAKwB,uBAAL,EAAtB;AACD;A;AACD,WAAO,MAAMrR,kBAAN,CAAyB/P,IAAzB,CAAP;AACD;A;AAEDiQ,EAAAA,yBAAyB,CACvBjQ,IADuB,EAEC;AACxB,QAAI,KAAKnP,KAAL,CAAW8hB,OAAE,CAAChZ,KAAd,CAAJ,EAA0B;AACxBqG,MAAAA,IAAI,CAAC4f,cAAL,GAAsB,KAAKwB,uBAAL,EAAtB;AACD;A;AACD,WAAO,MAAMnR,yBAAN,CAAgCjQ,IAAhC,CAAP;AACD;A;AAGD4rB,EAAAA,aAAa,GAAY;AACvB,WAAO,KAAKtM,YAAL,CAAkB,GAAlB,KAA0B,MAAMsM,aAAN,EAAjC;AACD;A;AAGDC,EAAAA,eAAe,GAAY;AACzB,WAAO,KAAKh7B,KAAL,CAAW8hB,OAAE,CAAChZ,KAAd,KAAwB,MAAMkyB,eAAN,EAA/B;AACD;A;AAEDC,EAAAA,sBAAsB,CAAC7d,MAAD,EAAmD;AACvE,WAAO,CAAC,KAAKpd,KAAL,CAAW8hB,OAAE,CAAChZ,KAAd,CAAD,IAAyB,MAAMmyB,sBAAN,CAA6B7d,MAA7B,CAAhC;AACD;A;AAGDS,EAAAA,eAAe,CACbC,SADa,EAEbV,MAFa,EAGbW,WAHa,EAIbf,OAJa,EAKbgB,aALa,EAMbC,iBANa,EAOP;AACN,QAAKb,MAAD,CAAqB+U,QAAzB,EAAmC;AACjC,WAAKtC,UAAL,CAAiBzS,MAAD,CAAqB+U,QAArB,CAA8B11B,KAA9C;AACD;A;AACD,WAAQ2gB,MAAD,CAAqB+U,QAA5B;A;AACA,QAAI,KAAK1D,YAAL,CAAkB,GAAlB,CAAJ,EAA4B;AAC1BrR,MAAAA,MAAM,CAACe,cAAP,GAAwB,KAAKuQ,iCAAL,EAAxB;AACD;A;AAED,UAAM7Q,eAAN,CACEC,SADF,EAEEV,MAFF,EAGEW,WAHF,EAIEf,OAJF,EAKEgB,aALF,EAMEC,iBANF;A;AASA,QAAIb,MAAM,CAACxC,MAAP,IAAiBoD,aAArB,EAAoC;AAClC,YAAMpD,MAAM,GAAGwC,MAAM,CAACxC,MAAtB;A;AACA,UAAIA,MAAM,CAACnkB,MAAP,GAAgB,CAAhB,IAAqB,KAAKykC,WAAL,CAAiBtgB,MAAM,CAAC,CAAD,CAAvB,CAAzB,EAAsD;AACpD,aAAKD,KAAL,CAAWyC,MAAM,CAAC3gB,KAAlB,EAAyBwsB,UAAU,CAAC+B,4BAApC;AACD;AAEF,KAND,MAMO,IAEL5N,MAAM,CAAC5nB,IAAP,KAAgB,kBAAhB,IACAwoB,aADA,IAEAZ,MAAM,CAACzhB,KAAP,CAAaif,MAJR,EAKL;AACA,YAAMA,MAAM,GAAGwC,MAAM,CAACzhB,KAAP,CAAaif,MAA5B;A;AACA,UAAIA,MAAM,CAACnkB,MAAP,GAAgB,CAAhB,IAAqB,KAAKykC,WAAL,CAAiBtgB,MAAM,CAAC,CAAD,CAAvB,CAAzB,EAAsD;AACpD,aAAKD,KAAL,CAAWyC,MAAM,CAAC3gB,KAAlB,EAAyBwsB,UAAU,CAAC+B,4BAApC;AACD;AACF;AACF;A;AAEDmQ,EAAAA,sBAAsB,CACpBrd,SADoB,EAEpBV,MAFoB,EAGpBW,WAHoB,EAIpBf,OAJoB,EAKd;AACN,QAAKI,MAAD,CAAqB+U,QAAzB,EAAmC;AACjC,WAAKtC,UAAL,CAAiBzS,MAAD,CAAqB+U,QAArB,CAA8B11B,KAA9C;AACD;A;AACD,WAAQ2gB,MAAD,CAAqB+U,QAA5B;A;AACA,QAAI,KAAK1D,YAAL,CAAkB,GAAlB,CAAJ,EAA4B;AAC1BrR,MAAAA,MAAM,CAACe,cAAP,GAAwB,KAAKuQ,iCAAL,EAAxB;AACD;A;AAED,UAAMyM,sBAAN,CAA6Brd,SAA7B,EAAwCV,MAAxC,EAAgDW,WAAhD,EAA6Df,OAA7D;AACD;A;AAGDoe,EAAAA,eAAe,CAACjsB,IAAD,EAAsB;AACnC,UAAMisB,eAAN,CAAsBjsB,IAAtB;A;AACA,QAAIA,IAAI,CAACmM,UAAL,IAAmB,KAAKmT,YAAL,CAAkB,GAAlB,CAAvB,EAA+C;AAC7Ctf,MAAAA,IAAI,CAACksB,mBAAL,GAA2B,KAAK9J,mCAAL,EAA3B;AACD;A;AACD,QAAI,KAAK/B,YAAL,CAAkB,YAAlB,CAAJ,EAAqC;AACnC,WAAKtL,IAAL;AACA,YAAMoX,WAAoC,GAAInsB,IAAI,CAAC0hB,UAAL,GAAkB,EAAhE;A;AACA,SAAG;AACD,cAAM1hB,IAAI,GAAG,KAAK2P,SAAL,EAAb;AACA3P,QAAAA,IAAI,CAAChZ,EAAL,GAAU,KAAKw6B,6BAAL,CAA+C,IAA/C,CAAV;A;AACA,YAAI,KAAKlC,YAAL,CAAkB,GAAlB,CAAJ,EAA4B;AAC1Btf,UAAAA,IAAI,CAACgP,cAAL,GAAsB,KAAKoT,mCAAL,EAAtB;AACD,SAFD,MAEO;AACLpiB,UAAAA,IAAI,CAACgP,cAAL,GAAsB,IAAtB;AACD;A;AACDmd,QAAAA,WAAW,CAACpnC,IAAZ,CAAiB,KAAK+qB,UAAL,CAAgB9P,IAAhB,EAAsB,iBAAtB,CAAjB;AACD,OATD,QASS,KAAK4e,GAAL,CAASjM,OAAE,CAAClZ,KAAZ,CATT;AAUD;AACF;A;AAED2yB,EAAAA,uBAAuB,CAACne,MAAD,EAA+C;AACpE,UAAMme,uBAAN,CAA8Bne,MAA9B;AACA,UAAMxC,MAAM,GAAG,KAAKuC,4BAAL,CAAkCC,MAAlC,CAAf;A;AACA,QAAIxC,MAAM,CAACnkB,MAAP,GAAgB,CAApB,EAAuB;AACrB,YAAMw/B,KAAK,GAAGrb,MAAM,CAAC,CAAD,CAApB;A;AACA,UAAI,KAAKsgB,WAAL,CAAiBjF,KAAjB,KAA2B7Y,MAAM,CAAC2B,IAAP,KAAgB,KAA/C,EAAsD;AACpD,aAAKpE,KAAL,CAAWsb,KAAK,CAACx5B,KAAjB,EAAwBwsB,UAAU,CAACkB,yBAAnC;AACD,OAFD,MAEO,IAAI,KAAK+Q,WAAL,CAAiBjF,KAAjB,CAAJ,EAA6B;AAClC,aAAKtb,KAAL,CAAWsb,KAAK,CAACx5B,KAAjB,EAAwBwsB,UAAU,CAAC4B,yBAAnC;AACD;AACF;AACF;A;AAED2Q,EAAAA,iBAAiB,CACfrsB,IADe,EAEfssB,oBAFe,EAGD;AACd,UAAMtJ,QAAQ,GAAG,KAAKC,iBAAL,EAAjB;AACA,UAAMzzB,GAAG,GAAG,MAAM68B,iBAAN,CAAwBrsB,IAAxB,EAA8BssB,oBAA9B,CAAZ;AAEAtsB,IAAAA,IAAI,CAACgjB,QAAL,GAAgBA,QAAhB;AACA,WAAOxzB,GAAP;AACD;A;AAGD+8B,EAAAA,iBAAiB,CACfpc,IADe,EAEfK,QAFe,EAGftF,QAHe,EAIf0D,WAJe,EAKff,OALe,EAMfuC,SANe,EAOfC,UAPe,EAQfI,mBARe,EAST;AACN,QAAKN,IAAD,CAAmB6S,QAAvB,EAAiC;AAC/B,WAAKtC,UAAL,CAAiBvQ,IAAD,CAAmB6S,QAAnB,CAA4B11B,KAA5C;AACD;A;AACD,WAAQ6iB,IAAD,CAAmB6S,QAA1B;AAEA,QAAIhU,cAAJ;A;AAGA,QAAI,KAAKsQ,YAAL,CAAkB,GAAlB,KAA0B,CAACjP,UAA/B,EAA2C;AACzCrB,MAAAA,cAAc,GAAG,KAAKuQ,iCAAL,EAAjB;AACA,UAAI,CAAC,KAAK1uB,KAAL,CAAW8hB,OAAE,CAACpZ,MAAd,CAAL,EAA4B,KAAKmnB,UAAL;AAC7B;A;AAED,UAAM6L,iBAAN,CACEpc,IADF,EAEEK,QAFF,EAGEtF,QAHF,EAIE0D,WAJF,EAKEf,OALF,EAMEuC,SANF,EAOEC,UAPF,EAQEI,mBARF;A;AAYA,QAAIzB,cAAJ,EAAoB;AAClB,OAACmB,IAAI,CAAC3jB,KAAL,IAAc2jB,IAAf,EAAqBnB,cAArB,GAAsCA,cAAtC;AACD;AACF;A;AAEDwd,EAAAA,4BAA4B,CAAC1F,KAAD,EAA8B;AACxD,QAAI,KAAKlI,GAAL,CAASjM,OAAE,CAAC7Y,QAAZ,CAAJ,EAA2B;AACzB,UAAIgtB,KAAK,CAACzgC,IAAN,KAAe,YAAnB,EAAiC;AAC/B,aAAKmlB,KAAL,CAAWsb,KAAK,CAACx5B,KAAjB,EAAwBwsB,UAAU,CAAC2B,sBAAnC;AACD;A;AACD,UAAI,KAAKsQ,WAAL,CAAiBjF,KAAjB,CAAJ,EAA6B;AAC3B,aAAKtb,KAAL,CAAWsb,KAAK,CAACx5B,KAAjB,EAAwBwsB,UAAU,CAACgC,yBAAnC;AACD;A;AAECgL,MAAAA,KAAF,CAA6B/V,QAA7B,GAAwC,IAAxC;AACD;A;AACD,QAAI,KAAKlgB,KAAL,CAAW8hB,OAAE,CAAChZ,KAAd,CAAJ,EAA0B;AACxBmtB,MAAAA,KAAK,CAAClH,cAAN,GAAuB,KAAKwB,uBAAL,EAAvB;AACD,KAFD,MAEO,IAAI,KAAK2K,WAAL,CAAiBjF,KAAjB,CAAJ,EAA6B;AAClC,WAAKtb,KAAL,CAAWsb,KAAK,CAACx5B,KAAjB,EAAwBwsB,UAAU,CAAC8B,2BAAnC;AACD;A;AAED,QAAI,KAAK/qB,KAAL,CAAW8hB,OAAE,CAACnY,EAAd,KAAqB,KAAKuxB,WAAL,CAAiBjF,KAAjB,CAAzB,EAAkD;AAChD,WAAKtb,KAAL,CAAWsb,KAAK,CAACx5B,KAAjB,EAAwBwsB,UAAU,CAACkC,kBAAnC;AACD;A;AAED,SAAK6D,gBAAL,CAAsBiH,KAAtB;AACA,WAAOA,KAAP;AACD;A;AAED2F,EAAAA,iBAAiB,CACfjc,QADe,EAEftF,QAFe,EAGfwhB,IAHe,EAIJ;AACX,UAAM1sB,IAAI,GAAG,MAAMysB,iBAAN,CAAwBjc,QAAxB,EAAkCtF,QAAlC,EAA4CwhB,IAA5C,CAAb;A;AAEA,QACE1sB,IAAI,CAAC3Z,IAAL,KAAc,mBAAd,IACA2Z,IAAI,CAAC4f,cADL,IAEA5f,IAAI,CAACyiB,KAAL,CAAWn1B,KAAX,GAAmB0S,IAAI,CAAC4f,cAAL,CAAoBtyB,KAHzC,EAIE;AACA,WAAKke,KAAL,CAAWxL,IAAI,CAAC4f,cAAL,CAAoBtyB,KAA/B,EAAsCwsB,UAAU,CAACmC,qBAAjD;AACD;A;AAED,WAAOjc,IAAP;AACD;A;AAED2sB,EAAAA,wBAAwB,CAAC3sB,IAAD,EAAqC;AAC3D,QAAI,CAACid,iBAAiB,CAACjd,IAAD,CAAtB,EAA8B;AAC5B,aAAO,MAAM2sB,wBAAN,CAA+B3sB,IAA/B,CAAP;AACD;A;AAED,WAAOmd,oBAAoB,CAAC,KAAKvd,KAAN,CAA3B;AACD;A;AAEDgtB,EAAAA,yBAAyB,CACvB5sB,IADuB,EAEvB6sB,SAFuB,EAGvBxmC,IAHuB,EAIvBymC,kBAJuB,EAKjB;AACND,IAAAA,SAAS,CAACE,KAAV,GAAkB9P,iBAAiB,CAACjd,IAAD,CAAjB,GACd,KAAKwhB,6BAAL,CACgB,IADhB,EAEoB,IAFpB,CADc,GAKd,KAAKrC,eAAL,EALJ;AAOA,SAAKwM,SAAL,CAAekB,SAAS,CAACE,KAAzB,EAAgCD,kBAAhC,EAAoDvW,YAApD;AACAvW,IAAAA,IAAI,CAACqR,UAAL,CAAgBtsB,IAAhB,CAAqB,KAAK+qB,UAAL,CAAgB+c,SAAhB,EAA2BxmC,IAA3B,CAArB;AACD;A;AAGD2mC,EAAAA,gCAAgC,CAAChtB,IAAD,EAAqC;AACnEA,IAAAA,IAAI,CAACkd,UAAL,GAAkB,OAAlB;AAEA,QAAItN,IAAI,GAAG,IAAX;A;AACA,QAAI,KAAK/e,KAAL,CAAW8hB,OAAE,CAAChV,OAAd,CAAJ,EAA4B;AAC1BiS,MAAAA,IAAI,GAAG,QAAP;AACD,KAFD,MAEO,IAAI,KAAKyQ,YAAL,CAAkB,MAAlB,CAAJ,EAA+B;AACpCzQ,MAAAA,IAAI,GAAG,MAAP;AACD;A;AACD,QAAIA,IAAJ,EAAU;AACR,YAAMmW,EAAE,GAAG,KAAK9B,SAAL,EAAX;A;AAGA,UAAIrU,IAAI,KAAK,MAAT,IAAmBmW,EAAE,CAAC1/B,IAAH,KAAYssB,OAAE,CAACnX,IAAtC,EAA4C;AAC1C,aAAKklB,UAAL,CAAgBqF,EAAE,CAACz4B,KAAnB;AACD;A;AAED,UACE6vB,oBAAoB,CAAC4I,EAAD,CAApB,IACAA,EAAE,CAAC1/B,IAAH,KAAYssB,OAAE,CAACzZ,MADf,IAEA6sB,EAAE,CAAC1/B,IAAH,KAAYssB,OAAE,CAACnX,IAHjB,EAIE;AACA,aAAKuZ,IAAL;AACA/U,QAAAA,IAAI,CAACkd,UAAL,GAAkBtN,IAAlB;AACD;AACF;A;AAED,WAAO,MAAMod,gCAAN,CAAuChtB,IAAvC,CAAP;AACD;A;AAGDitB,EAAAA,oBAAoB,CAACjtB,IAAD,EAAkC;AACpD,UAAM6sB,SAAS,GAAG,KAAKld,SAAL,EAAlB;AACA,UAAMud,kBAAkB,GAAG,KAAKr8B,KAAL,CAAW8hB,OAAE,CAAC/hB,MAAd,CAA3B;AACA,UAAMu8B,UAAU,GAAG,KAAKC,qBAAL,EAAnB;AAEA,QAAIC,iBAAiB,GAAG,IAAxB;A;AACA,QAAIF,UAAU,CAAC9mC,IAAX,KAAoB,YAAxB,EAAsC;AACpC,UAAI8mC,UAAU,CAAC1+B,IAAX,KAAoB,MAAxB,EAAgC;AAC9B4+B,QAAAA,iBAAiB,GAAG,MAApB;AACD,OAFD,MAEO,IAAIF,UAAU,CAAC1+B,IAAX,KAAoB,QAAxB,EAAkC;AACvC4+B,QAAAA,iBAAiB,GAAG,QAApB;AACD;AACF;A;AAED,QAAItC,SAAS,GAAG,KAAhB;A;AACA,QAAI,KAAK1K,YAAL,CAAkB,IAAlB,KAA2B,CAAC,KAAKiN,qBAAL,CAA2B,IAA3B,CAAhC,EAAkE;AAChE,YAAMC,QAAQ,GAAG,KAAKpO,eAAL,CAAqB,IAArB,CAAjB;A;AACA,UACEkO,iBAAiB,KAAK,IAAtB,IACA,CAAC,KAAKx8B,KAAL,CAAW8hB,OAAE,CAAClkB,IAAd,CADD,IAEA,CAAC,KAAKmR,KAAL,CAAWvZ,IAAX,CAAgBsR,OAHnB,EAIE;AAEAk1B,QAAAA,SAAS,CAACW,QAAV,GAAqBD,QAArB;AACAV,QAAAA,SAAS,CAAC3P,UAAV,GAAuBmQ,iBAAvB;AACAR,QAAAA,SAAS,CAACE,KAAV,GAAkBQ,QAAQ,CAACE,OAAT,EAAlB;AACD,OATD,MASO;AAELZ,QAAAA,SAAS,CAACW,QAAV,GAAqBL,UAArB;AACAN,QAAAA,SAAS,CAAC3P,UAAV,GAAuB,IAAvB;AACA2P,QAAAA,SAAS,CAACE,KAAV,GAAkB,KAAK5N,eAAL,EAAlB;AACD;AACF,KAjBD,MAiBO,IACLkO,iBAAiB,KAAK,IAAtB,KACC,KAAKx8B,KAAL,CAAW8hB,OAAE,CAAClkB,IAAd,KAAuB,KAAKmR,KAAL,CAAWvZ,IAAX,CAAgBsR,OADxC,CADK,EAGL;AAEAk1B,MAAAA,SAAS,CAACW,QAAV,GAAqB,KAAKrO,eAAL,CAAqB,IAArB,CAArB;AACA0N,MAAAA,SAAS,CAAC3P,UAAV,GAAuBmQ,iBAAvB;A;AACA,UAAI,KAAKnN,aAAL,CAAmB,IAAnB,CAAJ,EAA8B;AAC5B2M,QAAAA,SAAS,CAACE,KAAV,GAAkB,KAAK5N,eAAL,EAAlB;AACD,OAFD,MAEO;AACL4L,QAAAA,SAAS,GAAG,IAAZ;AACA8B,QAAAA,SAAS,CAACE,KAAV,GAAkBF,SAAS,CAACW,QAAV,CAAmBC,OAAnB,EAAlB;AACD;AACF,KAbM,MAaA;AACL,UAAIP,kBAAJ,EAAwB;AAEtB,cAAM,KAAK1hB,KAAL,CACJqhB,SAAS,CAACv/B,KADN,EAEJujB,aAAM,CAAC/M,qBAFH,EAGJqpB,UAAU,CAAC3gC,KAHP,CAAN;AAKD;A;AAEDu+B,MAAAA,SAAS,GAAG,IAAZ;AACA8B,MAAAA,SAAS,CAACW,QAAV,GAAqBL,UAArB;AACAN,MAAAA,SAAS,CAAC3P,UAAV,GAAuB,IAAvB;AACA2P,MAAAA,SAAS,CAACE,KAAV,GAAkBF,SAAS,CAACW,QAAV,CAAmBC,OAAnB,EAAlB;AACD;A;AAED,UAAMC,gBAAgB,GAAGzQ,iBAAiB,CAACjd,IAAD,CAA1C;AACA,UAAM2tB,qBAAqB,GAAG1Q,iBAAiB,CAAC4P,SAAD,CAA/C;A;AAEA,QAAIa,gBAAgB,IAAIC,qBAAxB,EAA+C;AAC7C,WAAKniB,KAAL,CACEqhB,SAAS,CAACv/B,KADZ,EAEEwsB,UAAU,CAACmB,mCAFb;AAID;A;AAED,QAAIyS,gBAAgB,IAAIC,qBAAxB,EAA+C;AAC7C,WAAKpL,iBAAL,CACEsK,SAAS,CAACE,KAAV,CAAgBt+B,IADlB,EAEEo+B,SAAS,CAACE,KAAV,CAAgBz/B,KAFlB,EAGoB,IAHpB;AAKD;A;AAED,QAAIy9B,SAAS,IAAI,CAAC2C,gBAAd,IAAkC,CAACC,qBAAvC,EAA8D;AAC5D,WAAKC,iBAAL,CACEf,SAAS,CAACE,KAAV,CAAgBt+B,IADlB,EAEEo+B,SAAS,CAACv/B,KAFZ,EAGE,IAHF,EAIE,IAJF;AAMD;A;AAED,SAAKq+B,SAAL,CAAekB,SAAS,CAACE,KAAzB,EAAgC,kBAAhC,EAAoDxW,YAApD;AACAvW,IAAAA,IAAI,CAACqR,UAAL,CAAgBtsB,IAAhB,CAAqB,KAAK+qB,UAAL,CAAgB+c,SAAhB,EAA2B,iBAA3B,CAArB;AACD;A;AAEDgB,EAAAA,gBAAgB,GAAc;AAC5B,YAAQ,KAAKjuB,KAAL,CAAWvZ,IAAnB;AACE,WAAKssB,OAAE,CAAC3V,KAAR;AAEE,eAAO,KAAKmiB,eAAL,CAAmC,IAAnC,CAAP;A;AACF;AACE,eAAO,MAAM0O,gBAAN,EAAP;AALJ;AAOD;A;AAGDC,EAAAA,mBAAmB,CAAC9tB,IAAD,EAAmB+tB,cAAnB,EAAmD;AAEpE,UAAMne,IAAI,GAAG5P,IAAI,CAAC4P,IAAlB;A;AACA,QAAIA,IAAI,KAAK,KAAT,IAAkBA,IAAI,KAAK,KAA3B,IAAoC,KAAK0P,YAAL,CAAkB,GAAlB,CAAxC,EAAgE;AAC9Dtf,MAAAA,IAAI,CAACgP,cAAL,GAAsB,KAAKuQ,iCAAL,EAAtB;AACD;A;AACD,UAAMuO,mBAAN,CAA0B9tB,IAA1B,EAAgC+tB,cAAhC;AACD;A;AAGDC,EAAAA,UAAU,CACRrE,IADQ,EAER/Z,IAFQ,EAGF;AACN,UAAMoe,UAAN,CAAiBrE,IAAjB,EAAuB/Z,IAAvB;A;AACA,QAAI,KAAK/e,KAAL,CAAW8hB,OAAE,CAAChZ,KAAd,CAAJ,EAA0B;AACxBgwB,MAAAA,IAAI,CAAC3iC,EAAL,CAAQ44B,cAAR,GAAyB,KAAKwB,uBAAL,EAAzB;AACA,WAAKvB,gBAAL,CAAsB8J,IAAI,CAAC3iC,EAA3B;AACD;AACF;A;AAGDinC,EAAAA,iCAAiC,CAC/BjuB,IAD+B,EAE/Bzb,IAF+B,EAGJ;AAC3B,QAAI,KAAKsM,KAAL,CAAW8hB,OAAE,CAAChZ,KAAd,CAAJ,EAA0B;AACxB,YAAM6pB,qBAAqB,GAAG,KAAK5jB,KAAL,CAAW6jB,kBAAzC;AACA,WAAK7jB,KAAL,CAAW6jB,kBAAX,GAAgC,IAAhC;AACAzjB,MAAAA,IAAI,CAAC2f,UAAL,GAAkB,KAAKyB,uBAAL,EAAlB;AACA,WAAKxhB,KAAL,CAAW6jB,kBAAX,GAAgCD,qBAAhC;AACD;A;AAED,WAAO,MAAMyK,iCAAN,CAAwCjuB,IAAxC,EAA8Czb,IAA9C,CAAP;AACD;A;AAGD2pC,EAAAA,qBAAqB,GAAY;AAC/B,WAAO,KAAKr9B,KAAL,CAAW8hB,OAAE,CAAChZ,KAAd,KAAwB,MAAMu0B,qBAAN,EAA/B;AACD;A;AAYDrF,EAAAA,gBAAgB,CACdpY,mBADc,EAEd0d,cAFc,EAGdpG,gBAHc,EAIA;AAAA;A;AACd,QAAInoB,KAAK,GAAG,IAAZ;AAEA,QAAIwuB,GAAJ;A;AAEA,QACE,KAAKnvB,SAAL,CAAe,KAAf,MACC,KAAKpO,KAAL,CAAW8hB,OAAE,CAACyQ,WAAd,KAA8B,KAAK9D,YAAL,CAAkB,GAAlB,CAD/B,CADF,EAGE;AACA1f,MAAAA,KAAK,GAAG,KAAKA,KAAL,CAAWuoB,KAAX,EAAR;AAEAiG,MAAAA,GAAG,GAAG,KAAKnG,QAAL,CACJ,MACE,MAAMY,gBAAN,CACEpY,mBADF,EAEE0d,cAFF,EAGEpG,gBAHF,CAFE,EAOJnoB,KAPI,CAAN;AAWA,UAAI,CAACwuB,GAAG,CAACrmC,KAAT,EAAgB,OAAOqmC,GAAG,CAACpuB,IAAX;AAKhB,YAAM;AAAE4S,QAAAA;AAAF,UAAc,KAAKhT,KAAzB;A;AACA,UAAIgT,OAAO,CAACA,OAAO,CAACtrB,MAAR,GAAiB,CAAlB,CAAP,KAAgC+mC,KAAE,CAACC,MAAvC,EAA+C;AAC7C1b,QAAAA,OAAO,CAACtrB,MAAR,IAAkB,CAAlB;AACD,OAFD,MAEO,IAAIsrB,OAAO,CAACA,OAAO,CAACtrB,MAAR,GAAiB,CAAlB,CAAP,KAAgC+mC,KAAE,CAACE,MAAvC,EAA+C;AACpD3b,QAAAA,OAAO,CAACtrB,MAAR,IAAkB,CAAlB;AACD;AACF;A;AAED,QAAI,QAAA8mC,GAAG,SAAH,SAAKrmC,KAAL,IAAc,KAAKu3B,YAAL,CAAkB,GAAlB,CAAlB,EAA0C;AAAA;A;AACxC1f,MAAAA,KAAK,GAAGA,KAAK,IAAI,KAAKA,KAAL,CAAWuoB,KAAX,EAAjB;AAEA,UAAInZ,cAAJ;AAEA,YAAMhV,KAAK,GAAG,KAAKiuB,QAAL,CAAcuG,KAAK,IAAI;AAAA;A;AACnCxf,QAAAA,cAAc,GAAG,KAAKuQ,iCAAL,EAAjB;AAEA,cAAMkP,eAAe,GAAG,KAAKrH,gCAAL,CACtBpY,cADsB,EAEtB,MAAM;AACJ,gBAAMgZ,MAAM,GAAG,MAAMa,gBAAN,CACbpY,mBADa,EAEb0d,cAFa,EAGbpG,gBAHa,CAAf;AAMA,eAAK2G,0BAAL,CAAgC1G,MAAhC,EAAwChZ,cAAxC;AAEA,iBAAOgZ,MAAP;AACD,SAZqB,CAAxB;A;AAgBA,YACEyG,eAAe,CAACpoC,IAAhB,KAAyB,yBAAzB,6BACAooC,eAAe,CAACjhB,KADhB,aACA,sBAAuBW,aAFzB,EAGE;AACAqgB,UAAAA,KAAK;AACN;A;AAID,cAAM9G,IAAI,GAAG,KAAKiH,6BAAL,CAAmCF,eAAnC,CAAb;AACA/G,QAAAA,IAAI,CAAC1Y,cAAL,GAAsBA,cAAtB;AACA,aAAK0f,0BAAL,CAAgChH,IAAhC,EAAsC1Y,cAAtC;AAEA,eAAOyf,eAAP;AACD,OAjCa,EAiCX7uB,KAjCW,CAAd;AAmCA,UAAI6uB,eAGH,GAAG,IAHJ;A;AAKA,UACEz0B,KAAK,CAACgG,IAAN,IACA,KAAK2uB,6BAAL,CAAmC30B,KAAK,CAACgG,IAAzC,EAA+C3Z,IAA/C,KACE,yBAHJ,EAIE;AACA,YAAI,CAAC2T,KAAK,CAACjS,KAAP,IAAgB,CAACiS,KAAK,CAAC40B,OAA3B,EAAoC;AAElC,cAAI50B,KAAK,CAACgG,IAAN,CAAW6uB,KAAf,EAAsB;AAEpB,iBAAKrjB,KAAL,CACEwD,cAAc,CAAC1hB,KADjB,EAEEwsB,UAAU,CAAC4C,+CAFb;AAID;A;AAED,iBAAO1iB,KAAK,CAACgG,IAAb;AACD;A;AAEDyuB,QAAAA,eAAe,GAAGz0B,KAAK,CAACgG,IAAxB;AACD;A;AAQD,mBAAIouB,GAAJ,aAAI,MAAKpuB,IAAT,EAAe;AAEb,aAAKJ,KAAL,GAAawuB,GAAG,CAAClG,SAAjB;AACA,eAAOkG,GAAG,CAACpuB,IAAX;AACD;A;AAED,UAAIyuB,eAAJ,EAAqB;AAEnB,aAAK7uB,KAAL,GAAa5F,KAAK,CAACkuB,SAAnB;AACA,eAAOuG,eAAP;AACD;A;AAED,mBAAIL,GAAJ,aAAI,MAAKU,MAAT,EAAiB,MAAMV,GAAG,CAACrmC,KAAV;AACjB,UAAIiS,KAAK,CAAC80B,MAAV,EAAkB,MAAM90B,KAAK,CAACjS,KAAZ;AAGlB,YAAM,KAAKyjB,KAAL,CACJwD,cAAc,CAAC1hB,KADX,EAEJwsB,UAAU,CAAC2C,iCAFP,CAAN;AAID;A;AAED,WAAO,MAAMoM,gBAAN,CACLpY,mBADK,EAEL0d,cAFK,EAGLpG,gBAHK,CAAP;AAKD;A;AAGDgH,EAAAA,UAAU,CAAC/uB,IAAD,EAA8D;AACtE,QAAI,KAAKnP,KAAL,CAAW8hB,OAAE,CAAChZ,KAAd,CAAJ,EAA0B;AACxB,YAAMquB,MAAM,GAAG,KAAKC,QAAL,CAAc,MAAM;AACjC,cAAMzE,qBAAqB,GAAG,KAAK5jB,KAAL,CAAW6jB,kBAAzC;AACA,aAAK7jB,KAAL,CAAW6jB,kBAAX,GAAgC,IAAhC;AAEA,cAAMrE,QAAQ,GAAG,KAAKzP,SAAL,EAAjB;AAEA,SAEEyP,QAAQ,CAACQ,cAFX,EAIE5f,IAAI,CAAC+e,SAJP,IAKI,KAAKD,oCAAL,EALJ;AAOA,aAAKlf,KAAL,CAAW6jB,kBAAX,GAAgCD,qBAAhC;AAEA,YAAI,KAAKgD,kBAAL,EAAJ,EAA+B,KAAK9F,UAAL;AAC/B,YAAI,CAAC,KAAK7vB,KAAL,CAAW8hB,OAAE,CAAC3Y,KAAd,CAAL,EAA2B,KAAK0mB,UAAL;AAE3B,eAAOtB,QAAP;AACD,OAnBc,CAAf;AAqBA,UAAI4I,MAAM,CAAC8G,MAAX,EAAmB,OAAO,IAAP;AAGnB,UAAI9G,MAAM,CAACjgC,KAAX,EAAkB,KAAK6X,KAAL,GAAaooB,MAAM,CAACE,SAApB;AAGlBloB,MAAAA,IAAI,CAAC2f,UAAL,GAAkBqI,MAAM,CAAChoB,IAAP,CAAY4f,cAAZ,GACd,KAAK9P,UAAL,CAAgBkY,MAAM,CAAChoB,IAAvB,EAA6B,gBAA7B,CADc,GAEd,IAFJ;AAGD;A;AAED,WAAO,MAAM+uB,UAAN,CAAiB/uB,IAAjB,CAAP;AACD;A;AAEDgvB,EAAAA,gBAAgB,GAAY;AAC1B,WAAO,KAAKn+B,KAAL,CAAW8hB,OAAE,CAAChZ,KAAd,KAAwB,MAAMq1B,gBAAN,EAA/B;AACD;A;AAEDC,EAAAA,0BAA0B,CACxBjvB,IADwB,EAExByL,MAFwB,EAGlB;AACN,QAAI,KAAK7L,KAAL,CAAWkpB,yBAAX,CAAqCvjC,OAArC,CAA6Cya,IAAI,CAAC1S,KAAlD,MAA6D,CAAC,CAAlE,EAAqE;AACnE0S,MAAAA,IAAI,CAACyL,MAAL,GAAcA,MAAd;AACD,KAFD,MAEO;AACL,YAAMwjB,0BAAN,CAAiCjvB,IAAjC,EAAuCyL,MAAvC;AACD;AACF;A;AAED8d,EAAAA,WAAW,CACTvpB,IADS,EAETkvB,eAFS,EAGTC,eAHS,EAIH;AACN,QACEA,eAAe,IACf,KAAKvvB,KAAL,CAAWkpB,yBAAX,CAAqCvjC,OAArC,CAA6Cya,IAAI,CAAC1S,KAAlD,MAA6D,CAAC,CAFhE,EAGE;AACA;AACD;A;AAGD,SAAK,IAAIjG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG2Y,IAAI,CAACyL,MAAL,CAAYnkB,MAAhC,EAAwCD,CAAC,EAAzC,EAA6C;AAC3C,UAAI,KAAK0kC,WAAL,CAAiB/rB,IAAI,CAACyL,MAAL,CAAYpkB,CAAZ,CAAjB,KAAoCA,CAAC,GAAG,CAA5C,EAA+C;AAC7C,aAAKmkB,KAAL,CAAWxL,IAAI,CAACyL,MAAL,CAAYpkB,CAAZ,EAAeiG,KAA1B,EAAiCwsB,UAAU,CAACiC,oBAA5C;AACD;AACF;A;AAED,WAAO,MAAMwN,WAAN,CAAkB,GAAGzoB,SAArB,CAAP;AACD;A;AAEDsuB,EAAAA,kCAAkC,CAACC,UAAD,EAAoC;AACpE,WAAO,MAAMD,kCAAN,CACLC,UAAU,IAAI,KAAKzvB,KAAL,CAAWyoB,SAAX,CAAqB9iC,OAArB,CAA6B,KAAKqa,KAAL,CAAWtS,KAAxC,MAAmD,CAAC,CAD7D,CAAP;AAGD;A;AAEDgiC,EAAAA,eAAe,CACb/d,IADa,EAEbf,QAFa,EAGbtF,QAHa,EAIbsG,OAJa,EAKC;AACd,QACED,IAAI,CAAClrB,IAAL,KAAc,YAAd,IACAkrB,IAAI,CAAC9iB,IAAL,KAAc,OADd,IAEA,KAAKmR,KAAL,CAAWyoB,SAAX,CAAqB9iC,OAArB,CAA6BirB,QAA7B,MAA2C,CAAC,CAH9C,EAIE;AACA,WAAKuE,IAAL;AAEA,YAAM/U,IAAI,GAAG,KAAKsN,WAAL,CAAiBkD,QAAjB,EAA2BtF,QAA3B,CAAb;AACAlL,MAAAA,IAAI,CAACgR,MAAL,GAAcO,IAAd;AACAvR,MAAAA,IAAI,CAACc,SAAL,GAAiB,KAAKyuB,4BAAL,CAAkC5c,OAAE,CAACnZ,MAArC,EAA6C,KAA7C,CAAjB;AACA+X,MAAAA,IAAI,GAAG,KAAKzB,UAAL,CAAgB9P,IAAhB,EAAsB,gBAAtB,CAAP;AACD,KAXD,MAWO,IACLuR,IAAI,CAAClrB,IAAL,KAAc,YAAd,IACAkrB,IAAI,CAAC9iB,IAAL,KAAc,OADd,IAEA,KAAK6wB,YAAL,CAAkB,GAAlB,CAHK,EAIL;AACA,YAAM1f,KAAK,GAAG,KAAKA,KAAL,CAAWuoB,KAAX,EAAd;AACA,YAAMnuB,KAAK,GAAG,KAAKiuB,QAAL,CACZuG,KAAK,IACH,KAAKgB,iCAAL,CAAuChf,QAAvC,EAAiDtF,QAAjD,KACAsjB,KAAK,EAHK,EAIZ5uB,KAJY,CAAd;AAOA,UAAI,CAAC5F,KAAK,CAACjS,KAAP,IAAgB,CAACiS,KAAK,CAAC40B,OAA3B,EAAoC,OAAO50B,KAAK,CAACgG,IAAb;AAEpC,YAAMgoB,MAAM,GAAG,KAAKC,QAAL,CACb,MAAM,MAAMqH,eAAN,CAAsB/d,IAAtB,EAA4Bf,QAA5B,EAAsCtF,QAAtC,EAAgDsG,OAAhD,CADO,EAEb5R,KAFa,CAAf;AAKA,UAAIooB,MAAM,CAAChoB,IAAP,IAAe,CAACgoB,MAAM,CAACjgC,KAA3B,EAAkC,OAAOigC,MAAM,CAAChoB,IAAd;A;AAElC,UAAIhG,KAAK,CAACgG,IAAV,EAAgB;AACd,aAAKJ,KAAL,GAAa5F,KAAK,CAACkuB,SAAnB;AACA,eAAOluB,KAAK,CAACgG,IAAb;AACD;A;AAED,UAAIgoB,MAAM,CAAChoB,IAAX,EAAiB;AACf,aAAKJ,KAAL,GAAaooB,MAAM,CAACE,SAApB;AACA,eAAOF,MAAM,CAAChoB,IAAd;AACD;A;AAED,YAAMhG,KAAK,CAACjS,KAAN,IAAeigC,MAAM,CAACjgC,KAA5B;AACD;A;AAED,WAAO,MAAMunC,eAAN,CAAsB/d,IAAtB,EAA4Bf,QAA5B,EAAsCtF,QAAtC,EAAgDsG,OAAhD,CAAP;AACD;A;AAEDF,EAAAA,cAAc,CACZC,IADY,EAEZf,QAFY,EAGZtF,QAHY,EAIZsG,OAJY,EAKZie,cALY,EAME;AACd,QAAI,KAAK5+B,KAAL,CAAW8hB,OAAE,CAAC5Y,WAAd,KAA8B,KAAK21B,mBAAL,EAAlC,EAA8D;AAC5DD,MAAAA,cAAc,CAAChe,mBAAf,GAAqC,IAArC;A;AACA,UAAID,OAAJ,EAAa;AACXie,QAAAA,cAAc,CAAC/d,IAAf,GAAsB,IAAtB;AACA,eAAOH,IAAP;AACD;A;AACD,WAAKwD,IAAL;AACA,YAAM/U,IAA8B,GAAG,KAAKsN,WAAL,CACrCkD,QADqC,EAErCtF,QAFqC,CAAvC;AAIAlL,MAAAA,IAAI,CAACgR,MAAL,GAAcO,IAAd;AACAvR,MAAAA,IAAI,CAAC2vB,aAAL,GAAqB,KAAKvN,mCAAL,EAArB;AACA,WAAK7D,MAAL,CAAY5L,OAAE,CAACpZ,MAAf;AAEAyG,MAAAA,IAAI,CAACc,SAAL,GAAiB,KAAKyuB,4BAAL,CAAkC5c,OAAE,CAACnZ,MAArC,EAA6C,KAA7C,CAAjB;AACAwG,MAAAA,IAAI,CAAC+Q,QAAL,GAAgB,IAAhB;AACA,aAAO,KAAKD,oBAAL,CAA0B9Q,IAA1B,EAA+C,IAA/C,CAAP;AACD,KAlBD,MAkBO,IACL,CAACwR,OAAD,IACA,KAAKsM,gBAAL,EADA,IAEA,KAAKwB,YAAL,CAAkB,GAAlB,CAHK,EAIL;AACA,YAAMtf,IAAI,GAAG,KAAKsN,WAAL,CAAiBkD,QAAjB,EAA2BtF,QAA3B,CAAb;AACAlL,MAAAA,IAAI,CAACgR,MAAL,GAAcO,IAAd;AAEA,YAAMyW,MAAM,GAAG,KAAKC,QAAL,CAAc,MAAM;AACjCjoB,QAAAA,IAAI,CAAC2vB,aAAL,GACE,KAAKjM,4CAAL,EADF;AAEA,aAAKnF,MAAL,CAAY5L,OAAE,CAACpZ,MAAf;AACAyG,QAAAA,IAAI,CAACc,SAAL,GAAiB,KAAKyuB,4BAAL,CAAkC5c,OAAE,CAACnZ,MAArC,EAA6C,KAA7C,CAAjB;AACA,YAAIi2B,cAAc,CAAChe,mBAAnB,EAAwCzR,IAAI,CAAC+Q,QAAL,GAAgB,KAAhB;AACxC,eAAO,KAAKD,oBAAL,CACL9Q,IADK,EAELyvB,cAAc,CAAChe,mBAFV,CAAP;AAID,OAVc,CAAf;A;AAYA,UAAIuW,MAAM,CAAChoB,IAAX,EAAiB;AACf,YAAIgoB,MAAM,CAACjgC,KAAX,EAAkB,KAAK6X,KAAL,GAAaooB,MAAM,CAACE,SAApB;AAClB,eAAOF,MAAM,CAAChoB,IAAd;AACD;AACF;A;AAED,WAAO,MAAMsR,cAAN,CACLC,IADK,EAELf,QAFK,EAGLtF,QAHK,EAILsG,OAJK,EAKLie,cALK,CAAP;AAOD;A;AAEDG,EAAAA,iBAAiB,CAAC5vB,IAAD,EAA8B;AAC7C,QAAI6vB,KAAK,GAAG,IAAZ;A;AACA,QAAI,KAAK/R,gBAAL,MAA2B,KAAKwB,YAAL,CAAkB,GAAlB,CAA/B,EAAuD;AACrDuQ,MAAAA,KAAK,GAAG,KAAK5H,QAAL,CAAc,MACpB,KAAKvE,4CAAL,EADM,EAEN1jB,IAFF;AAGD;A;AACDA,IAAAA,IAAI,CAAC2vB,aAAL,GAAqBE,KAArB;AAEA,UAAMD,iBAAN,CAAwB5vB,IAAxB;AACD;A;AAEDwvB,EAAAA,iCAAiC,CAC/Bhf,QAD+B,EAE/BtF,QAF+B,EAGH;AAC5B,UAAMlL,IAAI,GAAG,KAAKsN,WAAL,CAAiBkD,QAAjB,EAA2BtF,QAA3B,CAAb;AACA,SAAK4iB,mBAAL,CAAyB9tB,IAAzB;AACA,QAAI,CAAC,KAAK+uB,UAAL,CAAgB/uB,IAAhB,CAAL,EAA4B;AAC5B,WAAO,KAAK8vB,oBAAL,CACL9vB,IADK,EAEQ/a,SAFR,EAGS,IAHT,CAAP;AAKD;A;AAED8qC,EAAAA,qBAAqB,CAAC9xB,IAAD,EAAqB;AACxC,UAAM8W,IAAI,GAAG,KAAKpW,KAAL,CAAWzN,UAAX,CAAsB,KAAK0O,KAAL,CAAWqL,GAAX,GAAiB,CAAvC,CAAb;A;AACA,QACEhN,IAAI,OAAJ,IACA8W,IAAI,OADJ,IAEA,KAAKnV,KAAL,CAAWowB,cAHb,EAIE;AACA,WAAKpwB,KAAL,CAAWowB,cAAX,GAA4B,KAA5B;AACA,WAAKpwB,KAAL,CAAWqL,GAAX,IAAkB,CAAlB;AACA,WAAKglB,SAAL;AACA;AACD;A;AAED,UAAMF,qBAAN,CAA4B9xB,IAA5B;AACD;A;AAEDiyB,EAAAA,kBAAkB,CAACjyB,IAAD,EAAqB;AACrC,UAAM8W,IAAI,GAAG,KAAKpW,KAAL,CAAWzN,UAAX,CAAsB,KAAK0O,KAAL,CAAWqL,GAAX,GAAiB,CAAvC,CAAb;A;AACA,QACEhN,IAAI,QAAJ,IACA8W,IAAI,QAFN,EAGE;AAEA,WAAK+V,QAAL,CAAcnY,OAAE,CAACrZ,SAAjB,EAA4B,CAA5B;AACA;AACD;A;AAED,UAAM42B,kBAAN,CAAyBjyB,IAAzB;AACD;A;AAEDkyB,EAAAA,aAAa,CAACC,IAAD,EAAeC,OAAf,EAA2C;AACtD,UAAMC,QAAQ,GAAG,MAAMH,aAAN,CAAoBC,IAApB,EAA0BC,OAA1B,CAAjB;A;AACA,QAAI,KAAKzwB,KAAL,CAAWowB,cAAf,EAA+B;AAC7B,WAAKxkB,KAAL,CAAW,KAAK5L,KAAL,CAAWqL,GAAtB,EAA2B6O,UAAU,CAAC+C,uBAAtC;AACD;A;AACD,WAAOyT,QAAP;AACD;A;AAEDC,EAAAA,gBAAgB,GAAS;AACvB,QAAI,KAAKtxB,SAAL,CAAe,cAAf,KAAkC,KAAKuxB,eAAL,EAAtC,EAA8D;AAC5D,UAAI,KAAK5wB,KAAL,CAAWowB,cAAf,EAA+B;AAC7B,aAAKtP,UAAL,CAAgB,IAAhB,EAAsB5G,UAAU,CAAC0B,iBAAjC;AACD;A;AACD,WAAKiV,wBAAL;AACA,WAAK7wB,KAAL,CAAWqL,GAAX,IAAkB,KAAKulB,eAAL,EAAlB;AACA,WAAK5wB,KAAL,CAAWowB,cAAX,GAA4B,IAA5B;AACA;AACD;A;AAED,QAAI,KAAKpwB,KAAL,CAAWowB,cAAf,EAA+B;AAC7B,YAAMziC,GAAG,GAAG,KAAKoR,KAAL,CAAWpZ,OAAX,CAAmB,KAAnB,EAA2B,KAAKqa,KAAL,CAAWqL,GAAX,IAAkB,CAA7C,CAAZ;A;AACA,UAAI1d,GAAG,KAAK,CAAC,CAAb,EAAgB;AACd,cAAM,KAAKie,KAAL,CAAW,KAAK5L,KAAL,CAAWqL,GAAX,GAAiB,CAA5B,EAA+B4F,aAAM,CAAC5G,mBAAtC,CAAN;AACD;A;AACD,WAAKrK,KAAL,CAAWqL,GAAX,GAAiB1d,GAAG,GAAG,CAAvB;AACA;AACD;A;AAED,UAAMgjC,gBAAN;AACD;A;AAEDC,EAAAA,eAAe,GAAqB;AAClC,UAAM;AAAEvlB,MAAAA;AAAF,QAAU,KAAKrL,KAArB;AACA,QAAI8wB,yBAAyB,GAAG,CAAhC;A;AACA,WACE,QAAiC9W,QAAjC,CACE,KAAKjb,KAAL,CAAWzN,UAAX,CAAsB+Z,GAAG,GAAGylB,yBAA5B,CADF,CADF,EAIE;AACAA,MAAAA,yBAAyB;AAC1B;A;AAED,UAAMC,GAAG,GAAG,KAAKhyB,KAAL,CAAWzN,UAAX,CAAsBw/B,yBAAyB,GAAGzlB,GAAlD,CAAZ;AACA,UAAM2lB,GAAG,GAAG,KAAKjyB,KAAL,CAAWzN,UAAX,CAAsBw/B,yBAAyB,GAAGzlB,GAA5B,GAAkC,CAAxD,CAAZ;A;AAEA,QAAI0lB,GAAG,OAAH,IAA2BC,GAAG,OAAlC,EAAwD;AACtD,aAAOF,yBAAyB,GAAG,CAAnC;AACD;A;AACD,QACE,KAAK/xB,KAAL,CAAWjK,KAAX,CACEg8B,yBAAyB,GAAGzlB,GAD9B,EAEEylB,yBAAyB,GAAGzlB,GAA5B,GAAkC,EAFpC,MAGM,cAJR,EAKE;AACA,aAAOylB,yBAAyB,GAAG,EAAnC;AACD;A;AACD,QAAIC,GAAG,OAAH,IAA2BC,GAAG,OAAlC,EAAwD;AACtD,aAAOF,yBAAP;AACD;A;AACD,WAAO,KAAP;AACD;A;AAEDD,EAAAA,wBAAwB,GAAS;AAC/B,UAAMljC,GAAG,GAAG,KAAKoR,KAAL,CAAWpZ,OAAX,CAAmB,IAAnB,EAAyB,KAAKqa,KAAL,CAAWqL,GAApC,CAAZ;A;AACA,QAAI1d,GAAG,KAAK,CAAC,CAAb,EAAgB;AACd,YAAM,KAAKie,KAAL,CAAW,KAAK5L,KAAL,CAAWqL,GAAtB,EAA2B4F,aAAM,CAAC5G,mBAAlC,CAAN;AACD;AACF;A;AAID4mB,EAAAA,wCAAwC,CACtC5lB,GADsC,EAEtC;AAAE6lB,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAFsC,EAGhC;AACN,SAAKvlB,KAAL,CACEP,GADF,EAEE6O,UAAU,CAACO,+BAFb,EAGE0W,UAHF,EAIED,QAJF;AAMD;A;AAEDE,EAAAA,8BAA8B,CAC5B/lB,GAD4B,EAE5B;AAAE6lB,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAF4B,EAGtB;AACN,UAAM7P,UAAU,GAAG6P,UAAU,CAAC,CAAD,CAAV,CAAc37B,WAAd,KAA8B27B,UAAU,CAACr8B,KAAX,CAAiB,CAAjB,CAAjD;AACA,SAAK8W,KAAL,CACEP,GADF,EAEE6O,UAAU,CAACe,qBAFb,EAGEkW,UAHF,EAIE7P,UAJF,EAKE4P,QALF;AAOD;A;AAEDG,EAAAA,gCAAgC,CAC9BhmB,GAD8B,EAE9B;AAAE6lB,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAF8B,EAGxB;AACN,SAAKvlB,KAAL,CAAWP,GAAX,EAAgB6O,UAAU,CAACQ,uBAA3B,EAAoDyW,UAApD,EAAgED,QAAhE;AACD;A;AAEDI,EAAAA,qCAAqC,CACnCjmB,GADmC,EAEnC;AAAE6lB,IAAAA;AAAF,GAFmC,EAG7B;AACN,SAAKtlB,KAAL,CAAWP,GAAX,EAAgB6O,UAAU,CAACS,4BAA3B,EAAyDuW,QAAzD;AACD;A;AAEDK,EAAAA,gCAAgC,CAC9BlmB,GAD8B,EAE9B;AACE6lB,IAAAA,QADF;AAEEM,IAAAA;AAFF,GAF8B,EAM9B;AACA,WAAO,KAAK5lB,KAAL,CACLP,GADK,EAELmmB,YAAY,KAAK,IAAjB,GACItX,UAAU,CAACW,sCADf,GAEIX,UAAU,CAACU,uBAJV,EAKLsW,QALK,EAMLM,YANK,CAAP;AAQD;A;AAEDC,EAAAA,qCAAqC,CACnCpmB,GADmC,EAEnC;AAAE6lB,IAAAA,QAAF;AAAYQ,IAAAA,YAAZ;AAA0BP,IAAAA;AAA1B,GAFmC,EAGnC;AACA,QAAI/oC,OAAO,GAAG,IAAd;A;AACA,YAAQspC,YAAR;AACE,WAAK,SAAL;AACA,WAAK,QAAL;AACA,WAAK,QAAL;AACEtpC,QAAAA,OAAO,GAAG8xB,UAAU,CAACY,uCAArB;AACA;A;AACF,WAAK,QAAL;AACE1yB,QAAAA,OAAO,GAAG8xB,UAAU,CAACa,sCAArB;AACA;A;AACF;AAEE3yB,QAAAA,OAAO,GAAG8xB,UAAU,CAACc,uCAArB;AAXJ;A;AAaA,WAAO,KAAKpP,KAAL,CAAWP,GAAX,EAAgBjjB,OAAhB,EAAyB8oC,QAAzB,EAAmCC,UAAnC,EAA+CO,YAA/C,CAAP;AACD;A;AAEDC,EAAAA,uCAAuC,CACrCtmB,GADqC,EAErC;AAAE6lB,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAFqC,EAG/B;AACN,SAAKvlB,KAAL,CACEP,GADF,EAEE6O,UAAU,CAACgB,8BAFb,EAGEgW,QAHF,EAIEC,UAJF;AAMD;A;AAEDS,EAAAA,kDAAkD,CAChDvmB,GADgD,EAEhD;AAAE6lB,IAAAA;AAAF,GAFgD,EAG1C;AACN,SAAKtlB,KAAL,CACEP,GADF,EAEE6O,UAAU,CAACiB,yCAFb,EAGE+V,QAHF;AAKD;A;AAEDW,EAAAA,kBAAkB,GAAmB;AACnC,UAAMjhB,QAAQ,GAAG,KAAK5Q,KAAL,CAAWtS,KAA5B;A;AACA,UAAMokC,SAAS,GAAG,MAAM,KAAK7gC,KAAL,CAAW8hB,OAAE,CAAClZ,KAAd,KAAwB,KAAK5I,KAAL,CAAW8hB,OAAE,CAACtZ,MAAd,CAAhD;A;AACA,YAAQ,KAAKuG,KAAL,CAAWvZ,IAAnB;AACE,WAAKssB,OAAE,CAACpa,GAAR;AAAa;AACX,gBAAMo5B,OAAO,GAAG,KAAK5kB,mBAAL,CAAyB,KAAKnN,KAAL,CAAWpT,KAApC,CAAhB;A;AACA,cAAIklC,SAAS,EAAb,EAAiB;AACf,mBAAO;AAAErrC,cAAAA,IAAI,EAAE,QAAR;AAAkB4kB,cAAAA,GAAG,EAAE0mB,OAAO,CAACrkC,KAA/B;AAAsCd,cAAAA,KAAK,EAAEmlC;AAA7C,aAAP;AACD;A;AACD,iBAAO;AAAEtrC,YAAAA,IAAI,EAAE,SAAR;AAAmB4kB,YAAAA,GAAG,EAAEuF;AAAxB,WAAP;AACD;A;AACD,WAAKmC,OAAE,CAAC/hB,MAAR;AAAgB;AACd,gBAAM+gC,OAAO,GAAG,KAAK7kB,kBAAL,CAAwB,KAAKlN,KAAL,CAAWpT,KAAnC,CAAhB;A;AACA,cAAIklC,SAAS,EAAb,EAAiB;AACf,mBAAO;AAAErrC,cAAAA,IAAI,EAAE,QAAR;AAAkB4kB,cAAAA,GAAG,EAAE0mB,OAAO,CAACrkC,KAA/B;AAAsCd,cAAAA,KAAK,EAAEmlC;AAA7C,aAAP;AACD;A;AACD,iBAAO;AAAEtrC,YAAAA,IAAI,EAAE,SAAR;AAAmB4kB,YAAAA,GAAG,EAAEuF;AAAxB,WAAP;AACD;A;AACD,WAAKmC,OAAE,CAACpV,KAAR;AACA,WAAKoV,OAAE,CAACnV,MAAR;AAAgB;AACd,gBAAMm0B,OAAO,GAAG,KAAK1kB,mBAAL,CAAyB,KAAKpc,KAAL,CAAW8hB,OAAE,CAACpV,KAAd,CAAzB,CAAhB;A;AACA,cAAIm0B,SAAS,EAAb,EAAiB;AACf,mBAAO;AACLrrC,cAAAA,IAAI,EAAE,SADD;AAEL4kB,cAAAA,GAAG,EAAE0mB,OAAO,CAACrkC,KAFR;AAGLd,cAAAA,KAAK,EAAEmlC;AAHF,aAAP;AAKD;A;AACD,iBAAO;AAAEtrC,YAAAA,IAAI,EAAE,SAAR;AAAmB4kB,YAAAA,GAAG,EAAEuF;AAAxB,WAAP;AACD;A;AACD;AACE,eAAO;AAAEnqB,UAAAA,IAAI,EAAE,SAAR;AAAmB4kB,UAAAA,GAAG,EAAEuF;AAAxB,SAAP;AA5BJ;AA8BD;A;AAEDohB,EAAAA,iBAAiB,GAAyC;AACxD,UAAM3mB,GAAG,GAAG,KAAKrL,KAAL,CAAWtS,KAAvB;AACA,UAAMtG,EAAE,GAAG,KAAKm4B,eAAL,CAAqB,IAArB,CAAX;AACA,UAAM0S,IAAI,GAAG,KAAKjT,GAAL,CAASjM,OAAE,CAACnY,EAAZ,IACT,KAAKi3B,kBAAL,EADS,GAET;AAAEprC,MAAAA,IAAI,EAAE,MAAR;AAAgB4kB,MAAAA;AAAhB,KAFJ;AAGA,WAAO;AAAEjkB,MAAAA,EAAF;AAAM6qC,MAAAA;AAAN,KAAP;AACD;A;AAEDC,EAAAA,iCAAiC,CAC/B7mB,GAD+B,EAE/B2H,OAF+B,EAG/Bmf,YAH+B,EAIzB;AACN,UAAM;AAAET,MAAAA;AAAF,QAAmB1e,OAAzB;A;AACA,QAAI0e,YAAY,KAAK,IAArB,EAA2B;AACzB;AACD;A;AACD,QAAIA,YAAY,KAAKS,YAArB,EAAmC;AACjC,WAAKV,qCAAL,CAA2CpmB,GAA3C,EAAgD2H,OAAhD;AACD;AACF;A;AAEDof,EAAAA,eAAe,CAAC;AACdlB,IAAAA,QADc;AAEdQ,IAAAA;AAFc,GAAD,EAcZ;AACD,UAAMW,SAAS,GAAG,IAAI9d,GAAJ,EAAlB;AACA,UAAM+d,OAAO,GAAG;AACdC,MAAAA,cAAc,EAAE,EADF;AAEdC,MAAAA,aAAa,EAAE,EAFD;AAGdC,MAAAA,aAAa,EAAE,EAHD;AAIdC,MAAAA,gBAAgB,EAAE;AAJJ,KAAhB;AAMA,QAAIC,iBAAiB,GAAG,KAAxB;A;AACA,WAAO,CAAC,KAAK1hC,KAAL,CAAW8hB,OAAE,CAACtZ,MAAd,CAAR,EAA+B;AAC7B,UAAI,KAAKulB,GAAL,CAASjM,OAAE,CAACzY,QAAZ,CAAJ,EAA2B;AACzBq4B,QAAAA,iBAAiB,GAAG,IAApB;AACA;AACD;A;AACD,YAAMC,UAAU,GAAG,KAAK7iB,SAAL,EAAnB;AACA,YAAM;AAAE3oB,QAAAA,EAAF;AAAM6qC,QAAAA;AAAN,UAAe,KAAKD,iBAAL,EAArB;AACA,YAAMb,UAAU,GAAG/pC,EAAE,CAACyH,IAAtB;A;AACA,UAAIsiC,UAAU,KAAK,EAAnB,EAAuB;AACrB;AACD;A;AACD,UAAI,SAAShrC,IAAT,CAAcgrC,UAAd,CAAJ,EAA+B;AAC7B,aAAKC,8BAAL,CAAoChqC,EAAE,CAACsG,KAAvC,EAA8C;AAC5CwjC,UAAAA,QAD4C;AAE5CC,UAAAA;AAF4C,SAA9C;AAID;A;AACD,UAAIkB,SAAS,CAAC9yB,GAAV,CAAc4xB,UAAd,CAAJ,EAA+B;AAC7B,aAAKE,gCAAL,CAAsCjqC,EAAE,CAACsG,KAAzC,EAAgD;AAC9CwjC,UAAAA,QAD8C;AAE9CC,UAAAA;AAF8C,SAAhD;AAID;A;AACDkB,MAAAA,SAAS,CAACQ,GAAV,CAAc1B,UAAd;AACA,YAAMne,OAAO,GAAG;AAAEke,QAAAA,QAAF;AAAYQ,QAAAA,YAAZ;AAA0BP,QAAAA;AAA1B,OAAhB;AACAyB,MAAAA,UAAU,CAACxrC,EAAX,GAAgBA,EAAhB;A;AACA,cAAQ6qC,IAAI,CAACxrC,IAAb;AACE,aAAK,SAAL;AAAgB;AACd,iBAAKyrC,iCAAL,CACED,IAAI,CAAC5mB,GADP,EAEE2H,OAFF,EAGE,SAHF;AAKA4f,YAAAA,UAAU,CAACX,IAAX,GAAkBA,IAAI,CAACrlC,KAAvB;AACA0lC,YAAAA,OAAO,CAACC,cAAR,CAAuBptC,IAAvB,CACE,KAAK+qB,UAAL,CAAgB0iB,UAAhB,EAA4B,mBAA5B,CADF;AAGA;AACD;A;AACD,aAAK,QAAL;AAAe;AACb,iBAAKV,iCAAL,CAAuCD,IAAI,CAAC5mB,GAA5C,EAAiD2H,OAAjD,EAA0D,QAA1D;AACA4f,YAAAA,UAAU,CAACX,IAAX,GAAkBA,IAAI,CAACrlC,KAAvB;AACA0lC,YAAAA,OAAO,CAACE,aAAR,CAAsBrtC,IAAtB,CACE,KAAK+qB,UAAL,CAAgB0iB,UAAhB,EAA4B,kBAA5B,CADF;AAGA;AACD;A;AACD,aAAK,QAAL;AAAe;AACb,iBAAKV,iCAAL,CAAuCD,IAAI,CAAC5mB,GAA5C,EAAiD2H,OAAjD,EAA0D,QAA1D;AACA4f,YAAAA,UAAU,CAACX,IAAX,GAAkBA,IAAI,CAACrlC,KAAvB;AACA0lC,YAAAA,OAAO,CAACG,aAAR,CAAsBttC,IAAtB,CACE,KAAK+qB,UAAL,CAAgB0iB,UAAhB,EAA4B,kBAA5B,CADF;AAGA;AACD;A;AACD,aAAK,SAAL;AAAgB;AACd,kBAAM,KAAKnB,qCAAL,CAA2CQ,IAAI,CAAC5mB,GAAhD,EAAqD2H,OAArD,CAAN;AACD;A;AACD,aAAK,MAAL;AAAa;AACX,oBAAQ0e,YAAR;AACE,mBAAK,SAAL;AACE,qBAAKT,wCAAL,CACEgB,IAAI,CAAC5mB,GADP,EAEE2H,OAFF;AAIA;A;AACF,mBAAK,QAAL;AACE,qBAAK2e,uCAAL,CAA6CM,IAAI,CAAC5mB,GAAlD,EAAuD2H,OAAvD;AACA;A;AACF;AACEsf,gBAAAA,OAAO,CAACI,gBAAR,CAAyBvtC,IAAzB,CACE,KAAK+qB,UAAL,CAAgB0iB,UAAhB,EAA4B,qBAA5B,CADF;AAXJ;AAeD;AAhDH;A;AAmDA,UAAI,CAAC,KAAK3hC,KAAL,CAAW8hB,OAAE,CAACtZ,MAAd,CAAL,EAA4B;AAC1B,aAAKklB,MAAL,CAAY5L,OAAE,CAAClZ,KAAf;AACD;AACF;A;AACD,WAAO;AAAEy4B,MAAAA,OAAF;AAAWK,MAAAA;AAAX,KAAP;AACD;A;AAEDG,EAAAA,qBAAqB,CACnBC,kBADmB,EAEnBL,gBAFmB,EAGnB;AAAExB,IAAAA;AAAF,GAHmB,EAIJ;AACf,QAAI6B,kBAAkB,CAACrrC,MAAnB,KAA8B,CAAlC,EAAqC;AACnC,aAAOgrC,gBAAP;AACD,KAFD,MAEO,IAAIA,gBAAgB,CAAChrC,MAAjB,KAA4B,CAAhC,EAAmC;AACxC,aAAOqrC,kBAAP;AACD,KAFM,MAEA,IAAIL,gBAAgB,CAAChrC,MAAjB,GAA0BqrC,kBAAkB,CAACrrC,MAAjD,EAAyD;AAC9D,WAAK,MAAMijC,MAAX,IAAqBoI,kBAArB,EAAyC;AACvC,aAAKnB,kDAAL,CACEjH,MAAM,CAACj9B,KADT,EAEE;AAAEwjC,UAAAA;AAAF,SAFF;AAID;A;AACD,aAAOwB,gBAAP;AACD,KARM,MAQA;AACL,WAAK,MAAM/H,MAAX,IAAqB+H,gBAArB,EAAuC;AACrC,aAAKd,kDAAL,CACEjH,MAAM,CAACj9B,KADT,EAEE;AAAEwjC,UAAAA;AAAF,SAFF;AAID;A;AACD,aAAO6B,kBAAP;AACD;AACF;A;AAEDC,EAAAA,yBAAyB,CAAC;AACxB9B,IAAAA;AADwB,GAAD,EAIJ;AACnB,QAAI,KAAK5Q,aAAL,CAAmB,IAAnB,CAAJ,EAA8B;AAC5B,UAAI,CAAC,KAAKrvB,KAAL,CAAW8hB,OAAE,CAAClkB,IAAd,CAAL,EAA0B;AACxB,cAAM,KAAK0iC,gCAAL,CAAsC,KAAKvxB,KAAL,CAAWtS,KAAjD,EAAwD;AAC5DwjC,UAAAA,QAD4D;AAE5DM,UAAAA,YAAY,EAAE;AAF8C,SAAxD,CAAN;AAID;A;AAED,YAAM;AAAE5kC,QAAAA;AAAF,UAAY,KAAKoT,KAAvB;AACA,WAAKmV,IAAL;A;AAEA,UACEvoB,KAAK,KAAK,SAAV,IACAA,KAAK,KAAK,QADV,IAEAA,KAAK,KAAK,QAFV,IAGAA,KAAK,KAAK,QAJZ,EAKE;AACA,aAAK2kC,gCAAL,CAAsC,KAAKvxB,KAAL,CAAWtS,KAAjD,EAAwD;AACtDwjC,UAAAA,QADsD;AAEtDM,UAAAA,YAAY,EAAE5kC;AAFwC,SAAxD;AAID;A;AAED,aAAOA,KAAP;AACD;A;AACD,WAAO,IAAP;AACD;A;AAEDqmC,EAAAA,YAAY,CAAC7yB,IAAD,EAAe;AAAE8wB,IAAAA,QAAF;AAAYgC,IAAAA;AAAZ,GAAf,EAA8C;AACxD,UAAMxB,YAAY,GAAG,KAAKsB,yBAAL,CAA+B;AAAE9B,MAAAA;AAAF,KAA/B,CAArB;AACA,SAAKvS,MAAL,CAAY5L,OAAE,CAACzZ,MAAf;AACA,UAAM;AAAEg5B,MAAAA,OAAF;AAAWK,MAAAA;AAAX,QAAiC,KAAKP,eAAL,CAAqB;AAC1DlB,MAAAA,QAD0D;AAE1DQ,MAAAA;AAF0D,KAArB,CAAvC;AAIAtxB,IAAAA,IAAI,CAACuyB,iBAAL,GAAyBA,iBAAzB;A;AAEA,YAAQjB,YAAR;AACE,WAAK,SAAL;AACEtxB,QAAAA,IAAI,CAACsxB,YAAL,GAAoB,IAApB;AACAtxB,QAAAA,IAAI,CAACkyB,OAAL,GAAeA,OAAO,CAACC,cAAvB;AACA,aAAK5T,MAAL,CAAY5L,OAAE,CAACtZ,MAAf;AACA,eAAO,KAAKyW,UAAL,CAAgB9P,IAAhB,EAAsB,iBAAtB,CAAP;A;AACF,WAAK,QAAL;AACEA,QAAAA,IAAI,CAACsxB,YAAL,GAAoB,IAApB;AACAtxB,QAAAA,IAAI,CAACkyB,OAAL,GAAeA,OAAO,CAACE,aAAvB;AACA,aAAK7T,MAAL,CAAY5L,OAAE,CAACtZ,MAAf;AACA,eAAO,KAAKyW,UAAL,CAAgB9P,IAAhB,EAAsB,gBAAtB,CAAP;A;AACF,WAAK,QAAL;AACEA,QAAAA,IAAI,CAACsxB,YAAL,GAAoB,IAApB;AACAtxB,QAAAA,IAAI,CAACkyB,OAAL,GAAe,KAAKQ,qBAAL,CACbR,OAAO,CAACG,aADK,EAEbH,OAAO,CAACI,gBAFK,EAGb;AAAExB,UAAAA;AAAF,SAHa,CAAf;AAKA,aAAKvS,MAAL,CAAY5L,OAAE,CAACtZ,MAAf;AACA,eAAO,KAAKyW,UAAL,CAAgB9P,IAAhB,EAAsB,gBAAtB,CAAP;A;AACF,WAAK,QAAL;AACEA,QAAAA,IAAI,CAACkyB,OAAL,GAAeA,OAAO,CAACI,gBAAvB;AACA,aAAK/T,MAAL,CAAY5L,OAAE,CAACtZ,MAAf;AACA,eAAO,KAAKyW,UAAL,CAAgB9P,IAAhB,EAAsB,gBAAtB,CAAP;A;AACF;AAAS;AAEP,gBAAM+yB,KAAK,GAAG,MAAM;AAClB/yB,YAAAA,IAAI,CAACkyB,OAAL,GAAe,EAAf;AACA,iBAAK3T,MAAL,CAAY5L,OAAE,CAACtZ,MAAf;AACA,mBAAO,KAAKyW,UAAL,CAAgB9P,IAAhB,EAAsB,gBAAtB,CAAP;AACD,WAJD;A;AAKAA,UAAAA,IAAI,CAACsxB,YAAL,GAAoB,KAApB;AAEA,gBAAM0B,QAAQ,GAAGd,OAAO,CAACC,cAAR,CAAuB7qC,MAAxC;AACA,gBAAM2rC,OAAO,GAAGf,OAAO,CAACE,aAAR,CAAsB9qC,MAAtC;AACA,gBAAM4rC,OAAO,GAAGhB,OAAO,CAACG,aAAR,CAAsB/qC,MAAtC;AACA,gBAAM6rC,YAAY,GAAGjB,OAAO,CAACI,gBAAR,CAAyBhrC,MAA9C;A;AAEA,cAAI,CAAC0rC,QAAD,IAAa,CAACC,OAAd,IAAyB,CAACC,OAA1B,IAAqC,CAACC,YAA1C,EAAwD;AACtD,mBAAOJ,KAAK,EAAZ;AACD,WAFD,MAEO,IAAI,CAACC,QAAD,IAAa,CAACC,OAAlB,EAA2B;AAChCjzB,YAAAA,IAAI,CAACkyB,OAAL,GAAe,KAAKQ,qBAAL,CACbR,OAAO,CAACG,aADK,EAEbH,OAAO,CAACI,gBAFK,EAGb;AAAExB,cAAAA;AAAF,aAHa,CAAf;AAKA,iBAAKvS,MAAL,CAAY5L,OAAE,CAACtZ,MAAf;AACA,mBAAO,KAAKyW,UAAL,CAAgB9P,IAAhB,EAAsB,gBAAtB,CAAP;AACD,WARM,MAQA,IAAI,CAACizB,OAAD,IAAY,CAACC,OAAb,IAAwBF,QAAQ,IAAIG,YAAxC,EAAsD;AAC3D,iBAAK,MAAM5I,MAAX,IAAqB2H,OAAO,CAACI,gBAA7B,EAA+C;AAC7C,mBAAKzB,wCAAL,CAA8CtG,MAAM,CAACj9B,KAArD,EAA4D;AAC1DwjC,gBAAAA,QAD0D;AAE1DC,gBAAAA,UAAU,EAAExG,MAAM,CAACvjC,EAAP,CAAUyH;AAFoC,eAA5D;AAID;A;AACDuR,YAAAA,IAAI,CAACkyB,OAAL,GAAeA,OAAO,CAACC,cAAvB;AACA,iBAAK5T,MAAL,CAAY5L,OAAE,CAACtZ,MAAf;AACA,mBAAO,KAAKyW,UAAL,CAAgB9P,IAAhB,EAAsB,iBAAtB,CAAP;AACD,WAVM,MAUA,IAAI,CAACgzB,QAAD,IAAa,CAACE,OAAd,IAAyBD,OAAO,IAAIE,YAAxC,EAAsD;AAC3D,iBAAK,MAAM5I,MAAX,IAAqB2H,OAAO,CAACI,gBAA7B,EAA+C;AAC7C,mBAAKf,uCAAL,CAA6ChH,MAAM,CAACj9B,KAApD,EAA2D;AACzDwjC,gBAAAA,QADyD;AAEzDC,gBAAAA,UAAU,EAAExG,MAAM,CAACvjC,EAAP,CAAUyH;AAFmC,eAA3D;AAID;A;AACDuR,YAAAA,IAAI,CAACkyB,OAAL,GAAeA,OAAO,CAACE,aAAvB;AACA,iBAAK7T,MAAL,CAAY5L,OAAE,CAACtZ,MAAf;AACA,mBAAO,KAAKyW,UAAL,CAAgB9P,IAAhB,EAAsB,gBAAtB,CAAP;AACD,WAVM,MAUA;AACL,iBAAKkxB,qCAAL,CAA2C4B,OAA3C,EAAoD;AAAEhC,cAAAA;AAAF,aAApD;AACA,mBAAOiC,KAAK,EAAZ;AACD;AACF;AAxEH;AA0ED;A;AAEDvL,EAAAA,wBAAwB,CAACxnB,IAAD,EAAuB;AAC7C,UAAMhZ,EAAE,GAAG,KAAKm4B,eAAL,EAAX;AACAnf,IAAAA,IAAI,CAAChZ,EAAL,GAAUA,EAAV;AACAgZ,IAAAA,IAAI,CAACzX,IAAL,GAAY,KAAKsqC,YAAL,CAAkB,KAAKljB,SAAL,EAAlB,EAAoC;AAC9CmhB,MAAAA,QAAQ,EAAE9pC,EAAE,CAACyH,IADiC;AAE9CqkC,MAAAA,OAAO,EAAE9rC,EAAE,CAACsG;AAFkC,KAApC,CAAZ;AAIA,WAAO,KAAKwiB,UAAL,CAAgB9P,IAAhB,EAAsB,iBAAtB,CAAP;AACD;A;AAEDlI,EAAAA,aAAa,CAACkb,QAAD,EAA4B;AACvC,QACE,KAAKniB,KAAL,CAAW8hB,OAAE,CAAClkB,IAAd,KACA,KAAKmR,KAAL,CAAWpT,KAAX,KAAqB,IADrB,IAEAwmB,QAAQ,KAAKL,OAAE,CAAClkB,IAFhB,IAGA,KAAKkQ,KAAL,CAAWjK,KAAX,CAAiB,KAAKkL,KAAL,CAAWuL,YAA5B,EAA0C,KAAKvL,KAAL,CAAW0L,UAArD,MACE,WALJ,EAME;AACA,WAAK1L,KAAL,CAAWiT,WAAX,GAAyB,KAAzB;AACD,KARD,MAQO;AACL,YAAM/a,aAAN,CAAoBkb,QAApB;AACD;AACF;A;AAGD0c,EAAAA,mBAAmB,GAAY;AAC7B,UAAM3a,IAAI,GAAG,KAAKqe,cAAL,EAAb;A;AACA,QAAI,KAAKz0B,KAAL,CAAWzN,UAAX,CAAsB6jB,IAAtB,QAAJ,EAAwD;AACtD,YAAMse,SAAS,GAAG,KAAK10B,KAAL,CAAWzN,UAAX,CAAsB6jB,IAAI,GAAG,CAA7B,CAAlB;AACA,aACEse,SAAS,OAAT,IAAoCA,SAAS,OAD/C;AAGD;A;AACD,WAAO,KAAP;AACD;A;AAED1E,EAAAA,6BAA6B,CAAC3uB,IAAD,EAAe;AAC1C,WAAOA,IAAI,CAAC3Z,IAAL,KAAc,oBAAd,GAAqC2Z,IAAI,CAACuN,UAA1C,GAAuDvN,IAA9D;AACD;A;AAl9GsB,CAD3B;A;ACnMA,MAAMszB,QAAoC,GAAG;AAC3CC,EAAAA,IAAI,EAAE,QADqC;AAE3CC,EAAAA,GAAG,EAAE,GAFsC;AAG3CC,EAAAA,IAAI,EAAE,QAHqC;AAI3CC,EAAAA,EAAE,EAAE,GAJuC;AAK3CC,EAAAA,EAAE,EAAE,GALuC;AAM3CC,EAAAA,IAAI,EAAE,QANqC;AAO3CC,EAAAA,KAAK,EAAE,QAPoC;AAQ3CC,EAAAA,IAAI,EAAE,QARqC;AAS3CC,EAAAA,KAAK,EAAE,QAToC;AAU3CC,EAAAA,MAAM,EAAE,QAVmC;AAW3CC,EAAAA,GAAG,EAAE,QAXsC;AAY3CC,EAAAA,MAAM,EAAE,QAZmC;AAa3CC,EAAAA,IAAI,EAAE,QAbqC;AAc3CC,EAAAA,GAAG,EAAE,QAdsC;AAe3CC,EAAAA,IAAI,EAAE,QAfqC;AAgB3CC,EAAAA,IAAI,EAAE,QAhBqC;AAiB3CC,EAAAA,KAAK,EAAE,QAjBoC;AAkB3CC,EAAAA,GAAG,EAAE,QAlBsC;AAmB3CC,EAAAA,GAAG,EAAE,QAnBsC;AAoB3CC,EAAAA,GAAG,EAAE,QApBsC;AAqB3CC,EAAAA,IAAI,EAAE,QArBqC;AAsB3CC,EAAAA,GAAG,EAAE,QAtBsC;AAuB3CC,EAAAA,MAAM,EAAE,QAvBmC;AAwB3CC,EAAAA,IAAI,EAAE,QAxBqC;AAyB3CC,EAAAA,IAAI,EAAE,QAzBqC;AA0B3CC,EAAAA,KAAK,EAAE,QA1BoC;AA2B3CC,EAAAA,KAAK,EAAE,QA3BoC;AA4B3CC,EAAAA,IAAI,EAAE,QA5BqC;AA6B3CC,EAAAA,MAAM,EAAE,QA7BmC;AA8B3CC,EAAAA,KAAK,EAAE,QA9BoC;AA+B3CC,EAAAA,IAAI,EAAE,QA/BqC;AAgC3CC,EAAAA,IAAI,EAAE,QAhCqC;AAiC3CC,EAAAA,KAAK,EAAE,QAjCoC;AAkC3CC,EAAAA,MAAM,EAAE,QAlCmC;AAmC3CC,EAAAA,MAAM,EAAE,QAnCmC;AAoC3CC,EAAAA,MAAM,EAAE,QApCmC;AAqC3CC,EAAAA,MAAM,EAAE,QArCmC;AAsC3CC,EAAAA,MAAM,EAAE,QAtCmC;AAuC3CC,EAAAA,MAAM,EAAE,QAvCmC;AAwC3CC,EAAAA,KAAK,EAAE,QAxCoC;AAyC3CC,EAAAA,MAAM,EAAE,QAzCmC;AA0C3CC,EAAAA,IAAI,EAAE,QA1CqC;AA2C3CC,EAAAA,KAAK,EAAE,QA3CoC;AA4C3CC,EAAAA,KAAK,EAAE,QA5CoC;AA6C3CC,EAAAA,MAAM,EAAE,QA7CmC;AA8C3CC,EAAAA,MAAM,EAAE,QA9CmC;AA+C3CC,EAAAA,MAAM,EAAE,QA/CmC;AAgD3CC,EAAAA,KAAK,EAAE,QAhDoC;AAiD3CC,EAAAA,IAAI,EAAE,QAjDqC;AAkD3CC,EAAAA,MAAM,EAAE,QAlDmC;AAmD3CC,EAAAA,MAAM,EAAE,QAnDmC;AAoD3CC,EAAAA,KAAK,EAAE,QApDoC;AAqD3CC,EAAAA,IAAI,EAAE,QArDqC;AAsD3CC,EAAAA,GAAG,EAAE,QAtDsC;AAuD3CC,EAAAA,MAAM,EAAE,QAvDmC;AAwD3CC,EAAAA,MAAM,EAAE,QAxDmC;AAyD3CC,EAAAA,MAAM,EAAE,QAzDmC;AA0D3CC,EAAAA,KAAK,EAAE,QA1DoC;AA2D3CC,EAAAA,MAAM,EAAE,QA3DmC;AA4D3CC,EAAAA,IAAI,EAAE,QA5DqC;AA6D3CC,EAAAA,KAAK,EAAE,QA7DoC;AA8D3CC,EAAAA,MAAM,EAAE,QA9DmC;AA+D3CC,EAAAA,MAAM,EAAE,QA/DmC;AAgE3CC,EAAAA,MAAM,EAAE,QAhEmC;AAiE3CC,EAAAA,KAAK,EAAE,QAjEoC;AAkE3CC,EAAAA,IAAI,EAAE,QAlEqC;AAmE3CC,EAAAA,MAAM,EAAE,QAnEmC;AAoE3CC,EAAAA,KAAK,EAAE,QApEoC;AAqE3CC,EAAAA,KAAK,EAAE,QArEoC;AAsE3CC,EAAAA,MAAM,EAAE,QAtEmC;AAuE3CC,EAAAA,MAAM,EAAE,QAvEmC;AAwE3CC,EAAAA,KAAK,EAAE,QAxEoC;AAyE3CC,EAAAA,MAAM,EAAE,QAzEmC;AA0E3CC,EAAAA,IAAI,EAAE,QA1EqC;AA2E3CC,EAAAA,KAAK,EAAE,QA3EoC;AA4E3CC,EAAAA,KAAK,EAAE,QA5EoC;AA6E3CC,EAAAA,MAAM,EAAE,QA7EmC;AA8E3CC,EAAAA,MAAM,EAAE,QA9EmC;AA+E3CC,EAAAA,MAAM,EAAE,QA/EmC;AAgF3CC,EAAAA,KAAK,EAAE,QAhFoC;AAiF3CC,EAAAA,IAAI,EAAE,QAjFqC;AAkF3CC,EAAAA,MAAM,EAAE,QAlFmC;AAmF3CC,EAAAA,MAAM,EAAE,QAnFmC;AAoF3CC,EAAAA,KAAK,EAAE,QApFoC;AAqF3CC,EAAAA,IAAI,EAAE,QArFqC;AAsF3CC,EAAAA,GAAG,EAAE,QAtFsC;AAuF3CC,EAAAA,MAAM,EAAE,QAvFmC;AAwF3CC,EAAAA,MAAM,EAAE,QAxFmC;AAyF3CC,EAAAA,MAAM,EAAE,QAzFmC;AA0F3CC,EAAAA,KAAK,EAAE,QA1FoC;AA2F3CC,EAAAA,MAAM,EAAE,QA3FmC;AA4F3CC,EAAAA,IAAI,EAAE,QA5FqC;AA6F3CC,EAAAA,MAAM,EAAE,QA7FmC;AA8F3CC,EAAAA,MAAM,EAAE,QA9FmC;AA+F3CC,EAAAA,MAAM,EAAE,QA/FmC;AAgG3CC,EAAAA,MAAM,EAAE,QAhGmC;AAiG3CC,EAAAA,KAAK,EAAE,QAjGoC;AAkG3CC,EAAAA,IAAI,EAAE,QAlGqC;AAmG3CC,EAAAA,MAAM,EAAE,QAnGmC;AAoG3CC,EAAAA,KAAK,EAAE,QApGoC;AAqG3CC,EAAAA,IAAI,EAAE,QArGqC;AAsG3CC,EAAAA,KAAK,EAAE,QAtGoC;AAuG3CC,EAAAA,KAAK,EAAE,QAvGoC;AAwG3CC,EAAAA,MAAM,EAAE,QAxGmC;AAyG3CC,EAAAA,MAAM,EAAE,QAzGmC;AA0G3CC,EAAAA,IAAI,EAAE,QA1GqC;AA2G3CC,EAAAA,IAAI,EAAE,QA3GqC;AA4G3CC,EAAAA,IAAI,EAAE,QA5GqC;AA6G3Cv/B,EAAAA,KAAK,EAAE,QA7GoC;AA8G3Cw/B,EAAAA,KAAK,EAAE,QA9GoC;AA+G3CC,EAAAA,IAAI,EAAE,QA/GqC;AAgH3CC,EAAAA,KAAK,EAAE,QAhHoC;AAiH3CC,EAAAA,KAAK,EAAE,QAjHoC;AAkH3CC,EAAAA,OAAO,EAAE,QAlHkC;AAmH3CC,EAAAA,IAAI,EAAE,QAnHqC;AAoH3CC,EAAAA,GAAG,EAAE,QApHsC;AAqH3CC,EAAAA,KAAK,EAAE,QArHoC;AAsH3CC,EAAAA,IAAI,EAAE,QAtHqC;AAuH3CC,EAAAA,KAAK,EAAE,QAvHoC;AAwH3CC,EAAAA,MAAM,EAAE,QAxHmC;AAyH3CC,EAAAA,EAAE,EAAE,QAzHuC;AA0H3CC,EAAAA,EAAE,EAAE,QA1HuC;AA2H3CC,EAAAA,EAAE,EAAE,QA3HuC;AA4H3CC,EAAAA,OAAO,EAAE,QA5HkC;AA6H3CC,EAAAA,EAAE,EAAE,QA7HuC;AA8H3CC,EAAAA,GAAG,EAAE,QA9HsC;AA+H3CC,EAAAA,KAAK,EAAE,QA/HoC;AAgI3CC,EAAAA,GAAG,EAAE,QAhIsC;AAiI3CC,EAAAA,OAAO,EAAE,QAjIkC;AAkI3CC,EAAAA,GAAG,EAAE,QAlIsC;AAmI3CC,EAAAA,GAAG,EAAE,QAnIsC;AAoI3CC,EAAAA,GAAG,EAAE,QApIsC;AAqI3CC,EAAAA,KAAK,EAAE,QArIoC;AAsI3CC,EAAAA,KAAK,EAAE,QAtIoC;AAuI3CC,EAAAA,IAAI,EAAE,QAvIqC;AAwI3CC,EAAAA,KAAK,EAAE,QAxIoC;AAyI3CC,EAAAA,KAAK,EAAE,QAzIoC;AA0I3CC,EAAAA,OAAO,EAAE,QA1IkC;AA2I3CC,EAAAA,IAAI,EAAE,QA3IqC;AA4I3CC,EAAAA,GAAG,EAAE,QA5IsC;AA6I3CC,EAAAA,KAAK,EAAE,QA7IoC;AA8I3CC,EAAAA,IAAI,EAAE,QA9IqC;AA+I3CC,EAAAA,KAAK,EAAE,QA/IoC;AAgJ3CC,EAAAA,MAAM,EAAE,QAhJmC;AAiJ3CC,EAAAA,EAAE,EAAE,QAjJuC;AAkJ3CC,EAAAA,EAAE,EAAE,QAlJuC;AAmJ3CC,EAAAA,EAAE,EAAE,QAnJuC;AAoJ3CC,EAAAA,OAAO,EAAE,QApJkC;AAqJ3CC,EAAAA,EAAE,EAAE,QArJuC;AAsJ3CC,EAAAA,GAAG,EAAE,QAtJsC;AAuJ3CC,EAAAA,MAAM,EAAE,QAvJmC;AAwJ3CC,EAAAA,KAAK,EAAE,QAxJoC;AAyJ3CC,EAAAA,GAAG,EAAE,QAzJsC;AA0J3CC,EAAAA,OAAO,EAAE,QA1JkC;AA2J3CC,EAAAA,GAAG,EAAE,QA3JsC;AA4J3CC,EAAAA,GAAG,EAAE,QA5JsC;AA6J3CC,EAAAA,GAAG,EAAE,QA7JsC;AA8J3CC,EAAAA,KAAK,EAAE,QA9JoC;AA+J3CC,EAAAA,QAAQ,EAAE,QA/JiC;AAgK3CC,EAAAA,KAAK,EAAE,QAhKoC;AAiK3CC,EAAAA,GAAG,EAAE,QAjKsC;AAkK3CC,EAAAA,IAAI,EAAE,QAlKqC;AAmK3CC,EAAAA,IAAI,EAAE,QAnKqC;AAoK3CC,EAAAA,MAAM,EAAE,QApKmC;AAqK3CC,EAAAA,IAAI,EAAE,QArKqC;AAsK3CC,EAAAA,GAAG,EAAE,QAtKsC;AAuK3CC,EAAAA,GAAG,EAAE,QAvKsC;AAwK3CC,EAAAA,GAAG,EAAE,QAxKsC;AAyK3CC,EAAAA,KAAK,EAAE,QAzKoC;AA0K3CC,EAAAA,KAAK,EAAE,QA1KoC;AA2K3CC,EAAAA,KAAK,EAAE,QA3KoC;AA4K3CC,EAAAA,KAAK,EAAE,QA5KoC;AA6K3CC,EAAAA,KAAK,EAAE,QA7KoC;AA8K3CC,EAAAA,KAAK,EAAE,QA9KoC;AA+K3CC,EAAAA,KAAK,EAAE,QA/KoC;AAgL3CC,EAAAA,KAAK,EAAE,QAhLoC;AAiL3CC,EAAAA,MAAM,EAAE,QAjLmC;AAkL3CC,EAAAA,MAAM,EAAE,QAlLmC;AAmL3CC,EAAAA,IAAI,EAAE,QAnLqC;AAoL3CC,EAAAA,MAAM,EAAE,QApLmC;AAqL3CC,EAAAA,MAAM,EAAE,QArLmC;AAsL3CC,EAAAA,KAAK,EAAE,QAtLoC;AAuL3CC,EAAAA,KAAK,EAAE,QAvLoC;AAwL3CC,EAAAA,MAAM,EAAE,QAxLmC;AAyL3CC,EAAAA,MAAM,EAAE,QAzLmC;AA0L3CC,EAAAA,KAAK,EAAE,QA1LoC;AA2L3CC,EAAAA,KAAK,EAAE,QA3LoC;AA4L3CC,EAAAA,IAAI,EAAE,QA5LqC;AA6L3CC,EAAAA,KAAK,EAAE,QA7LoC;AA8L3CC,EAAAA,MAAM,EAAE,QA9LmC;AA+L3CC,EAAAA,IAAI,EAAE,QA/LqC;AAgM3CC,EAAAA,KAAK,EAAE,QAhMoC;AAiM3CC,EAAAA,OAAO,EAAE,QAjMkC;AAkM3CC,EAAAA,IAAI,EAAE,QAlMqC;AAmM3CC,EAAAA,IAAI,EAAE,QAnMqC;AAoM3CC,EAAAA,IAAI,EAAE,QApMqC;AAqM3CC,EAAAA,IAAI,EAAE,QArMqC;AAsM3CC,EAAAA,IAAI,EAAE,QAtMqC;AAuM3CC,EAAAA,KAAK,EAAE,QAvMoC;AAwM3CC,EAAAA,IAAI,EAAE,QAxMqC;AAyM3CC,EAAAA,IAAI,EAAE,QAzMqC;AA0M3CC,EAAAA,IAAI,EAAE,QA1MqC;AA2M3CC,EAAAA,IAAI,EAAE,QA3MqC;AA4M3CC,EAAAA,IAAI,EAAE,QA5MqC;AA6M3CC,EAAAA,MAAM,EAAE,QA7MmC;AA8M3CC,EAAAA,IAAI,EAAE,QA9MqC;AA+M3CC,EAAAA,KAAK,EAAE,QA/MoC;AAgN3CrN,EAAAA,KAAK,EAAE,QAhNoC;AAiN3CsN,EAAAA,KAAK,EAAE,QAjNoC;AAkN3CC,EAAAA,IAAI,EAAE,QAlNqC;AAmN3CC,EAAAA,KAAK,EAAE,QAnNoC;AAoN3CC,EAAAA,EAAE,EAAE,QApNuC;AAqN3CC,EAAAA,IAAI,EAAE,QArNqC;AAsN3CC,EAAAA,GAAG,EAAE,QAtNsC;AAuN3CC,EAAAA,KAAK,EAAE,QAvNoC;AAwN3CC,EAAAA,MAAM,EAAE,QAxNmC;AAyN3CC,EAAAA,KAAK,EAAE,QAzNoC;AA0N3C1wB,EAAAA,IAAI,EAAE,QA1NqC;AA2N3C2wB,EAAAA,KAAK,EAAE,QA3NoC;AA4N3CC,EAAAA,GAAG,EAAE,QA5NsC;AA6N3CC,EAAAA,GAAG,EAAE,QA7NsC;AA8N3CC,EAAAA,EAAE,EAAE,QA9NuC;AA+N3CC,EAAAA,GAAG,EAAE,QA/NsC;AAgO3CC,EAAAA,GAAG,EAAE,QAhOsC;AAiO3CC,EAAAA,GAAG,EAAE,QAjOsC;AAkO3CC,EAAAA,MAAM,EAAE,QAlOmC;AAmO3CC,EAAAA,GAAG,EAAE,QAnOsC;AAoO3CC,EAAAA,IAAI,EAAE,QApOqC;AAqO3CC,EAAAA,KAAK,EAAE,QArOoC;AAsO3CC,EAAAA,EAAE,EAAE,QAtOuC;AAuO3CC,EAAAA,KAAK,EAAE,QAvOoC;AAwO3CC,EAAAA,EAAE,EAAE,QAxOuC;AAyO3CC,EAAAA,EAAE,EAAE,QAzOuC;AA0O3CC,EAAAA,GAAG,EAAE,QA1OsC;AA2O3CC,EAAAA,GAAG,EAAE,QA3OsC;AA4O3CC,EAAAA,IAAI,EAAE,QA5OqC;AA6O3CC,EAAAA,IAAI,EAAE,QA7OqC;AA8O3CC,EAAAA,IAAI,EAAE,QA9OqC;AA+O3CC,EAAAA,KAAK,EAAE,QA/OoC;AAgP3CC,EAAAA,MAAM,EAAE,QAhPmC;AAiP3CC,EAAAA,IAAI,EAAE,QAjPqC;AAkP3CC,EAAAA,IAAI,EAAE,QAlPqC;AAmP3CC,EAAAA,KAAK,EAAE,QAnPoC;AAoP3CC,EAAAA,KAAK,EAAE,QApPoC;AAqP3CC,EAAAA,MAAM,EAAE,QArPmC;AAsP3CC,EAAAA,MAAM,EAAE,QAtPmC;AAuP3CC,EAAAA,IAAI,EAAE,QAvPqC;AAwP3CC,EAAAA,IAAI,EAAE,QAxPqC;AAyP3CC,EAAAA,GAAG,EAAE,QAzPsC;AA0P3CC,EAAAA,MAAM,EAAE,QA1PmC;AA2P3CC,EAAAA,KAAK,EAAE,QA3PoC;AA4P3CC,EAAAA,MAAM,EAAE,QA5PmC;AA6P3CC,EAAAA,KAAK,EAAE;AA7PoC,CAA7C;A;ACqBe,MAAMC,KAAN,CAAY;AAAA;AAAA,SACzBhvB,MADyB;AAAA,SAEzBivB,OAFyB;AAAA,SAMzBh4B,QANyB;AAAA,SAOzBG,MAPyB;AAAA,SAiBzBQ,MAjByB,GAiBA,EAjBA;AAAA,SAoBzBs3B,gBApByB,GAoBE,CAAC,CApBH;AAAA,SA0BzB9a,SA1ByB,GA0BH,EA1BG;AAAA,SAkCzBS,yBAlCyB,GAkCa,EAlCb;AAAA,SAqCzB4C,sBArCyB,GAqCS,KArCT;AAAA,SAsCzB0X,UAtCyB,GAsCH,KAtCG;AAAA,SAuCzB9kB,MAvCyB,GAuCP,KAvCO;AAAA,SAwCzBmF,kBAxCyB,GAwCK,KAxCL;AAAA,SAyCzB4f,cAzCyB,GAyCC,KAzCD;AAAA,SA0CzBrT,cA1CyB,GA0CC,KA1CD;AAAA,SA2CzBsT,gBA3CyB,GA2CG,KA3CH;AAAA,SA4CzBC,eA5CyB,GA4CE,KA5CF;AAAA,SA+CzBC,YA/CyB,GA+CS;AAChCC,MAAAA,wBAAwB,EAAE,CADM;AAEhCC,MAAAA,aAAa,EAAE;AAFiB,KA/CT;AAAA,SAqDzBC,SArDyB,GAqDJ,KArDI;AAAA,SAsDzBC,0BAtDyB,GAsDa,KAtDb;AAAA,SAyDzBC,MAzDyB,GA6DpB,EA7DoB;AAAA,SAkEzBC,cAlEyB,GAkEmB,CAAC,EAAD,CAlEnB;AAAA,SAqEzBC,QArEyB,GAqEI,EArEJ;AAAA,SAwEzBlkC,gBAxEyB,GAwEY,EAxEZ;AAAA,SAyEzBC,eAzEyB,GAyEW,EAzEX;AAAA,SA0EzBU,YA1EyB,GA+EpB,EA/EoB;AAAA,SAiFzBJ,mBAjFyB,GAiFK,IAjFL;AAAA,SAoFzB6K,GApFyB,GAoFX,CApFW;AAAA,SAqFzBpM,SArFyB,GAqFL,CArFK;AAAA,SAyFzBxY,IAzFyB,GAyFPssB,OAAE,CAAC/Z,GAzFI;AAAA,SA4FzBpM,KA5FyB,GA4FZ,IA5FY;AAAA,SA+FzBc,KA/FyB,GA+FT,CA/FS;AAAA,SAgGzBC,GAhGyB,GAgGX,CAhGW;AAAA,SAoGzBge,aApGyB,GAoGC,IApGD;AAAA,SAsGzBH,eAtGyB,GAsGG,IAtGH;AAAA,SAuGzBD,YAvGyB,GAuGF,CAvGE;AAAA,SAwGzBG,UAxGyB,GAwGJ,CAxGI;AAAA,SA6GzBsH,OA7GyB,GA6GI,CAACoxB,KAAE,CAAC7xB,cAAJ,CA7GJ;AAAA,SA8GzBU,WA9GyB,GA8GF,IA9GE;AAAA,SAmHzBoxB,WAnHyB,GAmHF,KAnHE;AAAA,SA6HzBC,YA7HyB,GA6HkB,IAAIlsC,GAAJ,EA7HlB;AAAA,SAiIzBmsC,mBAjIyB,GAiIY,EAjIZ;AAAA,SAoIzBC,YApIyB,GAoIF,CApIE;AAAA;A;AASzBvS,EAAAA,IAAI,CAAC35B,OAAD,EAAyB;AAC3B,SAAK+b,MAAL,GACE/b,OAAO,CAACmsC,UAAR,KAAuB,KAAvB,GAA+B,KAA/B,GAAuCnsC,OAAO,CAACosC,UAAR,KAAuB,QADhE;AAGA,SAAKpB,OAAL,GAAehrC,OAAO,CAACqsC,SAAvB;AACA,SAAKr5B,QAAL,GAAgB,KAAKG,MAAL,GAAc,KAAKm5B,WAAL,EAA9B;AACD;A;AAuHDA,EAAAA,WAAW,GAAa;AACtB,WAAO,IAAIpmC,QAAJ,CAAa,KAAK8kC,OAAlB,EAA2B,KAAKj4B,GAAL,GAAW,KAAKpM,SAA3C,CAAP;AACD;A;AAEDspB,EAAAA,KAAK,CAACsc,UAAD,EAA8B;AACjC,UAAM7kC,KAAK,GAAG,IAAIqjC,KAAJ,EAAd;AACA,UAAMhxC,IAAI,GAAG3F,MAAM,CAAC2F,IAAP,CAAY,IAAZ,CAAb;A;AACA,SAAK,IAAI5K,CAAC,GAAG,CAAR,EAAWC,MAAM,GAAG2K,IAAI,CAAC3K,MAA9B,EAAsCD,CAAC,GAAGC,MAA1C,EAAkDD,CAAC,EAAnD,EAAuD;AACrD,YAAMmI,GAAG,GAAGyC,IAAI,CAAC5K,CAAD,CAAhB;AAEA,UAAIwF,GAAG,GAAG,KAAK2C,GAAL,CAAV;A;AAEA,UAAI,CAACi1C,UAAD,IAAe96C,KAAK,CAACC,OAAN,CAAciD,GAAd,CAAnB,EAAuC;AACrCA,QAAAA,GAAG,GAAGA,GAAG,CAAC6H,KAAJ,EAAN;AACD;A;AAGDkL,MAAAA,KAAK,CAACpQ,GAAD,CAAL,GAAa3C,GAAb;AACD;A;AAED,WAAO+S,KAAP;AACD;A;AA3JwB;A;ACD3B,MAAM8kC,UAAU,GAAG,eAAnB;AACA,MAAMC,cAAc,GAAG,OAAvB;AAGA,MAAMC,SAAS,GAAGvjC,kBAAkB,CAClC;AACEwjC,EAAAA,gBAAgB,EACd,8DAFJ;AAGEC,EAAAA,wBAAwB,EACtB,kDAJJ;AAKEC,EAAAA,yBAAyB,EAAE,gDAL7B;AAMEC,EAAAA,4BAA4B,EAC1B,0GAPJ;AAQEC,EAAAA,mBAAmB,EACjB,gEATJ;AAUEC,EAAAA,sBAAsB,EAAE,4BAV1B;AAWEC,EAAAA,4BAA4B,EAC1B;AAZJ,CADkC,EAevBlkC,UAAU,CAACC,WAfY,CAApC;AAqBAmtB,KAAE,CAACC,MAAH,GAAY,IAAItc,UAAJ,CAAe,MAAf,EAAuB,KAAvB,CAAZ;AACAqc,KAAE,CAAC+W,MAAH,GAAY,IAAIpzB,UAAJ,CAAe,OAAf,EAAwB,KAAxB,CAAZ;AACAqc,KAAE,CAACE,MAAH,GAAY,IAAIvc,UAAJ,CAAe,gBAAf,EAAiC,IAAjC,EAAuC,IAAvC,CAAZ;AAEAW,OAAE,CAAC0yB,OAAH,GAAa,IAAI9tC,SAAJ,CAAc,SAAd,CAAb;AACAob,OAAE,CAAC2yB,OAAH,GAAa,IAAI/tC,SAAJ,CAAc,SAAd,EAAyB;AAAEN,EAAAA,UAAU,EAAE;AAAd,CAAzB,CAAb;AACA0b,OAAE,CAACyQ,WAAH,GAAiB,IAAI7rB,SAAJ,CAAc,aAAd,EAA6B;AAAEL,EAAAA,UAAU,EAAE;AAAd,CAA7B,CAAjB;AACAyb,OAAE,CAAC4yB,SAAH,GAAe,IAAIhuC,SAAJ,CAAc,WAAd,CAAf;A;AAEAob,OAAE,CAACyQ,WAAH,CAAetrB,aAAf,GAA+B,YAAY;AACzC,OAAK8H,KAAL,CAAWgT,OAAX,CAAmB7tB,IAAnB,CAAwBspC,KAAE,CAACE,MAA3B;AACA,OAAK3uB,KAAL,CAAWgT,OAAX,CAAmB7tB,IAAnB,CAAwBspC,KAAE,CAACC,MAA3B;AACA,OAAK1uB,KAAL,CAAWiT,WAAX,GAAyB,KAAzB;AACD,CAJD;A;AAMAF,OAAE,CAAC4yB,SAAH,CAAaztC,aAAb,GAA6B,UAAUkb,QAAV,EAAoB;AAC/C,QAAMF,GAAG,GAAG,KAAKlT,KAAL,CAAWgT,OAAX,CAAmBhS,GAAnB,EAAZ;A;AACA,MAAKkS,GAAG,KAAKub,KAAE,CAACC,MAAX,IAAqBtb,QAAQ,KAAKL,OAAE,CAAClX,KAAtC,IAAgDqX,GAAG,KAAKub,KAAE,CAAC+W,MAA/D,EAAuE;AACrE,SAAKxlC,KAAL,CAAWgT,OAAX,CAAmBhS,GAAnB;AACA,SAAKhB,KAAL,CAAWiT,WAAX,GAAyB,KAAKE,UAAL,OAAsBsb,KAAE,CAACE,MAAlD;AACD,GAHD,MAGO;AACL,SAAK3uB,KAAL,CAAWiT,WAAX,GAAyB,IAAzB;AACD;AACF,CARD;A;AAUA,SAAS2yB,UAAT,CAAoBC,MAApB,EAAoD;AAClD,SAAOA,MAAM,GACTA,MAAM,CAACp/C,IAAP,KAAgB,oBAAhB,IACEo/C,MAAM,CAACp/C,IAAP,KAAgB,oBAFT,GAGT,KAHJ;AAID;A;AAID,SAASq/C,mBAAT,CACED,MADF,EAEU;AACR,MAAIA,MAAM,CAACp/C,IAAP,KAAgB,eAApB,EAAqC;AACnC,WAAOo/C,MAAM,CAACh3C,IAAd;AACD;A;AAED,MAAIg3C,MAAM,CAACp/C,IAAP,KAAgB,mBAApB,EAAyC;AACvC,WAAOo/C,MAAM,CAACE,SAAP,CAAiBl3C,IAAjB,GAAwB,GAAxB,GAA8Bg3C,MAAM,CAACh3C,IAAP,CAAYA,IAAjD;AACD;A;AAED,MAAIg3C,MAAM,CAACp/C,IAAP,KAAgB,qBAApB,EAA2C;AACzC,WACEq/C,mBAAmB,CAACD,MAAM,CAACA,MAAR,CAAnB,GACA,GADA,GAEAC,mBAAmB,CAACD,MAAM,CAACngB,QAAR,CAHrB;AAKD;A;AAGD,QAAM,IAAIpH,KAAJ,CAAU,+BAA+BunB,MAAM,CAACp/C,IAAhD,CAAN;AACD;A;AAED,WAAgB8lB,UAAD,IACb,cAAcA,UAAd,CAAyB;AAGvBy5B,EAAAA,YAAY,GAAS;AACnB,QAAI9yB,GAAG,GAAG,EAAV;AACA,QAAI+yB,UAAU,GAAG,KAAKjmC,KAAL,CAAWqL,GAA5B;A;AACA,aAAS;AACP,UAAI,KAAKrL,KAAL,CAAWqL,GAAX,IAAkB,KAAK3jB,MAA3B,EAAmC;AACjC,cAAM,KAAKkkB,KAAL,CAAW,KAAK5L,KAAL,CAAWtS,KAAtB,EAA6Bs3C,SAAS,CAACM,sBAAvC,CAAN;AACD;A;AAED,YAAMY,EAAE,GAAG,KAAKnnC,KAAL,CAAWzN,UAAX,CAAsB,KAAK0O,KAAL,CAAWqL,GAAjC,CAAX;A;AAEA,cAAQ66B,EAAR;AACE;AACA;AACE,cAAI,KAAKlmC,KAAL,CAAWqL,GAAX,KAAmB,KAAKrL,KAAL,CAAWtS,KAAlC,EAAyC;AACvC,gBAAIw4C,EAAE,OAAF,IAA6B,KAAKlmC,KAAL,CAAWiT,WAA5C,EAAyD;AACvD,gBAAE,KAAKjT,KAAL,CAAWqL,GAAb;AACA,qBAAO,KAAK+S,WAAL,CAAiBrL,OAAE,CAACyQ,WAApB,CAAP;AACD;A;AACD,mBAAO,MAAMyH,gBAAN,CAAuBib,EAAvB,CAAP;AACD;A;AACDhzB,UAAAA,GAAG,IAAI,KAAKnU,KAAL,CAAWjK,KAAX,CAAiBmxC,UAAjB,EAA6B,KAAKjmC,KAAL,CAAWqL,GAAxC,CAAP;AACA,iBAAO,KAAK+S,WAAL,CAAiBrL,OAAE,CAAC2yB,OAApB,EAA6BxyB,GAA7B,CAAP;A;AAEF;AACEA,UAAAA,GAAG,IAAI,KAAKnU,KAAL,CAAWjK,KAAX,CAAiBmxC,UAAjB,EAA6B,KAAKjmC,KAAL,CAAWqL,GAAxC,CAAP;AACA6H,UAAAA,GAAG,IAAI,KAAKizB,aAAL,EAAP;AACAF,UAAAA,UAAU,GAAG,KAAKjmC,KAAL,CAAWqL,GAAxB;AACA;A;AAEF;AACA;A;AAaA;AACE,cAAIjN,SAAS,CAAC8nC,EAAD,CAAb,EAAmB;AACjBhzB,YAAAA,GAAG,IAAI,KAAKnU,KAAL,CAAWjK,KAAX,CAAiBmxC,UAAjB,EAA6B,KAAKjmC,KAAL,CAAWqL,GAAxC,CAAP;AACA6H,YAAAA,GAAG,IAAI,KAAKkzB,cAAL,CAAoB,IAApB,CAAP;AACAH,YAAAA,UAAU,GAAG,KAAKjmC,KAAL,CAAWqL,GAAxB;AACD,WAJD,MAIO;AACL,cAAE,KAAKrL,KAAL,CAAWqL,GAAb;AACD;A;AAxCL;AA0CD;AACF;A;AAED+6B,EAAAA,cAAc,CAACC,aAAD,EAAiC;AAC7C,UAAMH,EAAE,GAAG,KAAKnnC,KAAL,CAAWzN,UAAX,CAAsB,KAAK0O,KAAL,CAAWqL,GAAjC,CAAX;AACA,QAAI6H,GAAJ;AACA,MAAE,KAAKlT,KAAL,CAAWqL,GAAb;A;AACA,QACE66B,EAAE,OAAF,IACA,KAAKnnC,KAAL,CAAWzN,UAAX,CAAsB,KAAK0O,KAAL,CAAWqL,GAAjC,QAFF,EAGE;AACA,QAAE,KAAKrL,KAAL,CAAWqL,GAAb;AACA6H,MAAAA,GAAG,GAAGmzB,aAAa,GAAG,IAAH,GAAU,MAA7B;AACD,KAND,MAMO;AACLnzB,MAAAA,GAAG,GAAG9kB,MAAM,CAAC8lB,YAAP,CAAoBgyB,EAApB,CAAN;AACD;A;AACD,MAAE,KAAKlmC,KAAL,CAAWsjC,OAAb;AACA,SAAKtjC,KAAL,CAAWf,SAAX,GAAuB,KAAKe,KAAL,CAAWqL,GAAlC;AAEA,WAAO6H,GAAP;AACD;A;AAEDozB,EAAAA,aAAa,CAACC,KAAD,EAAsB;AACjC,QAAIrzB,GAAG,GAAG,EAAV;AACA,QAAI+yB,UAAU,GAAG,EAAE,KAAKjmC,KAAL,CAAWqL,GAA9B;A;AACA,aAAS;AACP,UAAI,KAAKrL,KAAL,CAAWqL,GAAX,IAAkB,KAAK3jB,MAA3B,EAAmC;AACjC,cAAM,KAAKkkB,KAAL,CAAW,KAAK5L,KAAL,CAAWtS,KAAtB,EAA6BujB,aAAM,CAAC1G,kBAApC,CAAN;AACD;A;AAED,YAAM27B,EAAE,GAAG,KAAKnnC,KAAL,CAAWzN,UAAX,CAAsB,KAAK0O,KAAL,CAAWqL,GAAjC,CAAX;AACA,UAAI66B,EAAE,KAAKK,KAAX,EAAkB;A;AAClB,UAAIL,EAAE,OAAN,EAAgC;AAC9BhzB,QAAAA,GAAG,IAAI,KAAKnU,KAAL,CAAWjK,KAAX,CAAiBmxC,UAAjB,EAA6B,KAAKjmC,KAAL,CAAWqL,GAAxC,CAAP;AACA6H,QAAAA,GAAG,IAAI,KAAKizB,aAAL,EAAP;AACAF,QAAAA,UAAU,GAAG,KAAKjmC,KAAL,CAAWqL,GAAxB;AACD,OAJD,MAIO,IAAIjN,SAAS,CAAC8nC,EAAD,CAAb,EAAmB;AACxBhzB,QAAAA,GAAG,IAAI,KAAKnU,KAAL,CAAWjK,KAAX,CAAiBmxC,UAAjB,EAA6B,KAAKjmC,KAAL,CAAWqL,GAAxC,CAAP;AACA6H,QAAAA,GAAG,IAAI,KAAKkzB,cAAL,CAAoB,KAApB,CAAP;AACAH,QAAAA,UAAU,GAAG,KAAKjmC,KAAL,CAAWqL,GAAxB;AACD,OAJM,MAIA;AACL,UAAE,KAAKrL,KAAL,CAAWqL,GAAb;AACD;AACF;A;AACD6H,IAAAA,GAAG,IAAI,KAAKnU,KAAL,CAAWjK,KAAX,CAAiBmxC,UAAjB,EAA6B,KAAKjmC,KAAL,CAAWqL,GAAX,EAA7B,CAAP;AACA,WAAO,KAAK+S,WAAL,CAAiBrL,OAAE,CAAC/hB,MAApB,EAA4BkiB,GAA5B,CAAP;AACD;A;AAEDizB,EAAAA,aAAa,GAAW;AACtB,QAAIt5C,GAAG,GAAG,EAAV;AACA,QAAIgB,KAAK,GAAG,CAAZ;AACA,QAAI24C,MAAJ;AACA,QAAIN,EAAE,GAAG,KAAKnnC,KAAL,CAAW,KAAKiB,KAAL,CAAWqL,GAAtB,CAAT;AAEA,UAAMuF,QAAQ,GAAG,EAAE,KAAK5Q,KAAL,CAAWqL,GAA9B;A;AACA,WAAO,KAAKrL,KAAL,CAAWqL,GAAX,GAAiB,KAAK3jB,MAAtB,IAAgCmG,KAAK,KAAK,EAAjD,EAAqD;AACnDq4C,MAAAA,EAAE,GAAG,KAAKnnC,KAAL,CAAW,KAAKiB,KAAL,CAAWqL,GAAX,EAAX,CAAL;A;AACA,UAAI66B,EAAE,KAAK,GAAX,EAAgB;AACd,YAAIr5C,GAAG,CAAC,CAAD,CAAH,KAAW,GAAf,EAAoB;AAClB,cAAIA,GAAG,CAAC,CAAD,CAAH,KAAW,GAAf,EAAoB;AAClBA,YAAAA,GAAG,GAAGA,GAAG,CAAC45C,MAAJ,CAAW,CAAX,CAAN;A;AACA,gBAAI3B,UAAU,CAAC3+C,IAAX,CAAgB0G,GAAhB,CAAJ,EAA0B;AACxB25C,cAAAA,MAAM,GAAGp4C,MAAM,CAACs4C,aAAP,CAAqB1xC,QAAQ,CAACnI,GAAD,EAAM,EAAN,CAA7B,CAAT;AACD;AACF,WALD,MAKO;AACLA,YAAAA,GAAG,GAAGA,GAAG,CAAC45C,MAAJ,CAAW,CAAX,CAAN;A;AACA,gBAAI1B,cAAc,CAAC5+C,IAAf,CAAoB0G,GAApB,CAAJ,EAA8B;AAC5B25C,cAAAA,MAAM,GAAGp4C,MAAM,CAACs4C,aAAP,CAAqB1xC,QAAQ,CAACnI,GAAD,EAAM,EAAN,CAA7B,CAAT;AACD;AACF;AACF,SAZD,MAYO;AACL25C,UAAAA,MAAM,GAAGG,QAAa,CAAC95C,GAAD,CAAtB;AACD;A;AACD;AACD;A;AACDA,MAAAA,GAAG,IAAIq5C,EAAP;AACD;A;AACD,QAAI,CAACM,MAAL,EAAa;AACX,WAAKxmC,KAAL,CAAWqL,GAAX,GAAiBuF,QAAjB;AACA,aAAO,GAAP;AACD;A;AACD,WAAO41B,MAAP;AACD;A;AASDI,EAAAA,WAAW,GAAS;AAClB,QAAIV,EAAJ;AACA,UAAMx4C,KAAK,GAAG,KAAKsS,KAAL,CAAWqL,GAAzB;A;AACA,OAAG;AACD66B,MAAAA,EAAE,GAAG,KAAKnnC,KAAL,CAAWzN,UAAX,CAAsB,EAAE,KAAK0O,KAAL,CAAWqL,GAAnC,CAAL;AACD,KAFD,QAES8I,gBAAgB,CAAC+xB,EAAD,CAAhB,IAAwBA,EAAE,OAFnC;A;AAGA,WAAO,KAAK9nB,WAAL,CACLrL,OAAE,CAAC0yB,OADE,EAEL,KAAK1mC,KAAL,CAAWjK,KAAX,CAAiBpH,KAAjB,EAAwB,KAAKsS,KAAL,CAAWqL,GAAnC,CAFK,CAAP;AAID;A;AAIDw7B,EAAAA,kBAAkB,GAAoB;AACpC,UAAMzmC,IAAI,GAAG,KAAK2P,SAAL,EAAb;A;AACA,QAAI,KAAK9e,KAAL,CAAW8hB,OAAE,CAAC0yB,OAAd,CAAJ,EAA4B;AAC1BrlC,MAAAA,IAAI,CAACvR,IAAL,GAAY,KAAKmR,KAAL,CAAWpT,KAAvB;AACD,KAFD,MAEO,IAAI,KAAKoT,KAAL,CAAWvZ,IAAX,CAAgBsR,OAApB,EAA6B;AAClCqI,MAAAA,IAAI,CAACvR,IAAL,GAAY,KAAKmR,KAAL,CAAWvZ,IAAX,CAAgBsR,OAA5B;AACD,KAFM,MAEA;AACL,WAAK+oB,UAAL;AACD;A;AACD,SAAK3L,IAAL;AACA,WAAO,KAAKjF,UAAL,CAAgB9P,IAAhB,EAAsB,eAAtB,CAAP;AACD;A;AAID0mC,EAAAA,sBAAsB,GAAwB;AAC5C,UAAMl2B,QAAQ,GAAG,KAAK5Q,KAAL,CAAWtS,KAA5B;AACA,UAAM4d,QAAQ,GAAG,KAAKtL,KAAL,CAAWsL,QAA5B;AACA,UAAMzc,IAAI,GAAG,KAAKg4C,kBAAL,EAAb;AACA,QAAI,CAAC,KAAK7nB,GAAL,CAASjM,OAAE,CAAChZ,KAAZ,CAAL,EAAyB,OAAOlL,IAAP;AAEzB,UAAMuR,IAAI,GAAG,KAAKsN,WAAL,CAAiBkD,QAAjB,EAA2BtF,QAA3B,CAAb;AACAlL,IAAAA,IAAI,CAAC2lC,SAAL,GAAiBl3C,IAAjB;AACAuR,IAAAA,IAAI,CAACvR,IAAL,GAAY,KAAKg4C,kBAAL,EAAZ;AACA,WAAO,KAAK32B,UAAL,CAAgB9P,IAAhB,EAAsB,mBAAtB,CAAP;AACD;A;AAKD2mC,EAAAA,mBAAmB,GAGO;AACxB,UAAMn2B,QAAQ,GAAG,KAAK5Q,KAAL,CAAWtS,KAA5B;AACA,UAAM4d,QAAQ,GAAG,KAAKtL,KAAL,CAAWsL,QAA5B;AACA,QAAIlL,IAAI,GAAG,KAAK0mC,sBAAL,EAAX;A;AACA,QAAI1mC,IAAI,CAAC3Z,IAAL,KAAc,mBAAlB,EAAuC;AACrC,aAAO2Z,IAAP;AACD;A;AACD,WAAO,KAAK4e,GAAL,CAASjM,OAAE,CAAC9Y,GAAZ,CAAP,EAAyB;AACvB,YAAM+sC,OAAO,GAAG,KAAKt5B,WAAL,CAAiBkD,QAAjB,EAA2BtF,QAA3B,CAAhB;AACA07B,MAAAA,OAAO,CAACnB,MAAR,GAAiBzlC,IAAjB;AACA4mC,MAAAA,OAAO,CAACthB,QAAR,GAAmB,KAAKmhB,kBAAL,EAAnB;AACAzmC,MAAAA,IAAI,GAAG,KAAK8P,UAAL,CAAgB82B,OAAhB,EAAyB,qBAAzB,CAAP;AACD;A;AACD,WAAO5mC,IAAP;AACD;A;AAID6mC,EAAAA,sBAAsB,GAAiB;AACrC,QAAI7mC,IAAJ;A;AACA,YAAQ,KAAKJ,KAAL,CAAWvZ,IAAnB;AACE,WAAKssB,OAAE,CAACzZ,MAAR;AACE8G,QAAAA,IAAI,GAAG,KAAK2P,SAAL,EAAP;AACA,aAAKoF,IAAL;AACA/U,QAAAA,IAAI,GAAG,KAAK8mC,2BAAL,CAAiC9mC,IAAjC,CAAP;A;AACA,YAAIA,IAAI,CAACuN,UAAL,CAAgBlnB,IAAhB,KAAyB,oBAA7B,EAAmD;AACjD,eAAKmlB,KAAL,CAAWxL,IAAI,CAAC1S,KAAhB,EAAuBs3C,SAAS,CAACC,gBAAjC;AACD;A;AACD,eAAO7kC,IAAP;A;AAEF,WAAK2S,OAAE,CAACyQ,WAAR;AACA,WAAKzQ,OAAE,CAAC/hB,MAAR;AACE,eAAO,KAAKgwB,aAAL,EAAP;A;AAEF;AACE,cAAM,KAAKpV,KAAL,CAAW,KAAK5L,KAAL,CAAWtS,KAAtB,EAA6Bs3C,SAAS,CAACK,mBAAvC,CAAN;AAfJ;AAiBD;A;AAMD8B,EAAAA,uBAAuB,GAAyB;AAC9C,UAAM/mC,IAAI,GAAG,KAAKsN,WAAL,CACX,KAAK1N,KAAL,CAAW0L,UADA,EAEX,KAAK1L,KAAL,CAAW2L,aAFA,CAAb;AAIA,WAAO,KAAKoC,YAAL,CACL3N,IADK,EAEL,oBAFK,EAGL,KAAKJ,KAAL,CAAWtS,KAHN,EAIL,KAAKsS,KAAL,CAAWsL,QAJN,CAAP;AAMD;A;AAID87B,EAAAA,mBAAmB,CAAChnC,IAAD,EAA2C;AAC5D,SAAK+U,IAAL;AACA/U,IAAAA,IAAI,CAACuN,UAAL,GAAkB,KAAKsR,eAAL,EAAlB;AACA,SAAKN,MAAL,CAAY5L,OAAE,CAACtZ,MAAf;AAEA,WAAO,KAAKyW,UAAL,CAAgB9P,IAAhB,EAAsB,gBAAtB,CAAP;AACD;A;AAID8mC,EAAAA,2BAA2B,CACzB9mC,IADyB,EAEC;AAC1B,QAAI,KAAKnP,KAAL,CAAW8hB,OAAE,CAACtZ,MAAd,CAAJ,EAA2B;AACzB2G,MAAAA,IAAI,CAACuN,UAAL,GAAkB,KAAKw5B,uBAAL,EAAlB;AACD,KAFD,MAEO;AACL,YAAMx5B,UAAU,GAAG,KAAKsR,eAAL,EAAnB;AAcA7e,MAAAA,IAAI,CAACuN,UAAL,GAAkBA,UAAlB;AACD;A;AACD,SAAKgR,MAAL,CAAY5L,OAAE,CAACtZ,MAAf;AAEA,WAAO,KAAKyW,UAAL,CAAgB9P,IAAhB,EAAsB,wBAAtB,CAAP;AACD;A;AAIDinC,EAAAA,iBAAiB,GAAmB;AAClC,UAAMjnC,IAAI,GAAG,KAAK2P,SAAL,EAAb;A;AACA,QAAI,KAAKiP,GAAL,CAASjM,OAAE,CAACzZ,MAAZ,CAAJ,EAAyB;AACvB,WAAKqlB,MAAL,CAAY5L,OAAE,CAACzY,QAAf;AACA8F,MAAAA,IAAI,CAACmlB,QAAL,GAAgB,KAAK4D,uBAAL,EAAhB;AACA,WAAKxK,MAAL,CAAY5L,OAAE,CAACtZ,MAAf;AACA,aAAO,KAAKyW,UAAL,CAAgB9P,IAAhB,EAAsB,oBAAtB,CAAP;AACD;A;AACDA,IAAAA,IAAI,CAACvR,IAAL,GAAY,KAAKi4C,sBAAL,EAAZ;AACA1mC,IAAAA,IAAI,CAACxT,KAAL,GAAa,KAAKoyB,GAAL,CAASjM,OAAE,CAACnY,EAAZ,IAAkB,KAAKqsC,sBAAL,EAAlB,GAAkD,IAA/D;AACA,WAAO,KAAK/2B,UAAL,CAAgB9P,IAAhB,EAAsB,cAAtB,CAAP;AACD;A;AAIDknC,EAAAA,wBAAwB,CACtB12B,QADsB,EAEtBtF,QAFsB,EAGD;AACrB,UAAMlL,IAAI,GAAG,KAAKsN,WAAL,CAAiBkD,QAAjB,EAA2BtF,QAA3B,CAAb;A;AACA,QAAI,KAAKra,KAAL,CAAW8hB,OAAE,CAAC4yB,SAAd,CAAJ,EAA8B;AAC5B,WAAKhnB,MAAL,CAAY5L,OAAE,CAAC4yB,SAAf;AACA,aAAO,KAAKz1B,UAAL,CAAgB9P,IAAhB,EAAsB,oBAAtB,CAAP;AACD;A;AACDA,IAAAA,IAAI,CAACvR,IAAL,GAAY,KAAKk4C,mBAAL,EAAZ;AACA,WAAO,KAAKQ,+BAAL,CAAqCnnC,IAArC,CAAP;AACD;A;AAEDmnC,EAAAA,+BAA+B,CAC7BnnC,IAD6B,EAER;AACrB,UAAMiR,UAA4B,GAAG,EAArC;A;AACA,WAAO,CAAC,KAAKpgB,KAAL,CAAW8hB,OAAE,CAAClX,KAAd,CAAD,IAAyB,CAAC,KAAK5K,KAAL,CAAW8hB,OAAE,CAAC4yB,SAAd,CAAjC,EAA2D;AACzDt0B,MAAAA,UAAU,CAAClsB,IAAX,CAAgB,KAAKkiD,iBAAL,EAAhB;AACD;A;AACDjnC,IAAAA,IAAI,CAACiR,UAAL,GAAkBA,UAAlB;AACAjR,IAAAA,IAAI,CAAConC,WAAL,GAAmB,KAAKxoB,GAAL,CAASjM,OAAE,CAAClX,KAAZ,CAAnB;AACA,SAAK8iB,MAAL,CAAY5L,OAAE,CAAC4yB,SAAf;AACA,WAAO,KAAKz1B,UAAL,CAAgB9P,IAAhB,EAAsB,mBAAtB,CAAP;AACD;A;AAIDqnC,EAAAA,wBAAwB,CACtB72B,QADsB,EAEtBtF,QAFsB,EAGD;AACrB,UAAMlL,IAAI,GAAG,KAAKsN,WAAL,CAAiBkD,QAAjB,EAA2BtF,QAA3B,CAAb;A;AACA,QAAI,KAAKra,KAAL,CAAW8hB,OAAE,CAAC4yB,SAAd,CAAJ,EAA8B;AAC5B,WAAKhnB,MAAL,CAAY5L,OAAE,CAAC4yB,SAAf;AACA,aAAO,KAAKz1B,UAAL,CAAgB9P,IAAhB,EAAsB,oBAAtB,CAAP;AACD;A;AACDA,IAAAA,IAAI,CAACvR,IAAL,GAAY,KAAKk4C,mBAAL,EAAZ;AACA,SAAKpoB,MAAL,CAAY5L,OAAE,CAAC4yB,SAAf;AACA,WAAO,KAAKz1B,UAAL,CAAgB9P,IAAhB,EAAsB,mBAAtB,CAAP;AACD;A;AAKDsnC,EAAAA,iBAAiB,CAAC92B,QAAD,EAAmBtF,QAAnB,EAAqD;AACpE,UAAMlL,IAAI,GAAG,KAAKsN,WAAL,CAAiBkD,QAAjB,EAA2BtF,QAA3B,CAAb;AACA,UAAMq8B,QAAQ,GAAG,EAAjB;AACA,UAAMC,cAAc,GAAG,KAAKN,wBAAL,CAA8B12B,QAA9B,EAAwCtF,QAAxC,CAAvB;AACA,QAAIu8B,cAAc,GAAG,IAArB;A;AAEA,QAAI,CAACD,cAAc,CAACJ,WAApB,EAAiC;AAC/BM,MAAAA,QAAQ,EAAE,SAAS;AACjB,gBAAQ,KAAK9nC,KAAL,CAAWvZ,IAAnB;AACE,eAAKssB,OAAE,CAACyQ,WAAR;AACE5S,YAAAA,QAAQ,GAAG,KAAK5Q,KAAL,CAAWtS,KAAtB;AACA4d,YAAAA,QAAQ,GAAG,KAAKtL,KAAL,CAAWsL,QAAtB;AACA,iBAAK6J,IAAL;A;AACA,gBAAI,KAAK6J,GAAL,CAASjM,OAAE,CAAClX,KAAZ,CAAJ,EAAwB;AACtBgsC,cAAAA,cAAc,GAAG,KAAKJ,wBAAL,CACf72B,QADe,EAEftF,QAFe,CAAjB;AAIA,oBAAMw8B,QAAN;AACD;A;AACDH,YAAAA,QAAQ,CAACxiD,IAAT,CAAc,KAAKuiD,iBAAL,CAAuB92B,QAAvB,EAAiCtF,QAAjC,CAAd;AACA;A;AAEF,eAAKyH,OAAE,CAAC2yB,OAAR;AACEiC,YAAAA,QAAQ,CAACxiD,IAAT,CAAc,KAAK67B,aAAL,EAAd;AACA;A;AAEF,eAAKjO,OAAE,CAACzZ,MAAR;AAAgB;AACd,oBAAM8G,IAAI,GAAG,KAAK2P,SAAL,EAAb;AACA,mBAAKoF,IAAL;A;AACA,kBAAI,KAAKlkB,KAAL,CAAW8hB,OAAE,CAACzY,QAAd,CAAJ,EAA6B;AAC3BqtC,gBAAAA,QAAQ,CAACxiD,IAAT,CAAc,KAAKiiD,mBAAL,CAAyBhnC,IAAzB,CAAd;AACD,eAFD,MAEO;AACLunC,gBAAAA,QAAQ,CAACxiD,IAAT,CAAc,KAAK+hD,2BAAL,CAAiC9mC,IAAjC,CAAd;AACD;A;AAED;AACD;A;AAED;AACE,kBAAM,KAAK0gB,UAAL,EAAN;AAhCJ;AAkCD;A;AAED,UAAI8kB,UAAU,CAACgC,cAAD,CAAV,IAA8B,CAAChC,UAAU,CAACiC,cAAD,CAA7C,EAA+D;AAC7D,aAAKj8B,KAAL,CAEEi8B,cAAc,CAACn6C,KAFjB,EAGEs3C,SAAS,CAACG,yBAHZ;AAKD,OAND,MAMO,IAAI,CAACS,UAAU,CAACgC,cAAD,CAAX,IAA+BhC,UAAU,CAACiC,cAAD,CAA7C,EAA+D;AACpE,aAAKj8B,KAAL,CAEEi8B,cAAc,CAACn6C,KAFjB,EAGEs3C,SAAS,CAACE,wBAHZ,EAIEY,mBAAmB,CAAC8B,cAAc,CAAC/4C,IAAhB,CAJrB;AAMD,OAPM,MAOA,IAAI,CAAC+2C,UAAU,CAACgC,cAAD,CAAX,IAA+B,CAAChC,UAAU,CAACiC,cAAD,CAA9C,EAAgE;AACrE,YAEE/B,mBAAmB,CAAC+B,cAAc,CAACh5C,IAAhB,CAAnB,KACAi3C,mBAAmB,CAAC8B,cAAc,CAAC/4C,IAAhB,CAHrB,EAIE;AACA,eAAK+c,KAAL,CAEEi8B,cAAc,CAACn6C,KAFjB,EAGEs3C,SAAS,CAACE,wBAHZ,EAIEY,mBAAmB,CAAC8B,cAAc,CAAC/4C,IAAhB,CAJrB;AAMD;AACF;AACF;A;AAED,QAAI+2C,UAAU,CAACgC,cAAD,CAAd,EAAgC;AAC9BxnC,MAAAA,IAAI,CAAC2nC,eAAL,GAAuBH,cAAvB;AACAxnC,MAAAA,IAAI,CAAC4nC,eAAL,GAAuBH,cAAvB;AACD,KAHD,MAGO;AACLznC,MAAAA,IAAI,CAACwnC,cAAL,GAAsBA,cAAtB;AACAxnC,MAAAA,IAAI,CAACynC,cAAL,GAAsBA,cAAtB;AACD;A;AACDznC,IAAAA,IAAI,CAACunC,QAAL,GAAgBA,QAAhB;A;AACA,QAAI,KAAKjoB,YAAL,CAAkB,GAAlB,CAAJ,EAA4B;AAC1B,YAAM,KAAK9T,KAAL,CACJ,KAAK5L,KAAL,CAAWtS,KADP,EAEJs3C,SAAS,CAACO,4BAFN,CAAN;AAID;A;AAED,WAAOK,UAAU,CAACgC,cAAD,CAAV,GACH,KAAK13B,UAAL,CAAgB9P,IAAhB,EAAsB,aAAtB,CADG,GAEH,KAAK8P,UAAL,CAAgB9P,IAAhB,EAAsB,YAAtB,CAFJ;AAGD;A;AAID6nC,EAAAA,eAAe,GAAiB;AAC9B,UAAMr3B,QAAQ,GAAG,KAAK5Q,KAAL,CAAWtS,KAA5B;AACA,UAAM4d,QAAQ,GAAG,KAAKtL,KAAL,CAAWsL,QAA5B;AACA,SAAK6J,IAAL;AACA,WAAO,KAAKuyB,iBAAL,CAAuB92B,QAAvB,EAAiCtF,QAAjC,CAAP;AACD;A;AAMD0V,EAAAA,aAAa,CAACnQ,mBAAD,EAAuD;AAClE,QAAI,KAAK5f,KAAL,CAAW8hB,OAAE,CAAC2yB,OAAd,CAAJ,EAA4B;AAC1B,aAAO,KAAKz4B,YAAL,CAAkB,KAAKjN,KAAL,CAAWpT,KAA7B,EAAoC,SAApC,CAAP;AACD,KAFD,MAEO,IAAI,KAAKqE,KAAL,CAAW8hB,OAAE,CAACyQ,WAAd,CAAJ,EAAgC;AACrC,aAAO,KAAKykB,eAAL,EAAP;AACD,KAFM,MAEA,IACL,KAAKvoB,YAAL,CAAkB,GAAlB,KACA,KAAK3gB,KAAL,CAAWzN,UAAX,CAAsB,KAAK0O,KAAL,CAAWqL,GAAjC,QAFK,EAGL;AAGA,WAAK+S,WAAL,CAAiBrL,OAAE,CAACyQ,WAApB;AACA,aAAO,KAAKykB,eAAL,EAAP;AACD,KARM,MAQA;AACL,aAAO,MAAMjnB,aAAN,CAAoBnQ,mBAApB,CAAP;AACD;AACF;A;AAEDq3B,EAAAA,oBAAoB,CAACloC,KAAD,EAAkC;AACpD,UAAMmoC,cAAc,GAAK,MAAMD,oBAAN,CACvBloC,KADuB,CAAzB;AAGAmoC,IAAAA,cAAc,CAAC1E,cAAf,GAAgCzjC,KAAK,CAACyjC,cAAtC;AACA,WAAO0E,cAAP;AACD;A;AAEDld,EAAAA,gBAAgB,CAAC5sB,IAAD,EAAqB;AACnC,QAAI,KAAK2B,KAAL,CAAWyjC,cAAf,EAA+B,OAAO,MAAMxY,gBAAN,CAAuB5sB,IAAvB,CAAP;AAE/B,UAAM2U,OAAO,GAAG,KAAKG,UAAL,EAAhB;A;AAEA,QAAIH,OAAO,KAAKyb,KAAE,CAACE,MAAnB,EAA2B;AACzB,aAAO,KAAKqX,YAAL,EAAP;AACD;A;AAED,QAAIhzB,OAAO,KAAKyb,KAAE,CAACC,MAAf,IAAyB1b,OAAO,KAAKyb,KAAE,CAAC+W,MAA5C,EAAoD;AAClD,UAAIvxB,iBAAiB,CAAC5V,IAAD,CAArB,EAA6B;AAC3B,eAAO,KAAKuoC,WAAL,EAAP;AACD;A;AAED,UAAIvoC,IAAI,OAAR,EAAoC;AAClC,UAAE,KAAK2B,KAAL,CAAWqL,GAAb;AACA,eAAO,KAAK+S,WAAL,CAAiBrL,OAAE,CAAC4yB,SAApB,CAAP;AACD;A;AAED,UACE,CAACtnC,IAAI,OAAJ,IAAoCA,IAAI,OAAzC,KACA2U,OAAO,KAAKyb,KAAE,CAACC,MAFjB,EAGE;AACA,eAAO,KAAK4X,aAAL,CAAmBjoC,IAAnB,CAAP;AACD;AACF;A;AAED,QACEA,IAAI,OAAJ,IACA,KAAK2B,KAAL,CAAWiT,WADX,IAEA,KAAKlU,KAAL,CAAWzN,UAAX,CAAsB,KAAK0O,KAAL,CAAWqL,GAAX,GAAiB,CAAvC,QAHF,EAIE;AACA,QAAE,KAAKrL,KAAL,CAAWqL,GAAb;AACA,aAAO,KAAK+S,WAAL,CAAiBrL,OAAE,CAACyQ,WAApB,CAAP;AACD;A;AAED,WAAO,MAAMyH,gBAAN,CAAuB5sB,IAAvB,CAAP;AACD;A;AAEDnG,EAAAA,aAAa,CAACkb,QAAD,EAA4B;AACvC,QAAI,KAAKniB,KAAL,CAAW8hB,OAAE,CAACzZ,MAAd,CAAJ,EAA2B;AACzB,YAAM6Z,UAAU,GAAG,KAAKA,UAAL,EAAnB;A;AACA,UAAIA,UAAU,KAAKsb,KAAE,CAACC,MAAtB,EAA8B;AAC5B,aAAK1uB,KAAL,CAAWgT,OAAX,CAAmB7tB,IAAnB,CAAwBspC,KAAE,CAACjc,eAA3B;AACD,OAFD,MAEO,IAAIW,UAAU,KAAKsb,KAAE,CAACE,MAAtB,EAA8B;AACnC,aAAK3uB,KAAL,CAAWgT,OAAX,CAAmB7tB,IAAnB,CAAwBspC,KAAE,CAAC/b,aAA3B;AACD,OAFM,MAEA;AACL,cAAMxa,aAAN,CAAoBkb,QAApB;AACD;A;AACD,WAAKpT,KAAL,CAAWiT,WAAX,GAAyB,IAAzB;AACD,KAVD,MAUO,IAAI,KAAKhiB,KAAL,CAAW8hB,OAAE,CAAClX,KAAd,KAAwBuX,QAAQ,KAAKL,OAAE,CAACyQ,WAA5C,EAAyD;AAC9D,WAAKxjB,KAAL,CAAWgT,OAAX,CAAmBtrB,MAAnB,IAA6B,CAA7B;AACA,WAAKsY,KAAL,CAAWgT,OAAX,CAAmB7tB,IAAnB,CAAwBspC,KAAE,CAAC+W,MAA3B;AACA,WAAKxlC,KAAL,CAAWiT,WAAX,GAAyB,KAAzB;AACD,KAJM,MAIA;AACL,aAAO,MAAM/a,aAAN,CAAoBkb,QAApB,CAAP;AACD;AACF;A;AA3hBsB,CAD3B;A;ACzFA,MAAMg1B,eAAN,SAA8BpwB,KAA9B,CAAoC;AAAA;AAAA;AAAA,SAClCtf,KADkC,GAChB,EADgB;AAAA,SAIlC2vC,KAJkC,GAIhB,EAJgB;AAAA,SAOlCC,UAPkC,GAOX,EAPW;AAAA,SAUlCC,OAVkC,GAUd,EAVc;AAAA,SAgBlCC,kBAhBkC,GAgBH,EAhBG;AAAA;A;AAAA;A;AAsBrB,MAAMC,sBAAN,SAAqCrwB,YAArC,CAAmE;AAChFc,EAAAA,WAAW,CAACxM,KAAD,EAAqC;AAC9C,WAAO,IAAI07B,eAAJ,CAAoB17B,KAApB,CAAP;AACD;A;AAED4M,EAAAA,WAAW,CAACzqB,IAAD,EAAe0qB,WAAf,EAA0ClO,GAA1C,EAAuD;AAChE,UAAMgO,KAAK,GAAG,KAAKJ,YAAL,EAAd;A;AACA,QAAIM,WAAW,GAAG/C,yBAAlB,EAA6C;AAC3C,WAAKiD,kBAAL,CAAwBJ,KAAxB,EAA+BxqB,IAA/B;AACAwqB,MAAAA,KAAK,CAACmvB,kBAAN,CAAyBrjD,IAAzB,CAA8B0J,IAA9B;AACA;AACD;A;AAED,UAAMyqB,WAAN,CAAkB,GAAGpY,SAArB;A;AAEA,QAAIqY,WAAW,GAAGvD,cAAlB,EAAkC;AAChC,UAAI,EAAEuD,WAAW,GAAGxD,eAAhB,CAAJ,EAAsC;AAEpC,aAAKyD,yBAAL,CAA+BH,KAA/B,EAAsCxqB,IAAtC,EAA4C0qB,WAA5C,EAAyDlO,GAAzD;AACA,aAAKoO,kBAAL,CAAwBJ,KAAxB,EAA+BxqB,IAA/B;AACD;A;AACDwqB,MAAAA,KAAK,CAAC3gB,KAAN,CAAYvT,IAAZ,CAAiB0J,IAAjB;AACD;A;AACD,QAAI0qB,WAAW,GAAGjD,kBAAlB,EAAsC+C,KAAK,CAACgvB,KAAN,CAAYljD,IAAZ,CAAiB0J,IAAjB;AACtC,QAAI0qB,WAAW,GAAGhD,wBAAlB,EAA4C8C,KAAK,CAACivB,UAAN,CAAiBnjD,IAAjB,CAAsB0J,IAAtB;AAC5C,QAAI0qB,WAAW,GAAGlD,gBAAlB,EAAoCgD,KAAK,CAACkvB,OAAN,CAAcpjD,IAAd,CAAmB0J,IAAnB;AACrC;A;AAED8qB,EAAAA,mBAAmB,CACjBN,KADiB,EAEjBxqB,IAFiB,EAGjB0qB,WAHiB,EAIR;AACT,QAAIF,KAAK,CAACgvB,KAAN,CAAY1iD,OAAZ,CAAoBkJ,IAApB,IAA4B,CAAC,CAAjC,EAAoC;AAClC,UAAI0qB,WAAW,GAAGjD,kBAAlB,EAAsC;AAGpC,cAAMoyB,OAAO,GAAG,CAAC,EAAEnvB,WAAW,GAAGhD,wBAAhB,CAAjB;AACA,cAAMoyB,QAAQ,GAAGtvB,KAAK,CAACivB,UAAN,CAAiB3iD,OAAjB,CAAyBkJ,IAAzB,IAAiC,CAAC,CAAnD;AACA,eAAO65C,OAAO,KAAKC,QAAnB;AACD;A;AACD,aAAO,IAAP;AACD;A;AACD,QAAIpvB,WAAW,GAAGlD,gBAAd,IAAkCgD,KAAK,CAACkvB,OAAN,CAAc5iD,OAAd,CAAsBkJ,IAAtB,IAA8B,CAAC,CAArE,EAAwE;AACtE,UAAIwqB,KAAK,CAACnB,OAAN,CAAcvyB,OAAd,CAAsBkJ,IAAtB,IAA8B,CAAC,CAAnC,EAAsC;AAEpC,eAAO,CAAC,EAAE0qB,WAAW,GAAGxD,eAAhB,CAAR;AACD,OAHD,MAGO;AAEL,eAAO,KAAP;AACD;AACF;A;AACD,QAAIwD,WAAW,GAAGvD,cAAd,IAAgCqD,KAAK,CAAC3gB,KAAN,CAAY/S,OAAZ,CAAoBkJ,IAApB,IAA4B,CAAC,CAAjE,EAAoE;AAClE,aAAO,IAAP;AACD;A;AAED,WAAO,MAAM8qB,mBAAN,CAA0B,GAAGzY,SAA7B,CAAP;AACD;A;AAED0Y,EAAAA,gBAAgB,CAACxyB,EAAD,EAAmB;AACjC,QACE,KAAKixB,UAAL,CAAgB,CAAhB,EAAmB3f,KAAnB,CAAyB/S,OAAzB,CAAiCyB,EAAE,CAACyH,IAApC,MAA8C,CAAC,CAA/C,IACA,KAAKwpB,UAAL,CAAgB,CAAhB,EAAmBmwB,kBAAnB,CAAsC7iD,OAAtC,CAA8CyB,EAAE,CAACyH,IAAjD,MAA2D,CAAC,CAF9D,EAGE;AACA,YAAM+qB,gBAAN,CAAuBxyB,EAAvB;AACD;AACF;A;AAlE+E;A;ACpC3E,MAAMwhD,KAAK,GAAG,MAAd;AAAA,MACLC,WAAW,GAAG,MADT;AAAA,MAELC,WAAW,GAAG,MAFT;AAAA,MAGLC,YAAY,GAAG,MAHV;AAAA,MAILC,QAAQ,GAAG,MAJN;AAkCQ,MAAMC,0BAAN,CAAiC;AAAA;AAAA,SAC9CC,MAD8C,GACnB,EADmB;AAAA;A;AAE9C/vB,EAAAA,KAAK,CAACzM,KAAD,EAAmB;AACtB,SAAKw8B,MAAL,CAAY/jD,IAAZ,CAAiBunB,KAAjB;AACD;A;AAED0M,EAAAA,IAAI,GAAG;AACL,SAAK8vB,MAAL,CAAYloC,GAAZ;AACD;A;AAEDmoC,EAAAA,YAAY,GAAc;AACxB,WAAO,KAAKD,MAAL,CAAY,KAAKA,MAAL,CAAYxhD,MAAZ,GAAqB,CAAjC,CAAP;AACD;A;AAEW,MAAR0hD,QAAQ,GAAY;AACtB,WAAO,CAAC,KAAKD,YAAL,KAAsBL,WAAvB,IAAsC,CAA7C;AACD;A;AAEW,MAARO,QAAQ,GAAY;AACtB,WAAO,CAAC,KAAKF,YAAL,KAAsBN,WAAvB,IAAsC,CAA7C;AACD;A;AAEY,MAATS,SAAS,GAAY;AACvB,WAAO,CAAC,KAAKH,YAAL,KAAsBJ,YAAvB,IAAuC,CAA9C;AACD;A;AAEQ,MAALQ,KAAK,GAAY;AACnB,WAAO,CAAC,KAAKJ,YAAL,KAAsBH,QAAvB,IAAmC,CAA1C;AACD;A;AA5B6C;AA+BzC,SAASQ,aAAT,CACLv7B,OADK,EAELe,WAFK,EAGM;AACX,SAAO,CAACf,OAAO,GAAG66B,WAAH,GAAiB,CAAzB,KAA+B95B,WAAW,GAAG65B,WAAH,GAAiB,CAA3D,CAAP;AACD;A;ACzBD,SAASY,OAAT,CAAoBC,CAApB,EAA8B;AAC5B,MAAIA,CAAC,IAAI,IAAT,EAAe;AAEb,UAAM,IAAIprB,KAAJ,CAAW,cAAaorB,CAAE,SAA1B,CAAN;AACD;A;AACD,SAAOA,CAAP;AACD;A;AAED,SAASC,MAAT,CAAgBD,CAAhB,EAAkC;AAChC,MAAI,CAACA,CAAL,EAAQ;AACN,UAAM,IAAIprB,KAAJ,CAAU,aAAV,CAAN;AACD;AACF;A;AAUD,MAAMsrB,QAAQ,GAAGnoC,kBAAkB,CACjC;AACEooC,EAAAA,+BAA+B,EAC7B,0EAFJ;AAGEC,EAAAA,iCAAiC,EAC/B,6DAJJ;AAKEC,EAAAA,+BAA+B,EAAE,0CALnC;AAMEC,EAAAA,qBAAqB,EAAE,mDANzB;AAOEC,EAAAA,sBAAsB,EACpB,oDARJ;AASEC,EAAAA,4BAA4B,EAC1B,6DAVJ;AAWEC,EAAAA,eAAe,EAAE,qCAXnB;AAYEC,EAAAA,+BAA+B,EAC7B,mDAbJ;AAcEC,EAAAA,gCAAgC,EAC9B,2DAfJ;AAgBEC,EAAAA,8BAA8B,EAAE,sCAhBlC;AAiBEC,EAAAA,iBAAiB,EAAE,2BAjBrB;AAkBEC,EAAAA,uBAAuB,EAAE,4BAlB3B;AAmBEC,EAAAA,kBAAkB,EAAE,qCAnBtB;AAoBEC,EAAAA,mBAAmB,EAAE,sCApBvB;AAqBEC,EAAAA,iCAAiC,EAC/B,8DAtBJ;AAuBEC,EAAAA,wBAAwB,EAAE,4CAvB5B;AAwBEC,EAAAA,qBAAqB,EAAE,kDAxBzB;AAyBEC,EAAAA,yBAAyB,EACvB,uDA1BJ;AA2BEC,EAAAA,8BAA8B,EAC5B,gEA5BJ;AA6BEC,EAAAA,wBAAwB,EACtB,sDA9BJ;AA+BEC,EAAAA,yBAAyB,EACvB,0DAhCJ;AAiCEC,EAAAA,uBAAuB,EACrB,qDAlCJ;AAmCEC,EAAAA,2BAA2B,EACzB,+CApCJ;AAqCEC,EAAAA,qBAAqB,EAAE,2CArCzB;AAsCEC,EAAAA,uBAAuB,EACrB,yDAvCJ;AAwCEC,EAAAA,gCAAgC,EAC9B,0DAzCJ;AA0CEC,EAAAA,iCAAiC,EAC/B,4DA3CJ;AA4CEC,EAAAA,wCAAwC,EACtC,kFA7CJ;AA8CEC,EAAAA,0BAA0B,EACxB,uDA/CJ;AAgDEC,EAAAA,qBAAqB,EACnB,4GAjDJ;AAkDEC,EAAAA,iBAAiB,EACf,gFAnDJ;AAoDEC,EAAAA,yBAAyB,EACvB,uDArDJ;AAsDEC,EAAAA,8BAA8B,EAC5B,gEAvDJ;AAwDEC,EAAAA,0BAA0B,EACxB,mFAzDJ;AA0DEC,EAAAA,qCAAqC,EACnC,qDA3DJ;AA4DEC,EAAAA,iCAAiC,EAC/B,8CA7DJ;AA8DEC,EAAAA,8BAA8B,EAC5B,wDA/DJ;AAgEEC,EAAAA,6BAA6B,EAC3B,+CAjEJ;AAkEEC,EAAAA,yBAAyB,EACvB,mHAnEJ;AAoEEC,EAAAA,sCAAsC,EACpC,kFArEJ;AAsEEC,EAAAA,2BAA2B,EACzB,uEAvEJ;AAwEEC,EAAAA,kBAAkB,EAChB,8EAzEJ;AA0EEC,EAAAA,wBAAwB,EAAE,wCA1E5B;AA2EEC,EAAAA,6BAA6B,EAC3B,6CA5EJ;AA6EEC,EAAAA,6BAA6B,EAC3B,qDA9EJ;AA+EEC,EAAAA,gCAAgC,EAC9B,mEAhFJ;AAiFEC,EAAAA,iCAAiC,EAC/B;AAlFJ,CADiC,EAqFtBtrC,UAAU,CAACC,WArFW,CAAnC;A;AA2FA,SAASsrC,mBAAT,CACEhgD,KADF,EAE0C;AACxC,UAAQA,KAAR;AACE,SAAK,KAAL;AACE,aAAO,cAAP;A;AACF,SAAK,SAAL;AACE,aAAO,kBAAP;A;AACF,SAAK,QAAL;AACE,aAAO,iBAAP;A;AACF,SAAK,OAAL;AACE,aAAO,gBAAP;A;AACF,SAAK,QAAL;AACE,aAAO,iBAAP;A;AACF,SAAK,QAAL;AACE,aAAO,iBAAP;A;AACF,SAAK,QAAL;AACE,aAAO,iBAAP;A;AACF,SAAK,QAAL;AACE,aAAO,iBAAP;A;AACF,SAAK,WAAL;AACE,aAAO,oBAAP;A;AACF,SAAK,SAAL;AACE,aAAO,kBAAP;A;AACF;AACE,aAAOvH,SAAP;AAtBJ;AAwBD;A;AAED,SAASwnD,kBAAT,CAA4BC,QAA5B,EAA+D;AAC7D,SACEA,QAAQ,KAAK,SAAb,IAA0BA,QAAQ,KAAK,QAAvC,IAAmDA,QAAQ,KAAK,WADlE;AAGD;A;AAED,kBAAgBvgC,UAAD,IACb,cAAcA,UAAd,CAAyB;AACvB0R,EAAAA,eAAe,GAAkC;AAC/C,WAAOwqB,sBAAP;AACD;A;AAEDsE,EAAAA,cAAc,GAAY;AAGxB,WAAO,KAAK97C,KAAL,CAAW8hB,OAAE,CAAClkB,IAAd,CAAP;AACD;A;AAEDm+C,EAAAA,wBAAwB,GAAG;AACzB,WACE,CAAC,KAAK/7C,KAAL,CAAW8hB,OAAE,CAAC9Z,QAAd,KACC,KAAKhI,KAAL,CAAW8hB,OAAE,CAACzZ,MAAd,CADD,IAEC,KAAKrI,KAAL,CAAW8hB,OAAE,CAACnX,IAAd,CAFD,IAGC,KAAK3K,KAAL,CAAW8hB,OAAE,CAACzY,QAAd,CAHD,IAIC,KAAKrJ,KAAL,CAAW8hB,OAAE,CAACha,WAAd,CAJD,IAKC,KAAKk0C,qBAAL,EALF,KAMA,CAAC,KAAKz5B,qBAAL,EAPH;AASD;A;AAED05B,EAAAA,4BAA4B,GAAG;AAK7B,SAAK/3B,IAAL;AACA,WAAO,KAAK63B,wBAAL,EAAP;AACD;A;AAGDG,EAAAA,eAAe,CAAgBC,gBAAhB,EAA2C;AACxD,QAAI,CAAC,KAAKn8C,KAAL,CAAW8hB,OAAE,CAAClkB,IAAd,CAAL,EAA0B;AACxB,aAAOxJ,SAAP;AACD;A;AAED,UAAMynD,QAAQ,GAAG,KAAK9sC,KAAL,CAAWpT,KAA5B;A;AACA,QACEwgD,gBAAgB,CAACznD,OAAjB,CAAyBmnD,QAAzB,MAAuC,CAAC,CAAxC,IACA,KAAKO,UAAL,CAAgB,KAAKH,4BAAL,CAAkCI,IAAlC,CAAuC,IAAvC,CAAhB,CAFF,EAGE;AACA,aAAOR,QAAP;AACD;A;AACD,WAAOznD,SAAP;AACD;A;AAODkoD,EAAAA,gBAAgB,CACdC,QADc,EAKdJ,gBALc,EAMdK,mBANc,EAOdthC,aAPc,EAQR;AACN,UAAMuhC,YAAY,GAAG,CAACriC,GAAD,EAAMyhC,QAAN,EAAgBa,MAAhB,EAAwBC,KAAxB,KAAkC;AACrD,UAAId,QAAQ,KAAKa,MAAb,IAAuBH,QAAQ,CAACI,KAAD,CAAnC,EAA4C;AAC1C,aAAKhiC,KAAL,CAAWP,GAAX,EAAgBu+B,QAAQ,CAACwB,qBAAzB,EAAgDuC,MAAhD,EAAwDC,KAAxD;AACD;AACF,KAJD;A;AAKA,UAAMC,YAAY,GAAG,CAACxiC,GAAD,EAAMyhC,QAAN,EAAgBgB,IAAhB,EAAsBC,IAAtB,KAA+B;AAClD,UACGP,QAAQ,CAACM,IAAD,CAAR,IAAkBhB,QAAQ,KAAKiB,IAAhC,IACCP,QAAQ,CAACO,IAAD,CAAR,IAAkBjB,QAAQ,KAAKgB,IAFlC,EAGE;AACA,aAAKliC,KAAL,CAAWP,GAAX,EAAgBu+B,QAAQ,CAACiB,qBAAzB,EAAgDiD,IAAhD,EAAsDC,IAAtD;AACD;AACF,KAPD;A;AASA,aAAS;AACP,YAAMn9B,QAAQ,GAAG,KAAK5Q,KAAL,CAAWtS,KAA5B;AACA,YAAMo/C,QAAqB,GAAG,KAAKK,eAAL,CAC5BC,gBAAgB,CAACnjD,MAAjB,CAAwBwjD,mBAAxB,WAAwBA,mBAAxB,GAA+C,EAA/C,CAD4B,CAA9B;AAIA,UAAI,CAACX,QAAL,EAAe;A;AAEf,UAAID,kBAAkB,CAACC,QAAD,CAAtB,EAAkC;AAChC,YAAIU,QAAQ,CAACQ,aAAb,EAA4B;AAC1B,eAAKpiC,KAAL,CAAWgF,QAAX,EAAqBg5B,QAAQ,CAACU,8BAA9B;AACD,SAFD,MAEO;AACLoD,UAAAA,YAAY,CAAC98B,QAAD,EAAWk8B,QAAX,EAAqBA,QAArB,EAA+B,UAA/B,CAAZ;AACAY,UAAAA,YAAY,CAAC98B,QAAD,EAAWk8B,QAAX,EAAqBA,QAArB,EAA+B,QAA/B,CAAZ;AAEAU,UAAAA,QAAQ,CAACQ,aAAT,GAAyBlB,QAAzB;AACD;AACF,OATD,MASO;AACL,YAAIpgD,MAAM,CAACoC,cAAP,CAAsBnK,IAAtB,CAA2B6oD,QAA3B,EAAqCV,QAArC,CAAJ,EAAoD;AAClD,eAAKlhC,KAAL,CAAWgF,QAAX,EAAqBg5B,QAAQ,CAACW,iBAA9B,EAAiDuC,QAAjD;AACD,SAFD,MAEO;AACLY,UAAAA,YAAY,CAAC98B,QAAD,EAAWk8B,QAAX,EAAqB,QAArB,EAA+B,UAA/B,CAAZ;AACAY,UAAAA,YAAY,CAAC98B,QAAD,EAAWk8B,QAAX,EAAqB,QAArB,EAA+B,UAA/B,CAAZ;AACAY,UAAAA,YAAY,CAAC98B,QAAD,EAAWk8B,QAAX,EAAqB,UAArB,EAAiC,UAAjC,CAAZ;AACAY,UAAAA,YAAY,CAAC98B,QAAD,EAAWk8B,QAAX,EAAqB,UAArB,EAAiC,UAAjC,CAAZ;AAEAe,UAAAA,YAAY,CAACj9B,QAAD,EAAWk8B,QAAX,EAAqB,SAArB,EAAgC,UAAhC,CAAZ;AACAe,UAAAA,YAAY,CAACj9B,QAAD,EAAWk8B,QAAX,EAAqB,QAArB,EAA+B,UAA/B,CAAZ;AACD;A;AACDU,QAAAA,QAAQ,CAACV,QAAD,CAAR,GAAqB,IAArB;AACD;A;AAED,UAAIW,mBAAJ,YAAIA,mBAAmB,CAAEzzB,QAArB,CAA8B8yB,QAA9B,CAAJ,EAA6C;AAC3C,aAAKlhC,KAAL,CACEgF,QADF,EAGEzE,aAHF,EAIE2gC,QAJF;AAMD;AACF;AACF;A;AAEDmB,EAAAA,kBAAkB,CAACj+B,IAAD,EAAgC;AAChD,YAAQA,IAAR;AACE,WAAK,aAAL;AACA,WAAK,aAAL;AACE,eAAO,KAAK/e,KAAL,CAAW8hB,OAAE,CAACtZ,MAAd,CAAP;A;AACF,WAAK,uBAAL;AACE,eAAO,KAAKxI,KAAL,CAAW8hB,OAAE,CAACzZ,MAAd,CAAP;A;AACF,WAAK,mBAAL;AACE,eAAO,KAAKrI,KAAL,CAAW8hB,OAAE,CAAC3Z,QAAd,CAAP;A;AACF,WAAK,2BAAL;AACE,eAAO,KAAKsmB,YAAL,CAAkB,GAAlB,CAAP;AATJ;A;AAYA,UAAM,IAAIpB,KAAJ,CAAU,aAAV,CAAN;AACD;A;AAED4vB,EAAAA,WAAW,CAAYl+B,IAAZ,EAAkCm+B,YAAlC,EAA8D;AACvE,UAAM/lB,MAAW,GAAG,EAApB;A;AACA,WAAO,CAAC,KAAK6lB,kBAAL,CAAwBj+B,IAAxB,CAAR,EAAuC;AAErCoY,MAAAA,MAAM,CAACjjC,IAAP,CAAYgpD,YAAY,EAAxB;AACD;A;AACD,WAAO/lB,MAAP;AACD;A;AAEDgmB,EAAAA,oBAAoB,CAClBp+B,IADkB,EAElBm+B,YAFkB,EAGb;AACL,WAAO1E,OAAO,CACZ,KAAK4E,0BAAL,CACEr+B,IADF,EAEEm+B,YAFF,EAGsB,IAHtB,CADY,CAAd;AAOD;A;AAMDE,EAAAA,0BAA0B,CACxBr+B,IADwB,EAExBm+B,YAFwB,EAGxBG,aAHwB,EAIhB;AACR,UAAMlmB,MAAM,GAAG,EAAf;A;AAEA,aAAS;AACP,UAAI,KAAK6lB,kBAAL,CAAwBj+B,IAAxB,CAAJ,EAAmC;AACjC;AACD;A;AAED,YAAMob,OAAO,GAAG+iB,YAAY,EAA5B;A;AACA,UAAI/iB,OAAO,IAAI,IAAf,EAAqB;AACnB,eAAO/lC,SAAP;AACD;A;AACD+iC,MAAAA,MAAM,CAACjjC,IAAP,CAAYimC,OAAZ;A;AAEA,UAAI,KAAKpM,GAAL,CAASjM,OAAE,CAAClZ,KAAZ,CAAJ,EAAwB;AACtB;AACD;A;AAED,UAAI,KAAKo0C,kBAAL,CAAwBj+B,IAAxB,CAAJ,EAAmC;AACjC;AACD;A;AAED,UAAIs+B,aAAJ,EAAmB;AAEjB,aAAK3vB,MAAL,CAAY5L,OAAE,CAAClZ,KAAf;AACD;A;AACD,aAAOxU,SAAP;AACD;A;AAED,WAAO+iC,MAAP;AACD;A;AAEDmmB,EAAAA,oBAAoB,CAClBv+B,IADkB,EAElBm+B,YAFkB,EAGlBK,OAHkB,EAIlBC,cAJkB,EAKb;AACL,QAAI,CAACA,cAAL,EAAqB;AACnB,UAAID,OAAJ,EAAa;AACX,aAAK7vB,MAAL,CAAY5L,OAAE,CAAC9Z,QAAf;AACD,OAFD,MAEO;AACL,aAAK0qB,gBAAL,CAAsB,GAAtB;AACD;AACF;A;AAED,UAAMyE,MAAM,GAAG,KAAKgmB,oBAAL,CAA0Bp+B,IAA1B,EAAgCm+B,YAAhC,CAAf;A;AAEA,QAAIK,OAAJ,EAAa;AACX,WAAK7vB,MAAL,CAAY5L,OAAE,CAAC3Z,QAAf;AACD,KAFD,MAEO;AACL,WAAKuqB,gBAAL,CAAsB,GAAtB;AACD;A;AAED,WAAOyE,MAAP;AACD;A;AAEDsmB,EAAAA,iBAAiB,GAAmB;AAClC,UAAMtuC,IAAoB,GAAG,KAAK2P,SAAL,EAA7B;AACA,SAAK4O,MAAL,CAAY5L,OAAE,CAACtV,OAAf;AACA,SAAKkhB,MAAL,CAAY5L,OAAE,CAACpZ,MAAf;A;AACA,QAAI,CAAC,KAAK1I,KAAL,CAAW8hB,OAAE,CAAC/hB,MAAd,CAAL,EAA4B;AAC1B,WAAK4a,KAAL,CAAW,KAAK5L,KAAL,CAAWtS,KAAtB,EAA6Bk8C,QAAQ,CAAC6C,6BAAtC;AACD;A;AAGDrsC,IAAAA,IAAI,CAACmlB,QAAL,GAAgB,KAAKvE,aAAL,EAAhB;AACA,SAAKrC,MAAL,CAAY5L,OAAE,CAACnZ,MAAf;A;AAEA,QAAI,KAAKolB,GAAL,CAASjM,OAAE,CAAC9Y,GAAZ,CAAJ,EAAsB;AACpBmG,MAAAA,IAAI,CAACuuC,SAAL,GAAiB,KAAKC,iBAAL,CAAgD,IAAhD,CAAjB;AACD;A;AACD,QAAI,KAAKlvB,YAAL,CAAkB,GAAlB,CAAJ,EAA4B;AAC1Btf,MAAAA,IAAI,CAACgP,cAAL,GAAsB,KAAKy/B,oBAAL,EAAtB;AACD;A;AACD,WAAO,KAAK3+B,UAAL,CAAgB9P,IAAhB,EAAsB,cAAtB,CAAP;AACD;A;AAEDwuC,EAAAA,iBAAiB,CAACE,kBAAD,EAA8C;AAC7D,QAAItI,MAAsB,GAAG,KAAKjnB,eAAL,EAA7B;A;AACA,WAAO,KAAKP,GAAL,CAASjM,OAAE,CAAC9Y,GAAZ,CAAP,EAAyB;AACvB,YAAMmG,IAAuB,GAAG,KAAK4R,eAAL,CAAqBw0B,MAArB,CAAhC;AACApmC,MAAAA,IAAI,CAAC0sB,IAAL,GAAY0Z,MAAZ;AACApmC,MAAAA,IAAI,CAACyiB,KAAL,GAAa,KAAKtD,eAAL,CAAqBuvB,kBAArB,CAAb;AACAtI,MAAAA,MAAM,GAAG,KAAKt2B,UAAL,CAAgB9P,IAAhB,EAAsB,iBAAtB,CAAT;AACD;A;AACD,WAAOomC,MAAP;AACD;A;AAEDuI,EAAAA,oBAAoB,GAAsB;AACxC,UAAM3uC,IAAuB,GAAG,KAAK2P,SAAL,EAAhC;AACA3P,IAAAA,IAAI,CAAC4uC,QAAL,GAAgB,KAAKJ,iBAAL,CAAgD,KAAhD,CAAhB;A;AACA,QAAI,CAAC,KAAKp7B,qBAAL,EAAD,IAAiC,KAAKkM,YAAL,CAAkB,GAAlB,CAArC,EAA6D;AAC3Dtf,MAAAA,IAAI,CAACgP,cAAL,GAAsB,KAAKy/B,oBAAL,EAAtB;AACD;A;AACD,WAAO,KAAK3+B,UAAL,CAAgB9P,IAAhB,EAAsB,iBAAtB,CAAP;AACD;A;AAED6uC,EAAAA,wBAAwB,CAACC,GAAD,EAAuC;AAC7D,SAAK/5B,IAAL;AACA,UAAM/U,IAAuB,GAAG,KAAK4R,eAAL,CAAqBk9B,GAArB,CAAhC;AACA9uC,IAAAA,IAAI,CAAC+uC,aAAL,GAAqBD,GAArB;AACA9uC,IAAAA,IAAI,CAAC4f,cAAL,GAAsB,KAAKovB,qBAAL,CAA0C,KAA1C,CAAtB;AACAhvC,IAAAA,IAAI,CAACivC,OAAL,GAAe,KAAf;AACA,WAAO,KAAKn/B,UAAL,CAAgB9P,IAAhB,EAAsB,iBAAtB,CAAP;AACD;A;AAEDkvC,EAAAA,mBAAmB,GAAiB;AAClC,UAAMlvC,IAAkB,GAAG,KAAK2P,SAAL,EAA3B;AACA,SAAKoF,IAAL;AACA,WAAO,KAAKjF,UAAL,CAAgB9P,IAAhB,EAAsB,YAAtB,CAAP;AACD;A;AAEDmvC,EAAAA,gBAAgB,GAAkB;AAChC,UAAMnvC,IAAmB,GAAG,KAAK2P,SAAL,EAA5B;AACA,SAAK4O,MAAL,CAAY5L,OAAE,CAAChV,OAAf;A;AACA,QAAI,KAAK9M,KAAL,CAAW8hB,OAAE,CAACtV,OAAd,CAAJ,EAA4B;AAC1B2C,MAAAA,IAAI,CAACovC,QAAL,GAAgB,KAAKd,iBAAL,EAAhB;AACD,KAFD,MAEO;AACLtuC,MAAAA,IAAI,CAACovC,QAAL,GAAgB,KAAKZ,iBAAL,CAAgD,IAAhD,CAAhB;AACD;A;AACD,WAAO,KAAK1+B,UAAL,CAAgB9P,IAAhB,EAAsB,aAAtB,CAAP;AACD;A;AAEDqvC,EAAAA,oBAAoB,GAAsB;AACxC,UAAMrvC,IAAuB,GAAG,KAAK2P,SAAL,EAAhC;AACA3P,IAAAA,IAAI,CAACvR,IAAL,GAAY,KAAK6gD,mBAAL,CAAyBtvC,IAAI,CAAC1S,KAA9B,CAAZ;AACA0S,IAAAA,IAAI,CAACuvC,UAAL,GAAkB,KAAKC,kBAAL,CAAwB78B,OAAE,CAACxV,QAA3B,CAAlB;AACA6C,IAAAA,IAAI,CAACghB,OAAL,GAAe,KAAKwuB,kBAAL,CAAwB78B,OAAE,CAACnY,EAA3B,CAAf;AACA,WAAO,KAAKsV,UAAL,CAAgB9P,IAAhB,EAAsB,iBAAtB,CAAP;AACD;A;AAEDyvC,EAAAA,wBAAwB,GAAkC;AACxD,QAAI,KAAKnwB,YAAL,CAAkB,GAAlB,CAAJ,EAA4B;AAC1B,aAAO,KAAKowB,qBAAL,EAAP;AACD;AACF;A;AAEDA,EAAAA,qBAAqB,GAAG;AACtB,UAAM1vC,IAAkC,GAAG,KAAK2P,SAAL,EAA3C;A;AAEA,QAAI,KAAK2P,YAAL,CAAkB,GAAlB,KAA0B,KAAKzuB,KAAL,CAAW8hB,OAAE,CAACyQ,WAAd,CAA9B,EAA0D;AACxD,WAAKrO,IAAL;AACD,KAFD,MAEO;AACL,WAAK2L,UAAL;AACD;A;AAED1gB,IAAAA,IAAI,CAACyL,MAAL,GAAc,KAAK0iC,oBAAL,CACZ,2BADY,EAEZ,KAAKkB,oBAAL,CAA0BnC,IAA1B,CAA+B,IAA/B,CAFY,EAGE,KAHF,EAIS,IAJT,CAAd;A;AAMA,QAAIltC,IAAI,CAACyL,MAAL,CAAYnkB,MAAZ,KAAuB,CAA3B,EAA8B;AAC5B,WAAKkkB,KAAL,CAAWxL,IAAI,CAAC1S,KAAhB,EAAuBk8C,QAAQ,CAACc,mBAAhC;AACD;A;AACD,WAAO,KAAKx6B,UAAL,CAAgB9P,IAAhB,EAAsB,4BAAtB,CAAP;AACD;A;AAED2vC,EAAAA,6BAA6B,GAAuB;AAClD,QAAI,KAAK1rB,SAAL,GAAiB59B,IAAjB,KAA0BssB,OAAE,CAAC/V,MAAjC,EAAyC;AACvC,WAAKmY,IAAL;AACA,aAAO,KAAK45B,oBAAL,EAAP;AACD;A;AACD,WAAO,IAAP;AACD;A;AAIDiB,EAAAA,eAAe,CACbC,WADa,EAEbC,SAFa,EAGP;AAEN,UAAMC,mBAAmB,GAAGF,WAAW,KAAKl9B,OAAE,CAAC3Y,KAA/C;AACA81C,IAAAA,SAAS,CAAC9gC,cAAV,GAA2B,KAAKygC,wBAAL,EAA3B;AACA,SAAKlxB,MAAL,CAAY5L,OAAE,CAACpZ,MAAf;AACAu2C,IAAAA,SAAS,CAACE,UAAV,GAAuB,KAAKC,8BAAL,EAAvB;A;AACA,QAAIF,mBAAJ,EAAyB;AACvBD,MAAAA,SAAS,CAAClwB,cAAV,GACE,KAAKswB,oCAAL,CAA0CL,WAA1C,CADF;AAED,KAHD,MAGO,IAAI,KAAKh/C,KAAL,CAAWg/C,WAAX,CAAJ,EAA6B;AAClCC,MAAAA,SAAS,CAAClwB,cAAV,GACE,KAAKswB,oCAAL,CAA0CL,WAA1C,CADF;AAED;AACF;A;AAEDI,EAAAA,8BAA8B,GAE5B;AACA,WAAO,KAAKE,gBAAL,CAAsBx9B,OAAE,CAACnZ,MAAzB,MAA6DrQ,GAA7D,CACLkjB,OAAO,IAAI;AACT,UACEA,OAAO,CAAChmB,IAAR,KAAiB,YAAjB,IACAgmB,OAAO,CAAChmB,IAAR,KAAiB,aADjB,IAEAgmB,OAAO,CAAChmB,IAAR,KAAiB,eAFjB,IAGAgmB,OAAO,CAAChmB,IAAR,KAAiB,cAJnB,EAKE;AACA,aAAKmlB,KAAL,CACEa,OAAO,CAAC/e,KADV,EAEEk8C,QAAQ,CAAC+C,iCAFX,EAGElgC,OAAO,CAAChmB,IAHV;AAKD;A;AACD,aAAQgmB,OAAR;AACD,KAfI,CAAP;AAiBD;A;AAED+jC,EAAAA,0BAA0B,GAAS;AACjC,QAAI,CAAC,KAAKxxB,GAAL,CAASjM,OAAE,CAAClZ,KAAZ,CAAD,IAAuB,CAAC,KAAK42C,gBAAL,EAA5B,EAAqD;AACnD,WAAK9xB,MAAL,CAAY5L,OAAE,CAACjZ,IAAf;AACD;AACF;A;AAED42C,EAAAA,sBAAsB,CACpB1gC,IADoB,EAEpB5P,IAFoB,EAG8C;AAClE,SAAK4vC,eAAL,CAAqBj9B,OAAE,CAAChZ,KAAxB,EAA+BqG,IAA/B;AACA,SAAKowC,0BAAL;AACA,WAAO,KAAKtgC,UAAL,CAAgB9P,IAAhB,EAAsB4P,IAAtB,CAAP;AACD;A;AAED2gC,EAAAA,+BAA+B,GAAG;AAChC,SAAKx7B,IAAL;AACA,WAAO,KAAK6J,GAAL,CAASjM,OAAE,CAAClkB,IAAZ,KAAqB,KAAKoC,KAAL,CAAW8hB,OAAE,CAAChZ,KAAd,CAA5B;AACD;A;AAED62C,EAAAA,wBAAwB,CAACxwC,IAAD,EAAoC;AAC1D,QACE,EACE,KAAKnP,KAAL,CAAW8hB,OAAE,CAAC9Z,QAAd,KACA,KAAK43C,WAAL,CAAiB,KAAKF,+BAAL,CAAqCrD,IAArC,CAA0C,IAA1C,CAAjB,CAFF,CADF,EAKE;AACA,aAAOjoD,SAAP;AACD;A;AAED,SAAKs5B,MAAL,CAAY5L,OAAE,CAAC9Z,QAAf;AACA,UAAM7R,EAAE,GAAG,KAAKm4B,eAAL,EAAX;AACAn4B,IAAAA,EAAE,CAAC44B,cAAH,GAAoB,KAAKovB,qBAAL,EAApB;AACA,SAAKnvB,gBAAL,CAAsB74B,EAAtB;AAEA,SAAKu3B,MAAL,CAAY5L,OAAE,CAAC3Z,QAAf;AACAgH,IAAAA,IAAI,CAACgwC,UAAL,GAAkB,CAAChpD,EAAD,CAAlB;AAEA,UAAMX,IAAI,GAAG,KAAKqqD,wBAAL,EAAb;AACA,QAAIrqD,IAAJ,EAAU2Z,IAAI,CAAC4f,cAAL,GAAsBv5B,IAAtB;AACV,SAAK+pD,0BAAL;AACA,WAAO,KAAKtgC,UAAL,CAAgB9P,IAAhB,EAAsB,kBAAtB,CAAP;AACD;A;AAED2wC,EAAAA,gCAAgC,CAC9B3wC,IAD8B,EAE9B4wC,QAF8B,EAGe;AAC7C,QAAI,KAAKhyB,GAAL,CAASjM,OAAE,CAAC7Y,QAAZ,CAAJ,EAA2BkG,IAAI,CAAC+Q,QAAL,GAAgB,IAAhB;AAC3B,UAAM8/B,OAAY,GAAG7wC,IAArB;A;AAEA,QAAI,KAAKnP,KAAL,CAAW8hB,OAAE,CAACpZ,MAAd,KAAyB,KAAK+lB,YAAL,CAAkB,GAAlB,CAA7B,EAAqD;AACnD,UAAIsxB,QAAJ,EAAc;AACZ,aAAKplC,KAAL,CAAWxL,IAAI,CAAC1S,KAAhB,EAAuBk8C,QAAQ,CAACkC,0BAAhC;AACD;A;AACD,YAAMz9B,MAA2B,GAAG4iC,OAApC;A;AACA,UAAI5iC,MAAM,CAAC2B,IAAP,IAAe,KAAK0P,YAAL,CAAkB,GAAlB,CAAnB,EAA2C;AACzC,aAAK9T,KAAL,CAAW,KAAK5L,KAAL,CAAWqL,GAAtB,EAA2Bu+B,QAAQ,CAACG,+BAApC;AACD;A;AACD,WAAKiG,eAAL,CAAqBj9B,OAAE,CAAChZ,KAAxB,EAA+BsU,MAA/B;AACA,WAAKmiC,0BAAL;A;AACA,UAAIniC,MAAM,CAAC2B,IAAP,KAAgB,KAApB,EAA2B;AACzB,YAAI3B,MAAM,CAAC+hC,UAAP,CAAkB1oD,MAAlB,GAA2B,CAA/B,EAAkC;AAChC,eAAKkkB,KAAL,CAAW,KAAK5L,KAAL,CAAWqL,GAAtB,EAA2B4F,aAAM,CAAC/O,cAAlC;A;AACA,cAAI,KAAKiqB,WAAL,CAAiB9d,MAAM,CAAC+hC,UAAP,CAAkB,CAAlB,CAAjB,CAAJ,EAA4C;AAC1C,iBAAKxkC,KAAL,CACE,KAAK5L,KAAL,CAAWqL,GADb,EAEEu+B,QAAQ,CAACE,iCAFX;AAID;AACF;AACF,OAVD,MAUO,IAAIz7B,MAAM,CAAC2B,IAAP,KAAgB,KAApB,EAA2B;AAChC,YAAI3B,MAAM,CAAC+hC,UAAP,CAAkB1oD,MAAlB,KAA6B,CAAjC,EAAoC;AAClC,eAAKkkB,KAAL,CAAW,KAAK5L,KAAL,CAAWqL,GAAtB,EAA2B4F,aAAM,CAAC9O,cAAlC;AACD,SAFD,MAEO;AACL,gBAAM+uC,cAAc,GAAG7iC,MAAM,CAAC+hC,UAAP,CAAkB,CAAlB,CAAvB;A;AACA,cAAI,KAAKjkB,WAAL,CAAiB+kB,cAAjB,CAAJ,EAAsC;AACpC,iBAAKtlC,KAAL,CACE,KAAK5L,KAAL,CAAWqL,GADb,EAEEu+B,QAAQ,CAACE,iCAFX;AAID;A;AACD,cACEoH,cAAc,CAACzqD,IAAf,KAAwB,YAAxB,IACAyqD,cAAc,CAAC//B,QAFjB,EAGE;AACA,iBAAKvF,KAAL,CACE,KAAK5L,KAAL,CAAWqL,GADb,EAEEu+B,QAAQ,CAACmC,qCAFX;AAID;A;AACD,cAAImF,cAAc,CAACzqD,IAAf,KAAwB,aAA5B,EAA2C;AACzC,iBAAKmlB,KAAL,CACE,KAAK5L,KAAL,CAAWqL,GADb,EAEEu+B,QAAQ,CAACoC,iCAFX;AAID;AACF;A;AACD,YAAI39B,MAAM,CAAC2R,cAAX,EAA2B;AACzB,eAAKpU,KAAL,CACEyC,MAAM,CAAC2R,cAAP,CAAsBtyB,KADxB,EAEEk8C,QAAQ,CAACqC,8BAFX;AAID;AACF,OAjCM,MAiCA;AACL59B,QAAAA,MAAM,CAAC2B,IAAP,GAAc,QAAd;AACD;A;AACD,aAAO,KAAKE,UAAL,CAAgB7B,MAAhB,EAAwB,mBAAxB,CAAP;AACD,KAzDD,MAyDO;AACL,YAAMqX,QAA+B,GAAGurB,OAAxC;AACA,UAAID,QAAJ,EAActrB,QAAQ,CAACsrB,QAAT,GAAoB,IAApB;AACd,YAAMvqD,IAAI,GAAG,KAAKqqD,wBAAL,EAAb;AACA,UAAIrqD,IAAJ,EAAUi/B,QAAQ,CAAC1F,cAAT,GAA0Bv5B,IAA1B;AACV,WAAK+pD,0BAAL;AACA,aAAO,KAAKtgC,UAAL,CAAgBwV,QAAhB,EAA0B,qBAA1B,CAAP;AACD;AACF;A;AAEDyrB,EAAAA,iBAAiB,GAAoB;AACnC,UAAM/wC,IAAS,GAAG,KAAK2P,SAAL,EAAlB;A;AAEA,QAAI,KAAK9e,KAAL,CAAW8hB,OAAE,CAACpZ,MAAd,KAAyB,KAAK+lB,YAAL,CAAkB,GAAlB,CAA7B,EAAqD;AACnD,aAAO,KAAKgxB,sBAAL,CAA4B,4BAA5B,EAA0DtwC,IAA1D,CAAP;AACD;A;AAED,QAAI,KAAKnP,KAAL,CAAW8hB,OAAE,CAAC5V,IAAd,CAAJ,EAAyB;AACvB,YAAM/V,EAAgB,GAAG,KAAK2oB,SAAL,EAAzB;AACA,WAAKoF,IAAL;A;AACA,UAAI,KAAKlkB,KAAL,CAAW8hB,OAAE,CAACpZ,MAAd,KAAyB,KAAK+lB,YAAL,CAAkB,GAAlB,CAA7B,EAAqD;AACnD,eAAO,KAAKgxB,sBAAL,CACL,iCADK,EAELtwC,IAFK,CAAP;AAID,OALD,MAKO;AACLA,QAAAA,IAAI,CAACxQ,GAAL,GAAW,KAAK62B,gBAAL,CAAsBr/B,EAAtB,EAA0B,KAA1B,CAAX;AACA,eAAO,KAAK2pD,gCAAL,CAAsC3wC,IAAtC,EAA4C,KAA5C,CAAP;AACD;AACF;A;AAED,SAAKmtC,gBAAL,CACEntC,IADF,EAEE,CAAC,UAAD,CAFF,EAGE,CACE,SADF,EAEE,UAFF,EAGE,SAHF,EAIE,WAJF,EAKE,QALF,EAME,QANF,EAOE,UAPF,CAHF,EAYEwpC,QAAQ,CAACuB,2BAZX;AAeA,UAAMiG,GAAG,GAAG,KAAKR,wBAAL,CAA8BxwC,IAA9B,CAAZ;A;AACA,QAAIgxC,GAAJ,EAAS;AACP,aAAOA,GAAP;AACD;A;AAED,SAAK3kB,iBAAL,CAAuBrsB,IAAvB,EAAwD,KAAxD;A;AACA,QACE,CAACA,IAAI,CAAC6P,QAAN,IACA7P,IAAI,CAACxQ,GAAL,CAASnJ,IAAT,KAAkB,YADlB,KAEC2Z,IAAI,CAACxQ,GAAL,CAASf,IAAT,KAAkB,KAAlB,IAA2BuR,IAAI,CAACxQ,GAAL,CAASf,IAAT,KAAkB,KAF9C,KAGA,KAAKm+C,wBAAL,EAJF,EAKE;AACA5sC,MAAAA,IAAI,CAAC4P,IAAL,GAAY5P,IAAI,CAACxQ,GAAL,CAASf,IAArB;AACA,WAAK49B,iBAAL,CAAuBrsB,IAAvB,EAAwD,KAAxD;AACD;A;AACD,WAAO,KAAK2wC,gCAAL,CAAsC3wC,IAAtC,EAA4C,CAAC,CAACA,IAAI,CAAC4wC,QAAnD,CAAP;AACD;A;AAEDK,EAAAA,kBAAkB,GAAoB;AACpC,UAAMjxC,IAAqB,GAAG,KAAK2P,SAAL,EAA9B;AACA3P,IAAAA,IAAI,CAACkyB,OAAL,GAAe,KAAKgf,wBAAL,EAAf;AACA,WAAO,KAAKphC,UAAL,CAAgB9P,IAAhB,EAAsB,eAAtB,CAAP;AACD;A;AAEDkxC,EAAAA,wBAAwB,GAAoC;AAC1D,SAAK3yB,MAAL,CAAY5L,OAAE,CAACzZ,MAAf;AACA,UAAMg5B,OAAO,GAAG,KAAK4b,WAAL,CACd,aADc,EAEd,KAAKiD,iBAAL,CAAuB7D,IAAvB,CAA4B,IAA5B,CAFc,CAAhB;AAIA,SAAK3uB,MAAL,CAAY5L,OAAE,CAACtZ,MAAf;AACA,WAAO64B,OAAP;AACD;A;AAEDif,EAAAA,qBAAqB,GAAY;AAC/B,SAAKp8B,IAAL;A;AACA,QAAI,KAAK6J,GAAL,CAASjM,OAAE,CAACrX,OAAZ,CAAJ,EAA0B;AACxB,aAAO,KAAK+kB,YAAL,CAAkB,UAAlB,CAAP;AACD;A;AACD,QAAI,KAAKA,YAAL,CAAkB,UAAlB,CAAJ,EAAmC;AACjC,WAAKtL,IAAL;AACD;A;AACD,QAAI,CAAC,KAAKlkB,KAAL,CAAW8hB,OAAE,CAAC9Z,QAAd,CAAL,EAA8B;AAC5B,aAAO,KAAP;AACD;A;AACD,SAAKkc,IAAL;A;AACA,QAAI,CAAC,KAAK43B,cAAL,EAAL,EAA4B;AAC1B,aAAO,KAAP;AACD;A;AACD,SAAK53B,IAAL;AACA,WAAO,KAAKlkB,KAAL,CAAW8hB,OAAE,CAAClV,GAAd,CAAP;AACD;A;AAED2zC,EAAAA,0BAA0B,GAAsB;AAC9C,UAAMpxC,IAAuB,GAAG,KAAK2P,SAAL,EAAhC;AACA3P,IAAAA,IAAI,CAACvR,IAAL,GAAY,KAAK6gD,mBAAL,CAAyBtvC,IAAI,CAAC1S,KAA9B,CAAZ;AACA0S,IAAAA,IAAI,CAACuvC,UAAL,GAAkB,KAAK8B,qBAAL,CAA2B1+B,OAAE,CAAClV,GAA9B,CAAlB;AACA,WAAO,KAAKqS,UAAL,CAAgB9P,IAAhB,EAAsB,iBAAtB,CAAP;AACD;A;AAEDsxC,EAAAA,iBAAiB,GAAmB;AAClC,UAAMtxC,IAAoB,GAAG,KAAK2P,SAAL,EAA7B;AAEA,SAAK4O,MAAL,CAAY5L,OAAE,CAACzZ,MAAf;A;AAEA,QAAI,KAAKrI,KAAL,CAAW8hB,OAAE,CAACrX,OAAd,CAAJ,EAA4B;AAC1B0E,MAAAA,IAAI,CAAC4wC,QAAL,GAAgB,KAAKhxC,KAAL,CAAWpT,KAA3B;AACA,WAAKuoB,IAAL;AACA,WAAK4J,gBAAL,CAAsB,UAAtB;AACD,KAJD,MAIO,IAAI,KAAKuB,aAAL,CAAmB,UAAnB,CAAJ,EAAoC;AACzClgB,MAAAA,IAAI,CAAC4wC,QAAL,GAAgB,IAAhB;AACD;A;AAED,SAAKryB,MAAL,CAAY5L,OAAE,CAAC9Z,QAAf;AACAmH,IAAAA,IAAI,CAACsjB,aAAL,GAAqB,KAAK8tB,0BAAL,EAArB;AACApxC,IAAAA,IAAI,CAACuxC,QAAL,GAAgB,KAAKrxB,aAAL,CAAmB,IAAnB,IAA2B,KAAKsxB,WAAL,EAA3B,GAAgD,IAAhE;AAEA,SAAKjzB,MAAL,CAAY5L,OAAE,CAAC3Z,QAAf;A;AAEA,QAAI,KAAKnI,KAAL,CAAW8hB,OAAE,CAACrX,OAAd,CAAJ,EAA4B;AAC1B0E,MAAAA,IAAI,CAAC+Q,QAAL,GAAgB,KAAKnR,KAAL,CAAWpT,KAA3B;AACA,WAAKuoB,IAAL;AACA,WAAKwJ,MAAL,CAAY5L,OAAE,CAAC7Y,QAAf;AACD,KAJD,MAIO,IAAI,KAAK8kB,GAAL,CAASjM,OAAE,CAAC7Y,QAAZ,CAAJ,EAA2B;AAChCkG,MAAAA,IAAI,CAAC+Q,QAAL,GAAgB,IAAhB;AACD;A;AAED/Q,IAAAA,IAAI,CAAC4f,cAAL,GAAsB,KAAK6xB,cAAL,EAAtB;AACA,SAAK3xB,SAAL;AACA,SAAKvB,MAAL,CAAY5L,OAAE,CAACtZ,MAAf;AAEA,WAAO,KAAKyW,UAAL,CAAgB9P,IAAhB,EAAsB,cAAtB,CAAP;AACD;A;AAED0xC,EAAAA,gBAAgB,GAAkB;AAChC,UAAM1xC,IAAmB,GAAG,KAAK2P,SAAL,EAA5B;AACA3P,IAAAA,IAAI,CAAC2xC,YAAL,GAAoB,KAAKxD,oBAAL,CAClB,mBADkB,EAElB,KAAKyD,uBAAL,CAA6B1E,IAA7B,CAAkC,IAAlC,CAFkB,EAGJ,IAHI,EAIG,KAJH,CAApB;AASA,QAAI2E,mBAAmB,GAAG,KAA1B;AACA,QAAIC,eAAe,GAAG,IAAtB;AACA9xC,IAAAA,IAAI,CAAC2xC,YAAL,CAAkB/qD,OAAlB,CAA0BmrD,WAAW,IAAI;AAAA;A;AACvC,UAAI;AAAE1rD,QAAAA;AAAF,UAAW0rD,WAAf;A;AAEA,UACEF,mBAAmB,IACnBxrD,IAAI,KAAK,YADT,IAEAA,IAAI,KAAK,gBAFT,IAGA,EAAEA,IAAI,KAAK,oBAAT,IAAiC0rD,WAAW,CAAChhC,QAA/C,CAJF,EAKE;AACA,aAAKvF,KAAL,CAAWumC,WAAW,CAACzkD,KAAvB,EAA8Bk8C,QAAQ,CAAC6B,0BAAvC;AACD;A;AAGDwG,MAAAA,mBAAmB,GACjBA,mBAAmB,IAClBxrD,IAAI,KAAK,oBAAT,IAAiC0rD,WAAW,CAAChhC,QAD9C,IAEA1qB,IAAI,KAAK,gBAHX;A;AAMA,UAAIA,IAAI,KAAK,YAAb,EAA2B;AACzB0rD,QAAAA,WAAW,GAAGA,WAAW,CAACnyB,cAA1B;AACAv5B,QAAAA,IAAI,GAAG0rD,WAAW,CAAC1rD,IAAnB;AACD;A;AAED,YAAM2rD,SAAS,GAAG3rD,IAAI,KAAK,oBAA3B;AAEAyrD,MAAAA,eAAe,uBAAGA,eAAH,+BAAsBE,SAArC;A;AACA,UAAIF,eAAe,KAAKE,SAAxB,EAAmC;AACjC,aAAKxmC,KAAL,CACEumC,WAAW,CAACzkD,KADd,EAEEk8C,QAAQ,CAAC0B,gCAFX;AAID;AACF,KAjCD;AAmCA,WAAO,KAAKp7B,UAAL,CAAgB9P,IAAhB,EAAsB,aAAtB,CAAP;AACD;A;AAED4xC,EAAAA,uBAAuB,GAAoC;AAGzD,UAAM;AAAEtkD,MAAAA,KAAK,EAAEkjB,QAAT;AAAmBtF,MAAAA;AAAnB,QAAgC,KAAKtL,KAA3C;AAEA,UAAM6f,IAAI,GAAG,KAAKb,GAAL,CAASjM,OAAE,CAACzY,QAAZ,CAAb;AACA,QAAI7T,IAAI,GAAG,KAAKmrD,WAAL,EAAX;AACA,UAAMzgC,QAAQ,GAAG,KAAK6N,GAAL,CAASjM,OAAE,CAAC7Y,QAAZ,CAAjB;AACA,UAAMm4C,OAAO,GAAG,KAAKrzB,GAAL,CAASjM,OAAE,CAAChZ,KAAZ,CAAhB;A;AAEA,QAAIs4C,OAAJ,EAAa;AACX,YAAMC,WAAiC,GAAG,KAAKtgC,eAAL,CAAqBvrB,IAArB,CAA1C;AACA6rD,MAAAA,WAAW,CAACnhC,QAAZ,GAAuBA,QAAvB;A;AAEA,UACE1qB,IAAI,CAACA,IAAL,KAAc,iBAAd,IACA,CAACA,IAAI,CAAC2oB,cADN,IAEA3oB,IAAI,CAACuoD,QAAL,CAAcvoD,IAAd,KAAuB,YAHzB,EAIE;AACA6rD,QAAAA,WAAW,CAACz6C,KAAZ,GAAqBpR,IAAI,CAACuoD,QAA1B;AACD,OAND,MAMO;AACL,aAAKpjC,KAAL,CAAWnlB,IAAI,CAACiH,KAAhB,EAAuBk8C,QAAQ,CAACyB,uBAAhC;AAIAiH,QAAAA,WAAW,CAACz6C,KAAZ,GAAoBpR,IAApB;AACD;A;AAED6rD,MAAAA,WAAW,CAACzrB,WAAZ,GAA0B,KAAK+qB,WAAL,EAA1B;AACAnrD,MAAAA,IAAI,GAAG,KAAKypB,UAAL,CAAgBoiC,WAAhB,EAA6B,oBAA7B,CAAP;AACD,KApBD,MAoBO,IAAInhC,QAAJ,EAAc;AACnB,YAAMohC,gBAAkC,GAAG,KAAKvgC,eAAL,CAAqBvrB,IAArB,CAA3C;AACA8rD,MAAAA,gBAAgB,CAACvyB,cAAjB,GAAkCv5B,IAAlC;AACAA,MAAAA,IAAI,GAAG,KAAKypB,UAAL,CAAgBqiC,gBAAhB,EAAkC,gBAAlC,CAAP;AACD;A;AAED,QAAI1yB,IAAJ,EAAU;AACR,YAAM2yB,QAAsB,GAAG,KAAK9kC,WAAL,CAAiBkD,QAAjB,EAA2BtF,QAA3B,CAA/B;AACAknC,MAAAA,QAAQ,CAACxyB,cAAT,GAA0Bv5B,IAA1B;AACAA,MAAAA,IAAI,GAAG,KAAKypB,UAAL,CAAgBsiC,QAAhB,EAA0B,YAA1B,CAAP;AACD;A;AAED,WAAO/rD,IAAP;AACD;A;AAEDgsD,EAAAA,wBAAwB,GAA0B;AAChD,UAAMryC,IAAI,GAAG,KAAK2P,SAAL,EAAb;AACA,SAAK4O,MAAL,CAAY5L,OAAE,CAACpZ,MAAf;AACAyG,IAAAA,IAAI,CAAC4f,cAAL,GAAsB,KAAK4xB,WAAL,EAAtB;AACA,SAAKjzB,MAAL,CAAY5L,OAAE,CAACnZ,MAAf;AACA,WAAO,KAAKsW,UAAL,CAAgB9P,IAAhB,EAAsB,qBAAtB,CAAP;AACD;A;AAEDsyC,EAAAA,gCAAgC,CAC9BjsD,IAD8B,EAE9BksD,QAF8B,EAGC;AAC/B,UAAMvyC,IAAmC,GAAG,KAAK2P,SAAL,EAA5C;A;AACA,QAAItpB,IAAI,KAAK,mBAAb,EAAkC;AAEhC2Z,MAAAA,IAAI,CAACuyC,QAAL,GAAgB,CAAC,CAACA,QAAlB;AACA,UAAIA,QAAJ,EAAc,KAAKx9B,IAAL;AACd,WAAKA,IAAL;AACD;A;AACD,SAAK66B,eAAL,CAAqBj9B,OAAE,CAAC3Y,KAAxB,EAA+BgG,IAA/B;AACA,WAAO,KAAK8P,UAAL,CAAgB9P,IAAhB,EAAsB3Z,IAAtB,CAAP;AACD;A;AAEDmsD,EAAAA,sBAAsB,GAAoB;AACxC,UAAMxyC,IAAqB,GAAG,KAAK2P,SAAL,EAA9B;A;AACA3P,IAAAA,IAAI,CAAC2xB,OAAL,GAAe,CAAC,MAAM;AACpB,cAAQ,KAAK/xB,KAAL,CAAWvZ,IAAnB;AACE,aAAKssB,OAAE,CAACpa,GAAR;AACA,aAAKoa,OAAE,CAACna,MAAR;AACA,aAAKma,OAAE,CAAC/hB,MAAR;AACA,aAAK+hB,OAAE,CAACpV,KAAR;AACA,aAAKoV,OAAE,CAACnV,MAAR;AAEE,iBAAO,KAAKojB,aAAL,EAAP;A;AACF;AACE,gBAAM,KAAKF,UAAL,EAAN;AATJ;AAWD,KAZc,GAAf;A;AAaA,WAAO,KAAK5Q,UAAL,CAAgB9P,IAAhB,EAAsB,eAAtB,CAAP;AACD;A;AAEDyyC,EAAAA,0BAA0B,GAAa;AACrC,UAAMzyC,IAAqB,GAAG,KAAK2P,SAAL,EAA9B;AACA3P,IAAAA,IAAI,CAAC2xB,OAAL,GAAe,KAAK+gB,aAAL,CAAmB,KAAnB,CAAf;AACA,WAAO,KAAK5iC,UAAL,CAAgB9P,IAAhB,EAAsB,eAAtB,CAAP;AACD;A;AAED2yC,EAAAA,yBAAyB,GAAa;AACpC,QAAI,KAAK/yC,KAAL,CAAW0e,MAAf,EAAuB,OAAO,KAAKkzB,WAAL,EAAP;AACvB,WAAO,MAAMmB,yBAAN,EAAP;AACD;A;AAEDC,EAAAA,kCAAkC,GAAqC;AACrE,UAAMC,WAAW,GAAG,KAAK3D,mBAAL,EAApB;A;AACA,QAAI,KAAK7uB,YAAL,CAAkB,IAAlB,KAA2B,CAAC,KAAKjN,qBAAL,EAAhC,EAA8D;AAC5D,aAAO,KAAKy7B,wBAAL,CAA8BgE,WAA9B,CAAP;AACD,KAFD,MAEO;AACL,aAAOA,WAAP;AACD;AACF;A;AAEDC,EAAAA,mBAAmB,GAAa;AAC9B,YAAQ,KAAKlzC,KAAL,CAAWvZ,IAAnB;AACE,WAAKssB,OAAE,CAAClkB,IAAR;AACA,WAAKkkB,OAAE,CAAC/U,KAAR;AACA,WAAK+U,OAAE,CAACrV,KAAR;AAAe;AACb,gBAAMjX,IAAI,GAAG,KAAKwK,KAAL,CAAW8hB,OAAE,CAAC/U,KAAd,IACT,eADS,GAET,KAAK/M,KAAL,CAAW8hB,OAAE,CAACrV,KAAd,IACA,eADA,GAEAkvC,mBAAmB,CAAC,KAAK5sC,KAAL,CAAWpT,KAAZ,CAJvB;A;AAKA,cACEnG,IAAI,KAAKpB,SAAT,IACA,KAAK8tD,iBAAL,SAFF,EAGE;AACA,kBAAM/yC,IAAqB,GAAG,KAAK2P,SAAL,EAA9B;AACA,iBAAKoF,IAAL;AACA,mBAAO,KAAKjF,UAAL,CAAgB9P,IAAhB,EAAsB3Z,IAAtB,CAAP;AACD;A;AACD,iBAAO,KAAKsoD,oBAAL,EAAP;AACD;A;AACD,WAAKh8B,OAAE,CAAC/hB,MAAR;AACA,WAAK+hB,OAAE,CAACpa,GAAR;AACA,WAAKoa,OAAE,CAACna,MAAR;AACA,WAAKma,OAAE,CAACpV,KAAR;AACA,WAAKoV,OAAE,CAACnV,MAAR;AACE,eAAO,KAAKg1C,sBAAL,EAAP;A;AACF,WAAK7/B,OAAE,CAACrX,OAAR;AACE,YAAI,KAAKsE,KAAL,CAAWpT,KAAX,KAAqB,GAAzB,EAA8B;AAC5B,gBAAMwT,IAAqB,GAAG,KAAK2P,SAAL,EAA9B;AACA,gBAAMsgB,SAAS,GAAG,KAAKhM,SAAL,EAAlB;A;AACA,cAAIgM,SAAS,CAAC5pC,IAAV,KAAmBssB,OAAE,CAACpa,GAAtB,IAA6B03B,SAAS,CAAC5pC,IAAV,KAAmBssB,OAAE,CAACna,MAAvD,EAA+D;AAC7D,kBAAM,KAAKkoB,UAAL,EAAN;AACD;A;AACD1gB,UAAAA,IAAI,CAAC2xB,OAAL,GAAe,KAAKqhB,eAAL,EAAf;AACA,iBAAO,KAAKljC,UAAL,CAAgB9P,IAAhB,EAAsB,eAAtB,CAAP;AACD;A;AACD;A;AACF,WAAK2S,OAAE,CAAC3V,KAAR;AACE,eAAO,KAAK41C,kCAAL,EAAP;A;AACF,WAAKjgC,OAAE,CAAChV,OAAR;AACE,eAAO,KAAKwxC,gBAAL,EAAP;A;AACF,WAAKx8B,OAAE,CAACtV,OAAR;AACE,eAAO,KAAKixC,iBAAL,EAAP;A;AACF,WAAK37B,OAAE,CAACzZ,MAAR;AACE,eAAO,KAAKu3C,WAAL,CAAiB,KAAKU,qBAAL,CAA2BjE,IAA3B,CAAgC,IAAhC,CAAjB,IACH,KAAKoE,iBAAL,EADG,GAEH,KAAKL,kBAAL,EAFJ;A;AAGF,WAAKt+B,OAAE,CAAC9Z,QAAR;AACE,eAAO,KAAK64C,gBAAL,EAAP;A;AACF,WAAK/+B,OAAE,CAACpZ,MAAR;AAaE,eAAO,KAAK84C,wBAAL,EAAP;A;AACF,WAAK1/B,OAAE,CAACxY,SAAR;AACE,eAAO,KAAKs4C,0BAAL,EAAP;AA/DJ;A;AAkEA,UAAM,KAAK/xB,UAAL,EAAN;AACD;A;AAEDuyB,EAAAA,wBAAwB,GAAa;AACnC,QAAI5sD,IAAI,GAAG,KAAKysD,mBAAL,EAAX;A;AACA,WAAO,CAAC,KAAK1/B,qBAAL,EAAD,IAAiC,KAAKwL,GAAL,CAASjM,OAAE,CAAC9Z,QAAZ,CAAxC,EAA+D;AAC7D,UAAI,KAAKhI,KAAL,CAAW8hB,OAAE,CAAC3Z,QAAd,CAAJ,EAA6B;AAC3B,cAAMgH,IAAmB,GAAG,KAAK4R,eAAL,CAAqBvrB,IAArB,CAA5B;AACA2Z,QAAAA,IAAI,CAACymB,WAAL,GAAmBpgC,IAAnB;AACA,aAAKk4B,MAAL,CAAY5L,OAAE,CAAC3Z,QAAf;AACA3S,QAAAA,IAAI,GAAG,KAAKypB,UAAL,CAAgB9P,IAAhB,EAAsB,aAAtB,CAAP;AACD,OALD,MAKO;AACL,cAAMA,IAA2B,GAAG,KAAK4R,eAAL,CAAqBvrB,IAArB,CAApC;AACA2Z,QAAAA,IAAI,CAAC0mB,UAAL,GAAkBrgC,IAAlB;AACA2Z,QAAAA,IAAI,CAAC2mB,SAAL,GAAiB,KAAK6qB,WAAL,EAAjB;AACA,aAAKjzB,MAAL,CAAY5L,OAAE,CAAC3Z,QAAf;AACA3S,QAAAA,IAAI,GAAG,KAAKypB,UAAL,CAAgB9P,IAAhB,EAAsB,qBAAtB,CAAP;AACD;AACF;A;AACD,WAAO3Z,IAAP;AACD;A;AAED6sD,EAAAA,mBAAmB,CACjBjoB,QADiB,EAEC;AAClB,UAAMjrB,IAAsB,GAAG,KAAK2P,SAAL,EAA/B;AACA,SAAKgP,gBAAL,CAAsBsM,QAAtB;AACAjrB,IAAAA,IAAI,CAACirB,QAAL,GAAgBA,QAAhB;AACAjrB,IAAAA,IAAI,CAAC4f,cAAL,GAAsB,KAAKuzB,2BAAL,EAAtB;A;AAEA,QAAIloB,QAAQ,KAAK,UAAjB,EAA6B;AAC3B,WAAKmoB,gCAAL,CAAsCpzC,IAAtC;AACD;A;AAED,WAAO,KAAK8P,UAAL,CAAgB9P,IAAhB,EAAsB,gBAAtB,CAAP;AACD;A;AAEDozC,EAAAA,gCAAgC,CAACpzC,IAAD,EAAe;AAC7C,YAAQA,IAAI,CAAC4f,cAAL,CAAoBv5B,IAA5B;AACE,WAAK,aAAL;AACA,WAAK,aAAL;AACE;A;AACF;AACE,aAAKmlB,KAAL,CAAWxL,IAAI,CAAC1S,KAAhB,EAAuBk8C,QAAQ,CAAC0C,kBAAhC;AALJ;AAOD;A;AAEDmH,EAAAA,gBAAgB,GAAkB;AAChC,UAAMrzC,IAAI,GAAG,KAAK2P,SAAL,EAAb;AACA,SAAKgP,gBAAL,CAAsB,OAAtB;AACA,UAAM2E,aAAa,GAAG,KAAK3T,SAAL,EAAtB;AACA2T,IAAAA,aAAa,CAAC70B,IAAd,GAAqB,KAAK6gD,mBAAL,CAAyBhsB,aAAa,CAACh2B,KAAvC,CAArB;AACA0S,IAAAA,IAAI,CAACsjB,aAAL,GAAqB,KAAKxT,UAAL,CAAgBwT,aAAhB,EAA+B,iBAA/B,CAArB;AACA,WAAO,KAAKxT,UAAL,CAAgB9P,IAAhB,EAAsB,aAAtB,CAAP;AACD;A;AAEDmzC,EAAAA,2BAA2B,GAAa;AACtC,UAAMloB,QAAQ,GAAG,CAAC,OAAD,EAAU,QAAV,EAAoB,UAApB,EAAgCqoB,IAAhC,CAAqCC,EAAE,IACtD,KAAKlzB,YAAL,CAAkBkzB,EAAlB,CADe,CAAjB;AAGA,WAAOtoB,QAAQ,GACX,KAAKioB,mBAAL,CAAyBjoB,QAAzB,CADW,GAEX,KAAK5K,YAAL,CAAkB,OAAlB,IACA,KAAKgzB,gBAAL,EADA,GAEA,KAAKJ,wBAAL,EAJJ;AAKD;A;AAEDO,EAAAA,8BAA8B,CAC5B5jC,IAD4B,EAE5B6jC,oBAF4B,EAG5BxoB,QAH4B,EAIlB;AACV,UAAMjrB,IAA0C,GAAG,KAAK2P,SAAL,EAAnD;AACA,UAAM+jC,kBAAkB,GAAG,KAAK90B,GAAL,CAASqM,QAAT,CAA3B;AACA,UAAM3yB,KAAK,GAAG,EAAd;A;AACA,OAAG;AACDA,MAAAA,KAAK,CAACvT,IAAN,CAAW0uD,oBAAoB,EAA/B;AACD,KAFD,QAES,KAAK70B,GAAL,CAASqM,QAAT,CAFT;A;AAGA,QAAI3yB,KAAK,CAAChR,MAAN,KAAiB,CAAjB,IAAsB,CAACosD,kBAA3B,EAA+C;AAC7C,aAAOp7C,KAAK,CAAC,CAAD,CAAZ;AACD;A;AACD0H,IAAAA,IAAI,CAAC1H,KAAL,GAAaA,KAAb;AACA,WAAO,KAAKwX,UAAL,CAAgB9P,IAAhB,EAAsB4P,IAAtB,CAAP;AACD;A;AAED+jC,EAAAA,+BAA+B,GAAa;AAC1C,WAAO,KAAKH,8BAAL,CACL,oBADK,EAEL,KAAKL,2BAAL,CAAiCjG,IAAjC,CAAsC,IAAtC,CAFK,EAGLv6B,OAAE,CAACzX,UAHE,CAAP;AAKD;A;AAED04C,EAAAA,wBAAwB,GAAG;AACzB,WAAO,KAAKJ,8BAAL,CACL,aADK,EAEL,KAAKG,+BAAL,CAAqCzG,IAArC,CAA0C,IAA1C,CAFK,EAGLv6B,OAAE,CAAC3X,SAHE,CAAP;AAKD;A;AAED64C,EAAAA,uBAAuB,GAAG;AACxB,QAAI,KAAKv0B,YAAL,CAAkB,GAAlB,CAAJ,EAA4B;AAC1B,aAAO,IAAP;AACD;A;AACD,WACE,KAAKzuB,KAAL,CAAW8hB,OAAE,CAACpZ,MAAd,KACA,KAAKk3C,WAAL,CAAiB,KAAKqD,oCAAL,CAA0C5G,IAA1C,CAA+C,IAA/C,CAAjB,CAFF;AAID;A;AAED6G,EAAAA,oBAAoB,GAAY;AAC9B,QAAI,KAAKljD,KAAL,CAAW8hB,OAAE,CAAClkB,IAAd,KAAuB,KAAKoC,KAAL,CAAW8hB,OAAE,CAAC3V,KAAd,CAA3B,EAAiD;AAC/C,WAAK+X,IAAL;AACA,aAAO,IAAP;AACD;A;AAED,QAAI,KAAKlkB,KAAL,CAAW8hB,OAAE,CAACzZ,MAAd,CAAJ,EAA2B;AACzB,UAAI86C,iBAAiB,GAAG,CAAxB;AACA,WAAKj/B,IAAL;A;AAEA,aAAOi/B,iBAAiB,GAAG,CAA3B,EAA8B;AAC5B,YAAI,KAAKnjD,KAAL,CAAW8hB,OAAE,CAACzZ,MAAd,CAAJ,EAA2B;AACzB,YAAE86C,iBAAF;AACD,SAFD,MAEO,IAAI,KAAKnjD,KAAL,CAAW8hB,OAAE,CAACtZ,MAAd,CAAJ,EAA2B;AAChC,YAAE26C,iBAAF;AACD;A;AACD,aAAKj/B,IAAL;AACD;A;AACD,aAAO,IAAP;AACD;A;AAED,QAAI,KAAKlkB,KAAL,CAAW8hB,OAAE,CAAC9Z,QAAd,CAAJ,EAA6B;AAC3B,UAAIm7C,iBAAiB,GAAG,CAAxB;AACA,WAAKj/B,IAAL;A;AAEA,aAAOi/B,iBAAiB,GAAG,CAA3B,EAA8B;AAC5B,YAAI,KAAKnjD,KAAL,CAAW8hB,OAAE,CAAC9Z,QAAd,CAAJ,EAA6B;AAC3B,YAAEm7C,iBAAF;AACD,SAFD,MAEO,IAAI,KAAKnjD,KAAL,CAAW8hB,OAAE,CAAC3Z,QAAd,CAAJ,EAA6B;AAClC,YAAEg7C,iBAAF;AACD;A;AACD,aAAKj/B,IAAL;AACD;A;AACD,aAAO,IAAP;AACD;A;AAED,WAAO,KAAP;AACD;A;AAED++B,EAAAA,oCAAoC,GAAY;AAC9C,SAAK/+B,IAAL;A;AACA,QAAI,KAAKlkB,KAAL,CAAW8hB,OAAE,CAACnZ,MAAd,KAAyB,KAAK3I,KAAL,CAAW8hB,OAAE,CAACzY,QAAd,CAA7B,EAAsD;AAGpD,aAAO,IAAP;AACD;A;AACD,QAAI,KAAK65C,oBAAL,EAAJ,EAAiC;AAC/B,UACE,KAAKljD,KAAL,CAAW8hB,OAAE,CAAChZ,KAAd,KACA,KAAK9I,KAAL,CAAW8hB,OAAE,CAAClZ,KAAd,CADA,IAEA,KAAK5I,KAAL,CAAW8hB,OAAE,CAAC7Y,QAAd,CAFA,IAGA,KAAKjJ,KAAL,CAAW8hB,OAAE,CAACnY,EAAd,CAJF,EAKE;AAKA,eAAO,IAAP;AACD;A;AACD,UAAI,KAAK3J,KAAL,CAAW8hB,OAAE,CAACnZ,MAAd,CAAJ,EAA2B;AACzB,aAAKub,IAAL;A;AACA,YAAI,KAAKlkB,KAAL,CAAW8hB,OAAE,CAAC3Y,KAAd,CAAJ,EAA0B;AAExB,iBAAO,IAAP;AACD;AACF;AACF;A;AACD,WAAO,KAAP;AACD;A;AAEDk2C,EAAAA,oCAAoC,CAClCL,WADkC,EAEd;AACpB,WAAO,KAAKoE,QAAL,CAAc,MAAM;AACzB,YAAMC,CAAqB,GAAG,KAAKvkC,SAAL,EAA9B;AACA,WAAK4O,MAAL,CAAYsxB,WAAZ;AAEA,YAAM7vC,IAAI,GAAG,KAAK2P,SAAL,EAAb;AAEA,YAAMs/B,OAAO,GAAG,CAAC,CAAC,KAAKhC,UAAL,CAChB,KAAKkH,2BAAL,CAAiCjH,IAAjC,CAAsC,IAAtC,CADgB,CAAlB;A;AAIA,UAAI+B,OAAO,IAAI,KAAKp+C,KAAL,CAAW8hB,OAAE,CAAC3V,KAAd,CAAf,EAAqC;AAGnC,YAAIo3C,iBAAiB,GAAG,KAAKxB,kCAAL,EAAxB;A;AAGA,YAAIwB,iBAAiB,CAAC/tD,IAAlB,KAA2B,YAA/B,EAA6C;AAC3C2Z,UAAAA,IAAI,CAAC+uC,aAAL,GAAsBqF,iBAAtB;AACAp0C,UAAAA,IAAI,CAACivC,OAAL,GAAe,IAAf;AACCjvC,UAAAA,IAAD,CAA0B4f,cAA1B,GAA2C,IAA3C;AACAw0B,UAAAA,iBAAiB,GAAG,KAAKtkC,UAAL,CAAgB9P,IAAhB,EAAsB,iBAAtB,CAApB;AACD,SALD,MAKO;AACL,eAAK0uB,0BAAL,CAAgC0lB,iBAAhC,EAAmDp0C,IAAnD;AACCo0C,UAAAA,iBAAD,CAAuCnF,OAAvC,GAAiD,IAAjD;AACD;A;AACDiF,QAAAA,CAAC,CAACt0B,cAAF,GAAmBw0B,iBAAnB;AACA,eAAO,KAAKtkC,UAAL,CAAgBokC,CAAhB,EAAmB,kBAAnB,CAAP;AACD;A;AAED,YAAMG,qBAAqB,GACzB,KAAK1H,cAAL,MACA,KAAKM,UAAL,CAAgB,KAAKqH,0BAAL,CAAgCpH,IAAhC,CAAqC,IAArC,CAAhB,CAFF;A;AAIA,UAAI,CAACmH,qBAAL,EAA4B;AAC1B,YAAI,CAACpF,OAAL,EAAc;AAEZ,iBAAO,KAAKD,qBAAL,CAA0C,KAA1C,EAAiDkF,CAAjD,CAAP;AACD;A;AAGDl0C,QAAAA,IAAI,CAAC+uC,aAAL,GAAqB,KAAK5vB,eAAL,EAArB;AACAnf,QAAAA,IAAI,CAACivC,OAAL,GAAeA,OAAf;AACCjvC,QAAAA,IAAD,CAA0B4f,cAA1B,GAA2C,IAA3C;AACAs0B,QAAAA,CAAC,CAACt0B,cAAF,GAAmB,KAAK9P,UAAL,CAAgB9P,IAAhB,EAAsB,iBAAtB,CAAnB;AACA,eAAO,KAAK8P,UAAL,CAAgBokC,CAAhB,EAAmB,kBAAnB,CAAP;AACD;A;AAGD,YAAM7tD,IAAI,GAAG,KAAK2oD,qBAAL,CAA0C,KAA1C,CAAb;AACAhvC,MAAAA,IAAI,CAAC+uC,aAAL,GAAqBsF,qBAArB;AACAr0C,MAAAA,IAAI,CAAC4f,cAAL,GAAsBv5B,IAAtB;AACA2Z,MAAAA,IAAI,CAACivC,OAAL,GAAeA,OAAf;AACAiF,MAAAA,CAAC,CAACt0B,cAAF,GAAmB,KAAK9P,UAAL,CAAgB9P,IAAhB,EAAsB,iBAAtB,CAAnB;AACA,aAAO,KAAK8P,UAAL,CAAgBokC,CAAhB,EAAmB,kBAAnB,CAAP;AACD,KAtDM,CAAP;AAuDD;A;AAEDK,EAAAA,uCAAuC,GAAwB;AAC7D,WAAO,KAAK1jD,KAAL,CAAW8hB,OAAE,CAAChZ,KAAd,IACH,KAAKu2C,oCAAL,CAA0Cv9B,OAAE,CAAChZ,KAA7C,CADG,GAEH1U,SAFJ;AAGD;A;AAEDyrD,EAAAA,wBAAwB,GAAwB;AAC9C,WAAO,KAAK7/C,KAAL,CAAW8hB,OAAE,CAAChZ,KAAd,IAAuB,KAAKq1C,qBAAL,EAAvB,GAAsD/pD,SAA7D;AACD;A;AAEDwsD,EAAAA,cAAc,GAAc;AAC1B,WAAO,KAAKjC,kBAAL,CAAwB78B,OAAE,CAAChZ,KAA3B,CAAP;AACD;A;AAED26C,EAAAA,0BAA0B,GAAkB;AAC1C,UAAMttD,EAAE,GAAG,KAAKm4B,eAAL,EAAX;A;AACA,QAAI,KAAKkB,YAAL,CAAkB,IAAlB,KAA2B,CAAC,KAAKjN,qBAAL,EAAhC,EAA8D;AAC5D,WAAK2B,IAAL;AACA,aAAO/tB,EAAP;AACD;AACF;A;AAEDmtD,EAAAA,2BAA2B,GAAY;AACrC,QACE,CAAC,KAAKtjD,KAAL,CAAW8hB,OAAE,CAAClkB,IAAd,CAAD,IACA,KAAKmR,KAAL,CAAWpT,KAAX,KAAqB,SADrB,IAEA,KAAK4mB,qBAAL,EAHF,EAIE;AACA,aAAO,KAAP;AACD;A;AACD,UAAM6wB,WAAW,GAAG,KAAKrkC,KAAL,CAAWqkC,WAA/B;AACA,SAAKlvB,IAAL;A;AACA,QAAI,CAAC,KAAKlkB,KAAL,CAAW8hB,OAAE,CAAClkB,IAAd,CAAD,IAAwB,CAAC,KAAKoC,KAAL,CAAW8hB,OAAE,CAAC3V,KAAd,CAA7B,EAAmD;AACjD,aAAO,KAAP;AACD;A;AAED,QAAIinC,WAAJ,EAAiB;AACf,WAAKz4B,KAAL,CACE,KAAK5L,KAAL,CAAWuL,YADb,EAEE0F,aAAM,CAACpM,0BAFT,EAGE,SAHF;AAKD;A;AAED,WAAO,IAAP;AACD;A;AAEDuqC,EAAAA,qBAAqB,CACnBwF,QAAQ,GAAG,IADQ,EAEnBN,CAAqB,GAAG,KAAKvkC,SAAL,EAFL,EAGC;AACpB,SAAKskC,QAAL,CAAc,MAAM;AAClB,UAAIO,QAAJ,EAAc,KAAKj2B,MAAL,CAAY5L,OAAE,CAAChZ,KAAf;AACdu6C,MAAAA,CAAC,CAACt0B,cAAF,GAAmB,KAAK4xB,WAAL,EAAnB;AACD,KAHD;AAIA,WAAO,KAAK1hC,UAAL,CAAgBokC,CAAhB,EAAmB,kBAAnB,CAAP;AACD;A;AAGD1C,EAAAA,WAAW,GAAa;AAEtBjI,IAAAA,MAAM,CAAC,KAAK3pC,KAAL,CAAW0e,MAAZ,CAAN;AACA,UAAMj4B,IAAI,GAAG,KAAKouD,yBAAL,EAAb;A;AACA,QAAI,KAAKrhC,qBAAL,MAAgC,CAAC,KAAKwL,GAAL,CAASjM,OAAE,CAACxV,QAAZ,CAArC,EAA4D;AAC1D,aAAO9W,IAAP;AACD;A;AACD,UAAM2Z,IAAyB,GAAG,KAAK4R,eAAL,CAAqBvrB,IAArB,CAAlC;AACA2Z,IAAAA,IAAI,CAAC00C,SAAL,GAAiBruD,IAAjB;AACA2Z,IAAAA,IAAI,CAAC20C,WAAL,GAAmB,KAAKF,yBAAL,EAAnB;AACA,SAAKl2B,MAAL,CAAY5L,OAAE,CAAC7Y,QAAf;AACAkG,IAAAA,IAAI,CAAC40C,QAAL,GAAgB,KAAKpD,WAAL,EAAhB;AACA,SAAKjzB,MAAL,CAAY5L,OAAE,CAAChZ,KAAf;AACAqG,IAAAA,IAAI,CAAC60C,SAAL,GAAiB,KAAKrD,WAAL,EAAjB;AACA,WAAO,KAAK1hC,UAAL,CAAgB9P,IAAhB,EAAsB,mBAAtB,CAAP;AACD;A;AAED80C,EAAAA,8BAA8B,GAAY;AACxC,WAAO,KAAKz0B,YAAL,CAAkB,UAAlB,KAAiC,KAAK4D,SAAL,GAAiB59B,IAAjB,KAA0BssB,OAAE,CAAC5V,IAArE;AACD;A;AAED03C,EAAAA,yBAAyB,GAAa;AACpC,QAAI,KAAKZ,uBAAL,EAAJ,EAAoC;AAClC,aAAO,KAAKvB,gCAAL,CAAsC,gBAAtC,CAAP;AACD;A;AACD,QAAI,KAAKzhD,KAAL,CAAW8hB,OAAE,CAAC5V,IAAd,CAAJ,EAAyB;AAEvB,aAAO,KAAKu1C,gCAAL,CAAsC,mBAAtC,CAAP;AACD,KAHD,MAGO,IAAI,KAAKwC,8BAAL,EAAJ,EAA2C;AAEhD,aAAO,KAAKxC,gCAAL,CACL,mBADK,EAEU,IAFV,CAAP;AAID;A;AACD,WAAO,KAAKsB,wBAAL,EAAP;AACD;A;AAEDmB,EAAAA,oBAAoB,GAAsB;AACxC,UAAM/0C,IAAuB,GAAG,KAAK2P,SAAL,EAAhC;A;AACA,UAAM/S,MAAM,GAAG,KAAK+yC,6BAAL,EAAf;A;AACA3vC,IAAAA,IAAI,CAAC4f,cAAL,GAAsBhjB,MAAM,IAAI,KAAKo4C,mBAAL,EAAhC;AACA,SAAKzxB,gBAAL,CAAsB,GAAtB;AACAvjB,IAAAA,IAAI,CAACuN,UAAL,GAAkB,KAAKylC,eAAL,EAAlB;AACA,WAAO,KAAKljC,UAAL,CAAgB9P,IAAhB,EAAsB,iBAAtB,CAAP;AACD;A;AAEDi1C,EAAAA,qBAAqB,CACnBC,UADmB,EAE8B;AACjD,UAAMC,aAAa,GAAG,KAAKv1C,KAAL,CAAWtS,KAAjC;AAEA,UAAM8nD,aAAa,GAAG,KAAKpH,oBAAL,CACpB,uBADoB,EAEpB,KAAKqH,kCAAL,CAAwCnI,IAAxC,CAA6C,IAA7C,CAFoB,CAAtB;A;AAKA,QAAI,CAACkI,aAAa,CAAC9tD,MAAnB,EAA2B;AACzB,WAAKkkB,KAAL,CAAW2pC,aAAX,EAA0B3L,QAAQ,CAACY,uBAAnC,EAA4D8K,UAA5D;AACD;A;AAED,WAAOE,aAAP;AACD;A;AAEDC,EAAAA,kCAAkC,GAAoC;AACpE,UAAMr1C,IAAqC,GAAG,KAAK2P,SAAL,EAA9C;AAGA3P,IAAAA,IAAI,CAACuN,UAAL,GAAkB,KAAKihC,iBAAL,CAAgD,KAAhD,CAAlB;A;AACA,QAAI,KAAKlvB,YAAL,CAAkB,GAAlB,CAAJ,EAA4B;AAC1Btf,MAAAA,IAAI,CAACgP,cAAL,GAAsB,KAAKy/B,oBAAL,EAAtB;AACD;A;AAED,WAAO,KAAK3+B,UAAL,CAAgB9P,IAAhB,EAAsB,+BAAtB,CAAP;AACD;A;AAEDs1C,EAAAA,2BAA2B,CACzBt1C,IADyB,EAEC;AAC1BA,IAAAA,IAAI,CAAChZ,EAAL,GAAU,KAAKm4B,eAAL,EAAV;AACA,SAAKwM,SAAL,CACE3rB,IAAI,CAAChZ,EADP,EAEE,kCAFF,EAGE0vB,iBAHF;AAKA1W,IAAAA,IAAI,CAACgP,cAAL,GAAsB,KAAKygC,wBAAL,EAAtB;A;AACA,QAAI,KAAK7wB,GAAL,CAASjM,OAAE,CAACxV,QAAZ,CAAJ,EAA2B;AACzB6C,MAAAA,IAAI,CAACyhB,OAAL,GAAe,KAAKwzB,qBAAL,CAA2B,SAA3B,CAAf;AACD;A;AACD,UAAM1sD,IAAuB,GAAG,KAAKonB,SAAL,EAAhC;AACApnB,IAAAA,IAAI,CAACA,IAAL,GAAY,KAAK0rD,QAAL,CAAc,KAAK/C,wBAAL,CAA8BhE,IAA9B,CAAmC,IAAnC,CAAd,CAAZ;AACAltC,IAAAA,IAAI,CAACzX,IAAL,GAAY,KAAKunB,UAAL,CAAgBvnB,IAAhB,EAAsB,iBAAtB,CAAZ;AACA,WAAO,KAAKunB,UAAL,CAAgB9P,IAAhB,EAAsB,wBAAtB,CAAP;AACD;A;AAEDu1C,EAAAA,2BAA2B,CACzBv1C,IADyB,EAEC;AAC1BA,IAAAA,IAAI,CAAChZ,EAAL,GAAU,KAAKm4B,eAAL,EAAV;AACA,SAAKwM,SAAL,CAAe3rB,IAAI,CAAChZ,EAApB,EAAwB,uBAAxB,EAAiD2vB,YAAjD;AAEA3W,IAAAA,IAAI,CAACgP,cAAL,GAAsB,KAAKygC,wBAAL,EAAtB;AACAzvC,IAAAA,IAAI,CAAC4f,cAAL,GAAsB,KAAKq0B,QAAL,CAAc,MAAM;AACxC,WAAK11B,MAAL,CAAY5L,OAAE,CAACnY,EAAf;A;AAEA,UACE,KAAK6lB,YAAL,CAAkB,WAAlB,KACA,KAAK4D,SAAL,GAAiB59B,IAAjB,KAA0BssB,OAAE,CAAC9Y,GAF/B,EAGE;AACA,cAAMmG,IAAqB,GAAG,KAAK2P,SAAL,EAA9B;AACA,aAAKoF,IAAL;AACA,eAAO,KAAKjF,UAAL,CAAgB9P,IAAhB,EAAsB,oBAAtB,CAAP;AACD;A;AAED,aAAO,KAAKwxC,WAAL,EAAP;AACD,KAbqB,CAAtB;AAeA,SAAK1xB,SAAL;AACA,WAAO,KAAKhQ,UAAL,CAAgB9P,IAAhB,EAAsB,wBAAtB,CAAP;AACD;A;AAEDw1C,EAAAA,aAAa,CAAI1pD,EAAJ,EAAoB;AAC/B,UAAM2pD,UAAU,GAAG,KAAK71C,KAAL,CAAWgT,OAA9B;AACA,SAAKhT,KAAL,CAAWgT,OAAX,GAAqB,CAAC6iC,UAAU,CAAC,CAAD,CAAX,CAArB;A;AACA,QAAI;AACF,aAAO3pD,EAAE,EAAT;AACD,KAFD,SAEU;AACR,WAAK8T,KAAL,CAAWgT,OAAX,GAAqB6iC,UAArB;AACD;AACF;A;AAODxB,EAAAA,QAAQ,CAAInoD,EAAJ,EAAoB;AAC1B,UAAMuyB,SAAS,GAAG,KAAKze,KAAL,CAAW0e,MAA7B;AACA,SAAK1e,KAAL,CAAW0e,MAAX,GAAoB,IAApB;A;AACA,QAAI;AACF,aAAOxyB,EAAE,EAAT;AACD,KAFD,SAEU;AACR,WAAK8T,KAAL,CAAW0e,MAAX,GAAoBD,SAApB;AACD;AACF;A;AAEDmxB,EAAAA,kBAAkB,CAACr3C,KAAD,EAAgD;AAChE,WAAO,CAAC,KAAKtH,KAAL,CAAWsH,KAAX,CAAD,GAAqBlT,SAArB,GAAiC,KAAK+vD,mBAAL,EAAxC;AACD;A;AAED3D,EAAAA,qBAAqB,CAACl5C,KAAD,EAA6B;AAChD,WAAO,KAAKu9C,iBAAL,CAAuB,MAAM,KAAKn3B,MAAL,CAAYpmB,KAAZ,CAA7B,CAAP;AACD;A;AAED68C,EAAAA,mBAAmB,GAAa;AAC9B,WAAO,KAAKU,iBAAL,CAAuB,MAAM,KAAK3gC,IAAL,EAA7B,CAAP;AACD;A;AAED2gC,EAAAA,iBAAiB,CAAC5pD,EAAD,EAA2B;AAC1C,WAAO,KAAKmoD,QAAL,CAAc,MAAM;AACzBnoD,MAAAA,EAAE;AACF,aAAO,KAAK0lD,WAAL,EAAP;AACD,KAHM,CAAP;AAID;A;AAEDmE,EAAAA,iBAAiB,GAAmB;AAClC,UAAM31C,IAAoB,GAAG,KAAK2P,SAAL,EAA7B;AAEA3P,IAAAA,IAAI,CAAChZ,EAAL,GAAU,KAAK6J,KAAL,CAAW8hB,OAAE,CAAC/hB,MAAd,IACN,KAAKgwB,aAAL,EADM,GAEN,KAAKzB,eAAL,CAAmC,IAAnC,CAFJ;A;AAGA,QAAI,KAAKP,GAAL,CAASjM,OAAE,CAACnY,EAAZ,CAAJ,EAAqB;AACnBwF,MAAAA,IAAI,CAAC41C,WAAL,GAAmB,KAAK7sB,uBAAL,EAAnB;AACD;A;AACD,WAAO,KAAKjZ,UAAL,CAAgB9P,IAAhB,EAAsB,cAAtB,CAAP;AACD;A;AAED61C,EAAAA,sBAAsB,CACpB71C,IADoB,EAEpBsoC,OAFoB,EAGC;AACrB,QAAIA,OAAJ,EAAatoC,IAAI,CAACqd,KAAL,GAAa,IAAb;AACbrd,IAAAA,IAAI,CAAChZ,EAAL,GAAU,KAAKm4B,eAAL,EAAV;AACA,SAAKwM,SAAL,CACE3rB,IAAI,CAAChZ,EADP,EAEE,6BAFF,EAGEshD,OAAO,GAAGtxB,kBAAH,GAAwBJ,YAHjC;AAMA,SAAK2H,MAAL,CAAY5L,OAAE,CAACzZ,MAAf;AACA8G,IAAAA,IAAI,CAACkyB,OAAL,GAAe,KAAK8b,oBAAL,CACb,aADa,EAEb,KAAK2H,iBAAL,CAAuBzI,IAAvB,CAA4B,IAA5B,CAFa,CAAf;AAIA,SAAK3uB,MAAL,CAAY5L,OAAE,CAACtZ,MAAf;AACA,WAAO,KAAKyW,UAAL,CAAgB9P,IAAhB,EAAsB,mBAAtB,CAAP;AACD;A;AAED81C,EAAAA,kBAAkB,GAAoB;AACpC,UAAM91C,IAAqB,GAAG,KAAK2P,SAAL,EAA9B;AACA,SAAKsJ,KAAL,CAAWF,KAAX,CAAiB/D,WAAjB;AAEA,SAAKuJ,MAAL,CAAY5L,OAAE,CAACzZ,MAAf;AAEA,SAAK68C,2BAAL,CACG/1C,IAAI,CAACzX,IAAL,GAAY,EADf,EAEmBtD,SAFnB,EAGiB,IAHjB,EAIY0tB,OAAE,CAACtZ,MAJf;AAMA,SAAK4f,KAAL,CAAWD,IAAX;AACA,WAAO,KAAKlJ,UAAL,CAAgB9P,IAAhB,EAAsB,eAAtB,CAAP;AACD;A;AAEDg2C,EAAAA,mCAAmC,CACjCh2C,IADiC,EAEjCi2C,MAAgB,GAAG,KAFc,EAGV;AACvBj2C,IAAAA,IAAI,CAAChZ,EAAL,GAAU,KAAKm4B,eAAL,EAAV;A;AAEA,QAAI,CAAC82B,MAAL,EAAa;AACX,WAAKtqB,SAAL,CACE3rB,IAAI,CAAChZ,EADP,EAEE,iCAFF,EAGEiwB,iBAHF;AAKD;A;AAED,QAAI,KAAK2H,GAAL,CAASjM,OAAE,CAAC9Y,GAAZ,CAAJ,EAAsB;AACpB,YAAMq8C,KAAK,GAAG,KAAKvmC,SAAL,EAAd;AACA,WAAKqmC,mCAAL,CAAyCE,KAAzC,EAAgD,IAAhD;AACAl2C,MAAAA,IAAI,CAACzX,IAAL,GAAY2tD,KAAZ;AACD,KAJD,MAIO;AACL,WAAKj9B,KAAL,CAAWF,KAAX,CAAiBtD,eAAjB;AACA,WAAK0gC,SAAL,CAAep9B,KAAf,CAAqByvB,KAArB;AACAxoC,MAAAA,IAAI,CAACzX,IAAL,GAAY,KAAKutD,kBAAL,EAAZ;AACA,WAAKK,SAAL,CAAen9B,IAAf;AACA,WAAKC,KAAL,CAAWD,IAAX;AACD;A;AACD,WAAO,KAAKlJ,UAAL,CAAgB9P,IAAhB,EAAsB,qBAAtB,CAAP;AACD;A;AAEDo2C,EAAAA,uCAAuC,CACrCp2C,IADqC,EAEd;AACvB,QAAI,KAAKqgB,YAAL,CAAkB,QAAlB,CAAJ,EAAiC;AAC/BrgB,MAAAA,IAAI,CAACtJ,MAAL,GAAc,IAAd;AACAsJ,MAAAA,IAAI,CAAChZ,EAAL,GAAU,KAAKm4B,eAAL,EAAV;AACD,KAHD,MAGO,IAAI,KAAKtuB,KAAL,CAAW8hB,OAAE,CAAC/hB,MAAd,CAAJ,EAA2B;AAChCoP,MAAAA,IAAI,CAAChZ,EAAL,GAAU,KAAK45B,aAAL,EAAV;AACD,KAFM,MAEA;AACL,WAAKF,UAAL;AACD;A;AACD,QAAI,KAAK7vB,KAAL,CAAW8hB,OAAE,CAACzZ,MAAd,CAAJ,EAA2B;AACzB,WAAK+f,KAAL,CAAWF,KAAX,CAAiBtD,eAAjB;AACA,WAAK0gC,SAAL,CAAep9B,KAAf,CAAqByvB,KAArB;AACAxoC,MAAAA,IAAI,CAACzX,IAAL,GAAY,KAAKutD,kBAAL,EAAZ;AACA,WAAKK,SAAL,CAAen9B,IAAf;AACA,WAAKC,KAAL,CAAWD,IAAX;AACD,KAND,MAMO;AACL,WAAK8G,SAAL;AACD;A;AAED,WAAO,KAAKhQ,UAAL,CAAgB9P,IAAhB,EAAsB,qBAAtB,CAAP;AACD;A;AAEDq2C,EAAAA,8BAA8B,CAC5Br2C,IAD4B,EAE5Bs2C,QAF4B,EAGC;AAC7Bt2C,IAAAA,IAAI,CAACs2C,QAAL,GAAgBA,QAAQ,IAAI,KAA5B;AACAt2C,IAAAA,IAAI,CAAChZ,EAAL,GAAU,KAAKm4B,eAAL,EAAV;AACA,SAAKwM,SAAL,CAAe3rB,IAAI,CAAChZ,EAApB,EAAwB,2BAAxB,EAAqDuvB,YAArD;AACA,SAAKgI,MAAL,CAAY5L,OAAE,CAACnY,EAAf;AACA,UAAM+7C,eAAe,GAAG,KAAKC,sBAAL,EAAxB;A;AACA,QACEx2C,IAAI,CAACkd,UAAL,KAAoB,MAApB,IACAq5B,eAAe,CAAClwD,IAAhB,KAAyB,2BAF3B,EAGE;AACA,WAAKmlB,KAAL,CAAW+qC,eAAe,CAACjpD,KAA3B,EAAkCk8C,QAAQ,CAACgB,wBAA3C;AACD;A;AACDxqC,IAAAA,IAAI,CAACu2C,eAAL,GAAuBA,eAAvB;AACA,SAAKz2B,SAAL;AACA,WAAO,KAAKhQ,UAAL,CAAgB9P,IAAhB,EAAsB,2BAAtB,CAAP;AACD;A;AAEDy2C,EAAAA,2BAA2B,GAAY;AACrC,WACE,KAAKp2B,YAAL,CAAkB,SAAlB,KACA,KAAK0yB,iBAAL,SAFF;AAID;A;AAEDyD,EAAAA,sBAAsB,GAAwB;AAC5C,WAAO,KAAKC,2BAAL,KACH,KAAKC,8BAAL,EADG,GAEH,KAAKlI,iBAAL,CAAgD,KAAhD,CAFJ;AAGD;A;AAEDkI,EAAAA,8BAA8B,GAAgC;AAC5D,UAAM12C,IAAiC,GAAG,KAAK2P,SAAL,EAA1C;AACA,SAAKgP,gBAAL,CAAsB,SAAtB;AACA,SAAKJ,MAAL,CAAY5L,OAAE,CAACpZ,MAAf;A;AACA,QAAI,CAAC,KAAK1I,KAAL,CAAW8hB,OAAE,CAAC/hB,MAAd,CAAL,EAA4B;AAC1B,YAAM,KAAK8vB,UAAL,EAAN;AACD;A;AAED1gB,IAAAA,IAAI,CAACuN,UAAL,GAAkB,KAAKqT,aAAL,EAAlB;AACA,SAAKrC,MAAL,CAAY5L,OAAE,CAACnZ,MAAf;AACA,WAAO,KAAKsW,UAAL,CAAgB9P,IAAhB,EAAsB,2BAAtB,CAAP;AACD;A;AAIDywC,EAAAA,WAAW,CAAIkG,CAAJ,EAAmB;AAC5B,UAAM/2C,KAAK,GAAG,KAAKA,KAAL,CAAWuoB,KAAX,EAAd;AACA,UAAMz6B,GAAG,GAAGipD,CAAC,EAAb;AACA,SAAK/2C,KAAL,GAAaA,KAAb;AACA,WAAOlS,GAAP;AACD;A;AAEDkpD,EAAAA,kBAAkB,CAAiBD,CAAjB,EAAiC;AACjD,UAAM3uB,MAAM,GAAG,KAAKC,QAAL,CAAcuG,KAAK,IAAImoB,CAAC,MAAMnoB,KAAK,EAAnC,CAAf;AAEA,QAAIxG,MAAM,CAAC4G,OAAP,IAAkB,CAAC5G,MAAM,CAAChoB,IAA9B,EAAoC,OAAO/a,SAAP;AACpC,QAAI+iC,MAAM,CAACjgC,KAAX,EAAkB,KAAK6X,KAAL,GAAaooB,MAAM,CAACE,SAApB;AAClB,WAAOF,MAAM,CAAChoB,IAAd;AACD;A;AAEDitC,EAAAA,UAAU,CAAI0J,CAAJ,EAAqB;AAC7B,UAAM/2C,KAAK,GAAG,KAAKA,KAAL,CAAWuoB,KAAX,EAAd;AACA,UAAMH,MAAM,GAAG2uB,CAAC,EAAhB;A;AACA,QAAI3uB,MAAM,KAAK/iC,SAAX,IAAwB+iC,MAAM,KAAK,KAAvC,EAA8C;AAC5C,aAAOA,MAAP;AACD,KAFD,MAEO;AACL,WAAKpoB,KAAL,GAAaA,KAAb;AACA,aAAO3a,SAAP;AACD;AACF;A;AAED4xD,EAAAA,iBAAiB,CAACC,IAAD,EAA4B;AAC3C,QAAI,KAAKzG,gBAAL,EAAJ,EAA6B;AAC3B;AACD;A;AACD,QAAI0G,SAAS,GAAG,KAAKn3C,KAAL,CAAWvZ,IAA3B;AACA,QAAIupB,IAAJ;A;AAEA,QAAI,KAAKyQ,YAAL,CAAkB,KAAlB,CAAJ,EAA8B;AAC5B02B,MAAAA,SAAS,GAAGpkC,OAAE,CAAChW,IAAf;AACAiT,MAAAA,IAAI,GAAG,KAAP;AACD;A;AAED,WAAO,KAAKonC,kBAAL,CAAwB,MAAM;AACnC,cAAQD,SAAR;AACE,aAAKpkC,OAAE,CAACtW,SAAR;AACEy6C,UAAAA,IAAI,CAACp0B,OAAL,GAAe,IAAf;AACA,iBAAO,KAAKu0B,sBAAL,CACLH,IADK,EAEO,KAFP,EAGqB,IAHrB,CAAP;A;AAKF,aAAKnkC,OAAE,CAACzV,MAAR;AAGE45C,UAAAA,IAAI,CAACp0B,OAAL,GAAe,IAAf;AACA,iBAAO,KAAKw0B,UAAL,CACLJ,IADK,EAEa,IAFb,EAGY,KAHZ,CAAP;A;AAKF,aAAKnkC,OAAE,CAAC/V,MAAR;AACE,cAAI,KAAK/L,KAAL,CAAW8hB,OAAE,CAAC/V,MAAd,KAAyB,KAAK0wB,qBAAL,CAA2B,MAA3B,CAA7B,EAAiE;AAE/D,iBAAK/O,MAAL,CAAY5L,OAAE,CAAC/V,MAAf;AACA,iBAAK+hB,gBAAL,CAAsB,MAAtB;AACA,mBAAO,KAAKk3B,sBAAL,CAA4BiB,IAA5B,EAAgD,IAAhD,CAAP;AACD;A;AAEH,aAAKnkC,OAAE,CAAChW,IAAR;AACEiT,UAAAA,IAAI,GAAGA,IAAI,IAAI,KAAKhQ,KAAL,CAAWpT,KAA1B;AACA,iBAAO,KAAK2qD,iBAAL,CAAuBL,IAAvB,EAA6BlnC,IAA7B,CAAP;A;AACF,aAAK+C,OAAE,CAAClkB,IAAR;AAAc;AACZ,kBAAMjC,KAAK,GAAG,KAAKoT,KAAL,CAAWpT,KAAzB;A;AACA,gBAAIA,KAAK,KAAK,QAAd,EAAwB;AACtB,qBAAO,KAAK4pD,uCAAL,CAA6CU,IAA7C,CAAP;AACD,aAFD,MAEO;AACL,qBAAO,KAAKM,kBAAL,CAAwBN,IAAxB,EAA8BtqD,KAA9B,EAAgD,IAAhD,CAAP;AACD;AACF;AAnCH;AAqCD,KAtCM,CAAP;AAuCD;A;AAGD6qD,EAAAA,2BAA2B,GAAmB;AAC5C,WAAO,KAAKD,kBAAL,CACL,KAAKznC,SAAL,EADK,EAEL,KAAK/P,KAAL,CAAWpT,KAFN,EAGM,IAHN,CAAP;AAKD;A;AAED8qD,EAAAA,0BAA0B,CAACt3C,IAAD,EAAY0nB,IAAZ,EAAgD;AACxE,YAAQA,IAAI,CAACj5B,IAAb;AACE,WAAK,SAAL;AAAgB;AACd,gBAAMuuB,WAAW,GAAG,KAAK65B,iBAAL,CAAuB72C,IAAvB,CAApB;A;AACA,cAAIgd,WAAJ,EAAiB;AACfA,YAAAA,WAAW,CAAC0F,OAAZ,GAAsB,IAAtB;AACA,mBAAO1F,WAAP;AACD;A;AACD;AACD;A;AACD,WAAK,QAAL;AAGE,YAAI,KAAKnsB,KAAL,CAAW8hB,OAAE,CAACzZ,MAAd,CAAJ,EAA2B;AACzB,eAAK+f,KAAL,CAAWF,KAAX,CAAiBtD,eAAjB;AACA,eAAK0gC,SAAL,CAAep9B,KAAf,CAAqByvB,KAArB;AACA,gBAAM+O,GAA0B,GAAGv3C,IAAnC;AACAu3C,UAAAA,GAAG,CAAC7gD,MAAJ,GAAa,IAAb;AACA6gD,UAAAA,GAAG,CAACvwD,EAAJ,GAAS0gC,IAAT;AACA6vB,UAAAA,GAAG,CAAChvD,IAAJ,GAAW,KAAKutD,kBAAL,EAAX;AACA,eAAK78B,KAAL,CAAWD,IAAX;AACA,eAAKm9B,SAAL,CAAen9B,IAAf;AACA,iBAAO,KAAKlJ,UAAL,CAAgBynC,GAAhB,EAAqB,qBAArB,CAAP;AACD;A;AACD;A;AAEF;AACE,eAAO,KAAKH,kBAAL,CAAwBp3C,IAAxB,EAA8B0nB,IAAI,CAACj5B,IAAnC,EAAoD,KAApD,CAAP;AA1BJ;AA4BD;A;AAGD2oD,EAAAA,kBAAkB,CAChBp3C,IADgB,EAEhBxT,KAFgB,EAGhBuoB,IAHgB,EAIA;AAEhB,YAAQvoB,KAAR;AACE,WAAK,UAAL;AACE,YACE,KAAKgrD,qBAAL,CAA2BziC,IAA3B,MACC,KAAKlkB,KAAL,CAAW8hB,OAAE,CAACzV,MAAd,KAAyB,KAAKrM,KAAL,CAAW8hB,OAAE,CAAClkB,IAAd,CAD1B,CADF,EAGE;AACA,iBAAO,KAAKgpD,0BAAL,CAAgCz3C,IAAhC,CAAP;AACD;A;AACD;A;AAEF,WAAK,MAAL;AACE,YAAI+U,IAAI,IAAI,KAAKlkB,KAAL,CAAW8hB,OAAE,CAAClkB,IAAd,CAAZ,EAAiC;AAC/B,cAAIsmB,IAAJ,EAAU,KAAKA,IAAL;AACV,iBAAO,KAAK8gC,sBAAL,CAA4B71C,IAA5B,EAAgD,KAAhD,CAAP;AACD;A;AACD;A;AAEF,WAAK,WAAL;AACE,YAAI,KAAKw3C,qBAAL,CAA2BziC,IAA3B,KAAoC,KAAKlkB,KAAL,CAAW8hB,OAAE,CAAClkB,IAAd,CAAxC,EAA6D;AAC3D,iBAAO,KAAK6mD,2BAAL,CAAiCt1C,IAAjC,CAAP;AACD;A;AACD;A;AAEF,WAAK,QAAL;AACE,YAAI,KAAKw3C,qBAAL,CAA2BziC,IAA3B,CAAJ,EAAsC;AACpC,cAAI,KAAKlkB,KAAL,CAAW8hB,OAAE,CAAC/hB,MAAd,CAAJ,EAA2B;AACzB,mBAAO,KAAKwlD,uCAAL,CAA6Cp2C,IAA7C,CAAP;AACD,WAFD,MAEO,IAAI,KAAKnP,KAAL,CAAW8hB,OAAE,CAAClkB,IAAd,CAAJ,EAAyB;AAC9B,mBAAO,KAAKunD,mCAAL,CAAyCh2C,IAAzC,CAAP;AACD;AACF;A;AACD;A;AAEF,WAAK,WAAL;AACE,YAAI,KAAKw3C,qBAAL,CAA2BziC,IAA3B,KAAoC,KAAKlkB,KAAL,CAAW8hB,OAAE,CAAClkB,IAAd,CAAxC,EAA6D;AAC3D,iBAAO,KAAKunD,mCAAL,CAAyCh2C,IAAzC,CAAP;AACD;A;AACD;A;AAEF,WAAK,MAAL;AACE,YAAI,KAAKw3C,qBAAL,CAA2BziC,IAA3B,KAAoC,KAAKlkB,KAAL,CAAW8hB,OAAE,CAAClkB,IAAd,CAAxC,EAA6D;AAC3D,iBAAO,KAAK8mD,2BAAL,CAAiCv1C,IAAjC,CAAP;AACD;A;AACD;AA3CJ;AA6CD;A;AAEDw3C,EAAAA,qBAAqB,CAACziC,IAAD,EAAgB;AACnC,QAAIA,IAAJ,EAAU;AACR,UAAI,KAAK2iC,qBAAL,EAAJ,EAAkC,OAAO,KAAP;AAClC,WAAK3iC,IAAL;AACA,aAAO,IAAP;AACD;A;AACD,WAAO,CAAC,KAAKs7B,gBAAL,EAAR;AACD;A;AAEDsH,EAAAA,mCAAmC,CACjCnnC,QADiC,EAEjCtF,QAFiC,EAGL;AAC5B,QAAI,CAAC,KAAKoU,YAAL,CAAkB,GAAlB,CAAL,EAA6B;AAC3B,aAAOr6B,SAAP;AACD;A;AAED,UAAM2yD,yBAAyB,GAAG,KAAKh4C,KAAL,CAAW8rB,sBAA7C;AACA,SAAK9rB,KAAL,CAAW8rB,sBAAX,GAAoC,IAApC;AAEA,UAAMh+B,GAA+B,GAAG,KAAKkpD,kBAAL,CAAwB,MAAM;AACpE,YAAM52C,IAA+B,GAAG,KAAKsN,WAAL,CACtCkD,QADsC,EAEtCtF,QAFsC,CAAxC;AAIAlL,MAAAA,IAAI,CAACgP,cAAL,GAAsB,KAAK0gC,qBAAL,EAAtB;AAEA,YAAM5hB,mBAAN,CAA0B9tB,IAA1B;AACAA,MAAAA,IAAI,CAAC2f,UAAL,GAAkB,KAAK40B,uCAAL,EAAlB;AACA,WAAKh2B,MAAL,CAAY5L,OAAE,CAAC3Y,KAAf;AACA,aAAOgG,IAAP;AACD,KAXuC,CAAxC;AAaA,SAAKJ,KAAL,CAAW8rB,sBAAX,GAAoCksB,yBAApC;A;AAEA,QAAI,CAAClqD,GAAL,EAAU;AACR,aAAOzI,SAAP;AACD;A;AAED,WAAO,KAAK6qC,oBAAL,CACLpiC,GADK,EAEwB,IAFxB,EAGO,IAHP,CAAP;AAKD;A;AAED+gD,EAAAA,oBAAoB,GAAmC;AACrD,UAAMzuC,IAAI,GAAG,KAAK2P,SAAL,EAAb;AACA3P,IAAAA,IAAI,CAACyL,MAAL,GAAc,KAAKwoC,QAAL,CAAc,MAE1B,KAAKuB,aAAL,CAAmB,MAAM;AACvB,WAAKjyB,gBAAL,CAAsB,GAAtB;AACA,aAAO,KAAKyqB,oBAAL,CACL,2BADK,EAEL,KAAKwD,WAAL,CAAiBtE,IAAjB,CAAsB,IAAtB,CAFK,CAAP;AAID,KAND,CAFY,CAAd;A;AAUA,QAAIltC,IAAI,CAACyL,MAAL,CAAYnkB,MAAZ,KAAuB,CAA3B,EAA8B;AAC5B,WAAKkkB,KAAL,CAAWxL,IAAI,CAAC1S,KAAhB,EAAuBk8C,QAAQ,CAACa,kBAAhC;AACD;A;AAGD,SAAKzqC,KAAL,CAAWiT,WAAX,GAAyB,KAAzB;AACA,SAAK0Q,gBAAL,CAAsB,GAAtB;AACA,WAAO,KAAKzT,UAAL,CAAgB9P,IAAhB,EAAsB,8BAAtB,CAAP;AACD;A;AAED63C,EAAAA,oBAAoB,GAAY;AAC9B,QAAI,KAAKhnD,KAAL,CAAW8hB,OAAE,CAAClkB,IAAd,CAAJ,EAAyB;AACvB,cAAQ,KAAKmR,KAAL,CAAWpT,KAAnB;AACE,aAAK,UAAL;AACA,aAAK,SAAL;AACA,aAAK,MAAL;AACA,aAAK,WAAL;AACA,aAAK,QAAL;AACA,aAAK,WAAL;AACA,aAAK,MAAL;AACE,iBAAO,IAAP;AARJ;AAUD;A;AAED,WAAO,KAAP;AACD;A;AAMDo7B,EAAAA,wBAAwB,GAAY;AAClC,QAAI,KAAKiwB,oBAAL,EAAJ,EAAiC,OAAO,KAAP;AACjC,WAAO,MAAMjwB,wBAAN,EAAP;AACD;A;AAEDkwB,EAAAA,uBAAuB,CACrB/pB,cADqB,EAErBgqB,UAFqB,EAGc;AAEnC,UAAMvnC,QAAQ,GAAG,KAAK5Q,KAAL,CAAWtS,KAA5B;AACA,UAAM4d,QAAQ,GAAG,KAAKtL,KAAL,CAAWsL,QAA5B;AAEA,QAAI0iC,aAAJ;AACA,QAAIgD,QAAQ,GAAG,KAAf;A;AACA,QAAI7iB,cAAc,KAAK9oC,SAAvB,EAAkC;AAChC2oD,MAAAA,aAAa,GAAG,KAAKoK,mBAAL,EAAhB;AACApH,MAAAA,QAAQ,GAAG,CAAC,CAAC,KAAK7D,eAAL,CAAqB,CAAC,UAAD,CAArB,CAAb;A;AACA,UAAIhf,cAAc,KAAK,KAAnB,KAA6B6f,aAAa,IAAIgD,QAA9C,CAAJ,EAA6D;AAC3D,aAAKplC,KAAL,CAAWgF,QAAX,EAAqBg5B,QAAQ,CAACyC,2BAA9B;AACD;AACF;A;AAED,UAAMvf,IAAI,GAAG,KAAKD,iBAAL,EAAb;AACA,SAAKD,4BAAL,CAAkCE,IAAlC;AACA,UAAMurB,GAAG,GAAG,KAAKxrB,iBAAL,CAAuBC,IAAI,CAACp/B,KAA5B,EAAmCo/B,IAAI,CAAC/sB,GAAL,CAASrS,KAA5C,EAAmDo/B,IAAnD,CAAZ;A;AACA,QAAIkhB,aAAa,IAAIgD,QAArB,EAA+B;AAC7B,YAAMsH,EAAyB,GAAG,KAAK5qC,WAAL,CAAiBkD,QAAjB,EAA2BtF,QAA3B,CAAlC;A;AACA,UAAI6sC,UAAU,CAACzwD,MAAf,EAAuB;AACrB4wD,QAAAA,EAAE,CAACH,UAAH,GAAgBA,UAAhB;AACD;A;AACD,UAAInK,aAAJ,EAAmBsK,EAAE,CAACtK,aAAH,GAAmBA,aAAnB;AACnB,UAAIgD,QAAJ,EAAcsH,EAAE,CAACtH,QAAH,GAAcA,QAAd;A;AACd,UAAIqH,GAAG,CAAC5xD,IAAJ,KAAa,YAAb,IAA6B4xD,GAAG,CAAC5xD,IAAJ,KAAa,mBAA9C,EAAmE;AACjE,aAAKmlB,KAAL,CAAW0sC,EAAE,CAAC5qD,KAAd,EAAqBk8C,QAAQ,CAAC8C,gCAA9B;AACD;A;AACD4L,MAAAA,EAAE,CAACC,SAAH,GAAiBF,GAAjB;AACA,aAAO,KAAKnoC,UAAL,CAAgBooC,EAAhB,EAAoB,qBAApB,CAAP;AACD;A;AAED,QAAIH,UAAU,CAACzwD,MAAf,EAAuB;AACrBolC,MAAAA,IAAI,CAACqrB,UAAL,GAAkBA,UAAlB;AACD;A;AAED,WAAOE,GAAP;AACD;A;AAED5wB,EAAAA,0BAA0B,CACxBrnB,IADwB,EAExB3Z,IAFwB,EAGxBkpB,QAAkB,GAAG,KAHG,EAIlB;AACN,QAAI,KAAK1e,KAAL,CAAW8hB,OAAE,CAAChZ,KAAd,CAAJ,EAA0B;AACxBqG,MAAAA,IAAI,CAAC2f,UAAL,GAAkB,KAAKuwB,oCAAL,CAA0Cv9B,OAAE,CAAChZ,KAA7C,CAAlB;AACD;A;AAED,UAAMy+C,YAAY,GAChB/xD,IAAI,KAAK,qBAAT,GACI,mBADJ,GAEIA,IAAI,KAAK,aAAT,GACA,iBADA,GAEApB,SALN;A;AAMA,QAAImzD,YAAY,IAAI,CAAC,KAAKvnD,KAAL,CAAW8hB,OAAE,CAACzZ,MAAd,CAAjB,IAA0C,KAAKm3C,gBAAL,EAA9C,EAAuE;AACrE,WAAKvgC,UAAL,CAAgB9P,IAAhB,EAAsBo4C,YAAtB;AACA;AACD;A;AACD,QAAIA,YAAY,KAAK,mBAAjB,IAAwC,KAAKx4C,KAAL,CAAW0jC,gBAAvD,EAAyE;AACvE,WAAK93B,KAAL,CAAWxL,IAAI,CAAC1S,KAAhB,EAAuBk8C,QAAQ,CAACS,gCAAhC;A;AACA,UAEEjqC,IAAI,CAAC0iB,OAFP,EAGE;AACA,cAAM2E,0BAAN,CAAiCrnB,IAAjC,EAAuCo4C,YAAvC,EAAqD7oC,QAArD;AACA;AACD;AACF;A;AAED,UAAM8X,0BAAN,CAAiCrnB,IAAjC,EAAuC3Z,IAAvC,EAA6CkpB,QAA7C;AACD;A;AAED8oC,EAAAA,2BAA2B,CAACr4C,IAAD,EAAyB;AAClD,QAAI,CAACA,IAAI,CAACzX,IAAN,IAAcyX,IAAI,CAAChZ,EAAvB,EAA2B;AAGzB,WAAK2kC,SAAL,CAAe3rB,IAAI,CAAChZ,EAApB,EAAwB,eAAxB,EAAyC6vB,eAAzC;AACD,KAJD,MAIO;AACL,YAAMwhC,2BAAN,CAAkC,GAAGv3C,SAArC;AACD;AACF;A;AAEDw3C,EAAAA,0BAA0B,CAACC,KAAD,EAAuC;AAC/DA,IAAAA,KAAK,CAAC3xD,OAAN,CAAcoZ,IAAI,IAAI;AACpB,UAAI,CAAAA,IAAI,QAAJ,YAAAA,IAAI,CAAE3Z,IAAN,MAAe,sBAAnB,EAA2C;AACzC,aAAKmlB,KAAL,CACExL,IAAI,CAAC4f,cAAL,CAAoBtyB,KADtB,EAEEk8C,QAAQ,CAAC2C,wBAFX;AAID;AACF,KAPD;AAQD;A;AAED/gB,EAAAA,gBAAgB,CACdF,QADc,EAEdstB,UAFc,EAGiB;AAK/B,SAAKF,0BAAL,CAAgCptB,QAAhC;AACA,WAAOA,QAAP;AACD;A;AAEDI,EAAAA,cAAc,CAAC,GAAG/c,IAAJ,EAAiD;AAC7D,UAAMvO,IAAI,GAAG,MAAMsrB,cAAN,CAAqB,GAAG/c,IAAxB,CAAb;A;AAEA,QAAIvO,IAAI,CAAC3Z,IAAL,KAAc,iBAAlB,EAAqC;AACnC,WAAKiyD,0BAAL,CAAgCt4C,IAAI,CAACC,QAArC;AACD;A;AAED,WAAOD,IAAP;AACD;A;AAEDsR,EAAAA,cAAc,CACZC,IADY,EAEZf,QAFY,EAGZtF,QAHY,EAIZsG,OAJY,EAKZ5R,KALY,EAME;AACd,QAAI,CAAC,KAAKwT,qBAAL,EAAD,IAAiC,KAAKviB,KAAL,CAAW8hB,OAAE,CAACjY,IAAd,CAArC,EAA0D;AACxD,WAAKkF,KAAL,CAAWiT,WAAX,GAAyB,KAAzB;AACA,WAAKkC,IAAL;AAEA,YAAM0jC,iBAAwC,GAAG,KAAKnrC,WAAL,CAC/CkD,QAD+C,EAE/CtF,QAF+C,CAAjD;AAIAutC,MAAAA,iBAAiB,CAAClrC,UAAlB,GAA+BgE,IAA/B;AACA,aAAO,KAAKzB,UAAL,CAAgB2oC,iBAAhB,EAAmC,qBAAnC,CAAP;AACD;A;AAED,QAAI,KAAKn5B,YAAL,CAAkB,GAAlB,CAAJ,EAA4B;AAI1B,YAAM0I,MAAM,GAAG,KAAK4uB,kBAAL,CAAwB,MAAM;AAC3C,YAAI,CAACplC,OAAD,IAAY,KAAKknC,oBAAL,CAA0BnnC,IAA1B,CAAhB,EAAiD;AAG/C,gBAAMonC,YAAY,GAAG,KAAKhB,mCAAL,CACnBnnC,QADmB,EAEnBtF,QAFmB,CAArB;A;AAIA,cAAIytC,YAAJ,EAAkB;AAChB,mBAAOA,YAAP;AACD;AACF;A;AAED,cAAM34C,IAAsB,GAAG,KAAKsN,WAAL,CAAiBkD,QAAjB,EAA2BtF,QAA3B,CAA/B;AACAlL,QAAAA,IAAI,CAACgR,MAAL,GAAcO,IAAd;AAEA,cAAMoe,aAAa,GAAG,KAAK8e,oBAAL,EAAtB;A;AAEA,YAAI9e,aAAJ,EAAmB;AACjB,cAAI,CAACne,OAAD,IAAY,KAAKoN,GAAL,CAASjM,OAAE,CAACpZ,MAAZ,CAAhB,EAAqC;AAGnCyG,YAAAA,IAAI,CAACc,SAAL,GAAiB,KAAKyuB,4BAAL,CACf5c,OAAE,CAACnZ,MADY,EAEK,KAFL,CAAjB;AAMA,iBAAK8+C,0BAAL,CAAgCt4C,IAAI,CAACc,SAArC;AAEAd,YAAAA,IAAI,CAACgP,cAAL,GAAsB2gB,aAAtB;A;AACA,gBAAI/vB,KAAK,CAAC6R,mBAAV,EAA+B;AAE7BzR,cAAAA,IAAI,CAAC+Q,QAAL,GAAgB,KAAhB;AACD;A;AACD,mBAAO,KAAKD,oBAAL,CAA0B9Q,IAA1B,EAAgCJ,KAAK,CAAC6R,mBAAtC,CAAP;AACD,WAjBD,MAiBO,IAAI,KAAK5gB,KAAL,CAAW8hB,OAAE,CAACxY,SAAd,CAAJ,EAA8B;AACnC,kBAAM6tB,MAAM,GAAG,KAAK4wB,6BAAL,CACbrnC,IADa,EAEbf,QAFa,EAGbtF,QAHa,EAIbtL,KAJa,CAAf;AAMAooB,YAAAA,MAAM,CAAChZ,cAAP,GAAwB2gB,aAAxB;AACA,mBAAO3H,MAAP;AACD;AACF;A;AAED,aAAKtH,UAAL;AACD,OAjDc,CAAf;AAmDA,UAAIsH,MAAJ,EAAY,OAAOA,MAAP;AACb;A;AAED,WAAO,MAAM1W,cAAN,CAAqBC,IAArB,EAA2Bf,QAA3B,EAAqCtF,QAArC,EAA+CsG,OAA/C,EAAwD5R,KAAxD,CAAP;AACD;A;AAEDgwB,EAAAA,iBAAiB,CAAC5vB,IAAD,EAA8B;AAC7C,QAAI,KAAKsf,YAAL,CAAkB,GAAlB,CAAJ,EAA4B;AAG1B,YAAMtQ,cAAc,GAAG,KAAK4nC,kBAAL,CAAwB,MAAM;AACnD,cAAMroC,IAAI,GAAG,KAAKkgC,oBAAL,EAAb;AACA,YAAI,CAAC,KAAK59C,KAAL,CAAW8hB,OAAE,CAACpZ,MAAd,CAAL,EAA4B,KAAKmnB,UAAL;AAC5B,eAAOnS,IAAP;AACD,OAJsB,CAAvB;A;AAKA,UAAIS,cAAJ,EAAoB;AAClBhP,QAAAA,IAAI,CAACgP,cAAL,GAAsBA,cAAtB;AACD;AACF;A;AAED,UAAM4gB,iBAAN,CAAwB5vB,IAAxB;AACD;A;AAED64C,EAAAA,WAAW,CACTnsB,IADS,EAETosB,YAFS,EAGTC,YAHS,EAITC,OAJS,EAKT;AACA,QACE3P,OAAO,CAAC12B,OAAE,CAAClV,GAAH,CAAO5F,KAAR,CAAP,GAAwBmhD,OAAxB,IACA,CAAC,KAAK5lC,qBAAL,EADD,IAEA,KAAKiN,YAAL,CAAkB,IAAlB,CAHF,EAIE;AACA,YAAMrgB,IAAsB,GAAG,KAAKsN,WAAL,CAC7BwrC,YAD6B,EAE7BC,YAF6B,CAA/B;AAIA/4C,MAAAA,IAAI,CAACuN,UAAL,GAAkBmf,IAAlB;A;AACA,YAAM9vB,MAAM,GAAG,KAAK+yC,6BAAL,EAAf;A;AACA,UAAI/yC,MAAJ,EAAY;AACVoD,QAAAA,IAAI,CAAC4f,cAAL,GAAsBhjB,MAAtB;AACD,OAFD,MAEO;AACLoD,QAAAA,IAAI,CAAC4f,cAAL,GAAsB,KAAKo1B,mBAAL,EAAtB;AACD;A;AACD,WAAKllC,UAAL,CAAgB9P,IAAhB,EAAsB,gBAAtB;AAEA,WAAKi5C,YAAL;AACA,aAAO,KAAKJ,WAAL,CAAiB74C,IAAjB,EAAuB84C,YAAvB,EAAqCC,YAArC,EAAmDC,OAAnD,CAAP;AACD;A;AAED,WAAO,MAAMH,WAAN,CAAkBnsB,IAAlB,EAAwBosB,YAAxB,EAAsCC,YAAtC,EAAoDC,OAApD,CAAP;AACD;A;AAEDprB,EAAAA,iBAAiB,CACfrZ,IADe,EAEfrJ,QAFe,EAGfguC,aAHe,EAKfnuB,SALe,EAMT;A;AAeRouB,EAAAA,qBAAqB,GAAG;A;AAExBr4B,EAAAA,WAAW,CAAC9gB,IAAD,EAA4B;AACrCA,IAAAA,IAAI,CAACkd,UAAL,GAAkB,OAAlB;A;AACA,QAAI,KAAKrsB,KAAL,CAAW8hB,OAAE,CAAClkB,IAAd,KAAuB,KAAKoC,KAAL,CAAW8hB,OAAE,CAACnX,IAAd,CAAvB,IAA8C,KAAK3K,KAAL,CAAW8hB,OAAE,CAACzZ,MAAd,CAAlD,EAAyE;AACvE,UAAIkgD,KAAK,GAAG,KAAKn1B,SAAL,EAAZ;A;AAEA,UACE,KAAK5D,YAAL,CAAkB,MAAlB,KAEA+4B,KAAK,CAAC/yD,IAAN,KAAessB,OAAE,CAAClZ,KAFlB,IAIA,EAAE2/C,KAAK,CAAC/yD,IAAN,KAAessB,OAAE,CAAClkB,IAAlB,IAA0B2qD,KAAK,CAAC5sD,KAAN,KAAgB,MAA5C,CAJA,IAMA4sD,KAAK,CAAC/yD,IAAN,KAAessB,OAAE,CAACnY,EAPpB,EAQE;AACAwF,QAAAA,IAAI,CAACkd,UAAL,GAAkB,MAAlB;AACA,aAAKnI,IAAL;AACAqkC,QAAAA,KAAK,GAAG,KAAKn1B,SAAL,EAAR;AACD;A;AAED,UAAI,KAAKpzB,KAAL,CAAW8hB,OAAE,CAAClkB,IAAd,KAAuB2qD,KAAK,CAAC/yD,IAAN,KAAessB,OAAE,CAACnY,EAA7C,EAAiD;AAC/C,eAAO,KAAK67C,8BAAL,CAAoCr2C,IAApC,CAAP;AACD;AACF;A;AAED,UAAMq5C,UAAU,GAAG,MAAMv4B,WAAN,CAAkB9gB,IAAlB,CAAnB;A;AAKA,QACEq5C,UAAU,CAACn8B,UAAX,KAA0B,MAA1B,IACAm8B,UAAU,CAAChoC,UAAX,CAAsB/pB,MAAtB,GAA+B,CAD/B,IAEA+xD,UAAU,CAAChoC,UAAX,CAAsB,CAAtB,EAAyBhrB,IAAzB,KAAkC,wBAHpC,EAIE;AACA,WAAKmlB,KAAL,CACE6tC,UAAU,CAAC/rD,KADb,EAEEk8C,QAAQ,CAACwC,sCAFX;AAID;A;AAED,WAAOqN,UAAP;AACD;A;AAEDloC,EAAAA,WAAW,CAACnR,IAAD,EAA4B;AACrC,QAAI,KAAKnP,KAAL,CAAW8hB,OAAE,CAACtV,OAAd,CAAJ,EAA4B;AAE1B,WAAK0X,IAAL;A;AACA,UACE,KAAKsL,YAAL,CAAkB,MAAlB,KACA,KAAK0yB,iBAAL,SAFF,EAGE;AACA/yC,QAAAA,IAAI,CAACkd,UAAL,GAAkB,MAAlB;AACA,aAAKnI,IAAL;AACD,OAND,MAMO;AACL/U,QAAAA,IAAI,CAACkd,UAAL,GAAkB,OAAlB;AACD;A;AACD,aAAO,KAAKm5B,8BAAL,CAAoCr2C,IAApC,EAAyD,IAAzD,CAAP;AACD,KAbD,MAaO,IAAI,KAAK4e,GAAL,CAASjM,OAAE,CAACnY,EAAZ,CAAJ,EAAqB;AAE1B,YAAM5G,MAA4B,GAAGoM,IAArC;AACApM,MAAAA,MAAM,CAAC2Z,UAAP,GAAoB,KAAKsR,eAAL,EAApB;AACA,WAAKiB,SAAL;AACA,aAAO,KAAKhQ,UAAL,CAAgBlc,MAAhB,EAAwB,oBAAxB,CAAP;AACD,KANM,MAMA,IAAI,KAAKssB,aAAL,CAAmB,IAAnB,CAAJ,EAA8B;AAEnC,YAAMyJ,IAAoC,GAAG3pB,IAA7C;AAEA,WAAK2e,gBAAL,CAAsB,WAAtB;AACAgL,MAAAA,IAAI,CAAC3iC,EAAL,GAAU,KAAKm4B,eAAL,EAAV;AACA,WAAKW,SAAL;AACA,aAAO,KAAKhQ,UAAL,CAAgB6Z,IAAhB,EAAsB,8BAAtB,CAAP;AACD,KARM,MAQA;AACL,UAAI,KAAKtJ,YAAL,CAAkB,MAAlB,KAA6B,KAAK4D,SAAL,GAAiB59B,IAAjB,KAA0BssB,OAAE,CAACzZ,MAA9D,EAAsE;AACpE,aAAK6b,IAAL;AACA/U,QAAAA,IAAI,CAACmhB,UAAL,GAAkB,MAAlB;AACD,OAHD,MAGO;AACLnhB,QAAAA,IAAI,CAACmhB,UAAL,GAAkB,OAAlB;AACD;A;AAED,aAAO,MAAMhQ,WAAN,CAAkBnR,IAAlB,CAAP;AACD;AACF;A;AAEDs5C,EAAAA,eAAe,GAAY;AACzB,WACE,KAAKj5B,YAAL,CAAkB,UAAlB,KAAiC,KAAK4D,SAAL,GAAiB59B,IAAjB,KAA0BssB,OAAE,CAACzV,MADhE;AAGD;A;AAED2qB,EAAAA,4BAA4B,GAAiC;AAC3D,QAAI,KAAKyxB,eAAL,EAAJ,EAA4B;AAC1B,YAAMC,GAAG,GAAG,KAAK5pC,SAAL,EAAZ;AACA,WAAKoF,IAAL;AACAwkC,MAAAA,GAAG,CAAChH,QAAJ,GAAe,IAAf;AACA,WAAK2E,UAAL,CAAgBqC,GAAhB,EAAqB,IAArB,EAA2B,IAA3B;AACA,aAAOA,GAAP;AACD;A;AAID,QAAI,KAAK35C,KAAL,CAAWpT,KAAX,KAAqB,WAAzB,EAAsC;AACpC,YAAMw7B,MAAM,GAAG,KAAKovB,kBAAL,CACb,KAAKznC,SAAL,EADa,EAEb,KAAK/P,KAAL,CAAWpT,KAFE,EAGb,IAHa,CAAf;AAMA,UAAIw7B,MAAJ,EAAY,OAAOA,MAAP;AACb;A;AAED,WAAO,MAAMH,4BAAN,EAAP;AACD;A;AAED2xB,EAAAA,qBAAqB,CAAC5mC,OAAD,EAAmB2U,QAAnB,EAAoD;AACvE,QAAI,KAAK3nB,KAAL,CAAWvZ,IAAX,KAAoBssB,OAAE,CAAC/V,MAA3B,EAAmC;AACjC,YAAMw8C,KAAK,GAAG,KAAKn1B,SAAL,EAAd;A;AACA,UAAIm1B,KAAK,CAAC/yD,IAAN,KAAessB,OAAE,CAAClkB,IAAlB,IAA0B2qD,KAAK,CAAC5sD,KAAN,KAAgB,MAA9C,EAAsD;AACpD,cAAMwT,IAAyB,GAAG,KAAK2P,SAAL,EAAlC;AACA,aAAK4O,MAAL,CAAY5L,OAAE,CAAC/V,MAAf;AACA,aAAK+hB,gBAAL,CAAsB,MAAtB;AACA,eAAO,KAAKk3B,sBAAL,CAA4B71C,IAA5B,EAAgD,IAAhD,CAAP;AACD;AACF;A;AACD,WAAO,MAAMw5C,qBAAN,CAA4B5mC,OAA5B,EAAqC2U,QAArC,CAAP;AACD;A;AAEDywB,EAAAA,mBAAmB,GAAqB;AACtC,WAAO,KAAKjL,eAAL,CAAqB,CAAC,QAAD,EAAW,WAAX,EAAwB,SAAxB,CAArB,CAAP;AACD;A;AAED0M,EAAAA,kBAAkB,CAAClvB,MAAD,EAAcmvB,SAAd,EAAgD;AAChE,WAAOA,SAAS,CAAC9tD,IAAV,CAAe8gD,QAAQ,IAAI;AAChC,UAAID,kBAAkB,CAACC,QAAD,CAAtB,EAAkC;AAChC,eAAOniB,MAAM,CAACqjB,aAAP,KAAyBlB,QAAhC;AACD;A;AACD,aAAO,CAAC,CAACniB,MAAM,CAACmiB,QAAD,CAAf;AACD,KALM,CAAP;AAMD;A;AAEDpiB,EAAAA,gBAAgB,CACd3b,SADc,EAEd4b,MAFc,EAGd3qB,KAHc,EAIR;AACN,UAAM+5C,8BAA8B,GAAG,CACrC,SADqC,EAErC,SAFqC,EAGrC,QAHqC,EAIrC,WAJqC,EAKrC,UALqC,EAMrC,UANqC,EAOrC,UAPqC,CAAvC;AASA,SAAKxM,gBAAL,CACE5iB,MADF,EAEEovB,8BAA8B,CAAC9vD,MAA/B,CAAsC,CAAC,QAAD,CAAtC,CAFF;A;AAKA,UAAM+vD,gCAAgC,GAAG,MAAM;AAC7C,YAAM71B,QAAQ,GAAG,CAAC,CAACwG,MAAM,CAACvG,MAA1B;A;AACA,UAAID,QAAQ,IAAI,KAAKnF,GAAL,CAASjM,OAAE,CAACzZ,MAAZ,CAAhB,EAAqC;AACnC,YAAI,KAAKugD,kBAAL,CAAwBlvB,MAAxB,EAAgCovB,8BAAhC,CAAJ,EAAqE;AACnE,eAAKnuC,KAAL,CAAW,KAAK5L,KAAL,CAAWqL,GAAtB,EAA2Bu+B,QAAQ,CAACsC,6BAApC;AACD;A;AACD,aAAK+N,qBAAL,CAA2BlrC,SAA3B,EAAwC4b,MAAxC;AACD,OALD,MAKO;AACL,aAAKuvB,4BAAL,CAAkCnrC,SAAlC,EAA6C4b,MAA7C,EAAqD3qB,KAArD,EAA4DmkB,QAA5D;AACD;AACF,KAVD;A;AAWA,QAAIwG,MAAM,CAAC7H,OAAX,EAAoB;AAClB,WAAKs0B,kBAAL,CAAwB4C,gCAAxB;AACD,KAFD,MAEO;AACLA,MAAAA,gCAAgC;AACjC;AACF;A;AAEDE,EAAAA,4BAA4B,CAC1BnrC,SAD0B,EAE1B4b,MAF0B,EAG1B3qB,KAH0B,EAI1BmkB,QAJ0B,EAKpB;AACN,UAAMitB,GAAG,GAAG,KAAKR,wBAAL,CAA8BjmB,MAA9B,CAAZ;A;AACA,QAAIymB,GAAJ,EAAS;AACPriC,MAAAA,SAAS,CAACpmB,IAAV,CAAexD,IAAf,CAAoBisD,GAApB;A;AAEA,UAAKzmB,MAAD,CAAcgoB,QAAlB,EAA4B;AAC1B,aAAK/mC,KAAL,CAAW+e,MAAM,CAACj9B,KAAlB,EAAyBk8C,QAAQ,CAACkB,yBAAlC;AACD;A;AACD,UAAKngB,MAAD,CAAcqjB,aAAlB,EAAiC;AAC/B,aAAKpiC,KAAL,CACE+e,MAAM,CAACj9B,KADT,EAEEk8C,QAAQ,CAACmB,8BAFX,EAGGpgB,MAAD,CAAcqjB,aAHhB;AAKD;A;AACD,UAAKrjB,MAAD,CAAc7H,OAAlB,EAA2B;AACzB,aAAKlX,KAAL,CAAW+e,MAAM,CAACj9B,KAAlB,EAAyBk8C,QAAQ,CAACoB,wBAAlC;AACD;A;AACD,UAAKrgB,MAAD,CAAcwvB,QAAlB,EAA4B;AAC1B,aAAKvuC,KAAL,CAAW+e,MAAM,CAACj9B,KAAlB,EAAyBk8C,QAAQ,CAACqB,yBAAlC;AACD;A;AAED;AACD;A;AAED,QAAI,CAAC,KAAKjrC,KAAL,CAAW2jC,eAAZ,IAAgChZ,MAAD,CAAcgoB,QAAjD,EAA2D;AACzD,WAAK/mC,KAAL,CAAW+e,MAAM,CAACj9B,KAAlB,EAAyBk8C,QAAQ,CAAC2B,iCAAlC;AACD;A;AAED,QAAK5gB,MAAD,CAAcwvB,QAAlB,EAA4B;AAC1B,UAAI,CAACn6C,KAAK,CAACo6C,aAAX,EAA0B;AACxB,aAAKxuC,KAAL,CAAW+e,MAAM,CAACj9B,KAAlB,EAAyBk8C,QAAQ,CAAC8B,qBAAlC;AACD;AACF;A;AAID,UAAMwO,4BAAN,CAAmCnrC,SAAnC,EAA8C4b,MAA9C,EAAsD3qB,KAAtD,EAA6DmkB,QAA7D;AACD;A;AAEDk2B,EAAAA,4BAA4B,CAC1BC,YAD0B,EAEpB;AACN,UAAMnpC,QAAQ,GAAG,KAAK6N,GAAL,CAASjM,OAAE,CAAC7Y,QAAZ,CAAjB;AACA,QAAIiX,QAAJ,EAAcmpC,YAAY,CAACnpC,QAAb,GAAwB,IAAxB;A;AAEd,QAAKmpC,YAAD,CAAoBtJ,QAApB,IAAgC,KAAK//C,KAAL,CAAW8hB,OAAE,CAACpZ,MAAd,CAApC,EAA2D;AACzD,WAAKiS,KAAL,CAAW0uC,YAAY,CAAC5sD,KAAxB,EAA+Bk8C,QAAQ,CAACK,sBAAxC;AACD;A;AAED,QAAKqQ,YAAD,CAAoBx3B,OAApB,IAA+B,KAAK7xB,KAAL,CAAW8hB,OAAE,CAACpZ,MAAd,CAAnC,EAA0D;AACxD,WAAKiS,KAAL,CAAW0uC,YAAY,CAAC5sD,KAAxB,EAA+Bk8C,QAAQ,CAACI,qBAAxC;AACD;AACF;A;AAMDniB,EAAAA,wBAAwB,CACtBznB,IADsB,EAEtB0nB,IAFsB,EAGT;AACb,UAAMiC,IAAI,GACRjC,IAAI,CAACrhC,IAAL,KAAc,YAAd,GACI,KAAKixD,0BAAL,CAAgCt3C,IAAhC,EAAsC0nB,IAAtC,CADJ,GAEIziC,SAHN;AAIA,WAAO0kC,IAAI,IAAI,MAAMlC,wBAAN,CAA+BznB,IAA/B,EAAqC0nB,IAArC,CAAf;AACD;A;AAIDC,EAAAA,4BAA4B,GAAY;AACtC,QAAI,KAAKkwB,oBAAL,EAAJ,EAAiC,OAAO,IAAP;AACjC,WAAO,MAAMlwB,4BAAN,EAAP;AACD;A;AAGDG,EAAAA,gBAAgB,CACdJ,IADc,EAEdlX,QAFc,EAGdtF,QAHc,EAId6c,gBAJc,EAKA;AAGd,QAAI,CAACA,gBAAD,IAAqB,CAAC,KAAKl3B,KAAL,CAAW8hB,OAAE,CAAC7Y,QAAd,CAA1B,EAAmD;AACjD,aAAO,MAAMguB,gBAAN,CACLJ,IADK,EAELlX,QAFK,EAGLtF,QAHK,EAIL6c,gBAJK,CAAP;AAMD;A;AAED,UAAMC,MAAM,GAAG,KAAKC,QAAL,CAAc,MAC3B,MAAMH,gBAAN,CAAuBJ,IAAvB,EAA6BlX,QAA7B,EAAuCtF,QAAvC,CADa,CAAf;A;AAIA,QAAI,CAAC8c,MAAM,CAAChoB,IAAZ,EAAkB;AAEhB+nB,MAAAA,gBAAgB,CAACz6B,KAAjB,GAAyB06B,MAAM,CAACjgC,KAAP,CAAakjB,GAAb,IAAoB,KAAKrL,KAAL,CAAWtS,KAAxD;AACA,aAAOo6B,IAAP;AACD;A;AACD,QAAIM,MAAM,CAACjgC,KAAX,EAAkB,KAAK6X,KAAL,GAAaooB,MAAM,CAACE,SAApB;AAClB,WAAOF,MAAM,CAAChoB,IAAd;AACD;A;AAIDwpB,EAAAA,cAAc,CACZxpB,IADY,EAEZwQ,QAFY,EAGZtF,QAHY,EAIE;AACdlL,IAAAA,IAAI,GAAG,MAAMwpB,cAAN,CAAqBxpB,IAArB,EAA2BwQ,QAA3B,EAAqCtF,QAArC,CAAP;A;AACA,QAAI,KAAK0T,GAAL,CAASjM,OAAE,CAAC7Y,QAAZ,CAAJ,EAA2B;AACzBkG,MAAAA,IAAI,CAAC+Q,QAAL,GAAgB,IAAhB;AAIA,WAAK8O,gBAAL,CAAsB7f,IAAtB;AACD;A;AAED,QAAI,KAAKnP,KAAL,CAAW8hB,OAAE,CAAChZ,KAAd,CAAJ,EAA0B;AACxB,YAAM8vB,YAAoC,GAAG,KAAKnc,WAAL,CAC3CkD,QAD2C,EAE3CtF,QAF2C,CAA7C;AAIAue,MAAAA,YAAY,CAAClc,UAAb,GAA0BvN,IAA1B;AACAypB,MAAAA,YAAY,CAAC7J,cAAb,GAA8B,KAAKovB,qBAAL,EAA9B;AAEA,aAAO,KAAKl/B,UAAL,CAAgB2Z,YAAhB,EAA8B,sBAA9B,CAAP;AACD;A;AAED,WAAOzpB,IAAP;AACD;A;AAED4pB,EAAAA,sBAAsB,CAAC5pB,IAAD,EAAiD;AAErE,UAAMwQ,QAAQ,GAAG,KAAK5Q,KAAL,CAAWtS,KAA5B;AACA,UAAM4d,QAAQ,GAAG,KAAKtL,KAAL,CAAWsL,QAA5B;AAGA,UAAMivC,SAAS,GAAG,KAAKj6B,aAAL,CAAmB,SAAnB,CAAlB;A;AAEA,QACEi6B,SAAS,KACR,KAAK95B,YAAL,CAAkB,SAAlB,KAAgC,CAAC,KAAKsH,4BAAL,EADzB,CADX,EAGE;AACA,YAAM,KAAKnc,KAAL,CACJ,KAAK5L,KAAL,CAAWtS,KADP,EAEJk8C,QAAQ,CAACe,iCAFL,CAAN;AAID;A;AAED,QAAIvtB,WAAJ;A;AAEA,QAAI,KAAKnsB,KAAL,CAAW8hB,OAAE,CAAClkB,IAAd,CAAJ,EAAyB;AACvBuuB,MAAAA,WAAW,GAAG,KAAKq6B,2BAAL,EAAd;AACD;A;AACD,QAAI,CAACr6B,WAAL,EAAkB;AAChBA,MAAAA,WAAW,GAAG,MAAM4M,sBAAN,CAA6B5pB,IAA7B,CAAd;AACD;A;AACD,QACEgd,WAAW,KACVA,WAAW,CAAC32B,IAAZ,KAAqB,wBAArB,IACC22B,WAAW,CAAC32B,IAAZ,KAAqB,wBADtB,IAEC8zD,SAHS,CADb,EAKE;AACAn6C,MAAAA,IAAI,CAACmhB,UAAL,GAAkB,MAAlB;AACD;A;AAED,QAAInE,WAAW,IAAIm9B,SAAnB,EAA8B;AAE5B,WAAKC,kBAAL,CAAwBp9B,WAAxB,EAAqCxM,QAArC,EAA+CtF,QAA/C;AAEA8R,MAAAA,WAAW,CAAC0F,OAAZ,GAAsB,IAAtB;AACD;A;AAED,WAAO1F,WAAP;AACD;A;AAEDmN,EAAAA,YAAY,CACVnqB,IADU,EAEVoqB,WAFU,EAGVC,UAHU,EAIJ;AACN,QAAI,CAAC,CAACD,WAAD,IAAgBC,UAAjB,KAAgC,KAAKhK,YAAL,CAAkB,YAAlB,CAApC,EAAqE;AACnE;AACD;A;AAED,UAAM8J,YAAN,CACEnqB,IADF,EAEEoqB,WAFF,EAGEC,UAHF,EAIGrqB,IAAD,CAAY0iB,OAAZ,GAAsB7L,eAAtB,GAAwCP,UAJ1C;AAMA,UAAMtH,cAAc,GAAG,KAAKygC,wBAAL,EAAvB;AACA,QAAIzgC,cAAJ,EAAoBhP,IAAI,CAACgP,cAAL,GAAsBA,cAAtB;AACrB;A;AAEDqrC,EAAAA,4BAA4B,CAC1Br6C,IAD0B,EAEpB;AACN,QAAI,CAACA,IAAI,CAAC+Q,QAAN,IAAkB,KAAK6N,GAAL,CAASjM,OAAE,CAACjY,IAAZ,CAAtB,EAAyC;AACvCsF,MAAAA,IAAI,CAACs6C,QAAL,GAAgB,IAAhB;AACD;A;AAED,UAAMj0D,IAAI,GAAG,KAAKqqD,wBAAL,EAAb;AACA,QAAIrqD,IAAJ,EAAU2Z,IAAI,CAAC4f,cAAL,GAAsBv5B,IAAtB;AACX;A;AAED0pB,EAAAA,kBAAkB,CAAC/P,IAAD,EAAyC;AACzD,SAAKq6C,4BAAL,CAAkCr6C,IAAlC;A;AAEA,QAAI,KAAKJ,KAAL,CAAW0jC,gBAAX,IAA+B,KAAKzyC,KAAL,CAAW8hB,OAAE,CAACnY,EAAd,CAAnC,EAAsD;AACpD,WAAKgR,KAAL,CAAW,KAAK5L,KAAL,CAAWtS,KAAtB,EAA6Bk8C,QAAQ,CAACQ,+BAAtC;AACD;A;AAED,WAAO,MAAMj6B,kBAAN,CAAyB/P,IAAzB,CAAP;AACD;A;AAEDiQ,EAAAA,yBAAyB,CACvBjQ,IADuB,EAEC;AAExB,QAAIA,IAAI,CAACuyC,QAAT,EAAmB;AACjB,WAAK/mC,KAAL,CAAWxL,IAAI,CAAC1S,KAAhB,EAAuBk8C,QAAQ,CAACgC,yBAAhC;AACD;A;AAGD,QAAIxrC,IAAI,CAAC4tC,aAAT,EAAwB;AACtB,WAAKpiC,KAAL,CACExL,IAAI,CAAC1S,KADP,EAEEk8C,QAAQ,CAACiC,8BAFX,EAGEzrC,IAAI,CAAC4tC,aAHP;AAKD;A;AAED,SAAKyM,4BAAL,CAAkCr6C,IAAlC;AACA,WAAO,MAAMiQ,yBAAN,CAAgCjQ,IAAhC,CAAP;AACD;A;AAED0O,EAAAA,eAAe,CACbC,SADa,EAEbV,MAFa,EAGbW,WAHa,EAIbf,OAJa,EAKbgB,aALa,EAMbC,iBANa,EAOP;AACN,UAAME,cAAc,GAAG,KAAKygC,wBAAL,EAAvB;A;AACA,QAAIzgC,cAAc,IAAIH,aAAtB,EAAqC;AACnC,WAAKrD,KAAL,CAAWwD,cAAc,CAAC1hB,KAA1B,EAAiCk8C,QAAQ,CAACM,4BAA1C;AACD;A;AAGD,QAAI77B,MAAM,CAACyU,OAAP,KAAmBzU,MAAM,CAAC2B,IAAP,KAAgB,KAAhB,IAAyB3B,MAAM,CAAC2B,IAAP,KAAgB,KAA5D,CAAJ,EAAwE;AACtE,WAAKpE,KAAL,CAAWyC,MAAM,CAAC3gB,KAAlB,EAAyBk8C,QAAQ,CAACO,eAAlC,EAAmD97B,MAAM,CAAC2B,IAA1D;AACD;A;AACD,QAAIZ,cAAJ,EAAoBf,MAAM,CAACe,cAAP,GAAwBA,cAAxB;AACpB,UAAMN,eAAN,CACEC,SADF,EAEEV,MAFF,EAGEW,WAHF,EAIEf,OAJF,EAKEgB,aALF,EAMEC,iBANF;AAQD;A;AAEDkd,EAAAA,sBAAsB,CACpBrd,SADoB,EAEpBV,MAFoB,EAGpBW,WAHoB,EAIpBf,OAJoB,EAKd;AACN,UAAMmB,cAAc,GAAG,KAAKygC,wBAAL,EAAvB;AACA,QAAIzgC,cAAJ,EAAoBf,MAAM,CAACe,cAAP,GAAwBA,cAAxB;AACpB,UAAMgd,sBAAN,CAA6Brd,SAA7B,EAAwCV,MAAxC,EAAgDW,WAAhD,EAA6Df,OAA7D;AACD;A;AAEDoe,EAAAA,eAAe,CAACjsB,IAAD,EAAsB;AACnC,UAAMisB,eAAN,CAAsBjsB,IAAtB;A;AACA,QAAIA,IAAI,CAACmM,UAAL,IAAmB,KAAKmT,YAAL,CAAkB,GAAlB,CAAvB,EAA+C;AAC7Ctf,MAAAA,IAAI,CAACksB,mBAAL,GAA2B,KAAKuiB,oBAAL,EAA3B;AACD;A;AACD,QAAI,KAAKvuB,aAAL,CAAmB,YAAnB,CAAJ,EAAsC;AACpClgB,MAAAA,IAAI,CAAC0hB,UAAL,GAAkB,KAAKuzB,qBAAL,CAA2B,YAA3B,CAAlB;AACD;AACF;A;AAED1oB,EAAAA,iBAAiB,CAACpc,IAAD,EAAuB,GAAG5B,IAA1B,EAAsC;AACrD,UAAMS,cAAc,GAAG,KAAKygC,wBAAL,EAAvB;AACA,QAAIzgC,cAAJ,EAAoBmB,IAAI,CAACnB,cAAL,GAAsBA,cAAtB;AAEpB,UAAMud,iBAAN,CAAwBpc,IAAxB,EAA8B,GAAG5B,IAAjC;AACD;A;AAEDuf,EAAAA,mBAAmB,CAAC9tB,IAAD,EAAmB+tB,cAAnB,EAAmD;AACpE,UAAM/e,cAAc,GAAG,KAAKygC,wBAAL,EAAvB;AACA,QAAIzgC,cAAJ,EAAoBhP,IAAI,CAACgP,cAAL,GAAsBA,cAAtB;AACpB,UAAM8e,mBAAN,CAA0B9tB,IAA1B,EAAgC+tB,cAAhC;AACD;A;AAGDC,EAAAA,UAAU,CACRrE,IADQ,EAER/Z,IAFQ,EAGF;AACN,UAAMoe,UAAN,CAAiBrE,IAAjB,EAAuB/Z,IAAvB;A;AACA,QAAI+Z,IAAI,CAAC3iC,EAAL,CAAQX,IAAR,KAAiB,YAAjB,IAAiC,KAAKu4B,GAAL,CAASjM,OAAE,CAACjY,IAAZ,CAArC,EAAwD;AACtDivB,MAAAA,IAAI,CAAC2wB,QAAL,GAAgB,IAAhB;AACD;A;AAED,UAAMj0D,IAAI,GAAG,KAAKqqD,wBAAL,EAAb;A;AACA,QAAIrqD,IAAJ,EAAU;AACRsjC,MAAAA,IAAI,CAAC3iC,EAAL,CAAQ44B,cAAR,GAAyBv5B,IAAzB;AACA,WAAKw5B,gBAAL,CAAsB8J,IAAI,CAAC3iC,EAA3B;AACD;AACF;A;AAGDinC,EAAAA,iCAAiC,CAC/BjuB,IAD+B,EAE/Bzb,IAF+B,EAGJ;AAC3B,QAAI,KAAKsM,KAAL,CAAW8hB,OAAE,CAAChZ,KAAd,CAAJ,EAA0B;AACxBqG,MAAAA,IAAI,CAAC2f,UAAL,GAAkB,KAAKqvB,qBAAL,EAAlB;AACD;A;AACD,WAAO,MAAM/gB,iCAAN,CAAwCjuB,IAAxC,EAA8Czb,IAA9C,CAAP;AACD;A;AAEDskC,EAAAA,gBAAgB,CAAC,GAAGta,IAAJ,EAAwB;AAAA;A;AAGtC,QAAI3O,KAAJ;AACA,QAAIwuB,GAAJ;AACA,QAAImsB,QAAJ;A;AAEA,QACE,KAAKt7C,SAAL,CAAe,KAAf,MACC,KAAKpO,KAAL,CAAW8hB,OAAE,CAACyQ,WAAd,KAA8B,KAAK9D,YAAL,CAAkB,GAAlB,CAD/B,CADF,EAGE;AAEA1f,MAAAA,KAAK,GAAG,KAAKA,KAAL,CAAWuoB,KAAX,EAAR;AAEAiG,MAAAA,GAAG,GAAG,KAAKnG,QAAL,CAAc,MAAM,MAAMY,gBAAN,CAAuB,GAAGta,IAA1B,CAApB,EAAqD3O,KAArD,CAAN;AAGA,UAAI,CAACwuB,GAAG,CAACrmC,KAAT,EAAgB,OAAOqmC,GAAG,CAACpuB,IAAX;AAKhB,YAAM;AAAE4S,QAAAA;AAAF,UAAc,KAAKhT,KAAzB;A;AACA,UAAIgT,OAAO,CAACA,OAAO,CAACtrB,MAAR,GAAiB,CAAlB,CAAP,KAAgC08C,KAAE,CAAC1V,MAAvC,EAA+C;AAC7C1b,QAAAA,OAAO,CAACtrB,MAAR,IAAkB,CAAlB;AACD,OAFD,MAEO,IAAIsrB,OAAO,CAACA,OAAO,CAACtrB,MAAR,GAAiB,CAAlB,CAAP,KAAgC08C,KAAE,CAACzV,MAAvC,EAA+C;AACpD3b,QAAAA,OAAO,CAACtrB,MAAR,IAAkB,CAAlB;AACD;AACF;A;AAED,QAAI,UAAC8mC,GAAD,aAAC,KAAKrmC,KAAN,KAAe,CAAC,KAAKu3B,YAAL,CAAkB,GAAlB,CAApB,EAA4C;AAC1C,aAAO,MAAMuJ,gBAAN,CAAuB,GAAGta,IAA1B,CAAP;AACD;A;AAID,QAAIS,cAAJ;AACApP,IAAAA,KAAK,GAAGA,KAAK,IAAI,KAAKA,KAAL,CAAWuoB,KAAX,EAAjB;AAEA,UAAMnuB,KAAK,GAAG,KAAKiuB,QAAL,CAAcuG,KAAK,IAAI;AAAA;A;AAEnCxf,MAAAA,cAAc,GAAG,KAAK0gC,qBAAL,EAAjB;AACA,YAAMhoB,IAAI,GAAG,MAAMmB,gBAAN,CAAuB,GAAGta,IAA1B,CAAb;A;AAEA,UACEmZ,IAAI,CAACrhC,IAAL,KAAc,yBAAd,mBACAqhC,IAAI,CAACla,KADL,aACA,YAAYW,aAFd,EAGE;AACAqgB,QAAAA,KAAK;AACN;A;AAGD,UAAI,oBAAAxf,cAAc,SAAd,4BAAgBvD,MAAhB,CAAuBnkB,MAAvB,MAAkC,CAAtC,EAAyC;AACvC,aAAKonC,0BAAL,CAAgChH,IAAhC,EAAsC1Y,cAAtC;AACD;A;AACD0Y,MAAAA,IAAI,CAAC1Y,cAAL,GAAsBA,cAAtB;AACA,aAAO0Y,IAAP;AACD,KAlBa,EAkBX9nB,KAlBW,CAAd;AAoBA,QAAI,CAAC5F,KAAK,CAACjS,KAAP,IAAgB,CAACiS,KAAK,CAAC40B,OAA3B,EAAoC,OAAO50B,KAAK,CAACgG,IAAb;A;AAEpC,QAAI,CAACouB,GAAL,EAAU;AAIRmb,MAAAA,MAAM,CAAC,CAAC,KAAKtqC,SAAL,CAAe,KAAf,CAAF,CAAN;AAIAs7C,MAAAA,QAAQ,GAAG,KAAKtyB,QAAL,CAAc,MAAM,MAAMY,gBAAN,CAAuB,GAAGta,IAA1B,CAApB,EAAqD3O,KAArD,CAAX;AAEA,UAAI,CAAC26C,QAAQ,CAACxyD,KAAd,EAAqB,OAAOwyD,QAAQ,CAACv6C,IAAhB;AACtB;A;AAED,iBAAIouB,GAAJ,aAAI,MAAKpuB,IAAT,EAAe;AAEb,WAAKJ,KAAL,GAAawuB,GAAG,CAAClG,SAAjB;AACA,aAAOkG,GAAG,CAACpuB,IAAX;AACD;A;AAED,QAAIhG,KAAK,CAACgG,IAAV,EAAgB;AAEd,WAAKJ,KAAL,GAAa5F,KAAK,CAACkuB,SAAnB;AACA,aAAOluB,KAAK,CAACgG,IAAb;AACD;A;AAED,qBAAIu6C,QAAJ,aAAI,UAAUv6C,IAAd,EAAoB;AAElB,WAAKJ,KAAL,GAAa26C,QAAQ,CAACryB,SAAtB;AACA,aAAOqyB,QAAQ,CAACv6C,IAAhB;AACD;A;AAED,iBAAIouB,GAAJ,aAAI,MAAKU,MAAT,EAAiB,MAAMV,GAAG,CAACrmC,KAAV;AACjB,QAAIiS,KAAK,CAAC80B,MAAV,EAAkB,MAAM90B,KAAK,CAACjS,KAAZ;AAClB,sBAAIwyD,QAAJ,aAAI,WAAUzrB,MAAd,EAAsB,MAAMyrB,QAAQ,CAACxyD,KAAf;AAEtB,UAAM,UAAAqmC,GAAG,SAAH,kBAAKrmC,KAAL,KAAciS,KAAK,CAACjS,KAApB,mBAA6BwyD,QAA7B,qBAA6B,WAAUxyD,KAAvC,CAAN;AACD;A;AAGDirD,EAAAA,eAAe,CAACviC,mBAAD,EAAwD;AACrE,QAAI,CAAC,KAAKxR,SAAL,CAAe,KAAf,CAAD,IAA0B,KAAKqgB,YAAL,CAAkB,GAAlB,CAA9B,EAAsD;AACpD,aAAO,KAAKy1B,oBAAL,EAAP;AACD,KAFD,MAEO;AACL,aAAO,MAAM/B,eAAN,CAAsBviC,mBAAtB,CAAP;AACD;AACF;A;AAEDse,EAAAA,UAAU,CAAC/uB,IAAD,EAA8D;AACtE,QAAI,KAAKnP,KAAL,CAAW8hB,OAAE,CAAChZ,KAAd,CAAJ,EAA0B;AAIxB,YAAMquB,MAAM,GAAG,KAAKC,QAAL,CAAcuG,KAAK,IAAI;AACpC,cAAM7O,UAAU,GAAG,KAAKuwB,oCAAL,CACjBv9B,OAAE,CAAChZ,KADc,CAAnB;AAGA,YAAI,KAAK6sB,kBAAL,MAA6B,CAAC,KAAK31B,KAAL,CAAW8hB,OAAE,CAAC3Y,KAAd,CAAlC,EAAwDw0B,KAAK;AAC7D,eAAO7O,UAAP;AACD,OANc,CAAf;AAQA,UAAIqI,MAAM,CAAC4G,OAAX,EAAoB;A;AAEpB,UAAI,CAAC5G,MAAM,CAAC8G,MAAZ,EAAoB;AAClB,YAAI9G,MAAM,CAACjgC,KAAX,EAAkB,KAAK6X,KAAL,GAAaooB,MAAM,CAACE,SAApB;AAClBloB,QAAAA,IAAI,CAAC2f,UAAL,GAAkBqI,MAAM,CAAChoB,IAAzB;AACD;AACF;A;AAED,WAAO,MAAM+uB,UAAN,CAAiB/uB,IAAjB,CAAP;AACD;A;AAGDwsB,EAAAA,4BAA4B,CAAC1F,KAAD,EAAmB;AAC7C,QAAI,KAAKlI,GAAL,CAASjM,OAAE,CAAC7Y,QAAZ,CAAJ,EAA2B;AACzB,UACEgtB,KAAK,CAACzgC,IAAN,KAAe,YAAf,IACA,CAAC,KAAKuZ,KAAL,CAAW0jC,gBADZ,IAEA,CAAC,KAAK1jC,KAAL,CAAW0e,MAHd,EAIE;AACA,aAAK9S,KAAL,CAAWsb,KAAK,CAACx5B,KAAjB,EAAwBk8C,QAAQ,CAAC+B,iBAAjC;AACD;A;AAECzkB,MAAAA,KAAF,CAA6B/V,QAA7B,GAAwC,IAAxC;AACD;A;AACD,UAAM1qB,IAAI,GAAG,KAAKqqD,wBAAL,EAAb;AACA,QAAIrqD,IAAJ,EAAUygC,KAAK,CAAClH,cAAN,GAAuBv5B,IAAvB;AACV,SAAKw5B,gBAAL,CAAsBiH,KAAtB;AAEA,WAAOA,KAAP;AACD;A;AAEDpW,EAAAA,YAAY,CAAC1Q,IAAD,EAAe2Q,KAAc,GAAG,KAAhC,EAA+C;AACzD,YAAQ3Q,IAAI,CAAC3Z,IAAb;AACE,WAAK,sBAAL;AACE,eAAO,MAAMqqB,YAAN,CAAmB,KAAKwW,mBAAL,CAAyBlnB,IAAzB,CAAnB,EAAmD2Q,KAAnD,CAAP;A;AACF,WAAK,qBAAL;AACE,eAAO,MAAMD,YAAN,CAAmB1Q,IAAnB,EAAyB2Q,KAAzB,CAAP;A;AACF,WAAK,yBAAL;AACE,eAAO,KAAK6pC,mCAAL,CAAyCx6C,IAAzC,EAA+C2Q,KAA/C,CAAP;A;AACF,WAAK,gBAAL;AACA,WAAK,qBAAL;AACA,WAAK,iBAAL;AACE3Q,QAAAA,IAAI,CAACuN,UAAL,GAAkB,KAAKmD,YAAL,CAAkB1Q,IAAI,CAACuN,UAAvB,EAAmCoD,KAAnC,CAAlB;AACA,eAAO3Q,IAAP;A;AACF;AACE,eAAO,MAAM0Q,YAAN,CAAmB1Q,IAAnB,EAAyB2Q,KAAzB,CAAP;AAbJ;AAeD;A;AAED6pC,EAAAA,mCAAmC,CAACx6C,IAAD,EAAe2Q,KAAf,EAA+B;AAChE,YAAQ3Q,IAAI,CAACuN,UAAL,CAAgBlnB,IAAxB;AACE,WAAK,gBAAL;AACA,WAAK,qBAAL;AACA,WAAK,iBAAL;AACA,WAAK,yBAAL;AACE2Z,QAAAA,IAAI,CAACuN,UAAL,GAAkB,KAAKmD,YAAL,CAAkB1Q,IAAI,CAACuN,UAAvB,EAAmCoD,KAAnC,CAAlB;AACA,eAAO3Q,IAAP;A;AACF;AACE,eAAO,MAAM0Q,YAAN,CAAmB1Q,IAAnB,EAAyB2Q,KAAzB,CAAP;AARJ;AAUD;A;AAEDgb,EAAAA,SAAS,CACPjE,IADO,EAEPoF,kBAFO,EAGP,GAAGve,IAHI,EAMD;AAAA;A;AACN,YAAQmZ,IAAI,CAACrhC,IAAb;AACE,WAAK,sBAAL;AAIE;A;AACF,WAAK,qBAAL;AACE,aAAKslC,SAAL,CAAejE,IAAI,CAACywB,SAApB,EAA+B,oBAA/B,EAAqD,GAAG5pC,IAAxD;AACA;A;AACF,WAAK,gBAAL;AACA,WAAK,iBAAL;AACE,YACkB,CAACA,IAAI,CAAC,CAAD,CAAL,IAChBue,kBAAkB,KAAK,0BADP,IAEhB,kBAACpF,IAAI,CAACla,KAAN,aAAC,aAAYW,aAAb,CAHF,EAIE;AACA,eAAK3C,KAAL,CAAWkc,IAAI,CAACp6B,KAAhB,EAAuBujB,aAAM,CAAClM,UAA9B,EAA0CmoB,kBAA1C;AACA;AACD;A;AACD,aAAKnB,SAAL,CAAejE,IAAI,CAACna,UAApB,EAAgC,0BAAhC,EAA4D,GAAGgB,IAA/D;AACA;A;AACF,WAAK,qBAAL;AACE,aAAKod,SAAL,CAAejE,IAAI,CAACna,UAApB,EAAgCuf,kBAAhC,EAAoD,GAAGve,IAAvD;AACA;A;AACF;AACE,cAAMod,SAAN,CAAgBjE,IAAhB,EAAsBoF,kBAAtB,EAA0C,GAAGve,IAA7C;AACA;AA1BJ;AA4BD;A;AAEDsf,EAAAA,gBAAgB,GAAc;AAC5B,YAAQ,KAAKjuB,KAAL,CAAWvZ,IAAnB;AACE,WAAKssB,OAAE,CAAC3V,KAAR;AAEE,eAAO,KAAKmiB,eAAL,CAAmC,IAAnC,CAAP;A;AACF;AACE,eAAO,MAAM0O,gBAAN,EAAP;AALJ;AAOD;A;AAED4sB,EAAAA,4BAA4B,CAAC/yB,IAAD,EAAmC;AAC7D,QAAI,KAAKpI,YAAL,CAAkB,GAAlB,CAAJ,EAA4B;AAC1B,YAAMqQ,aAAa,GAAG,KAAK8e,oBAAL,EAAtB;A;AAEA,UAAI,KAAK59C,KAAL,CAAW8hB,OAAE,CAACpZ,MAAd,CAAJ,EAA2B;AACzB,cAAMhV,IAAI,GAAG,MAAMk2D,4BAAN,CAAmC/yB,IAAnC,CAAb;AACAnjC,QAAAA,IAAI,CAACyqB,cAAL,GAAsB2gB,aAAtB;AACA,eAAOprC,IAAP;AACD;A;AAED,WAAKm8B,UAAL,CAAgB,KAAK9gB,KAAL,CAAWtS,KAA3B,EAAkCqlB,OAAE,CAACpZ,MAArC;AACD;A;AAED,WAAO,MAAMkhD,4BAAN,CAAmC/yB,IAAnC,CAAP;AACD;A;AAEDgzB,EAAAA,mBAAmB,CAACnvB,KAAD,EAAQ;AACzB,QACE,KAAK3rB,KAAL,CAAW0jC,gBAAX,IACA,KAAKzyC,KAAL,CAAW8hB,OAAE,CAAClZ,KAAd,CADA,IAEA,KAAKs5C,iBAAL,OAA6BxnB,KAH/B,EAIE;AACA,WAAKxW,IAAL;AACD,KAND,MAMO;AACL,YAAM2lC,mBAAN,CAA0BnvB,KAA1B;AACD;AACF;A;AAODK,EAAAA,aAAa,GAAY;AACvB,WAAO,KAAKtM,YAAL,CAAkB,GAAlB,KAA0B,MAAMsM,aAAN,EAAjC;AACD;A;AAEDC,EAAAA,eAAe,GAAY;AACzB,WACE,KAAKh7B,KAAL,CAAW8hB,OAAE,CAACjY,IAAd,KAAuB,KAAK7J,KAAL,CAAW8hB,OAAE,CAAChZ,KAAd,CAAvB,IAA+C,MAAMkyB,eAAN,EADjD;AAGD;A;AAEDY,EAAAA,iBAAiB,CAAC,GAAGle,IAAJ,EAAqB;AACpC,UAAMvO,IAAI,GAAG,MAAMysB,iBAAN,CAAwB,GAAGle,IAA3B,CAAb;A;AAEA,QACEvO,IAAI,CAAC3Z,IAAL,KAAc,mBAAd,IACA2Z,IAAI,CAAC4f,cADL,IAEA5f,IAAI,CAACyiB,KAAL,CAAWn1B,KAAX,GAAmB0S,IAAI,CAAC4f,cAAL,CAAoBtyB,KAHzC,EAIE;AACA,WAAKke,KAAL,CACExL,IAAI,CAAC4f,cAAL,CAAoBtyB,KADtB,EAEEk8C,QAAQ,CAACuC,yBAFX;AAID;A;AAED,WAAO/rC,IAAP;AACD;A;AAGD6qB,EAAAA,gBAAgB,CAAC5sB,IAAD,EAAqB;AACnC,QACE,KAAK2B,KAAL,CAAW0e,MAAX,KACCrgB,IAAI,OAAJ,IAAkCA,IAAI,OADvC,CADF,EAGE;AACA,aAAO,KAAK6sB,QAAL,CAAcnY,OAAE,CAACvX,UAAjB,EAA6B,CAA7B,CAAP;AACD,KALD,MAKO;AACL,aAAO,MAAMyvB,gBAAN,CAAuB5sB,IAAvB,CAAP;AACD;AACF;A;AAGDg7C,EAAAA,YAAY,GAAG;AACb,QAAI,KAAKpoD,KAAL,CAAW8hB,OAAE,CAACvX,UAAd,CAAJ,EAA+B;AAC7B,YAAM6C,IAAI,GAAG,KAAKU,KAAL,CAAWzN,UAAX,CAAsB,KAAK0O,KAAL,CAAWtS,KAAjC,CAAb;A;AACA,UAAI2Q,IAAI,OAAJ,IAA+BA,IAAI,OAAvC,EAAmE;AACjE,aAAK2B,KAAL,CAAWqL,GAAX,IAAkB,CAAlB;AACA,aAAK0vC,eAAL,CAAqB18C,IAArB;AACD;AACF;AACF;A;AAEDorB,EAAAA,gBAAgB,CAAC6B,QAAD,EAAsD;AACpE,SAAK,IAAI7jC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG6jC,QAAQ,CAAC5jC,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACxC,YAAMqgC,IAAI,GAAGwD,QAAQ,CAAC7jC,CAAD,CAArB;AACA,UAAI,CAACqgC,IAAL,EAAW;A;AACX,cAAQA,IAAI,CAACrhC,IAAb;AACE,aAAK,sBAAL;AACE6kC,UAAAA,QAAQ,CAAC7jC,CAAD,CAAR,GAAc,KAAK6/B,mBAAL,CAAyBQ,IAAzB,CAAd;AACA;A;AACF,aAAK,gBAAL;AACA,aAAK,iBAAL;AACE,cAAI,CAAC,KAAK9nB,KAAL,CAAW8rB,sBAAhB,EAAwC;AACtCR,YAAAA,QAAQ,CAAC7jC,CAAD,CAAR,GAAc,KAAK6/B,mBAAL,CAAyBQ,IAAzB,CAAd;AACD,WAFD,MAEO;AACL,iBAAKlc,KAAL,CAAWkc,IAAI,CAACp6B,KAAhB,EAAuBk8C,QAAQ,CAAC4C,6BAAhC;AACD;A;AACD;AAXJ;AAaD;A;AACD,WAAO,MAAM/iB,gBAAN,CAAuB,GAAGvoB,SAA1B,CAAP;AACD;A;AAEDomB,EAAAA,mBAAmB,CAAClnB,IAAD,EAAuC;AACxDA,IAAAA,IAAI,CAACuN,UAAL,CAAgBqS,cAAhB,GAAiC5f,IAAI,CAAC4f,cAAtC;AAEA,SAAKC,gBAAL,CACE7f,IAAI,CAACuN,UADP,EAEEvN,IAAI,CAAC4f,cAAL,CAAoBryB,GAFtB,EAGEyS,IAAI,CAAC4f,cAAL,CAAoBjgB,GAApB,CAAwBpS,GAH1B;AAMA,WAAOyS,IAAI,CAACuN,UAAZ;AACD;A;AAEDyhB,EAAAA,gBAAgB,GAAG;AACjB,WAAO,KAAKn+B,KAAL,CAAW8hB,OAAE,CAAChZ,KAAd,KAAwB,MAAMq1B,gBAAN,EAA/B;AACD;A;AAEDd,EAAAA,qBAAqB,GAAY;AAC/B,WAAO,KAAKr9B,KAAL,CAAW8hB,OAAE,CAAChZ,KAAd,KAAwB,MAAMu0B,qBAAN,EAA/B;AACD;A;AAED0sB,EAAAA,uBAAuB,GAAG;AAExB,WAAO,MAAMA,uBAAN,MAAmC,KAAKtB,eAAL,EAA1C;AACD;A;AAEDnS,EAAAA,+BAA+B,CAC7BnnC,IAD6B,EAER;AACrB,QAAI,KAAKsf,YAAL,CAAkB,GAAlB,CAAJ,EAA4B;AAC1B,YAAMqQ,aAAa,GAAG,KAAKinB,kBAAL,CAAwB,MAC5C,KAAKnI,oBAAL,EADoB,CAAtB;AAGA,UAAI9e,aAAJ,EAAmB3vB,IAAI,CAACgP,cAAL,GAAsB2gB,aAAtB;AACpB;A;AACD,WAAO,MAAMwX,+BAAN,CAAsCnnC,IAAtC,CAAP;AACD;A;AAED66C,EAAAA,iCAAiC,CAC/B5sC,MAD+B,EAEvB;AACR,UAAM6sC,SAAS,GAAG,MAAMD,iCAAN,CAAwC5sC,MAAxC,CAAlB;AACA,UAAMxC,MAAM,GAAG,KAAKuC,4BAAL,CAAkCC,MAAlC,CAAf;AACA,UAAM8sC,UAAU,GAAGtvC,MAAM,CAAC,CAAD,CAAzB;AACA,UAAMuvC,eAAe,GAAGD,UAAU,IAAI,KAAKhvB,WAAL,CAAiBgvB,UAAjB,CAAtC;AAEA,WAAOC,eAAe,GAAGF,SAAS,GAAG,CAAf,GAAmBA,SAAzC;AACD;A;AAEDG,EAAAA,qBAAqB,GAAc;AACjC,UAAMn0B,KAAK,GAAG,MAAMm0B,qBAAN,EAAd;AACA,UAAM50D,IAAI,GAAG,KAAKqqD,wBAAL,EAAb;A;AAEA,QAAIrqD,IAAJ,EAAU;AACRygC,MAAAA,KAAK,CAAClH,cAAN,GAAuBv5B,IAAvB;AACA,WAAKw5B,gBAAL,CAAsBiH,KAAtB;AACD;A;AAED,WAAOA,KAAP;AACD;A;AAEDkwB,EAAAA,kBAAkB,CAAIlrD,EAAJ,EAAoB;AACpC,UAAMovD,mBAAmB,GAAG,KAAKt7C,KAAL,CAAW0jC,gBAAvC;AACA,SAAK1jC,KAAL,CAAW0jC,gBAAX,GAA8B,IAA9B;A;AACA,QAAI;AACF,aAAOx3C,EAAE,EAAT;AACD,KAFD,SAEU;AACR,WAAK8T,KAAL,CAAW0jC,gBAAX,GAA8B4X,mBAA9B;AACD;AACF;A;AAEDhE,EAAAA,UAAU,CAAal3C,IAAb,EAAsB,GAAGuO,IAAzB,EAAyC;AACjD,UAAM4sC,kBAAkB,GAAG,KAAKv7C,KAAL,CAAW2jC,eAAtC;AACA,SAAK3jC,KAAL,CAAW2jC,eAAX,GAA6B,CAAC,CAAEvjC,IAAD,CAAYuyC,QAA3C;A;AACA,QAAI;AACF,aAAO,MAAM2E,UAAN,CAAiBl3C,IAAjB,EAAuB,GAAGuO,IAA1B,CAAP;AACD,KAFD,SAEU;AACR,WAAK3O,KAAL,CAAW2jC,eAAX,GAA6B4X,kBAA7B;AACD;AACF;A;AAED1D,EAAAA,0BAA0B,CACxBz3C,IADwB,EAE0C;AAClE,QAAI,KAAKnP,KAAL,CAAW8hB,OAAE,CAACzV,MAAd,CAAJ,EAA2B;AACzB8C,MAAAA,IAAI,CAACuyC,QAAL,GAAgB,IAAhB;AACA,aAAO,KAAK2E,UAAL,CACJl3C,IADI,EAEa,IAFb,EAGY,KAHZ,CAAP;AAKD,KAPD,MAOO,IAAI,KAAKqgB,YAAL,CAAkB,WAAlB,CAAJ,EAAoC;AAMzC,UAAI,CAAC,KAAKq3B,qBAAL,EAAL,EAAmC;AACjC13C,QAAAA,IAAI,CAACuyC,QAAL,GAAgB,IAAhB;AACA,aAAK/mC,KAAL,CACExL,IAAI,CAAC1S,KADP,EAEEk8C,QAAQ,CAAC4B,wCAFX;AAIA,aAAKr2B,IAAL;AACA,eAAO,KAAKugC,2BAAL,CACJt1C,IADI,CAAP;AAGD;AACF,KAjBM,MAiBA;AACL,WAAK0gB,UAAL,CAAgB,IAAhB,EAAsB/N,OAAE,CAACzV,MAAzB;AACD;AACF;A;AAED6R,EAAAA,WAAW,CAAC,GAAGR,IAAJ,EAAiB;AAC1B,UAAMN,MAAM,GAAG,MAAMc,WAAN,CAAkB,GAAGR,IAArB,CAAf;A;AACA,QAAIN,MAAM,CAACskC,QAAX,EAAqB;AACnB,YAAM6I,OAAO,GAAG,KAAKn8C,SAAL,CAAe,QAAf,IACZ,CAAC,CAACgP,MAAM,CAACzhB,KAAP,CAAajE,IADH,GAEZ,CAAC,CAAC0lB,MAAM,CAAC1lB,IAFb;A;AAGA,UAAI6yD,OAAJ,EAAa;AACX,cAAM;AAAE5rD,UAAAA;AAAF,YAAUye,MAAhB;AACA,aAAKzC,KAAL,CACEyC,MAAM,CAAC3gB,KADT,EAEEk8C,QAAQ,CAACC,+BAFX,EAGEj6C,GAAG,CAACnJ,IAAJ,KAAa,YAAb,GACImJ,GAAG,CAACf,IADR,GAEK,IAAG,KAAKkQ,KAAL,CAAWjK,KAAX,CAAiBlF,GAAG,CAAClC,KAArB,EAA4BkC,GAAG,CAACjC,GAAhC,CAAqC,GAL/C;AAOD;AACF;A;AACD,WAAO0gB,MAAP;AACD;A;AAEDotC,EAAAA,2BAA2B,GAAY;AACrC,WAAO,CAAC,CAAC,KAAKj8C,eAAL,CAAqB,YAArB,EAAmC,KAAnC,CAAT;AACD;A;AAEDhZ,EAAAA,KAAK,GAAG;AACN,QAAI,KAAKi1D,2BAAL,EAAJ,EAAwC;AACtC,WAAKz7C,KAAL,CAAW0jC,gBAAX,GAA8B,IAA9B;AACD;A;AACD,WAAO,MAAMl9C,KAAN,EAAP;AACD;A;AAEDk1D,EAAAA,aAAa,GAAG;AACd,QAAI,KAAKD,2BAAL,EAAJ,EAAwC;AACtC,WAAKz7C,KAAL,CAAW0jC,gBAAX,GAA8B,IAA9B;AACD;A;AACD,WAAO,MAAMgY,aAAN,EAAP;AACD;A;AAj7FsB,CAD3B;A;ACzLA3oC,OAAE,CAAC4oC,WAAH,GAAiB,IAAIhkD,SAAJ,CAAc,IAAd,EAAoB;AAAEL,EAAAA,UAAU,EAAE;AAAd,CAApB,CAAjB;AAyCA,MAAMskD,iBAAiB,GAAGn6C,kBAAkB,CAC1C;AACEo6C,EAAAA,mBAAmB,EAAE;AADvB,CAD0C,EAI/Bx6C,UAAU,CAACC,WAJoB,CAA5C;AAOA,oBAAgBiL,UAAD,IACb,cAAcA,UAAd,CAAyB;AACvBuvC,EAAAA,gBAAgB,CACdC,YADc,EAE8B;AAC5C,QAAI,KAAK9qD,KAAL,CAAW8hB,OAAE,CAAC4oC,WAAd,CAAJ,EAAgC;AAC9B,YAAMv7C,IAAI,GAAG,KAAK2P,SAAL,EAAb;AACA,WAAKoF,IAAL;AACA,WAAK6mC,aAAL,CAAmB,kCAAnB;AAIA57C,MAAAA,IAAI,CAACvR,IAAL,GAAY,MAAM0wB,eAAN,CAAoC,IAApC,CAAZ;AAEA,WAAKy8B,aAAL,CAAmB,kCAAnB;AACA,WAAKr9B,MAAL,CAAY5L,OAAE,CAAC4oC,WAAf;AACA,aAAO,KAAKM,iBAAL,CAAuB77C,IAAvB,EAA6B27C,YAA7B,CAAP;AACD;AACF;A;AAEDE,EAAAA,iBAAiB,CACf77C,IADe,EAEf27C,YAFe,EAG2B;AAC1C,UAAMG,UAAU,GAAG,CAAC,EAAE97C,IAAI,CAAC27C,YAAL,IAAqB37C,IAAI,CAAC3Z,IAAL,KAAc,aAArC,CAApB;AACA2Z,IAAAA,IAAI,CAAC27C,YAAL,GAAoBA,YAApB;AAEA,WAAOG,UAAU,GAAG97C,IAAH,GAAU,KAAK8P,UAAL,CAAgB9P,IAAhB,EAAsB,aAAtB,CAA3B;AACD;A;AAMD6qB,EAAAA,gBAAgB,CAAC5sB,IAAD,EAAe;AAC7B,QACEA,IAAI,OAAJ,IACA,KAAKU,KAAL,CAAWzN,UAAX,CAAsB,KAAK0O,KAAL,CAAWqL,GAAX,GAAiB,CAAvC,QAFF,EAGE;AACA,aAAO,KAAK6f,QAAL,CAAcnY,OAAE,CAAC4oC,WAAjB,EAA8B,CAA9B,CAAP;AACD;A;AAED,WAAO,MAAM1wB,gBAAN,CAAuB,GAAG/pB,SAA1B,CAAP;AACD;A;AAMD8f,EAAAA,aAAa,GAAmC;AAC9C,WACE,KAAK86B,gBAAL,CAAsB,YAAtB,KAAuC,MAAM96B,aAAN,CAAoB,GAAG9f,SAAvB,CADzC;AAGD;A;AAEDqe,EAAAA,eAAe,GAAmC;AAKhD,WACE,KAAKu8B,gBAAL,CAAsB,YAAtB,KACA,MAAMv8B,eAAN,CAAsB,GAAGre,SAAzB,CAFF;AAID;A;AAED8sB,EAAAA,iBAAiB,CAACrZ,IAAD,EAAqB;AAIpC,QAAIA,IAAI,KAAKtvB,SAAb,EAAwB,MAAM2oC,iBAAN,CAAwB,GAAG9sB,SAA3B;AACzB;A;AAMD+sB,EAAAA,gBAAgB,GAAgC;AAC9C,WACE,KAAK6tB,gBAAL,CAAsB,SAAtB,KAAoC,MAAM7tB,gBAAN,CAAuB,GAAG/sB,SAA1B,CADtC;AAGD;A;AAED6qB,EAAAA,SAAS,CAACjE,IAAD,EAA2B;AAClC,QAAIA,IAAI,CAACrhC,IAAL,KAAc,aAAlB,EAAiC,MAAMslC,SAAN,CAAgB,GAAG7qB,SAAnB;AAClC;A;AAED4P,EAAAA,YAAY,CAAC1Q,IAAD,EAAuB;AACjC,QACEA,IAAI,IACJA,IAAI,CAAC3Z,IAAL,KAAc,aADd,IAEA2Z,IAAI,CAAC27C,YAAL,KAAsB,YAHxB,EAIE;AACA37C,MAAAA,IAAI,CAAC27C,YAAL,GAAoB,SAApB;AACA,aAAO37C,IAAP;AACD;A;AACD,WAAO,MAAM0Q,YAAN,CAAmB,GAAG5P,SAAtB,CAAP;AACD;A;AAMDmgB,EAAAA,KAAK,CAACrO,OAAD,EAA4B;AAC/B,QAAI,MAAMqO,KAAN,CAAYrO,OAAZ,CAAJ,EAA0B;AACxB,aAAO,IAAP;AACD;A;AAID,QAAI,CAAC,KAAKyN,YAAL,CAAkB,KAAlB,CAAL,EAA+B;AAC7B,aAAO,KAAP;AACD;A;AACD,QAAIzN,OAAJ,EAAa,OAAO,KAAP;AAIb,UAAMqd,SAAS,GAAG,KAAKhM,SAAL,EAAlB;A;AACA,QAAIgM,SAAS,CAAC5pC,IAAV,KAAmBssB,OAAE,CAAC4oC,WAA1B,EAAuC;AACrC,aAAO,IAAP;AACD;A;AAED,WAAO,KAAP;AACD;A;AAEDQ,EAAAA,mBAAmB,CAAC/7C,IAAD,EAA+C;AAChE,QAAIA,IAAI,CAACvI,KAAL,IAAcuI,IAAI,CAACvI,KAAL,CAAWpR,IAAX,KAAoB,aAAtC,EAAqD;AACrD,UAAM01D,mBAAN,CAA0B,GAAGj7C,SAA7B;AACD;A;AAED2mB,EAAAA,wBAAwB,CACtBznB,IADsB,EAEtB0nB,IAFsB,EAGS;AAC/B,QACEA,IAAI,CAACrhC,IAAL,KAAc,aAAd,IACCqhC,IAAI,CAACla,KAAL,IAAcka,IAAI,CAACla,KAAL,CAAWW,aAF5B,EAGE;AACA,aAAO,MAAMsZ,wBAAN,CAA+B,GAAG3mB,SAAlC,CAAP;AACD;A;AAED,QAAI,KAAKjQ,KAAL,CAAW8hB,OAAE,CAAChZ,KAAd,CAAJ,EAA0B;AACxB,YAAM0T,IAAwB,GAAGrN,IAAjC;AACAqN,MAAAA,IAAI,CAAC5V,KAAL,GAAa,KAAKokD,iBAAL,CAAuBn0B,IAAvB,EAA6B,YAA7B,CAAb;AACA,WAAK3S,IAAL;AACA1H,MAAAA,IAAI,CAAC9kB,IAAL,GAAY,KAAK++B,cAAL,CAAoB,OAApB,CAAZ;AACA,aAAO,KAAKxX,UAAL,CAAgBzC,IAAhB,EAAsB,kBAAtB,CAAP;AACD;A;AAED,SAAKyS,SAAL;AAEA9f,IAAAA,IAAI,CAACvR,IAAL,GAAYi5B,IAAI,CAACj5B,IAAjB;AACA,WAAO,KAAKotD,iBAAL,CAAuB77C,IAAvB,EAA6B,WAA7B,CAAP;AACD;A;AAEDg8C,EAAAA,UAAU,GAAuC;AAC/C,WACE,KAAKN,gBAAL,CAAsB,gBAAtB,KACA,MAAMM,UAAN,CAAiB,GAAGl7C,SAApB,CAFF;AAID;A;AAEDm7C,EAAAA,eAAe,GAAoC;AACjD,WACE,KAAKP,gBAAL,CAAsB,YAAtB,KACA,MAAMO,eAAN,CAAsB,GAAGn7C,SAAzB,CAFF;AAID;A;AAEDo2C,EAAAA,UAAU,CACRl3C,IADQ,EAERoqB,WAFQ,EAGRC,UAHQ,EAIL;AACH,UAAMhkC,IAAI,GAAG+jC,WAAW,GAAG,kBAAH,GAAwB,iBAAhD;AAEA,SAAKrV,IAAL;AACA,SAAKmnC,cAAL,CAAoBl8C,IAApB;AACA,UAAMm8C,SAAS,GAAG,KAAKv8C,KAAL,CAAWqU,MAA7B;AAEA,UAAMsnC,WAAW,GAAG,KAAKG,gBAAL,CAAsB,YAAtB,CAApB;A;AACA,QAAIH,WAAJ,EAAiB;AACf,UACE,KAAK1qD,KAAL,CAAW8hB,OAAE,CAACxV,QAAd,KACA,KAAKtM,KAAL,CAAW8hB,OAAE,CAAC4oC,WAAd,CADA,IAEA,KAAK1qD,KAAL,CAAW8hB,OAAE,CAACzZ,MAAd,CAHF,EAIE;AACA8G,QAAAA,IAAI,CAAChZ,EAAL,GAAUu0D,WAAV;AACD,OAND,MAMO,IAAIlxB,UAAU,IAAI,CAACD,WAAnB,EAAgC;AACrCpqB,QAAAA,IAAI,CAAChZ,EAAL,GAAU,IAAV;AACAgZ,QAAAA,IAAI,CAACzX,IAAL,GAAY,KAAKszD,iBAAL,CAAuBN,WAAvB,EAAoC,WAApC,CAAZ;AACA,eAAO,KAAKzrC,UAAL,CAAgB9P,IAAhB,EAAsB3Z,IAAtB,CAAP;AACD,OAJM,MAIA;AACL,aAAKq6B,UAAL,CAAgB,IAAhB,EAAsB86B,iBAAiB,CAACC,mBAAxC;AACD;AACF,KAdD,MAcO;AACL,WAAKtxB,YAAL,CAAkBnqB,IAAlB,EAAwBoqB,WAAxB,EAAqCC,UAArC;AACD;A;AAED,SAAK4B,eAAL,CAAqBjsB,IAArB;AACAA,IAAAA,IAAI,CAACzX,IAAL,GACE,KAAKmzD,gBAAL,CAAsB,WAAtB,KACA,KAAKU,cAAL,CAAoB,CAAC,CAACp8C,IAAI,CAACmM,UAA3B,EAAuCgwC,SAAvC,CAFF;AAGA,WAAO,KAAKrsC,UAAL,CAAgB9P,IAAhB,EAAsB3Z,IAAtB,CAAP;AACD;A;AAED8qB,EAAAA,WAAW,CAACnR,IAAD,EAAuB;AAChC,UAAMu7C,WAAW,GAAG,KAAKG,gBAAL,CAAsB,YAAtB,CAApB;AACA,QAAI,CAACH,WAAL,EAAkB,OAAO,MAAMpqC,WAAN,CAAkB,GAAGrQ,SAArB,CAAP;A;AAElB,QAAI,CAAC,KAAKuf,YAAL,CAAkB,MAAlB,CAAD,IAA8B,CAAC,KAAKxvB,KAAL,CAAW8hB,OAAE,CAAClZ,KAAd,CAAnC,EAAyD;AAEvDuG,MAAAA,IAAI,CAACqR,UAAL,GAAkB,EAAlB;AACArR,MAAAA,IAAI,CAAC3S,MAAL,GAAc,IAAd;AACA2S,MAAAA,IAAI,CAACgd,WAAL,GAAmB,KAAK6+B,iBAAL,CAAuBN,WAAvB,EAAoC,aAApC,CAAnB;AACA,aAAO,KAAKzrC,UAAL,CAAgB9P,IAAhB,EAAsB,wBAAtB,CAAP;AACD;A;AAGD,SAAKq8C,YAAL,CAAkB,mBAAlB;AACA,UAAMxvB,SAAS,GAAG,KAAKld,SAAL,EAAlB;AACAkd,IAAAA,SAAS,CAACzb,QAAV,GAAqBmqC,WAArB;AACAv7C,IAAAA,IAAI,CAACqR,UAAL,GAAkB,CAAC,KAAKvB,UAAL,CAAgB+c,SAAhB,EAA2B,wBAA3B,CAAD,CAAlB;AAEA,WAAO,MAAM1b,WAAN,CAAkBnR,IAAlB,CAAP;AACD;A;AAED4nB,EAAAA,wBAAwB,GAAY;AAClC,QAAI,KAAK/2B,KAAL,CAAW8hB,OAAE,CAAC3W,QAAd,CAAJ,EAA6B;AAC3B,YAAM+Y,IAAI,GAAG,KAAKqe,cAAL,EAAb;A;AACA,UAAI,KAAKkpB,oBAAL,CAA0BvnC,IAA1B,EAAgC,MAAhC,CAAJ,EAA6C;AAC3C,YACE,KAAKpW,KAAL,CAAWzO,UAAX,CACEyiB,OAAE,CAAC4oC,WAAH,CAAe9jD,KADjB,EAEE,KAAK8kD,mBAAL,CAAyBxnC,IAAI,GAAG,CAAhC,CAFF,CADF,EAKE;AACA,iBAAO,IAAP;AACD;AACF;AACF;A;AACD,WAAO,MAAM6S,wBAAN,EAAP;AACD;A;AAED40B,EAAAA,gCAAgC,CAACx8C,IAAD,EAAwB;AACtD,QAAIA,IAAI,CAACqR,UAAL,IAAmBrR,IAAI,CAACqR,UAAL,CAAgB/pB,MAAhB,GAAyB,CAAhD,EAAmD;AAEjD,aAAO,IAAP;AACD;A;AACD,WAAO,MAAMk1D,gCAAN,CAAuC,GAAG17C,SAA1C,CAAP;AACD;A;AAED27C,EAAAA,WAAW,CAACz8C,IAAD,EAAuC;AAChD,UAAM;AAAEqR,MAAAA;AAAF,QAAiBrR,IAAvB;A;AACA,QAAIqR,UAAJ,YAAIA,UAAU,CAAE/pB,MAAhB,EAAwB;AACtB0Y,MAAAA,IAAI,CAACqR,UAAL,GAAkBA,UAAU,CAAC7qB,MAAX,CAChBwZ,IAAI,IAAIA,IAAI,CAACoR,QAAL,CAAc/qB,IAAd,KAAuB,aADf,CAAlB;AAGD;A;AACD,UAAMo2D,WAAN,CAAkBz8C,IAAlB;AACAA,IAAAA,IAAI,CAACqR,UAAL,GAAkBA,UAAlB;AACD;A;AAEDyP,EAAAA,WAAW,CACT9gB,IADS,EAE0C;AACnD,UAAMu7C,WAAW,GAAG,KAAKG,gBAAL,CAAsB,YAAtB,CAApB;AACA,QAAI,CAACH,WAAL,EAAkB,OAAO,MAAMz6B,WAAN,CAAkB,GAAGhgB,SAArB,CAAP;AAElBd,IAAAA,IAAI,CAACqR,UAAL,GAAkB,EAAlB;A;AAEA,QAAI,CAAC,KAAKgP,YAAL,CAAkB,MAAlB,CAAD,IAA8B,CAAC,KAAKxvB,KAAL,CAAW8hB,OAAE,CAAClZ,KAAd,CAAnC,EAAyD;AAEvDuG,MAAAA,IAAI,CAAC3S,MAAL,GAAc,KAAKwuD,iBAAL,CAAuBN,WAAvB,EAAoC,eAApC,CAAd;AACA,WAAKz7B,SAAL;AACA,aAAO,KAAKhQ,UAAL,CAAgB9P,IAAhB,EAAsB,mBAAtB,CAAP;AACD;A;AAGD,UAAM6sB,SAAS,GAAG,KAAKjb,eAAL,CAAqB2pC,WAArB,CAAlB;AACA1uB,IAAAA,SAAS,CAACE,KAAV,GAAkBwuB,WAAlB;AACA,SAAKzrC,UAAL,CAAgB+c,SAAhB,EAA2B,wBAA3B;AACA7sB,IAAAA,IAAI,CAACqR,UAAL,CAAgBtsB,IAAhB,CAAqB8nC,SAArB;A;AAEA,QAAI,KAAKjO,GAAL,CAASjM,OAAE,CAAClZ,KAAZ,CAAJ,EAAwB;AAEtB,YAAMijD,aAAa,GAAG,KAAKC,6BAAL,CAAmC38C,IAAnC,CAAtB;AAGA,UAAI,CAAC08C,aAAL,EAAoB,KAAKE,0BAAL,CAAgC58C,IAAhC;AACrB;A;AAED,SAAK2e,gBAAL,CAAsB,MAAtB;AACA3e,IAAAA,IAAI,CAAC3S,MAAL,GAAc,KAAKwvD,iBAAL,EAAd;AACA,SAAK/8B,SAAL;AACA,WAAO,KAAKhQ,UAAL,CAAgB9P,IAAhB,EAAsB,mBAAtB,CAAP;AACD;A;AAED68C,EAAAA,iBAAiB,GAAsC;AAGrD,WACE,KAAKnB,gBAAL,CAAsB,eAAtB,KACA,MAAMmB,iBAAN,CAAwB,GAAG/7C,SAA3B,CAFF;AAID;A;AAhTsB,CAD3B;A;ACrDA,mBAAgBqL,UAAD,IACb,cAAcA,UAAd,CAAyB;AACvB2wC,EAAAA,gBAAgB,GAAiB;AAC/B,QAAI,KAAKjsD,KAAL,CAAW8hB,OAAE,CAACpX,MAAd,CAAJ,EAA2B;AACzB,YAAMwhD,gBAAgB,GAAG,KAAKn9C,KAAL,CAAWtS,KAApC;AAEA,YAAM0S,IAAI,GAAG,KAAK2P,SAAL,EAAb;AACA,WAAKiP,GAAL,CAASjM,OAAE,CAACpX,MAAZ;A;AACA,UAAI,KAAK1K,KAAL,CAAW8hB,OAAE,CAAClkB,IAAd,CAAJ,EAAyB;AACvB,cAAMA,IAAI,GAAG,KAAK6gD,mBAAL,CAAyB,KAAK1vC,KAAL,CAAWtS,KAApC,CAAb;AACA,cAAM0vD,UAAU,GAAG,KAAK32B,gBAAL,CAAsBrmB,IAAtB,EAA4BvR,IAA5B,CAAnB;AACAuuD,QAAAA,UAAU,CAAC32D,IAAX,GAAkB,uBAAlB;A;AACA,YAAI,KAAKwK,KAAL,CAAW8hB,OAAE,CAACpZ,MAAd,CAAJ,EAA2B;AACzB,iBAAOyjD,UAAP;AACD;AACF;A;AACD,WAAKt8B,UAAL,CAAgBq8B,gBAAhB;AACD;AACF;A;AAMDn8B,EAAAA,aAAa,GAAiB;AAC5B,WAAO,KAAKk8B,gBAAL,MAA2B,MAAMl8B,aAAN,CAAoB,GAAG9f,SAAvB,CAAlC;AACD;A;AAzBsB,CAD3B;A;ACMO,SAAS7B,SAAT,CAAmBC,OAAnB,EAAwCzQ,IAAxC,EAA+D;AACpE,SAAOyQ,OAAO,CAACtT,IAAR,CAAayT,MAAM,IAAI;AAC5B,QAAI1V,KAAK,CAACC,OAAN,CAAcyV,MAAd,CAAJ,EAA2B;AACzB,aAAOA,MAAM,CAAC,CAAD,CAAN,KAAc5Q,IAArB;AACD,KAFD,MAEO;AACL,aAAO4Q,MAAM,KAAK5Q,IAAlB;AACD;AACF,GANM,CAAP;AAOD;AAEM,SAAS2Q,eAAT,CACLF,OADK,EAELzQ,IAFK,EAGLwuD,MAHK,EAIL;AACA,QAAM59C,MAAM,GAAGH,OAAO,CAACo0C,IAAR,CAAaj0C,MAAM,IAAI;AACpC,QAAI1V,KAAK,CAACC,OAAN,CAAcyV,MAAd,CAAJ,EAA2B;AACzB,aAAOA,MAAM,CAAC,CAAD,CAAN,KAAc5Q,IAArB;AACD,KAFD,MAEO;AACL,aAAO4Q,MAAM,KAAK5Q,IAAlB;AACD;AACF,GANc,CAAf;A;AAQA,MAAI4Q,MAAM,IAAI1V,KAAK,CAACC,OAAN,CAAcyV,MAAd,CAAd,EAAqC;AACnC,WAAOA,MAAM,CAAC,CAAD,CAAN,CAAU49C,MAAV,CAAP;AACD;A;AAED,SAAO,IAAP;AACD;AAED,MAAMC,kBAAkB,GAAG,CAAC,SAAD,EAAY,OAAZ,EAAqB,QAArB,CAA3B;AACA,MAAMC,6BAA6B,GAAG,CAAC,MAAD,EAAS,KAAT,CAAtC;AAEO,SAASC,eAAT,CAAyBl+C,OAAzB,EAA8C;AACnD,MAAID,SAAS,CAACC,OAAD,EAAU,YAAV,CAAb,EAAsC;AACpC,QAAID,SAAS,CAACC,OAAD,EAAU,mBAAV,CAAb,EAA6C;AAC3C,YAAM,IAAIgf,KAAJ,CACJ,iEADI,CAAN;AAGD;A;AAED,UAAMm/B,sBAAsB,GAAGj+C,eAAe,CAC5CF,OAD4C,EAE5C,YAF4C,EAG5C,wBAH4C,CAA9C;A;AAKA,QAAIm+C,sBAAsB,IAAI,IAA9B,EAAoC;AAClC,YAAM,IAAIn/B,KAAJ,CACJ,wEACE,2DADF,GAEE,kEAFF,GAGE,qEAJE,CAAN;AAMD,KAPD,MAOO,IAAI,OAAOm/B,sBAAP,KAAkC,SAAtC,EAAiD;AACtD,YAAM,IAAIn/B,KAAJ,CAAU,6CAAV,CAAN;AACD;AACF;A;AAED,MAAIjf,SAAS,CAACC,OAAD,EAAU,MAAV,CAAT,IAA8BD,SAAS,CAACC,OAAD,EAAU,YAAV,CAA3C,EAAoE;AAClE,UAAM,IAAIgf,KAAJ,CAAU,6CAAV,CAAN;AACD;A;AAED,MAAIjf,SAAS,CAACC,OAAD,EAAU,cAAV,CAAT,IAAsCD,SAAS,CAACC,OAAD,EAAU,aAAV,CAAnD,EAA6E;AAC3E,UAAM,IAAIgf,KAAJ,CAAU,sDAAV,CAAN;AACD;A;AAED,MACEjf,SAAS,CAACC,OAAD,EAAU,kBAAV,CAAT,IACA,CAACg+C,kBAAkB,CAACtjC,QAAnB,CACCxa,eAAe,CAACF,OAAD,EAAU,kBAAV,EAA8B,UAA9B,CADhB,CAFH,EAKE;AACA,UAAM,IAAIgf,KAAJ,CACJ,iFACEg/B,kBAAkB,CAAC/zD,GAAnB,CAAuBm0D,CAAC,IAAK,IAAGA,CAAE,GAAlC,EAAsCp1D,IAAtC,CAA2C,IAA3C,CAFE,CAAN;AAID;A;AAED,MAAI+W,SAAS,CAACC,OAAD,EAAU,kBAAV,CAAb,EAA4C;AAKnC;AACL,UAAID,SAAS,CAACC,OAAD,EAAU,kBAAV,CAAb,EAA4C;AAC1C,cAAM,IAAIgf,KAAJ,CACJ,+DADI,CAAN;AAGD;A;AACD,YAAMq/B,kCAAkC,GAAGn+C,eAAe,CACxDF,OADwD,EAExD,kBAFwD,EAGxD,SAHwD,CAA1D;A;AAKA,UAAIq+C,kCAAkC,KAAK,UAA3C,EAAuD;AACrD,cAAM,IAAIr/B,KAAJ,CACJ,+DACE,wDADF,GAEE,sCAHE,CAAN;AAKD;AACF;AACF;A;AAED,MACEjf,SAAS,CAACC,OAAD,EAAU,gBAAV,CAAT,IACA,CAACi+C,6BAA6B,CAACvjC,QAA9B,CACCxa,eAAe,CAACF,OAAD,EAAU,gBAAV,EAA4B,YAA5B,CADhB,CAFH,EAKE;AACA,UAAM,IAAIgf,KAAJ,CACJ,iFACEi/B,6BAA6B,CAACh0D,GAA9B,CAAkCm0D,CAAC,IAAK,IAAGA,CAAE,GAA7C,EAAiDp1D,IAAjD,CAAsD,IAAtD,CAFE,CAAN;AAID;A;AAED,MACE+W,SAAS,CAACC,OAAD,EAAU,oBAAV,CAAT,IACA,CAACD,SAAS,CAACC,OAAD,EAAU,eAAV,CAFZ,EAGE;AACA,UAAMnX,KAAK,GAAG,IAAIm2B,KAAJ,CACZ,8FADY,CAAd;AAIAn2B,IAAAA,KAAK,CAACy1D,cAAN,GAAuB,eAAvB;AACA,UAAMz1D,KAAN;AACD;AACF;AAYM,MAAM01D,YAA6C,GAAG;AAC3DC,EAAAA,MAD2D;AAE3DtvB,EAAAA,GAF2D;AAG3DuvB,EAAAA,IAH2D;AAI3DC,EAAAA,UAJ2D;AAK3DC,EAAAA,WAL2D;AAM3DC,EAAAA;AAN2D,CAAtD;AASA,MAAMC,gBAAwC,GACnDzxD,MAAM,CAAC2F,IAAP,CAAYwrD,YAAZ,CADK;A;ACpIA,MAAMO,cAAuB,GAAG;AAErC1Z,EAAAA,UAAU,EAAE,QAFyB;AAIrC2Z,EAAAA,cAAc,EAAEh5D,SAJqB;AAOrCs/C,EAAAA,SAAS,EAAE,CAP0B;AAUrC2Z,EAAAA,yBAAyB,EAAE,KAVU;AAarCC,EAAAA,0BAA0B,EAAE,KAbS;AAgBrCC,EAAAA,2BAA2B,EAAE,KAhBQ;AAkBrCC,EAAAA,uBAAuB,EAAE,KAlBY;AAoBrCC,EAAAA,sBAAsB,EAAE,KApBa;AAsBrCp/C,EAAAA,OAAO,EAAE,EAtB4B;AAwBrCmlC,EAAAA,UAAU,EAAE,IAxByB;AAiCrCka,EAAAA,MAAM,EAAE,KAjC6B;AAmCrCC,EAAAA,MAAM,EAAE,KAnC6B;AAsCrCC,EAAAA,8BAA8B,EAAE,KAtCK;AAyCrC7yC,EAAAA,aAAa,EAAE;AAzCsB,CAAhC;AA8CA,SAAS8yC,UAAT,CAAoBC,IAApB,EAA6C;AAClD,QAAMzmD,OAAY,GAAG,EAArB;A;AACA,OAAK,MAAM1I,GAAX,IAAkBlD,MAAM,CAAC2F,IAAP,CAAY+rD,cAAZ,CAAlB,EAA+C;AAC7C9lD,IAAAA,OAAO,CAAC1I,GAAD,CAAP,GAAemvD,IAAI,IAAIA,IAAI,CAACnvD,GAAD,CAAJ,IAAa,IAArB,GAA4BmvD,IAAI,CAACnvD,GAAD,CAAhC,GAAwCwuD,cAAc,CAACxuD,GAAD,CAArE;AACD;A;AACD,SAAO0I,OAAP;AACD;A;eC9ED,SAAS0mD,OAAT,CAAiB3gD,IAAjB,EAAuB;AACrB,SAAOA,IAAI,MAAJ,IAAkBA,IAAI,MAA7B;AACD;AAqBD,MAAM4gD,iBAAiB,GAAG,IAAI1qC,GAAJ,CAAQ,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,CAAR,CAA1B;AAKA,MAAM2qC,iCAAiC,GAAG;AACxCC,EAAAA,SAAS,EAAE,kCAD6B;AAWxCC,EAAAA,GAAG,EAAE;AAXmC,CAA1C;AAmBA,MAAMC,+BAA+B,GAAG,EAAxC;AACAA,+BAA+B,CAACC,GAAhC,GAAsC,QAAtC;AAKAD,+BAA+B,CAACE,GAAhC,GAAsC,CAEpC,GAAGF,+BAA+B,CAACC,GAFC,yBAAtC;AAWAD,+BAA+B,CAACG,GAAhC,GAAsC,CAEpC,GAAGH,+BAA+B,CAACE,GAFC,SAAtC;AAQAF,+BAA+B,CAACD,GAAhC,GAAsC,CAEpC,GAAGC,+BAA+B,CAACG,GAFC,oDAAtC;AAuBO,MAAMC,KAAN,CAAY;AACjB7nD,EAAAA,WAAW,CAACoI,KAAD,EAAe;AACxB,SAAKvZ,IAAL,GAAYuZ,KAAK,CAACvZ,IAAlB;AACA,SAAKmG,KAAL,GAAaoT,KAAK,CAACpT,KAAnB;AACA,SAAKc,KAAL,GAAasS,KAAK,CAACtS,KAAnB;AACA,SAAKC,GAAL,GAAWqS,KAAK,CAACrS,GAAjB;AACA,SAAKoS,GAAL,GAAW,IAAIpB,cAAJ,CAAmBqB,KAAK,CAACsL,QAAzB,EAAmCtL,KAAK,CAACyL,MAAzC,CAAX;AACD;A;AAPgB;AAkBJ,MAAMi0C,SAAN,SAAwBC,WAAxB,CAAqC;AAclD/nD,EAAAA,WAAW,CAACU,OAAD,EAAmByG,KAAnB,EAAkC;AAC3C;AAD2C,SAL7CuN,WAK6C;AAAA,SAF7CsyC,MAE6C,GAFV,EAEU;AAE3C,SAAK5+C,KAAL,GAAa,IAAIqjC,KAAJ,EAAb;AACA,SAAKrjC,KAAL,CAAWiyB,IAAX,CAAgB35B,OAAhB;AACA,SAAKyG,KAAL,GAAaA,KAAb;AACA,SAAKrX,MAAL,GAAcqX,KAAK,CAACrX,MAApB;AACA,SAAK4kB,WAAL,GAAmB,KAAnB;AACD;A;AAEDszC,EAAAA,SAAS,CAACrnD,KAAD,EAA2B;AAGlC,SAAKqmD,MAAL,CAAYl3D,MAAZ,GAAqB,KAAKsY,KAAL,CAAWwkC,YAAhC;AACA,SAAKoa,MAAL,CAAYz5D,IAAZ,CAAiBoT,KAAjB;AACA,MAAE,KAAKyH,KAAL,CAAWwkC,YAAb;AACD;A;AAIDrvB,EAAAA,IAAI,GAAS;AACX,SAAK0qC,mBAAL;A;AACA,QAAI,KAAKvnD,OAAL,CAAasmD,MAAjB,EAAyB;AACvB,WAAKgB,SAAL,CAAe,IAAIH,KAAJ,CAAU,KAAKz/C,KAAf,CAAf;AACD;A;AAED,SAAKA,KAAL,CAAW0L,UAAX,GAAwB,KAAK1L,KAAL,CAAWrS,GAAnC;AACA,SAAKqS,KAAL,CAAWuL,YAAX,GAA0B,KAAKvL,KAAL,CAAWtS,KAArC;AACA,SAAKsS,KAAL,CAAW2L,aAAX,GAA2B,KAAK3L,KAAL,CAAWyL,MAAtC;AACA,SAAKzL,KAAL,CAAWwL,eAAX,GAA6B,KAAKxL,KAAL,CAAWsL,QAAxC;AACA,SAAK+kB,SAAL;AACD;A;AAIDrR,EAAAA,GAAG,CAACv4B,IAAD,EAA2B;AAC5B,QAAI,KAAKwK,KAAL,CAAWxK,IAAX,CAAJ,EAAsB;AACpB,WAAK0uB,IAAL;AACA,aAAO,IAAP;AACD,KAHD,MAGO;AACL,aAAO,KAAP;AACD;AACF;A;AAIDlkB,EAAAA,KAAK,CAACxK,IAAD,EAA2B;AAC9B,WAAO,KAAKuZ,KAAL,CAAWvZ,IAAX,KAAoBA,IAA3B;AACD;A;AASDyhD,EAAAA,oBAAoB,CAACloC,KAAD,EAA+B;AACjD,WAAO;AACLqL,MAAAA,GAAG,EAAErL,KAAK,CAACqL,GADN;AAELze,MAAAA,KAAK,EAAE,IAFF;AAGLnG,MAAAA,IAAI,EAAEuZ,KAAK,CAACvZ,IAHP;AAILiH,MAAAA,KAAK,EAAEsS,KAAK,CAACtS,KAJR;AAKLC,MAAAA,GAAG,EAAEqS,KAAK,CAACrS,GALN;AAML+d,MAAAA,UAAU,EAAE1L,KAAK,CAACrS,GANb;AAOLqlB,MAAAA,OAAO,EAAE,CAAC,KAAKG,UAAL,EAAD,CAPJ;AAQLF,MAAAA,WAAW,EAAEjT,KAAK,CAACiT,WARd;AASLyL,MAAAA,MAAM,EAAE1e,KAAK,CAAC0e;AATT,KAAP;AAWD;A;AAkBD2F,EAAAA,SAAS,GAAmB;AAC1B,UAAMy7B,GAAG,GAAG,KAAK9/C,KAAjB;AAGA,SAAKA,KAAL,GAAa,KAAKkoC,oBAAL,CAA0B4X,GAA1B,CAAb;AAEA,SAAKxzC,WAAL,GAAmB,IAAnB;AACA,SAAK+jB,SAAL;AACA,SAAK/jB,WAAL,GAAmB,KAAnB;AAEA,UAAMyzC,IAAI,GAAG,KAAK//C,KAAlB;AACA,SAAKA,KAAL,GAAa8/C,GAAb;AACA,WAAOC,IAAP;AACD;A;AAEDvsB,EAAAA,cAAc,GAAW;AACvB,WAAO,KAAKmpB,mBAAL,CAAyB,KAAK38C,KAAL,CAAWqL,GAApC,CAAP;AACD;A;AAEDsxC,EAAAA,mBAAmB,CAACtxC,GAAD,EAAsB;AACvC/M,IAAAA,cAAc,CAACjN,SAAf,GAA2Bga,GAA3B;AACA,UAAM20C,IAAI,GAAG1hD,cAAc,CAACpN,IAAf,CAAoB,KAAK6N,KAAzB,CAAb;AAEA,WAAOsM,GAAG,GAAG20C,IAAI,CAAC,CAAD,CAAJ,CAAQt4D,MAArB;AACD;A;AAEDyrD,EAAAA,iBAAiB,GAAW;AAC1B,WAAO,KAAKp0C,KAAL,CAAWzN,UAAX,CAAsB,KAAKkiC,cAAL,EAAtB,CAAP;AACD;A;AAEDysB,EAAAA,cAAc,CAAC50C,GAAD,EAAsB;AAKlC,QAAI60C,EAAE,GAAG,KAAKnhD,KAAL,CAAWzN,UAAX,CAAsB+Z,GAAtB,CAAT;A;AACA,QAAI,CAAC60C,EAAE,GAAG,MAAN,MAAkB,MAAlB,IAA4B,EAAE70C,GAAF,GAAQ,KAAKtM,KAAL,CAAWrX,MAAnD,EAA2D;AACzD,YAAMy4D,KAAK,GAAG,KAAKphD,KAAL,CAAWzN,UAAX,CAAsB+Z,GAAtB,CAAd;A;AACA,UAAI,CAAC80C,KAAK,GAAG,MAAT,MAAqB,MAAzB,EAAiC;AAC/BD,QAAAA,EAAE,GAAG,WAAW,CAACA,EAAE,GAAG,KAAN,KAAgB,EAA3B,KAAkCC,KAAK,GAAG,KAA1C,CAAL;AACD;AACF;A;AACD,WAAOD,EAAP;AACD;A;AAKDE,EAAAA,SAAS,CAAC/rC,MAAD,EAAwB;AAC/B,SAAKrU,KAAL,CAAWqU,MAAX,GAAoBA,MAApB;A;AACA,QAAIA,MAAJ,EAAY;AAKV,WAAKrU,KAAL,CAAWskC,YAAX,CAAwBt9C,OAAxB,CAAgC,CAACoB,OAAD,EAAUijB,GAAV,KAE9B,KAAKO,KAAL,CAAWP,GAAX,EAAgBjjB,OAAhB,CAFF;AAIA,WAAK4X,KAAL,CAAWskC,YAAX,CAAwB/8C,KAAxB;AACD;AACF;A;AAED4rB,EAAAA,UAAU,GAAe;AACvB,WAAO,KAAKnT,KAAL,CAAWgT,OAAX,CAAmB,KAAKhT,KAAL,CAAWgT,OAAX,CAAmBtrB,MAAnB,GAA4B,CAA/C,CAAP;AACD;A;AAKD2oC,EAAAA,SAAS,GAAS;AAChB,UAAMld,UAAU,GAAG,KAAKA,UAAL,EAAnB;AACA,QAAI,CAACA,UAAU,CAACb,aAAhB,EAA+B,KAAK+tC,SAAL;AAC/B,SAAKrgD,KAAL,CAAWtS,KAAX,GAAmB,KAAKsS,KAAL,CAAWqL,GAA9B;AACA,QAAI,CAAC,KAAKiB,WAAV,EAAuB,KAAKtM,KAAL,CAAWsL,QAAX,GAAsB,KAAKtL,KAAL,CAAW4kC,WAAX,EAAtB;A;AACvB,QAAI,KAAK5kC,KAAL,CAAWqL,GAAX,IAAkB,KAAK3jB,MAA3B,EAAmC;AACjC,WAAK02B,WAAL,CAAiBrL,OAAE,CAAC/Z,GAApB;AACA;AACD;A;AAED,QAAIma,UAAU,KAAKixB,KAAE,CAAC/pC,QAAtB,EAAgC;AAC9B,WAAKimD,aAAL;AACD,KAFD,MAEO;AACL,WAAKr1B,gBAAL,CAAsB,KAAKg1B,cAAL,CAAoB,KAAKjgD,KAAL,CAAWqL,GAA/B,CAAtB;AACD;AACF;A;AAEDk1C,EAAAA,WAAW,CACTC,KADS,EAETC,IAFS,EAGT/yD,KAHS,EAITC,GAJS,EAKT2d,QALS,EAMTG,MANS,EAOH;AACN,UAAM3L,OAAO,GAAG;AACdrZ,MAAAA,IAAI,EAAE+5D,KAAK,GAAG,cAAH,GAAoB,aADjB;AAEd5zD,MAAAA,KAAK,EAAE6zD,IAFO;AAGd/yD,MAAAA,KAAK,EAAEA,KAHO;AAIdC,MAAAA,GAAG,EAAEA,GAJS;AAKdoS,MAAAA,GAAG,EAAE,IAAIpB,cAAJ,CAAmB2M,QAAnB,EAA6BG,MAA7B;AALS,KAAhB;AAQA,QAAI,KAAKnT,OAAL,CAAasmD,MAAjB,EAAyB,KAAKgB,SAAL,CAAe9/C,OAAf;AACzB,SAAKE,KAAL,CAAWmkC,QAAX,CAAoBh/C,IAApB,CAAyB2a,OAAzB;AACA,SAAKD,UAAL,CAAgBC,OAAhB;AACD;A;AAED6wB,EAAAA,gBAAgB,GAAS;AACvB,QAAIrlB,QAAJ;AACA,QAAI,CAAC,KAAKgB,WAAV,EAAuBhB,QAAQ,GAAG,KAAKtL,KAAL,CAAW4kC,WAAX,EAAX;AACvB,UAAMl3C,KAAK,GAAG,KAAKsS,KAAL,CAAWqL,GAAzB;AACA,UAAM1d,GAAG,GAAG,KAAKoR,KAAL,CAAWpZ,OAAX,CAAmB,IAAnB,EAAyB,KAAKqa,KAAL,CAAWqL,GAAX,GAAiB,CAA1C,CAAZ;AACA,QAAI1d,GAAG,KAAK,CAAC,CAAb,EAAgB,MAAM,KAAKie,KAAL,CAAWle,KAAX,EAAkBujB,aAAM,CAAC5G,mBAAzB,CAAN;AAEhB,SAAKrK,KAAL,CAAWqL,GAAX,GAAiB1d,GAAG,GAAG,CAAvB;AACAwQ,IAAAA,UAAU,CAAC9M,SAAX,GAAuB3D,KAAvB;AACA,QAAIuD,KAAJ;A;AACA,WACE,CAACA,KAAK,GAAGkN,UAAU,CAACjN,IAAX,CAAgB,KAAK6N,KAArB,CAAT,KACA9N,KAAK,CAACG,KAAN,GAAc,KAAK4O,KAAL,CAAWqL,GAF3B,EAGE;AACA,QAAE,KAAKrL,KAAL,CAAWsjC,OAAb;AACA,WAAKtjC,KAAL,CAAWf,SAAX,GAAuBhO,KAAK,CAACG,KAAN,GAAcH,KAAK,CAAC,CAAD,CAAL,CAASvJ,MAA9C;AACD;A;AAID,QAAI,KAAK4kB,WAAT,EAAsB;AAGtB,SAAKi0C,WAAL,CACE,IADF,EAEE,KAAKxhD,KAAL,CAAWjK,KAAX,CAAiBpH,KAAK,GAAG,CAAzB,EAA4BC,GAA5B,CAFF,EAGED,KAHF,EAIE,KAAKsS,KAAL,CAAWqL,GAJb,EAKEC,QALF,EAME,KAAKtL,KAAL,CAAW4kC,WAAX,EANF;AAQD;A;AAED8b,EAAAA,eAAe,CAACC,SAAD,EAA0B;AACvC,UAAMjzD,KAAK,GAAG,KAAKsS,KAAL,CAAWqL,GAAzB;AACA,QAAIC,QAAJ;AACA,QAAI,CAAC,KAAKgB,WAAV,EAAuBhB,QAAQ,GAAG,KAAKtL,KAAL,CAAW4kC,WAAX,EAAX;AACvB,QAAIsB,EAAE,GAAG,KAAKnnC,KAAL,CAAWzN,UAAX,CAAuB,KAAK0O,KAAL,CAAWqL,GAAX,IAAkBs1C,SAAzC,CAAT;A;AACA,QAAI,KAAK3gD,KAAL,CAAWqL,GAAX,GAAiB,KAAK3jB,MAA1B,EAAkC;AAChC,aAAO,CAAC0W,SAAS,CAAC8nC,EAAD,CAAV,IAAkB,EAAE,KAAKlmC,KAAL,CAAWqL,GAAb,GAAmB,KAAK3jB,MAAjD,EAAyD;AACvDw+C,QAAAA,EAAE,GAAG,KAAKnnC,KAAL,CAAWzN,UAAX,CAAsB,KAAK0O,KAAL,CAAWqL,GAAjC,CAAL;AACD;AACF;A;AAID,QAAI,KAAKiB,WAAT,EAAsB;AAGtB,SAAKi0C,WAAL,CACE,KADF,EAEE,KAAKxhD,KAAL,CAAWjK,KAAX,CAAiBpH,KAAK,GAAGizD,SAAzB,EAAoC,KAAK3gD,KAAL,CAAWqL,GAA/C,CAFF,EAGE3d,KAHF,EAIE,KAAKsS,KAAL,CAAWqL,GAJb,EAKEC,QALF,EAME,KAAKtL,KAAL,CAAW4kC,WAAX,EANF;AAQD;A;AAKDyb,EAAAA,SAAS,GAAS;AAChBO,IAAAA,IAAI,EAAE,OAAO,KAAK5gD,KAAL,CAAWqL,GAAX,GAAiB,KAAK3jB,MAA7B,EAAqC;AACzC,YAAMw+C,EAAE,GAAG,KAAKnnC,KAAL,CAAWzN,UAAX,CAAsB,KAAK0O,KAAL,CAAWqL,GAAjC,CAAX;A;AACA,cAAQ66B,EAAR;AACE;AACA;AACA;AACE,YAAE,KAAKlmC,KAAL,CAAWqL,GAAb;AACA;A;AACF;AACE,cACE,KAAKtM,KAAL,CAAWzN,UAAX,CAAsB,KAAK0O,KAAL,CAAWqL,GAAX,GAAiB,CAAvC,QADF,EAEE;AACA,cAAE,KAAKrL,KAAL,CAAWqL,GAAb;AACD;A;AAEH;AACA;AACA;AACE,YAAE,KAAKrL,KAAL,CAAWqL,GAAb;AACA,YAAE,KAAKrL,KAAL,CAAWsjC,OAAb;AACA,eAAKtjC,KAAL,CAAWf,SAAX,GAAuB,KAAKe,KAAL,CAAWqL,GAAlC;AACA;A;AAEF;AACE,kBAAQ,KAAKtM,KAAL,CAAWzN,UAAX,CAAsB,KAAK0O,KAAL,CAAWqL,GAAX,GAAiB,CAAvC,CAAR;AACE;AACE,mBAAKslB,gBAAL;AACA;A;AAEF;AACE,mBAAK+vB,eAAL,CAAqB,CAArB;AACA;A;AAEF;AACE,oBAAME,IAAN;AAVJ;A;AAYA;A;AAEF;AACE,cAAIriD,YAAY,CAAC2nC,EAAD,CAAhB,EAAsB;AACpB,cAAE,KAAKlmC,KAAL,CAAWqL,GAAb;AACD,WAFD,MAEO;AACL,kBAAMu1C,IAAN;AACD;A;AAzCL;AA2CD;AACF;A;AAODxiC,EAAAA,WAAW,CAAC33B,IAAD,EAAkBwG,GAAlB,EAAkC;AAC3C,SAAK+S,KAAL,CAAWrS,GAAX,GAAiB,KAAKqS,KAAL,CAAWqL,GAA5B;AACA,UAAM+H,QAAQ,GAAG,KAAKpT,KAAL,CAAWvZ,IAA5B;AACA,SAAKuZ,KAAL,CAAWvZ,IAAX,GAAkBA,IAAlB;AACA,SAAKuZ,KAAL,CAAWpT,KAAX,GAAmBK,GAAnB;A;AAEA,QAAI,CAAC,KAAKqf,WAAV,EAAuB;AACrB,WAAKtM,KAAL,CAAWyL,MAAX,GAAoB,KAAKzL,KAAL,CAAW4kC,WAAX,EAApB;AACA,WAAK1sC,aAAL,CAAmBkb,QAAnB;AACD;AACF;A;AAYDytC,EAAAA,oBAAoB,GAAS;AAC3B,QAAI,KAAK7gD,KAAL,CAAWqL,GAAX,KAAmB,CAAnB,IAAwB,KAAKy1C,qBAAL,EAA5B,EAA0D;AACxD;AACD;A;AAED,UAAMC,OAAO,GAAG,KAAK/gD,KAAL,CAAWqL,GAAX,GAAiB,CAAjC;AACA,UAAM8J,IAAI,GAAG,KAAK8qC,cAAL,CAAoBc,OAApB,CAAb;A;AACA,QAAI5rC,IAAI,MAAJ,IAA4BA,IAAI,MAApC,EAA0D;AACxD,YAAM,KAAKvJ,KAAL,CAAW,KAAK5L,KAAL,CAAWqL,GAAtB,EAA2B4F,aAAM,CAAChI,wBAAlC,CAAN;AACD;A;AAED,QACEkM,IAAI,QAAJ,IACCA,IAAI,OAAJ,IAAwC,KAAK9V,SAAL,CAAe,gBAAf,CAF3C,EAGE;AAKA,WAAKo9C,YAAL,CAAkB,gBAAlB;A;AACA,UAAI,KAAKj9C,eAAL,CAAqB,gBAArB,EAAuC,YAAvC,MAAyD,MAA7D,EAAqE;AACnE,cAAM,KAAKoM,KAAL,CACJ,KAAK5L,KAAL,CAAWqL,GADP,EAEJ8J,IAAI,QAAJ,GACIlE,aAAM,CAACpJ,4CADX,GAEIoJ,aAAM,CAACnI,2CAJP,CAAN;AAMD;A;AAED,UAAIqM,IAAI,QAAR,EAAuC;AAErC,aAAKiJ,WAAL,CAAiBrL,OAAE,CAACvZ,UAApB;AACD,OAHD,MAGO;AAEL,aAAK4kB,WAAL,CAAiBrL,OAAE,CAAC7Z,YAApB;AACD;A;AACD,WAAK8G,KAAL,CAAWqL,GAAX,IAAkB,CAAlB;AACD,KA1BD,MA0BO,IAAI4I,iBAAiB,CAACkB,IAAD,CAArB,EAA6B;AAClC,QAAE,KAAKnV,KAAL,CAAWqL,GAAb;AACA,WAAK+S,WAAL,CAAiBrL,OAAE,CAACha,WAApB,EAAiC,KAAKgyB,SAAL,CAAe5V,IAAf,CAAjC;AACD,KAHM,MAGA,IAAIA,IAAI,OAAR,EAAkC;AACvC,QAAE,KAAKnV,KAAL,CAAWqL,GAAb;AACA,WAAK+S,WAAL,CAAiBrL,OAAE,CAACha,WAApB,EAAiC,KAAKgyB,SAAL,EAAjC;AACD,KAHM,MAGA;AACL,WAAKG,QAAL,CAAcnY,OAAE,CAACrY,IAAjB,EAAuB,CAAvB;AACD;AACF;A;AAEDsmD,EAAAA,aAAa,GAAS;AACpB,UAAM7rC,IAAI,GAAG,KAAKpW,KAAL,CAAWzN,UAAX,CAAsB,KAAK0O,KAAL,CAAWqL,GAAX,GAAiB,CAAvC,CAAb;A;AACA,QAAI8J,IAAI,MAAJ,IAA4BA,IAAI,MAApC,EAA0D;AACxD,WAAK8rC,UAAL,CAAgB,IAAhB;AACA;AACD;A;AAED,QACE9rC,IAAI,OAAJ,IACA,KAAKpW,KAAL,CAAWzN,UAAX,CAAsB,KAAK0O,KAAL,CAAWqL,GAAX,GAAiB,CAAvC,QAFF,EAGE;AACA,WAAKrL,KAAL,CAAWqL,GAAX,IAAkB,CAAlB;AACA,WAAK+S,WAAL,CAAiBrL,OAAE,CAACzY,QAApB;AACD,KAND,MAMO;AACL,QAAE,KAAK0F,KAAL,CAAWqL,GAAb;AACA,WAAK+S,WAAL,CAAiBrL,OAAE,CAAC9Y,GAApB;AACD;AACF;A;AAEDinD,EAAAA,eAAe,GAAS;AAEtB,QAAI,KAAKlhD,KAAL,CAAWiT,WAAX,IAA0B,CAAC,KAAKjT,KAAL,CAAW0e,MAA1C,EAAkD;AAChD,QAAE,KAAK1e,KAAL,CAAWqL,GAAb;AACA,WAAK81C,UAAL;AACA;AACD;A;AAED,UAAMhsC,IAAI,GAAG,KAAKpW,KAAL,CAAWzN,UAAX,CAAsB,KAAK0O,KAAL,CAAWqL,GAAX,GAAiB,CAAvC,CAAb;A;AACA,QAAI8J,IAAI,OAAR,EAAiC;AAC/B,WAAK+V,QAAL,CAAcnY,OAAE,CAAC/e,MAAjB,EAAyB,CAAzB;AACD,KAFD,MAEO;AACL,WAAKk3B,QAAL,CAAcnY,OAAE,CAAClX,KAAjB,EAAwB,CAAxB;AACD;AACF;A;AAEDilD,EAAAA,qBAAqB,GAAY;AAC/B,QAAI,KAAK9gD,KAAL,CAAWqL,GAAX,KAAmB,CAAnB,IAAwB,KAAK3jB,MAAL,GAAc,CAA1C,EAA6C,OAAO,KAAP;AAE7C,QAAIw+C,EAAE,GAAG,KAAKnnC,KAAL,CAAWzN,UAAX,CAAsB,KAAK0O,KAAL,CAAWqL,GAAX,GAAiB,CAAvC,CAAT;AACA,QAAI66B,EAAE,OAAN,EAAsC,OAAO,KAAP;AAEtC,UAAMx4C,KAAK,GAAG,KAAKsS,KAAL,CAAWqL,GAAzB;AACA,SAAKrL,KAAL,CAAWqL,GAAX,IAAkB,CAAlB;A;AAEA,WAAO,CAACjN,SAAS,CAAC8nC,EAAD,CAAV,IAAkB,EAAE,KAAKlmC,KAAL,CAAWqL,GAAb,GAAmB,KAAK3jB,MAAjD,EAAyD;AACvDw+C,MAAAA,EAAE,GAAG,KAAKnnC,KAAL,CAAWzN,UAAX,CAAsB,KAAK0O,KAAL,CAAWqL,GAAjC,CAAL;AACD;A;AAED,UAAMze,KAAK,GAAG,KAAKmS,KAAL,CAAWjK,KAAX,CAAiBpH,KAAK,GAAG,CAAzB,EAA4B,KAAKsS,KAAL,CAAWqL,GAAvC,CAAd;AAEA,SAAK+S,WAAL,CAAiBrL,OAAE,CAACpY,oBAApB,EAA0C/N,KAA1C;AAEA,WAAO,IAAP;AACD;A;AAEDujC,EAAAA,qBAAqB,CAAC9xB,IAAD,EAAqB;AAExC,QAAI5X,IAAI,GAAG4X,IAAI,OAAJ,GAA8B0U,OAAE,CAACnX,IAAjC,GAAwCmX,OAAE,CAACpX,MAAtD;AACA,QAAIylD,KAAK,GAAG,CAAZ;AACA,QAAIjsC,IAAI,GAAG,KAAKpW,KAAL,CAAWzN,UAAX,CAAsB,KAAK0O,KAAL,CAAWqL,GAAX,GAAiB,CAAvC,CAAX;AACA,UAAM4H,WAAW,GAAG,KAAKjT,KAAL,CAAWiT,WAA/B;A;AAGA,QAAI5U,IAAI,OAAJ,IAA+B8W,IAAI,OAAvC,EAAgE;AAC9DisC,MAAAA,KAAK;AACLjsC,MAAAA,IAAI,GAAG,KAAKpW,KAAL,CAAWzN,UAAX,CAAsB,KAAK0O,KAAL,CAAWqL,GAAX,GAAiB,CAAvC,CAAP;AACA5kB,MAAAA,IAAI,GAAGssB,OAAE,CAACjX,QAAV;AACD;A;AAED,QAAIqZ,IAAI,OAAJ,IAA+B,CAAClC,WAApC,EAAiD;AAC/CmuC,MAAAA,KAAK;AACL36D,MAAAA,IAAI,GAAGssB,OAAE,CAAC/e,MAAV;AACD;A;AAED,SAAKk3B,QAAL,CAAczkC,IAAd,EAAoB26D,KAApB;AACD;A;AAED9wB,EAAAA,kBAAkB,CAACjyB,IAAD,EAAqB;AAErC,UAAM8W,IAAI,GAAG,KAAKpW,KAAL,CAAWzN,UAAX,CAAsB,KAAK0O,KAAL,CAAWqL,GAAX,GAAiB,CAAvC,CAAb;A;AAEA,QAAI8J,IAAI,KAAK9W,IAAb,EAAmB;AACjB,UAAI,KAAKU,KAAL,CAAWzN,UAAX,CAAsB,KAAK0O,KAAL,CAAWqL,GAAX,GAAiB,CAAvC,QAAJ,EAAsE;AACpE,aAAK6f,QAAL,CAAcnY,OAAE,CAAC/e,MAAjB,EAAyB,CAAzB;AACD,OAFD,MAEO;AACL,aAAKk3B,QAAL,CACE7sB,IAAI,QAAJ,GAAiC0U,OAAE,CAAC7X,SAApC,GAAgD6X,OAAE,CAAC5X,UADrD,EAEE,CAFF;AAID;A;AACD;AACD;A;AAED,QAAIkD,IAAI,QAAR,EAAoC;AAElC,UAAI8W,IAAI,OAAR,EAAoC;AAClC,aAAK+V,QAAL,CAAcnY,OAAE,CAAC/X,QAAjB,EAA2B,CAA3B;AACA;AACD;A;AAED,UACE,KAAKqE,SAAL,CAAe,gBAAf,KACA8V,IAAI,QAFN,EAGE;AACA,YAAI,KAAK3V,eAAL,CAAqB,gBAArB,EAAuC,YAAvC,MAAyD,KAA7D,EAAoE;AAClE,gBAAM,KAAKoM,KAAL,CACJ,KAAK5L,KAAL,CAAWqL,GADP,EAEJ4F,aAAM,CAACtJ,yCAFH,CAAN;AAID;A;AAED,aAAKujB,QAAL,CAAcnY,OAAE,CAACrZ,SAAjB,EAA4B,CAA5B;AACA;AACD;A;AAGD,UACE,KAAK2F,SAAL,CAAe,gBAAf,KACA8V,IAAI,OAFN,EAGE;AACA,YAAI,KAAK3V,eAAL,CAAqB,gBAArB,EAAuC,YAAvC,MAAyD,KAA7D,EAAoE;AAClE,gBAAM,KAAKoM,KAAL,CACJ,KAAK5L,KAAL,CAAWqL,GADP,EAEJ4F,aAAM,CAACrI,wCAFH,CAAN;AAID;A;AAED,aAAKsiB,QAAL,CAAcnY,OAAE,CAAC1Z,WAAjB,EAA8B,CAA9B;AACA;AACD;AACF;A;AAED,QAAI8b,IAAI,OAAR,EAAiC;AAC/B,WAAK+V,QAAL,CAAcnY,OAAE,CAAC/e,MAAjB,EAAyB,CAAzB;AACA;AACD;A;AAED,SAAKk3B,QAAL,CACE7sB,IAAI,QAAJ,GAAiC0U,OAAE,CAAC3X,SAApC,GAAgD2X,OAAE,CAACzX,UADrD,EAEE,CAFF;AAID;A;AAED+lD,EAAAA,eAAe,GAAS;AAEtB,UAAMlsC,IAAI,GAAG,KAAKpW,KAAL,CAAWzN,UAAX,CAAsB,KAAK0O,KAAL,CAAWqL,GAAX,GAAiB,CAAvC,CAAb;A;AACA,QAAI8J,IAAI,OAAR,EAAiC;AAC/B,WAAK+V,QAAL,CAAcnY,OAAE,CAAC/e,MAAjB,EAAyB,CAAzB;AACD,KAFD,MAEO;AACL,WAAKk3B,QAAL,CAAcnY,OAAE,CAAC1X,UAAjB,EAA6B,CAA7B;AACD;AACF;A;AAEDimD,EAAAA,kBAAkB,CAACjjD,IAAD,EAAqB;AAErC,UAAM8W,IAAI,GAAG,KAAKpW,KAAL,CAAWzN,UAAX,CAAsB,KAAK0O,KAAL,CAAWqL,GAAX,GAAiB,CAAvC,CAAb;A;AAEA,QAAI8J,IAAI,KAAK9W,IAAb,EAAmB;AACjB,UACE8W,IAAI,OAAJ,IACA,CAAC,KAAKP,QADN,IAEA,KAAK7V,KAAL,CAAWzN,UAAX,CAAsB,KAAK0O,KAAL,CAAWqL,GAAX,GAAiB,CAAvC,QAFA,KAGC,KAAKrL,KAAL,CAAW0L,UAAX,KAA0B,CAA1B,IAA+B,KAAK8H,qBAAL,EAHhC,CADF,EAKE;AAEA,aAAKktC,eAAL,CAAqB,CAArB;AACA,aAAKL,SAAL;AACA,aAAKhwB,SAAL;AACA;AACD;A;AACD,WAAKnF,QAAL,CAAcnY,OAAE,CAAClY,MAAjB,EAAyB,CAAzB;AACA;AACD;A;AAED,QAAIsa,IAAI,OAAR,EAAiC;AAC/B,WAAK+V,QAAL,CAAcnY,OAAE,CAAC/e,MAAjB,EAAyB,CAAzB;AACD,KAFD,MAEO;AACL,WAAKk3B,QAAL,CAAcnY,OAAE,CAACrX,OAAjB,EAA0B,CAA1B;AACD;AACF;A;AAEDq/C,EAAAA,eAAe,CAAC18C,IAAD,EAAqB;AAElC,UAAM8W,IAAI,GAAG,KAAKpW,KAAL,CAAWzN,UAAX,CAAsB,KAAK0O,KAAL,CAAWqL,GAAX,GAAiB,CAAvC,CAAb;AACA,QAAIrY,IAAI,GAAG,CAAX;A;AAEA,QAAImiB,IAAI,KAAK9W,IAAb,EAAmB;AACjBrL,MAAAA,IAAI,GACFqL,IAAI,OAAJ,IACA,KAAKU,KAAL,CAAWzN,UAAX,CAAsB,KAAK0O,KAAL,CAAWqL,GAAX,GAAiB,CAAvC,QADA,GAEI,CAFJ,GAGI,CAJN;A;AAKA,UAAI,KAAKtM,KAAL,CAAWzN,UAAX,CAAsB,KAAK0O,KAAL,CAAWqL,GAAX,GAAiBrY,IAAvC,QAAJ,EAAyE;AACvE,aAAKk4B,QAAL,CAAcnY,OAAE,CAAC/e,MAAjB,EAAyBhB,IAAI,GAAG,CAAhC;AACA;AACD;A;AACD,WAAKk4B,QAAL,CAAcnY,OAAE,CAACtX,QAAjB,EAA2BzI,IAA3B;AACA;AACD;A;AAED,QACEmiB,IAAI,OAAJ,IACA9W,IAAI,OADJ,IAEA,CAAC,KAAKuW,QAFN,IAGA,KAAK7V,KAAL,CAAWzN,UAAX,CAAsB,KAAK0O,KAAL,CAAWqL,GAAX,GAAiB,CAAvC,QAHA,IAIA,KAAKtM,KAAL,CAAWzN,UAAX,CAAsB,KAAK0O,KAAL,CAAWqL,GAAX,GAAiB,CAAvC,QALF,EAME;AAEA,WAAKq1C,eAAL,CAAqB,CAArB;AACA,WAAKL,SAAL;AACA,WAAKhwB,SAAL;AACA;AACD;A;AAED,QAAIlb,IAAI,OAAR,EAAiC;AAE/BniB,MAAAA,IAAI,GAAG,CAAP;AACD;A;AAED,SAAKk4B,QAAL,CAAcnY,OAAE,CAACvX,UAAjB,EAA6BxI,IAA7B;AACD;A;AAEDuuD,EAAAA,iBAAiB,CAACljD,IAAD,EAAqB;AAEpC,UAAM8W,IAAI,GAAG,KAAKpW,KAAL,CAAWzN,UAAX,CAAsB,KAAK0O,KAAL,CAAWqL,GAAX,GAAiB,CAAvC,CAAb;A;AACA,QAAI8J,IAAI,OAAR,EAAiC;AAC/B,WAAK+V,QAAL,CACEnY,OAAE,CAACxX,QADL,EAEE,KAAKwD,KAAL,CAAWzN,UAAX,CAAsB,KAAK0O,KAAL,CAAWqL,GAAX,GAAiB,CAAvC,WACI,CADJ,GAEI,CAJN;AAMA;AACD;A;AACD,QAAIhN,IAAI,OAAJ,IAA+B8W,IAAI,OAAvC,EAAmE;AAEjE,WAAKnV,KAAL,CAAWqL,GAAX,IAAkB,CAAlB;AACA,WAAK+S,WAAL,CAAiBrL,OAAE,CAAC3Y,KAApB;AACA;AACD;A;AACD,SAAK8wB,QAAL,CAAc7sB,IAAI,OAAJ,GAA8B0U,OAAE,CAACnY,EAAjC,GAAsCmY,OAAE,CAACjY,IAAvD,EAA6D,CAA7D;AACD;A;AAED0mD,EAAAA,kBAAkB,GAAS;AAEzB,UAAMrsC,IAAI,GAAG,KAAKpW,KAAL,CAAWzN,UAAX,CAAsB,KAAK0O,KAAL,CAAWqL,GAAX,GAAiB,CAAvC,CAAb;AACA,UAAMo2C,KAAK,GAAG,KAAK1iD,KAAL,CAAWzN,UAAX,CAAsB,KAAK0O,KAAL,CAAWqL,GAAX,GAAiB,CAAvC,CAAd;A;AACA,QAAI8J,IAAI,OAAR,EAAqC;AACnC,UAAIssC,KAAK,OAAT,EAAkC;AAEhC,aAAKv2B,QAAL,CAAcnY,OAAE,CAAC/e,MAAjB,EAAyB,CAAzB;AACD,OAHD,MAGO;AAEL,aAAKk3B,QAAL,CAAcnY,OAAE,CAAC9X,iBAAjB,EAAoC,CAApC;AACD;AACF,KARD,MAQO,IACLka,IAAI,OAAJ,IACA,EAAEssC,KAAK,MAAL,IAA6BA,KAAK,MAApC,CAFK,EAGL;AAEA,WAAKzhD,KAAL,CAAWqL,GAAX,IAAkB,CAAlB;AACA,WAAK+S,WAAL,CAAiBrL,OAAE,CAAC5Y,WAApB;AACD,KAPM,MAOA;AACL,QAAE,KAAK6F,KAAL,CAAWqL,GAAb;AACA,WAAK+S,WAAL,CAAiBrL,OAAE,CAAC7Y,QAApB;AACD;AACF;A;AAED+wB,EAAAA,gBAAgB,CAAC5sB,IAAD,EAAqB;AACnC,YAAQA,IAAR;AAIE;AACE,aAAK2iD,aAAL;AACA;A;AAGF;AACE,UAAE,KAAKhhD,KAAL,CAAWqL,GAAb;AACA,aAAK+S,WAAL,CAAiBrL,OAAE,CAACpZ,MAApB;AACA;A;AACF;AACE,UAAE,KAAKqG,KAAL,CAAWqL,GAAb;AACA,aAAK+S,WAAL,CAAiBrL,OAAE,CAACnZ,MAApB;AACA;A;AACF;AACE,UAAE,KAAKoG,KAAL,CAAWqL,GAAb;AACA,aAAK+S,WAAL,CAAiBrL,OAAE,CAACjZ,IAApB;AACA;A;AACF;AACE,UAAE,KAAKkG,KAAL,CAAWqL,GAAb;AACA,aAAK+S,WAAL,CAAiBrL,OAAE,CAAClZ,KAApB;AACA;A;AACF;AACE,YACE,KAAKwF,SAAL,CAAe,gBAAf,KACA,KAAKN,KAAL,CAAWzN,UAAX,CAAsB,KAAK0O,KAAL,CAAWqL,GAAX,GAAiB,CAAvC,SAFF,EAGE;AACA,cAAI,KAAK7L,eAAL,CAAqB,gBAArB,EAAuC,YAAvC,MAAyD,KAA7D,EAAoE;AAClE,kBAAM,KAAKoM,KAAL,CACJ,KAAK5L,KAAL,CAAWqL,GADP,EAEJ4F,aAAM,CAACpI,0CAFH,CAAN;AAID;A;AAGD,eAAKuV,WAAL,CAAiBrL,OAAE,CAAC5Z,WAApB;AACA,eAAK6G,KAAL,CAAWqL,GAAX,IAAkB,CAAlB;AACD,SAdD,MAcO;AACL,YAAE,KAAKrL,KAAL,CAAWqL,GAAb;AACA,eAAK+S,WAAL,CAAiBrL,OAAE,CAAC9Z,QAApB;AACD;A;AACD;A;AACF;AACE,UAAE,KAAK+G,KAAL,CAAWqL,GAAb;AACA,aAAK+S,WAAL,CAAiBrL,OAAE,CAAC3Z,QAApB;AACA;A;AACF;AACE,YACE,KAAKiG,SAAL,CAAe,gBAAf,KACA,KAAKN,KAAL,CAAWzN,UAAX,CAAsB,KAAK0O,KAAL,CAAWqL,GAAX,GAAiB,CAAvC,SAFF,EAGE;AACA,cAAI,KAAK7L,eAAL,CAAqB,gBAArB,EAAuC,YAAvC,MAAyD,KAA7D,EAAoE;AAClE,kBAAM,KAAKoM,KAAL,CACJ,KAAK5L,KAAL,CAAWqL,GADP,EAEJ4F,aAAM,CAACrJ,2CAFH,CAAN;AAID;A;AAGD,eAAKwW,WAAL,CAAiBrL,OAAE,CAACxZ,SAApB;AACA,eAAKyG,KAAL,CAAWqL,GAAX,IAAkB,CAAlB;AACD,SAdD,MAcO;AACL,YAAE,KAAKrL,KAAL,CAAWqL,GAAb;AACA,eAAK+S,WAAL,CAAiBrL,OAAE,CAACzZ,MAApB;AACD;A;AACD;A;AACF;AACE,UAAE,KAAK0G,KAAL,CAAWqL,GAAb;AACA,aAAK+S,WAAL,CAAiBrL,OAAE,CAACtZ,MAApB;AACA;A;AAEF;AACE,YACE,KAAK4F,SAAL,CAAe,cAAf,KACA,KAAKN,KAAL,CAAWzN,UAAX,CAAsB,KAAK0O,KAAL,CAAWqL,GAAX,GAAiB,CAAvC,QAFF,EAGE;AACA,eAAK6f,QAAL,CAAcnY,OAAE,CAAC/Y,WAAjB,EAA8B,CAA9B;AACD,SALD,MAKO;AACL,YAAE,KAAKgG,KAAL,CAAWqL,GAAb;AACA,eAAK+S,WAAL,CAAiBrL,OAAE,CAAChZ,KAApB;AACD;A;AACD;A;AAEF;AACE,aAAKynD,kBAAL;AACA;A;AAEF;AACE,UAAE,KAAKxhD,KAAL,CAAWqL,GAAb;AACA,aAAK+S,WAAL,CAAiBrL,OAAE,CAACxY,SAApB;AACA;A;AAEF;AAAuB;AACrB,gBAAM4a,IAAI,GAAG,KAAKpW,KAAL,CAAWzN,UAAX,CAAsB,KAAK0O,KAAL,CAAWqL,GAAX,GAAiB,CAAvC,CAAb;A;AAEA,cAAI8J,IAAI,QAAJ,IAAiCA,IAAI,OAAzC,EAAoE;AAClE,iBAAKusC,eAAL,CAAqB,EAArB;AACA;AACD;A;AAED,cAAIvsC,IAAI,QAAJ,IAAiCA,IAAI,OAAzC,EAAoE;AAClE,iBAAKusC,eAAL,CAAqB,CAArB;AACA;AACD;A;AAED,cAAIvsC,IAAI,OAAJ,IAAiCA,IAAI,OAAzC,EAAoE;AAClE,iBAAKusC,eAAL,CAAqB,CAArB;AACA;AACD;AACF;A;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,aAAKT,UAAL,CAAgB,KAAhB;AACA;A;AAGF;AACA;AACE,aAAKU,UAAL,CAAgBtjD,IAAhB;AACA;A;AAOF;AACE,aAAK6iD,eAAL;AACA;A;AAEF;AACA;AACE,aAAK/wB,qBAAL,CAA2B9xB,IAA3B;AACA;A;AAEF;AACA;AACE,aAAKiyB,kBAAL,CAAwBjyB,IAAxB;AACA;A;AAEF;AACE,aAAKgjD,eAAL;AACA;A;AAEF;AACA;AACE,aAAKC,kBAAL,CAAwBjjD,IAAxB;AACA;A;AAEF;AACA;AACE,aAAK08C,eAAL,CAAqB18C,IAArB;AACA;A;AAEF;AACA;AACE,aAAKkjD,iBAAL,CAAuBljD,IAAvB;AACA;A;AAEF;AACE,aAAK6sB,QAAL,CAAcnY,OAAE,CAAChY,KAAjB,EAAwB,CAAxB;AACA;A;AAEF;AACE,UAAE,KAAKiF,KAAL,CAAWqL,GAAb;AACA,aAAK+S,WAAL,CAAiBrL,OAAE,CAACtY,EAApB;AACA;A;AAEF;AACE,aAAKomD,oBAAL;AACA;A;AAEF;AACE,aAAKe,QAAL;AACA;A;AAEF;AACE,YAAI3tC,iBAAiB,CAAC5V,IAAD,CAArB,EAA6B;AAC3B,eAAKujD,QAAL,CAAcvjD,IAAd;AACA;AACD;A;AAhML;A;AAmMA,UAAM,KAAKuN,KAAL,CACJ,KAAK5L,KAAL,CAAWqL,GADP,EAEJ4F,aAAM,CAAC9L,wBAFH,EAGJ/W,MAAM,CAACs4C,aAAP,CAAqBroC,IAArB,CAHI,CAAN;AAKD;A;AAED6sB,EAAAA,QAAQ,CAACzkC,IAAD,EAAkBuM,IAAlB,EAAsC;AAC5C,UAAMnG,GAAG,GAAG,KAAKkS,KAAL,CAAWjK,KAAX,CAAiB,KAAKkL,KAAL,CAAWqL,GAA5B,EAAiC,KAAKrL,KAAL,CAAWqL,GAAX,GAAiBrY,IAAlD,CAAZ;AACA,SAAKgN,KAAL,CAAWqL,GAAX,IAAkBrY,IAAlB;AACA,SAAKorB,WAAL,CAAiB33B,IAAjB,EAAuBoG,GAAvB;AACD;A;AAEDs0D,EAAAA,UAAU,GAAS;AACjB,UAAMzzD,KAAK,GAAG,KAAKsS,KAAL,CAAWqL,GAAzB;AACA,QAAIla,OAAJ,EAAaynB,OAAb;A;AACA,aAAS;AACP,UAAI,KAAK5Y,KAAL,CAAWqL,GAAX,IAAkB,KAAK3jB,MAA3B,EAAmC;AACjC,cAAM,KAAKkkB,KAAL,CAAWle,KAAX,EAAkBujB,aAAM,CAAC3G,kBAAzB,CAAN;AACD;A;AACD,YAAM47B,EAAE,GAAG,KAAKnnC,KAAL,CAAWpJ,MAAX,CAAkB,KAAKqK,KAAL,CAAWqL,GAA7B,CAAX;A;AACA,UAAInN,SAAS,CAAC/X,IAAV,CAAe+/C,EAAf,CAAJ,EAAwB;AACtB,cAAM,KAAKt6B,KAAL,CAAWle,KAAX,EAAkBujB,aAAM,CAAC3G,kBAAzB,CAAN;AACD;A;AACD,UAAInZ,OAAJ,EAAa;AACXA,QAAAA,OAAO,GAAG,KAAV;AACD,OAFD,MAEO;AACL,YAAI+0C,EAAE,KAAK,GAAX,EAAgB;AACdttB,UAAAA,OAAO,GAAG,IAAV;AACD,SAFD,MAEO,IAAIstB,EAAE,KAAK,GAAP,IAActtB,OAAlB,EAA2B;AAChCA,UAAAA,OAAO,GAAG,KAAV;AACD,SAFM,MAEA,IAAIstB,EAAE,KAAK,GAAP,IAAc,CAACttB,OAAnB,EAA4B;AACjC;AACD;A;AACDznB,QAAAA,OAAO,GAAG+0C,EAAE,KAAK,IAAjB;AACD;A;AACD,QAAE,KAAKlmC,KAAL,CAAWqL,GAAb;AACD;A;AACD,UAAMw2C,OAAO,GAAG,KAAK9iD,KAAL,CAAWjK,KAAX,CAAiBpH,KAAjB,EAAwB,KAAKsS,KAAL,CAAWqL,GAAnC,CAAhB;AACA,MAAE,KAAKrL,KAAL,CAAWqL,GAAb;AAEA,QAAIy2C,IAAI,GAAG,EAAX;A;AAEA,WAAO,KAAK9hD,KAAL,CAAWqL,GAAX,GAAiB,KAAK3jB,MAA7B,EAAqC;AACnC,YAAMq6D,IAAI,GAAG,KAAKhjD,KAAL,CAAW,KAAKiB,KAAL,CAAWqL,GAAtB,CAAb;AACA,YAAM22C,QAAQ,GAAG,KAAK/B,cAAL,CAAoB,KAAKjgD,KAAL,CAAWqL,GAA/B,CAAjB;A;AAEA,UAAI4zC,iBAAiB,CAAC1/C,GAAlB,CAAsBwiD,IAAtB,CAAJ,EAAiC;AAC/B,YAAID,IAAI,CAACn8D,OAAL,CAAao8D,IAAb,IAAqB,CAAC,CAA1B,EAA6B;AAC3B,eAAKn2C,KAAL,CAAW,KAAK5L,KAAL,CAAWqL,GAAX,GAAiB,CAA5B,EAA+B4F,aAAM,CAAC3N,oBAAtC;AACD;AACF,OAJD,MAIO,IACL6Q,gBAAgB,CAAC6tC,QAAD,CAAhB,IACAA,QAAQ,OAFH,EAGL;AACA,aAAKp2C,KAAL,CAAW,KAAK5L,KAAL,CAAWqL,GAAX,GAAiB,CAA5B,EAA+B4F,aAAM,CAACrL,oBAAtC;AACD,OALM,MAKA;AACL;AACD;A;AAED,QAAE,KAAK5F,KAAL,CAAWqL,GAAb;AACAy2C,MAAAA,IAAI,IAAIC,IAAR;AACD;A;AAED,SAAK3jC,WAAL,CAAiBrL,OAAE,CAACja,MAApB,EAA4B;AAC1B2T,MAAAA,OAAO,EAAEo1C,OADiB;AAE1Bn1C,MAAAA,KAAK,EAAEo1C;AAFmB,KAA5B;AAID;A;AAWDG,EAAAA,OAAO,CACLC,KADK,EAELC,GAFK,EAGLC,QAHK,EAILC,iBAA0B,GAAG,IAJxB,EAKU;AACf,UAAM30D,KAAK,GAAG,KAAKsS,KAAL,CAAWqL,GAAzB;AACA,UAAMi3C,iBAAiB,GACrBJ,KAAK,KAAK,EAAV,GACIhD,iCAAiC,CAACE,GADtC,GAEIF,iCAAiC,CAACC,SAHxC;AAIA,UAAMoD,eAAe,GACnBL,KAAK,KAAK,EAAV,GACI7C,+BAA+B,CAACD,GADpC,GAEI8C,KAAK,KAAK,EAAV,GACA7C,+BAA+B,CAACG,GADhC,GAEA0C,KAAK,KAAK,CAAV,GACA7C,+BAA+B,CAACE,GADhC,GAEAF,+BAA+B,CAACC,GAPtC;AASA,QAAIx2B,OAAO,GAAG,KAAd;AACA,QAAI05B,KAAK,GAAG,CAAZ;A;AAEA,SAAK,IAAI/6D,CAAC,GAAG,CAAR,EAAWqB,CAAC,GAAGq5D,GAAG,IAAI,IAAP,GAAcM,QAAd,GAAyBN,GAA7C,EAAkD16D,CAAC,GAAGqB,CAAtD,EAAyD,EAAErB,CAA3D,EAA8D;AAC5D,YAAM4W,IAAI,GAAG,KAAKU,KAAL,CAAWzN,UAAX,CAAsB,KAAK0O,KAAL,CAAWqL,GAAjC,CAAb;AACA,UAAIpe,GAAJ;A;AAEA,UAAIoR,IAAI,OAAR,EAAmC;AACjC,cAAMqkD,IAAI,GAAG,KAAK3jD,KAAL,CAAWzN,UAAX,CAAsB,KAAK0O,KAAL,CAAWqL,GAAX,GAAiB,CAAvC,CAAb;AACA,cAAM8J,IAAI,GAAG,KAAKpW,KAAL,CAAWzN,UAAX,CAAsB,KAAK0O,KAAL,CAAWqL,GAAX,GAAiB,CAAvC,CAAb;A;AACA,YAAIk3C,eAAe,CAAC58D,OAAhB,CAAwBwvB,IAAxB,MAAkC,CAAC,CAAvC,EAA0C;AACxC,eAAKvJ,KAAL,CAAW,KAAK5L,KAAL,CAAWqL,GAAtB,EAA2B4F,aAAM,CAAC1H,0BAAlC;AACD,SAFD,MAEO,IACL+4C,iBAAiB,CAAC38D,OAAlB,CAA0B+8D,IAA1B,IAAkC,CAAC,CAAnC,IACAJ,iBAAiB,CAAC38D,OAAlB,CAA0BwvB,IAA1B,IAAkC,CAAC,CADnC,IAEAwtC,MAAM,CAAClsD,KAAP,CAAa0e,IAAb,CAHK,EAIL;AACA,eAAKvJ,KAAL,CAAW,KAAK5L,KAAL,CAAWqL,GAAtB,EAA2B4F,aAAM,CAAC1H,0BAAlC;AACD;A;AAED,YAAI,CAAC84C,iBAAL,EAAwB;AACtB,eAAKz2C,KAAL,CAAW,KAAK5L,KAAL,CAAWqL,GAAtB,EAA2B4F,aAAM,CAACtK,gCAAlC;AACD;A;AAGD,UAAE,KAAK3G,KAAL,CAAWqL,GAAb;AACA;AACD;A;AAED,UAAIhN,IAAI,MAAR,EAAkC;AAChCpR,QAAAA,GAAG,GAAGoR,IAAI,KAAJ,KAAN;AACD,OAFD,MAEO,IAAIA,IAAI,MAAR,EAAkC;AACvCpR,QAAAA,GAAG,GAAGoR,IAAI,KAAJ,KAAN;AACD,OAFM,MAEA,IAAI,SAAkBA,IAAlB,CAAJ,EAA6B;AAClCpR,QAAAA,GAAG,GAAGoR,IAAI,KAAV;AACD,OAFM,MAEA;AACLpR,QAAAA,GAAG,GAAGw1D,QAAN;AACD;A;AACD,UAAIx1D,GAAG,IAAIi1D,KAAX,EAAkB;AAIhB,YAAI,KAAK5pD,OAAL,CAAa0T,aAAb,IAA8B/e,GAAG,IAAI,CAAzC,EAA4C;AAC1CA,UAAAA,GAAG,GAAG,CAAN;AACA,eAAK2e,KAAL,CAAW,KAAK5L,KAAL,CAAWtS,KAAX,GAAmBjG,CAAnB,GAAuB,CAAlC,EAAqCwpB,aAAM,CAACvM,YAA5C,EAA0Dw9C,KAA1D;AACD,SAHD,MAGO,IAAIE,QAAJ,EAAc;AACnBn1D,UAAAA,GAAG,GAAG,CAAN;AACA67B,UAAAA,OAAO,GAAG,IAAV;AACD,SAHM,MAGA;AACL;AACD;AACF;A;AACD,QAAE,KAAK9oB,KAAL,CAAWqL,GAAb;AACAm3C,MAAAA,KAAK,GAAGA,KAAK,GAAGN,KAAR,GAAgBj1D,GAAxB;AACD;A;AACD,QACE,KAAK+S,KAAL,CAAWqL,GAAX,KAAmB3d,KAAnB,IACCy0D,GAAG,IAAI,IAAP,IAAe,KAAKniD,KAAL,CAAWqL,GAAX,GAAiB3d,KAAjB,KAA2By0D,GAD3C,IAEAr5B,OAHF,EAIE;AACA,aAAO,IAAP;AACD;A;AAED,WAAO05B,KAAP;AACD;A;AAEDd,EAAAA,eAAe,CAACQ,KAAD,EAAsB;AACnC,UAAMx0D,KAAK,GAAG,KAAKsS,KAAL,CAAWqL,GAAzB;AACA,QAAIu3C,QAAQ,GAAG,KAAf;AAEA,SAAK5iD,KAAL,CAAWqL,GAAX,IAAkB,CAAlB;AACA,UAAMpe,GAAG,GAAG,KAAKg1D,OAAL,CAAaC,KAAb,CAAZ;A;AACA,QAAIj1D,GAAG,IAAI,IAAX,EAAiB;AACf,WAAK2e,KAAL,CAAW,KAAK5L,KAAL,CAAWtS,KAAX,GAAmB,CAA9B,EAAiCujB,aAAM,CAACvM,YAAxC,EAAsDw9C,KAAtD;AACD;A;AACD,UAAM/sC,IAAI,GAAG,KAAKpW,KAAL,CAAWzN,UAAX,CAAsB,KAAK0O,KAAL,CAAWqL,GAAjC,CAAb;A;AAEA,QAAI8J,IAAI,QAAR,EAAmC;AACjC,QAAE,KAAKnV,KAAL,CAAWqL,GAAb;AACAu3C,MAAAA,QAAQ,GAAG,IAAX;AACD,KAHD,MAGO,IAAIztC,IAAI,QAAR,EAAmC;AACxC,YAAM,KAAKvJ,KAAL,CAAWle,KAAX,EAAkBujB,aAAM,CAACxM,cAAzB,CAAN;AACD;A;AAED,QAAIwP,iBAAiB,CAAC,KAAKgsC,cAAL,CAAoB,KAAKjgD,KAAL,CAAWqL,GAA/B,CAAD,CAArB,EAA4D;AAC1D,YAAM,KAAKO,KAAL,CAAW,KAAK5L,KAAL,CAAWqL,GAAtB,EAA2B4F,aAAM,CAACvK,gBAAlC,CAAN;AACD;A;AAED,QAAIk8C,QAAJ,EAAc;AACZ,YAAM/1D,GAAG,GAAG,KAAKkS,KAAL,CAAWjK,KAAX,CAAiBpH,KAAjB,EAAwB,KAAKsS,KAAL,CAAWqL,GAAnC,EAAwC3Z,OAAxC,CAAgD,OAAhD,EAAyD,EAAzD,CAAZ;AACA,WAAK0sB,WAAL,CAAiBrL,OAAE,CAACna,MAApB,EAA4B/L,GAA5B;AACA;AACD;A;AAED,SAAKuxB,WAAL,CAAiBrL,OAAE,CAACpa,GAApB,EAAyB1L,GAAzB;AACD;A;AAIDg0D,EAAAA,UAAU,CAAC4B,aAAD,EAA+B;AACvC,UAAMn1D,KAAK,GAAG,KAAKsS,KAAL,CAAWqL,GAAzB;AACA,QAAIy3C,OAAO,GAAG,KAAd;AACA,QAAIF,QAAQ,GAAG,KAAf;AACA,QAAIG,SAAS,GAAG,KAAhB;AACA,QAAIC,WAAW,GAAG,KAAlB;AACA,QAAIC,OAAO,GAAG,KAAd;A;AAEA,QAAI,CAACJ,aAAD,IAAkB,KAAKZ,OAAL,CAAa,EAAb,MAAqB,IAA3C,EAAiD;AAC/C,WAAKr2C,KAAL,CAAWle,KAAX,EAAkBujB,aAAM,CAAChM,aAAzB;AACD;A;AACD,UAAMi+C,cAAc,GAClB,KAAKljD,KAAL,CAAWqL,GAAX,GAAiB3d,KAAjB,IAA0B,CAA1B,IACA,KAAKqR,KAAL,CAAWzN,UAAX,CAAsB5D,KAAtB,QAFF;A;AAIA,QAAIw1D,cAAJ,EAAoB;AAClB,YAAMC,OAAO,GAAG,KAAKpkD,KAAL,CAAWjK,KAAX,CAAiBpH,KAAjB,EAAwB,KAAKsS,KAAL,CAAWqL,GAAnC,CAAhB;AACA,WAAK+3C,sBAAL,CAA4B11D,KAA5B,EAAmCujB,aAAM,CAAC1I,kBAA1C;A;AACA,UAAI,CAAC,KAAKvI,KAAL,CAAWqU,MAAhB,EAAwB;AAEtB,cAAMgvC,aAAa,GAAGF,OAAO,CAACx9D,OAAR,CAAgB,GAAhB,CAAtB;A;AACA,YAAI09D,aAAa,GAAG,CAApB,EAAuB;AACrB,eAAKz3C,KAAL,CAAWy3C,aAAa,GAAG31D,KAA3B,EAAkCujB,aAAM,CAACrG,yBAAzC;AACD;AACF;A;AACDq4C,MAAAA,OAAO,GAAGC,cAAc,IAAI,CAAC,OAAO/8D,IAAP,CAAYg9D,OAAZ,CAA7B;AACD;A;AAED,QAAIhuC,IAAI,GAAG,KAAKpW,KAAL,CAAWzN,UAAX,CAAsB,KAAK0O,KAAL,CAAWqL,GAAjC,CAAX;A;AACA,QAAI8J,IAAI,OAAJ,IAA0B,CAAC8tC,OAA/B,EAAwC;AACtC,QAAE,KAAKjjD,KAAL,CAAWqL,GAAb;AACA,WAAK42C,OAAL,CAAa,EAAb;AACAa,MAAAA,OAAO,GAAG,IAAV;AACA3tC,MAAAA,IAAI,GAAG,KAAKpW,KAAL,CAAWzN,UAAX,CAAsB,KAAK0O,KAAL,CAAWqL,GAAjC,CAAP;AACD;A;AAED,QACE,CAAC8J,IAAI,OAAJ,IAAiCA,IAAI,QAAtC,KACA,CAAC8tC,OAFH,EAGE;AACA9tC,MAAAA,IAAI,GAAG,KAAKpW,KAAL,CAAWzN,UAAX,CAAsB,EAAE,KAAK0O,KAAL,CAAWqL,GAAnC,CAAP;A;AACA,UAAI8J,IAAI,OAAJ,IAA+BA,IAAI,OAAvC,EAA4D;AAC1D,UAAE,KAAKnV,KAAL,CAAWqL,GAAb;AACD;A;AACD,UAAI,KAAK42C,OAAL,CAAa,EAAb,MAAqB,IAAzB,EAA+B;AAC7B,aAAKr2C,KAAL,CAAWle,KAAX,EAAkBujB,aAAM,CAAC/L,wBAAzB;AACD;A;AACD49C,MAAAA,OAAO,GAAG,IAAV;AACAE,MAAAA,WAAW,GAAG,IAAd;AACA7tC,MAAAA,IAAI,GAAG,KAAKpW,KAAL,CAAWzN,UAAX,CAAsB,KAAK0O,KAAL,CAAWqL,GAAjC,CAAP;AACD;A;AAED,QAAI8J,IAAI,QAAR,EAAmC;AAGjC,UAAI2tC,OAAO,IAAII,cAAf,EAA+B;AAC7B,aAAKt3C,KAAL,CAAWle,KAAX,EAAkBujB,aAAM,CAAC1M,oBAAzB;AACD;A;AACD,QAAE,KAAKvE,KAAL,CAAWqL,GAAb;AACAu3C,MAAAA,QAAQ,GAAG,IAAX;AACD;A;AAED,QAAIztC,IAAI,QAAR,EAAmC;AACjC,WAAKsnC,YAAL,CAAkB,SAAlB,EAA6B,KAAKz8C,KAAL,CAAWqL,GAAxC;A;AACA,UAAI23C,WAAW,IAAIE,cAAnB,EAAmC;AACjC,aAAKt3C,KAAL,CAAWle,KAAX,EAAkBujB,aAAM,CAACxM,cAAzB;AACD;A;AACD,QAAE,KAAKzE,KAAL,CAAWqL,GAAb;AACA03C,MAAAA,SAAS,GAAG,IAAZ;AACD;A;AAED,QAAI9uC,iBAAiB,CAAC,KAAKgsC,cAAL,CAAoB,KAAKjgD,KAAL,CAAWqL,GAA/B,CAAD,CAArB,EAA4D;AAC1D,YAAM,KAAKO,KAAL,CAAW,KAAK5L,KAAL,CAAWqL,GAAtB,EAA2B4F,aAAM,CAACvK,gBAAlC,CAAN;AACD;A;AAGD,UAAM7Z,GAAG,GAAG,KAAKkS,KAAL,CAAWjK,KAAX,CAAiBpH,KAAjB,EAAwB,KAAKsS,KAAL,CAAWqL,GAAnC,EAAwC3Z,OAAxC,CAAgD,QAAhD,EAA0D,EAA1D,CAAZ;A;AAEA,QAAIkxD,QAAJ,EAAc;AACZ,WAAKxkC,WAAL,CAAiBrL,OAAE,CAACna,MAApB,EAA4B/L,GAA5B;AACA;AACD;A;AAED,QAAIk2D,SAAJ,EAAe;AACb,WAAK3kC,WAAL,CAAiBrL,OAAE,CAACla,OAApB,EAA6BhM,GAA7B;AACA;AACD;A;AAED,UAAMI,GAAG,GAAGg2D,OAAO,GAAGjuD,QAAQ,CAACnI,GAAD,EAAM,CAAN,CAAX,GAAsB2J,UAAU,CAAC3J,GAAD,CAAnD;AACA,SAAKuxB,WAAL,CAAiBrL,OAAE,CAACpa,GAApB,EAAyB1L,GAAzB;AACD;A;AAIDq2D,EAAAA,aAAa,CAACC,cAAD,EAAyC;AACpD,UAAMrd,EAAE,GAAG,KAAKnnC,KAAL,CAAWzN,UAAX,CAAsB,KAAK0O,KAAL,CAAWqL,GAAjC,CAAX;AACA,QAAIhN,IAAJ;A;AAEA,QAAI6nC,EAAE,QAAN,EAAqC;AACnC,YAAMsd,OAAO,GAAG,EAAE,KAAKxjD,KAAL,CAAWqL,GAA7B;AACAhN,MAAAA,IAAI,GAAG,KAAKolD,WAAL,CACL,KAAK1kD,KAAL,CAAWpZ,OAAX,CAAmB,GAAnB,EAAwB,KAAKqa,KAAL,CAAWqL,GAAnC,IAA0C,KAAKrL,KAAL,CAAWqL,GADhD,EAEL,IAFK,EAGLk4C,cAHK,CAAP;AAKA,QAAE,KAAKvjD,KAAL,CAAWqL,GAAb;A;AACA,UAAIhN,IAAI,KAAK,IAAT,IAAiBA,IAAI,GAAG,QAA5B,EAAsC;AACpC,YAAIklD,cAAJ,EAAoB;AAClB,eAAK33C,KAAL,CAAW43C,OAAX,EAAoBvyC,aAAM,CAACzM,gBAA3B;AACD,SAFD,MAEO;AACL,iBAAO,IAAP;AACD;AACF;AACF,KAfD,MAeO;AACLnG,MAAAA,IAAI,GAAG,KAAKolD,WAAL,CAAiB,CAAjB,EAAoB,KAApB,EAA2BF,cAA3B,CAAP;AACD;A;AACD,WAAOllD,IAAP;AACD;A;AAEDsjD,EAAAA,UAAU,CAACpb,KAAD,EAAsB;AAC9B,QAAIrzB,GAAG,GAAG,EAAV;AAAA,QACE+yB,UAAU,GAAG,EAAE,KAAKjmC,KAAL,CAAWqL,GAD5B;A;AAEA,aAAS;AACP,UAAI,KAAKrL,KAAL,CAAWqL,GAAX,IAAkB,KAAK3jB,MAA3B,EAAmC;AACjC,cAAM,KAAKkkB,KAAL,CAAW,KAAK5L,KAAL,CAAWtS,KAAtB,EAA6BujB,aAAM,CAAC1G,kBAApC,CAAN;AACD;A;AACD,YAAM27B,EAAE,GAAG,KAAKnnC,KAAL,CAAWzN,UAAX,CAAsB,KAAK0O,KAAL,CAAWqL,GAAjC,CAAX;AACA,UAAI66B,EAAE,KAAKK,KAAX,EAAkB;A;AAClB,UAAIL,EAAE,OAAN,EAAgC;AAC9BhzB,QAAAA,GAAG,IAAI,KAAKnU,KAAL,CAAWjK,KAAX,CAAiBmxC,UAAjB,EAA6B,KAAKjmC,KAAL,CAAWqL,GAAxC,CAAP;AAEA6H,QAAAA,GAAG,IAAI,KAAKwwC,eAAL,CAAqB,KAArB,CAAP;AACAzd,QAAAA,UAAU,GAAG,KAAKjmC,KAAL,CAAWqL,GAAxB;AACD,OALD,MAKO,IACL66B,EAAE,SAAF,IACAA,EAAE,SAFG,EAGL;AACA,UAAE,KAAKlmC,KAAL,CAAWqL,GAAb;AACA,UAAE,KAAKrL,KAAL,CAAWsjC,OAAb;AACA,aAAKtjC,KAAL,CAAWf,SAAX,GAAuB,KAAKe,KAAL,CAAWqL,GAAlC;AACD,OAPM,MAOA,IAAIjN,SAAS,CAAC8nC,EAAD,CAAb,EAAmB;AACxB,cAAM,KAAKt6B,KAAL,CAAW,KAAK5L,KAAL,CAAWtS,KAAtB,EAA6BujB,aAAM,CAAC1G,kBAApC,CAAN;AACD,OAFM,MAEA;AACL,UAAE,KAAKvK,KAAL,CAAWqL,GAAb;AACD;AACF;A;AACD6H,IAAAA,GAAG,IAAI,KAAKnU,KAAL,CAAWjK,KAAX,CAAiBmxC,UAAjB,EAA6B,KAAKjmC,KAAL,CAAWqL,GAAX,EAA7B,CAAP;AACA,SAAK+S,WAAL,CAAiBrL,OAAE,CAAC/hB,MAApB,EAA4BkiB,GAA5B;AACD;A;AAIDotC,EAAAA,aAAa,GAAS;AACpB,QAAIptC,GAAG,GAAG,EAAV;AAAA,QACE+yB,UAAU,GAAG,KAAKjmC,KAAL,CAAWqL,GAD1B;AAAA,QAEEs4C,eAAe,GAAG,KAFpB;A;AAGA,aAAS;AACP,UAAI,KAAK3jD,KAAL,CAAWqL,GAAX,IAAkB,KAAK3jB,MAA3B,EAAmC;AACjC,cAAM,KAAKkkB,KAAL,CAAW,KAAK5L,KAAL,CAAWtS,KAAtB,EAA6BujB,aAAM,CAACzG,oBAApC,CAAN;AACD;A;AACD,YAAM07B,EAAE,GAAG,KAAKnnC,KAAL,CAAWzN,UAAX,CAAsB,KAAK0O,KAAL,CAAWqL,GAAjC,CAAX;A;AACA,UACE66B,EAAE,OAAF,IACCA,EAAE,OAAF,IACC,KAAKnnC,KAAL,CAAWzN,UAAX,CAAsB,KAAK0O,KAAL,CAAWqL,GAAX,GAAiB,CAAvC,SAHJ,EAKE;AACA,YAAI,KAAKrL,KAAL,CAAWqL,GAAX,KAAmB,KAAKrL,KAAL,CAAWtS,KAA9B,IAAuC,KAAKuD,KAAL,CAAW8hB,OAAE,CAAC1Y,QAAd,CAA3C,EAAoE;AAClE,cAAI6rC,EAAE,OAAN,EAAiC;AAC/B,iBAAKlmC,KAAL,CAAWqL,GAAX,IAAkB,CAAlB;AACA,iBAAK+S,WAAL,CAAiBrL,OAAE,CAACvY,YAApB;AACA;AACD,WAJD,MAIO;AACL,cAAE,KAAKwF,KAAL,CAAWqL,GAAb;AACA,iBAAK+S,WAAL,CAAiBrL,OAAE,CAACxY,SAApB;AACA;AACD;AACF;A;AACD2Y,QAAAA,GAAG,IAAI,KAAKnU,KAAL,CAAWjK,KAAX,CAAiBmxC,UAAjB,EAA6B,KAAKjmC,KAAL,CAAWqL,GAAxC,CAAP;AACA,aAAK+S,WAAL,CAAiBrL,OAAE,CAAC1Y,QAApB,EAA8BspD,eAAe,GAAG,IAAH,GAAUzwC,GAAvD;AACA;AACD;A;AACD,UAAIgzB,EAAE,OAAN,EAAgC;AAC9BhzB,QAAAA,GAAG,IAAI,KAAKnU,KAAL,CAAWjK,KAAX,CAAiBmxC,UAAjB,EAA6B,KAAKjmC,KAAL,CAAWqL,GAAxC,CAAP;AACA,cAAMla,OAAO,GAAG,KAAKuyD,eAAL,CAAqB,IAArB,CAAhB;A;AACA,YAAIvyD,OAAO,KAAK,IAAhB,EAAsB;AACpBwyD,UAAAA,eAAe,GAAG,IAAlB;AACD,SAFD,MAEO;AACLzwC,UAAAA,GAAG,IAAI/hB,OAAP;AACD;A;AACD80C,QAAAA,UAAU,GAAG,KAAKjmC,KAAL,CAAWqL,GAAxB;AACD,OATD,MASO,IAAIjN,SAAS,CAAC8nC,EAAD,CAAb,EAAmB;AACxBhzB,QAAAA,GAAG,IAAI,KAAKnU,KAAL,CAAWjK,KAAX,CAAiBmxC,UAAjB,EAA6B,KAAKjmC,KAAL,CAAWqL,GAAxC,CAAP;AACA,UAAE,KAAKrL,KAAL,CAAWqL,GAAb;A;AACA,gBAAQ66B,EAAR;AACE;AACE,gBAAI,KAAKnnC,KAAL,CAAWzN,UAAX,CAAsB,KAAK0O,KAAL,CAAWqL,GAAjC,QAAJ,EAAkE;AAChE,gBAAE,KAAKrL,KAAL,CAAWqL,GAAb;AACD;A;AAEH;AACE6H,YAAAA,GAAG,IAAI,IAAP;AACA;A;AACF;AACEA,YAAAA,GAAG,IAAI9kB,MAAM,CAAC8lB,YAAP,CAAoBgyB,EAApB,CAAP;AACA;AAXJ;A;AAaA,UAAE,KAAKlmC,KAAL,CAAWsjC,OAAb;AACA,aAAKtjC,KAAL,CAAWf,SAAX,GAAuB,KAAKe,KAAL,CAAWqL,GAAlC;AACA46B,QAAAA,UAAU,GAAG,KAAKjmC,KAAL,CAAWqL,GAAxB;AACD,OAnBM,MAmBA;AACL,UAAE,KAAKrL,KAAL,CAAWqL,GAAb;AACD;AACF;AACF;A;AAED+3C,EAAAA,sBAAsB,CAAC/3C,GAAD,EAAcjjB,OAAd,EAAsC;AAC1D,QAAI,KAAK4X,KAAL,CAAWqU,MAAX,IAAqB,CAAC,KAAKrU,KAAL,CAAWskC,YAAX,CAAwB/kC,GAAxB,CAA4B8L,GAA5B,CAA1B,EAA4D;AAC1D,WAAKO,KAAL,CAAWP,GAAX,EAAgBjjB,OAAhB;AACD,KAFD,MAEO;AACL,WAAK4X,KAAL,CAAWskC,YAAX,CAAwB9rC,GAAxB,CAA4B6S,GAA5B,EAAiCjjB,OAAjC;AACD;AACF;A;AAGDs7D,EAAAA,eAAe,CAACE,UAAD,EAAqC;AAClD,UAAML,cAAc,GAAG,CAACK,UAAxB;AACA,UAAM1d,EAAE,GAAG,KAAKnnC,KAAL,CAAWzN,UAAX,CAAsB,EAAE,KAAK0O,KAAL,CAAWqL,GAAnC,CAAX;AACA,MAAE,KAAKrL,KAAL,CAAWqL,GAAb;A;AACA,YAAQ66B,EAAR;AACE;AACE,eAAO,IAAP;A;AACF;AACE,eAAO,IAAP;A;AACF;AAA2B;AACzB,gBAAM7nC,IAAI,GAAG,KAAKolD,WAAL,CAAiB,CAAjB,EAAoB,KAApB,EAA2BF,cAA3B,CAAb;AACA,iBAAOllD,IAAI,KAAK,IAAT,GAAgB,IAAhB,GAAuBjQ,MAAM,CAAC8lB,YAAP,CAAoB7V,IAApB,CAA9B;AACD;A;AACD;AAA2B;AACzB,gBAAMA,IAAI,GAAG,KAAKilD,aAAL,CAAmBC,cAAnB,CAAb;AACA,iBAAOllD,IAAI,KAAK,IAAT,GAAgB,IAAhB,GAAuBjQ,MAAM,CAACs4C,aAAP,CAAqBroC,IAArB,CAA9B;AACD;A;AACD;AACE,eAAO,IAAP;A;AACF;AACE,eAAO,IAAP;A;AACF;AACE,eAAO,QAAP;A;AACF;AACE,eAAO,IAAP;A;AACF;AACE,YAAI,KAAKU,KAAL,CAAWzN,UAAX,CAAsB,KAAK0O,KAAL,CAAWqL,GAAjC,QAAJ,EAAkE;AAChE,YAAE,KAAKrL,KAAL,CAAWqL,GAAb;AACD;A;AAEH;AACE,aAAKrL,KAAL,CAAWf,SAAX,GAAuB,KAAKe,KAAL,CAAWqL,GAAlC;AACA,UAAE,KAAKrL,KAAL,CAAWsjC,OAAb;A;AAEF;AACA;AACE,eAAO,EAAP;A;AACF;AACA;AACE,YAAIsgB,UAAJ,EAAgB;AACd,iBAAO,IAAP;AACD,SAFD,MAEO;AACL,eAAKR,sBAAL,CACE,KAAKpjD,KAAL,CAAWqL,GAAX,GAAiB,CADnB,EAEE4F,aAAM,CAAC3I,mBAFT;AAID;A;AAEH;AACE,YAAI49B,EAAE,MAAF,IAA0BA,EAAE,MAAhC,EAAsD;AACpD,gBAAMsd,OAAO,GAAG,KAAKxjD,KAAL,CAAWqL,GAAX,GAAiB,CAAjC;AACA,gBAAMpa,KAAK,GAAG,KAAK8N,KAAL,CACX0nC,MADW,CACJ,KAAKzmC,KAAL,CAAWqL,GAAX,GAAiB,CADb,EACgB,CADhB,EAEXpa,KAFW,CAEL,SAFK,CAAd;AAMA,cAAI4yD,QAAQ,GAAG5yD,KAAK,CAAC,CAAD,CAApB;AAEA,cAAI6yD,KAAK,GAAG9uD,QAAQ,CAAC6uD,QAAD,EAAW,CAAX,CAApB;A;AACA,cAAIC,KAAK,GAAG,GAAZ,EAAiB;AACfD,YAAAA,QAAQ,GAAGA,QAAQ,CAAC/uD,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAAX;AACAgvD,YAAAA,KAAK,GAAG9uD,QAAQ,CAAC6uD,QAAD,EAAW,CAAX,CAAhB;AACD;A;AACD,eAAK7jD,KAAL,CAAWqL,GAAX,IAAkBw4C,QAAQ,CAACn8D,MAAT,GAAkB,CAApC;AACA,gBAAMytB,IAAI,GAAG,KAAKpW,KAAL,CAAWzN,UAAX,CAAsB,KAAK0O,KAAL,CAAWqL,GAAjC,CAAb;A;AACA,cACEw4C,QAAQ,KAAK,GAAb,IACA1uC,IAAI,OADJ,IAEAA,IAAI,OAHN,EAIE;AACA,gBAAIyuC,UAAJ,EAAgB;AACd,qBAAO,IAAP;AACD,aAFD,MAEO;AACL,mBAAKR,sBAAL,CAA4BI,OAA5B,EAAqCvyC,aAAM,CAAC3I,mBAA5C;AACD;AACF;A;AAED,iBAAOla,MAAM,CAAC8lB,YAAP,CAAoB4vC,KAApB,CAAP;AACD;A;AAED,eAAO11D,MAAM,CAAC8lB,YAAP,CAAoBgyB,EAApB,CAAP;AA7EJ;AA+ED;A;AAIDud,EAAAA,WAAW,CACTtB,GADS,EAETC,QAFS,EAGTmB,cAHS,EAIM;AACf,UAAMC,OAAO,GAAG,KAAKxjD,KAAL,CAAWqL,GAA3B;AACA,UAAM9U,CAAC,GAAG,KAAK0rD,OAAL,CAAa,EAAb,EAAiBE,GAAjB,EAAsBC,QAAtB,EAAgC,KAAhC,CAAV;A;AACA,QAAI7rD,CAAC,KAAK,IAAV,EAAgB;AACd,UAAIgtD,cAAJ,EAAoB;AAClB,aAAK33C,KAAL,CAAW43C,OAAX,EAAoBvyC,aAAM,CAACtM,qBAA3B;AACD,OAFD,MAEO;AACL,aAAK3E,KAAL,CAAWqL,GAAX,GAAiBm4C,OAAO,GAAG,CAA3B;AACD;AACF;A;AACD,WAAOjtD,CAAP;AACD;A;AAWDw0B,EAAAA,SAAS,CAACg5B,SAAD,EAAmC;AAC1C,SAAK/jD,KAAL,CAAWqkC,WAAX,GAAyB,KAAzB;AACA,QAAI1vB,IAAI,GAAG,EAAX;AACA,UAAMjnB,KAAK,GAAG,KAAKsS,KAAL,CAAWqL,GAAzB;AACA,QAAI46B,UAAU,GAAG,KAAKjmC,KAAL,CAAWqL,GAA5B;A;AACA,QAAI04C,SAAS,KAAK1+D,SAAlB,EAA6B;AAC3B,WAAK2a,KAAL,CAAWqL,GAAX,IAAkB04C,SAAS,IAAI,MAAb,GAAsB,CAAtB,GAA0B,CAA5C;AACD;A;AAED,WAAO,KAAK/jD,KAAL,CAAWqL,GAAX,GAAiB,KAAK3jB,MAA7B,EAAqC;AACnC,YAAMw+C,EAAE,GAAG,KAAK+Z,cAAL,CAAoB,KAAKjgD,KAAL,CAAWqL,GAA/B,CAAX;A;AACA,UAAI8I,gBAAgB,CAAC+xB,EAAD,CAApB,EAA0B;AACxB,aAAKlmC,KAAL,CAAWqL,GAAX,IAAkB66B,EAAE,IAAI,MAAN,GAAe,CAAf,GAAmB,CAArC;AACD,OAFD,MAEO,IAAIA,EAAE,OAAN,EAAgC;AACrC,aAAKlmC,KAAL,CAAWqkC,WAAX,GAAyB,IAAzB;AAEA1vB,QAAAA,IAAI,IAAI,KAAK5V,KAAL,CAAWjK,KAAX,CAAiBmxC,UAAjB,EAA6B,KAAKjmC,KAAL,CAAWqL,GAAxC,CAAR;AACA,cAAM24C,QAAQ,GAAG,KAAKhkD,KAAL,CAAWqL,GAA5B;AACA,cAAM44C,eAAe,GACnB,KAAKjkD,KAAL,CAAWqL,GAAX,KAAmB3d,KAAnB,GAA2BumB,iBAA3B,GAA+CE,gBADjD;A;AAGA,YAAI,KAAKpV,KAAL,CAAWzN,UAAX,CAAsB,EAAE,KAAK0O,KAAL,CAAWqL,GAAnC,SAAJ,EAAsE;AACpE,eAAKO,KAAL,CAAW,KAAK5L,KAAL,CAAWqL,GAAtB,EAA2B4F,aAAM,CAACjL,oBAAlC;AACAigC,UAAAA,UAAU,GAAG,KAAKjmC,KAAL,CAAWqL,GAAX,GAAiB,CAA9B;AACA;AACD;A;AAED,UAAE,KAAKrL,KAAL,CAAWqL,GAAb;AACA,cAAM64C,GAAG,GAAG,KAAKZ,aAAL,CAAmB,IAAnB,CAAZ;A;AACA,YAAIY,GAAG,KAAK,IAAZ,EAAkB;AAChB,cAAI,CAACD,eAAe,CAACC,GAAD,CAApB,EAA2B;AACzB,iBAAKt4C,KAAL,CAAWo4C,QAAX,EAAqB/yC,aAAM,CAACzN,0BAA5B;AACD;A;AAEDmR,UAAAA,IAAI,IAAIvmB,MAAM,CAACs4C,aAAP,CAAqBwd,GAArB,CAAR;AACD;A;AACDje,QAAAA,UAAU,GAAG,KAAKjmC,KAAL,CAAWqL,GAAxB;AACD,OAxBM,MAwBA;AACL;AACD;AACF;A;AACD,WAAOsJ,IAAI,GAAG,KAAK5V,KAAL,CAAWjK,KAAX,CAAiBmxC,UAAjB,EAA6B,KAAKjmC,KAAL,CAAWqL,GAAxC,CAAd;AACD;A;AAKDu2C,EAAAA,QAAQ,CAACmC,SAAD,EAAiC;AACvC,UAAMpvC,IAAI,GAAG,KAAKoW,SAAL,CAAeg5B,SAAf,CAAb;AACA,UAAMt9D,IAAI,GAAG09D,UAAY,CAACzkD,GAAb,CAAiBiV,IAAjB,KAA0B5B,OAAE,CAAClkB,IAA1C;AACA,SAAKuvB,WAAL,CAAiB33B,IAAjB,EAAuBkuB,IAAvB;AACD;A;AAEDkrC,EAAAA,mBAAmB,GAAS;AAC1B,UAAMlM,EAAE,GAAG,KAAK3zC,KAAL,CAAWvZ,IAAX,CAAgBsR,OAA3B;A;AACA,QAAI47C,EAAE,IAAI,KAAK3zC,KAAL,CAAWqkC,WAArB,EAAkC;AAChC,WAAKz4B,KAAL,CAAW,KAAK5L,KAAL,CAAWtS,KAAtB,EAA6BujB,aAAM,CAACpM,0BAApC,EAAgE8uC,EAAhE;AACD;AACF;A;AAEDrgC,EAAAA,YAAY,CAACF,QAAD,EAA+B;AACzC,UAAMttB,MAAM,GAAG,KAAKqtB,UAAL,EAAf;A;AACA,QAAIrtB,MAAM,KAAKs+C,KAAE,CAACvxB,kBAAd,IAAoC/sB,MAAM,KAAKs+C,KAAE,CAACtxB,iBAAtD,EAAyE;AACvE,aAAO,IAAP;AACD;A;AACD,QACEM,QAAQ,KAAKL,OAAE,CAAChZ,KAAhB,KACCjU,MAAM,KAAKs+C,KAAE,CAAC7xB,cAAd,IAAgCzsB,MAAM,KAAKs+C,KAAE,CAAC5xB,eAD/C,CADF,EAGE;AACA,aAAO,CAAC1sB,MAAM,CAACusB,MAAf;AACD;A;AAKD,QACEe,QAAQ,KAAKL,OAAE,CAACpW,OAAhB,IACCyW,QAAQ,KAAKL,OAAE,CAAClkB,IAAhB,IAAwB,KAAKmR,KAAL,CAAWiT,WAFtC,EAGE;AACA,aAAO,KAAKO,qBAAL,EAAP;AACD;A;AAED,QACEJ,QAAQ,KAAKL,OAAE,CAACzW,KAAhB,IACA8W,QAAQ,KAAKL,OAAE,CAACjZ,IADhB,IAEAsZ,QAAQ,KAAKL,OAAE,CAAC/Z,GAFhB,IAGAoa,QAAQ,KAAKL,OAAE,CAACnZ,MAHhB,IAIAwZ,QAAQ,KAAKL,OAAE,CAAC3Y,KALlB,EAME;AACA,aAAO,IAAP;AACD;A;AAED,QAAIgZ,QAAQ,KAAKL,OAAE,CAACzZ,MAApB,EAA4B;AAC1B,aAAOxT,MAAM,KAAKs+C,KAAE,CAAC7xB,cAArB;AACD;A;AAED,QACEa,QAAQ,KAAKL,OAAE,CAAChW,IAAhB,IACAqW,QAAQ,KAAKL,OAAE,CAAC/V,MADhB,IAEAoW,QAAQ,KAAKL,OAAE,CAAClkB,IAHlB,EAIE;AACA,aAAO,KAAP;AACD;A;AAED,QAAIukB,QAAQ,KAAKL,OAAE,CAACvX,UAApB,EAAgC;AAE9B,aAAO,IAAP;AACD;A;AAED,WAAO,CAAC,KAAKwE,KAAL,CAAWiT,WAAnB;AACD;A;AAED/a,EAAAA,aAAa,CAACkb,QAAD,EAA4B;AACvC,UAAM3sB,IAAI,GAAG,KAAKuZ,KAAL,CAAWvZ,IAAxB;AACA,QAAI29D,MAAJ;A;AAEA,QAAI39D,IAAI,CAACsR,OAAL,KAAiBqb,QAAQ,KAAKL,OAAE,CAAC9Y,GAAhB,IAAuBmZ,QAAQ,KAAKL,OAAE,CAAC5Y,WAAxD,CAAJ,EAA0E;AACxE,WAAK6F,KAAL,CAAWiT,WAAX,GAAyB,KAAzB;AACD,KAFD,MAEO,IAAKmxC,MAAM,GAAG39D,IAAI,CAACyR,aAAnB,EAAmC;AACxCksD,MAAAA,MAAM,CAACz/D,IAAP,CAAY,IAAZ,EAAkByuB,QAAlB;AACD,KAFM,MAEA;AACL,WAAKpT,KAAL,CAAWiT,WAAX,GAAyBxsB,IAAI,CAAC4Q,UAA9B;AACD;AACF;A;AA7+CiD;A;ACxG7C,MAAMgtD,UAAN,CAAiB;AAAA;AAAA,SAEtBC,YAFsB,GAEM,IAAI/vC,GAAJ,EAFN;AAAA,SAKtBgwC,aALsB,GAK0B,IAAInsD,GAAJ,EAL1B;AAAA,SAStBmgB,qBATsB,GASuB,IAAIngB,GAAJ,EATvB;AAAA;A;AAAA;AAYT,MAAMosD,iBAAN,CAAwB;AAKrC5sD,EAAAA,WAAW,CAACgU,KAAD,EAAuB;AAAA,SAJlC3jB,KAIkC,GAJP,EAIO;AAAA,SAFlCswB,qBAEkC,GAFW,IAAIngB,GAAJ,EAEX;AAChC,SAAKwT,KAAL,GAAaA,KAAb;AACD;A;AAEDsJ,EAAAA,OAAO,GAAe;AACpB,WAAO,KAAKjtB,KAAL,CAAW,KAAKA,KAAL,CAAWP,MAAX,GAAoB,CAA/B,CAAP;AACD;A;AAEDyxB,EAAAA,KAAK,GAAG;AACN,SAAKlxB,KAAL,CAAW9C,IAAX,CAAgB,IAAIk/D,UAAJ,EAAhB;AACD;A;AAEDjrC,EAAAA,IAAI,GAAG;AACL,UAAMqrC,aAAa,GAAG,KAAKx8D,KAAL,CAAW+Y,GAAX,EAAtB;AAKA,UAAMkU,OAAO,GAAG,KAAKA,OAAL,EAAhB;A;AAGA,SAAK,MAAM,CAACrmB,IAAD,EAAOwc,GAAP,CAAX,IAA0BthB,KAAK,CAAC26D,IAAN,CAAWD,aAAa,CAAClsC,qBAAzB,CAA1B,EAA2E;AACzE,UAAIrD,OAAJ,EAAa;AACX,YAAI,CAACA,OAAO,CAACqD,qBAAR,CAA8BhZ,GAA9B,CAAkC1Q,IAAlC,CAAL,EAA8C;AAC5CqmB,UAAAA,OAAO,CAACqD,qBAAR,CAA8B/f,GAA9B,CAAkC3J,IAAlC,EAAwCwc,GAAxC;AACD;AACF,OAJD,MAIO;AACL,aAAKO,KAAL,CAAWP,GAAX,EAAgB4F,aAAM,CAAC5L,6BAAvB,EAAsDxW,IAAtD;AACD;AACF;AACF;A;AAED81D,EAAAA,kBAAkB,CAChB91D,IADgB,EAEhBg4B,WAFgB,EAGhBxb,GAHgB,EAIhB;AACA,UAAMu5C,UAAU,GAAG,KAAK1vC,OAAL,EAAnB;AACA,QAAI2vC,SAAS,GAAGD,UAAU,CAACN,YAAX,CAAwB/kD,GAAxB,CAA4B1Q,IAA5B,CAAhB;A;AAEA,QAAIg4B,WAAW,GAAGnP,2BAAlB,EAA+C;AAC7C,YAAMotC,QAAQ,GAAGD,SAAS,IAAID,UAAU,CAACL,aAAX,CAAyB7kD,GAAzB,CAA6B7Q,IAA7B,CAA9B;A;AACA,UAAIi2D,QAAJ,EAAc;AACZ,cAAMC,SAAS,GAAGD,QAAQ,GAAGvtC,yBAA7B;AACA,cAAMytC,SAAS,GAAGn+B,WAAW,GAAGtP,yBAAhC;AAEA,cAAM0tC,OAAO,GAAGH,QAAQ,GAAGptC,2BAA3B;AACA,cAAMwtC,OAAO,GAAGr+B,WAAW,GAAGnP,2BAA9B;AAKAmtC,QAAAA,SAAS,GAAGI,OAAO,KAAKC,OAAZ,IAAuBH,SAAS,KAAKC,SAAjD;AAEA,YAAI,CAACH,SAAL,EAAgBD,UAAU,CAACL,aAAX,CAAyB7qC,MAAzB,CAAgC7qB,IAAhC;AACjB,OAbD,MAaO,IAAI,CAACg2D,SAAL,EAAgB;AACrBD,QAAAA,UAAU,CAACL,aAAX,CAAyB/rD,GAAzB,CAA6B3J,IAA7B,EAAmCg4B,WAAnC;AACD;AACF;A;AAED,QAAIg+B,SAAJ,EAAe;AACb,WAAKj5C,KAAL,CAAWP,GAAX,EAAgB4F,aAAM,CAACvJ,wBAAvB,EAAiD7Y,IAAjD;AACD;A;AAED+1D,IAAAA,UAAU,CAACN,YAAX,CAAwBzxB,GAAxB,CAA4BhkC,IAA5B;AACA+1D,IAAAA,UAAU,CAACrsC,qBAAX,CAAiCmB,MAAjC,CAAwC7qB,IAAxC;AACD;A;AAEDs2D,EAAAA,cAAc,CAACt2D,IAAD,EAAewc,GAAf,EAA4B;AACxC,QAAIu5C,UAAJ;A;AACA,SAAKA,UAAL,IAAmB,KAAK38D,KAAxB,EAA+B;AAC7B,UAAI28D,UAAU,CAACN,YAAX,CAAwB/kD,GAAxB,CAA4B1Q,IAA5B,CAAJ,EAAuC;AACxC;A;AAED,QAAI+1D,UAAJ,EAAgB;AACdA,MAAAA,UAAU,CAACrsC,qBAAX,CAAiC/f,GAAjC,CAAqC3J,IAArC,EAA2Cwc,GAA3C;AACD,KAFD,MAEO;AAEL,WAAKO,KAAL,CAAWP,GAAX,EAAgB4F,aAAM,CAAC5L,6BAAvB,EAAsDxW,IAAtD;AACD;AACF;A;AArFoC;A;AC4BvC,MAAMu2D,WAAW,GAAG,CAApB;AAAA,MACEC,+BAA+B,GAAG,CADpC;AAAA,MAEEC,oCAAoC,GAAG,CAFzC;AAAA,MAGEC,qBAAqB,GAAG,CAH1B;A;AAOA,MAAMC,eAAN,CAAsB;AAGpB5tD,EAAAA,WAAW,CAACnR,IAAyB,GAAG2+D,WAA7B,EAA0C;AAAA,SAFrD3+D,IAEqD;AACnD,SAAKA,IAAL,GAAYA,IAAZ;AACD;A;AAEDg/D,EAAAA,8BAA8B,GAAG;AAC/B,WACE,KAAKh/D,IAAL,KAAc6+D,oCAAd,IACA,KAAK7+D,IAAL,KAAc4+D,+BAFhB;AAID;A;AAEDK,EAAAA,+BAA+B,GAAG;AAChC,WAAO,KAAKj/D,IAAL,KAAc8+D,qBAArB;AACD;A;AAhBmB;A;AAmBtB,MAAMI,qBAAN,SAAoCH,eAApC,CAAoD;AAElD5tD,EAAAA,WAAW,CAACnR,IAAD,EAAc;AACvB,UAAMA,IAAN;AADuB,SADzBwlB,MACyB,GADoC,IAAI7T,GAAJ,EACpC;AAExB;A;AACDwtD,EAAAA,sBAAsB,CAACv6C,GAAD,EAAchR,QAAd,EAAuC;AAC3D,SAAK4R,MAAL,CAAYzT,GAAZ,CAAgB6S,GAAhB,EAAqBhR,QAArB;AACD;A;AACDwrD,EAAAA,qBAAqB,CAACx6C,GAAD,EAAc;AACjC,SAAKY,MAAL,CAAYyN,MAAZ,CAAmBrO,GAAnB;AACD;A;AACDy6C,EAAAA,aAAa,CAACC,QAAD,EAA2D;AACtE,SAAK95C,MAAL,CAAYjlB,OAAZ,CAAoB++D,QAApB;AACD;A;AAbiD;A;AAgBrC,MAAMC,sBAAN,CAA6B;AAG1CpuD,EAAAA,WAAW,CAACgU,KAAD,EAAuB;AAAA,SAFlC3jB,KAEkC,GAFF,CAAC,IAAIu9D,eAAJ,EAAD,CAEE;AAChC,SAAK55C,KAAL,GAAaA,KAAb;AACD;A;AACDuN,EAAAA,KAAK,CAACE,KAAD,EAAyB;AAC5B,SAAKpxB,KAAL,CAAW9C,IAAX,CAAgBk0B,KAAhB;AACD;A;AAEDD,EAAAA,IAAI,GAAG;AACL,SAAKnxB,KAAL,CAAW+Y,GAAX;AACD;A;AAYDilD,EAAAA,+BAA+B,CAAC56C,GAAD,EAAchR,QAAd,EAA6C;AAC1E,UAAM;AAAEpS,MAAAA;AAAF,QAAY,IAAlB;AACA,QAAIR,CAAC,GAAGQ,KAAK,CAACP,MAAN,GAAe,CAAvB;AACA,QAAI2xB,KAAsB,GAAGpxB,KAAK,CAACR,CAAD,CAAlC;A;AACA,WAAO,CAAC4xB,KAAK,CAACqsC,+BAAN,EAAR,EAAiD;AAC/C,UAAIrsC,KAAK,CAACosC,8BAAN,EAAJ,EAA4C;AAE1CpsC,QAAAA,KAAK,CAACusC,sBAAN,CAA6Bv6C,GAA7B,EAAkChR,QAAlC;AACD,OAHD,MAGO;AAGL;AACD;A;AACDgf,MAAAA,KAAK,GAAGpxB,KAAK,CAAC,EAAER,CAAH,CAAb;AACD;A;AAED,SAAKmkB,KAAL,CAAWP,GAAX,EAAgBhR,QAAhB;AACD;A;AAuBD6rD,EAAAA,kCAAkC,CAChC76C,GADgC,EAEhChR,QAFgC,EAG1B;AACN,UAAM;AAAEpS,MAAAA;AAAF,QAAY,IAAlB;AACA,UAAMoxB,KAAsB,GAAGpxB,KAAK,CAACA,KAAK,CAACP,MAAN,GAAe,CAAhB,CAApC;A;AACA,QAAI2xB,KAAK,CAACqsC,+BAAN,EAAJ,EAA6C;AAC3C,WAAK95C,KAAL,CAAWP,GAAX,EAAgBhR,QAAhB;AACD,KAFD,MAEO,IAAIgf,KAAK,CAACosC,8BAAN,EAAJ,EAA4C;AAEjDpsC,MAAAA,KAAK,CAACusC,sBAAN,CAA6Bv6C,GAA7B,EAAkChR,QAAlC;AACD,KAHM,MAGA;AACL;AACD;AACF;A;AAWD8rD,EAAAA,+BAA+B,CAAC96C,GAAD,EAAchR,QAAd,EAA6C;AAC1E,UAAM;AAAEpS,MAAAA;AAAF,QAAY,IAAlB;AACA,QAAIR,CAAC,GAAGQ,KAAK,CAACP,MAAN,GAAe,CAAvB;AACA,QAAI2xB,KAAsB,GAAGpxB,KAAK,CAACR,CAAD,CAAlC;A;AACA,WAAO4xB,KAAK,CAACosC,8BAAN,EAAP,EAA+C;AAC7C,UAAIpsC,KAAK,CAAC5yB,IAAN,KAAe6+D,oCAAnB,EAAyD;AAEvDjsC,QAAAA,KAAK,CAACusC,sBAAN,CAA6Bv6C,GAA7B,EAAkChR,QAAlC;AACD;A;AACDgf,MAAAA,KAAK,GAAGpxB,KAAK,CAAC,EAAER,CAAH,CAAb;AACD;AACF;A;AAED2+D,EAAAA,iBAAiB,GAAS;AACxB,UAAM;AAAEn+D,MAAAA;AAAF,QAAY,IAAlB;AACA,UAAMgxB,YAAY,GAAGhxB,KAAK,CAACA,KAAK,CAACP,MAAN,GAAe,CAAhB,CAA1B;AACA,QAAI,CAACuxB,YAAY,CAACwsC,8BAAb,EAAL,EAAoD;AAEpDxsC,IAAAA,YAAY,CAAC6sC,aAAb,CAA2B,CAACzrD,QAAD,EAAWgR,GAAX,KAAmB;AAE5C,WAAKO,KAAL,CAAWP,GAAX,EAAgBhR,QAAhB;AAEA,UAAI5S,CAAC,GAAGQ,KAAK,CAACP,MAAN,GAAe,CAAvB;AACA,UAAI2xB,KAAK,GAAGpxB,KAAK,CAACR,CAAD,CAAjB;A;AACA,aAAO4xB,KAAK,CAACosC,8BAAN,EAAP,EAA+C;AAE7CpsC,QAAAA,KAAK,CAACwsC,qBAAN,CAA4Bx6C,GAA5B;AACAgO,QAAAA,KAAK,GAAGpxB,KAAK,CAAC,EAAER,CAAH,CAAb;AACD;AACF,KAXD;AAYD;A;AAvHyC;AA0HrC,SAAS4+D,4BAAT,GAAwC;AAC7C,SAAO,IAAIb,eAAJ,CAAoBD,qBAApB,CAAP;AACD;AAEM,SAASe,iBAAT,GAA6B;AAClC,SAAO,IAAIX,qBAAJ,CAA0BN,+BAA1B,CAAP;AACD;AAEM,SAASkB,kBAAT,GAA8B;AACnC,SAAO,IAAIZ,qBAAJ,CAA0BL,oCAA1B,CAAP;AACD;AAEM,SAASkB,kBAAT,GAA8B;AACnC,SAAO,IAAIhB,eAAJ,EAAP;AACD;A;ACrMc,MAAMiB,UAAN,SAAyB/G,SAAzB,CAAmC;AAQhDjxC,EAAAA,QAAQ,CAACrO,IAAD,EAAaxQ,GAAb,EAA0B3C,GAA1B,EAA0C;AAChD,QAAI,CAACmT,IAAL,EAAW;AAEX,UAAMwN,KAAK,GAAIxN,IAAI,CAACwN,KAAL,GAAaxN,IAAI,CAACwN,KAAL,IAAc,EAA1C;AACAA,IAAAA,KAAK,CAAChe,GAAD,CAAL,GAAa3C,GAAb;AACD;A;AAIDyyB,EAAAA,YAAY,CAACgnC,EAAD,EAAyB;AACnC,WAAO,KAAKz1D,KAAL,CAAW8hB,OAAE,CAACvX,UAAd,KAA6B,KAAKwE,KAAL,CAAWpT,KAAX,KAAqB85D,EAAzD;AACD;A;AAID/iC,EAAAA,gBAAgB,CAAC+iC,EAAD,EAAsB;AACpC,QAAI,KAAKhnC,YAAL,CAAkBgnC,EAAlB,CAAJ,EAA2B;AACzB,WAAKvxC,IAAL;AACD,KAFD,MAEO;AACL,WAAK2L,UAAL,CAAgB,IAAhB,EAAsB/N,OAAE,CAACvX,UAAzB;AACD;AACF;A;AAIDilB,EAAAA,YAAY,CAAC5xB,IAAD,EAAwB;AAClC,WACE,KAAKoC,KAAL,CAAW8hB,OAAE,CAAClkB,IAAd,KACA,KAAKmR,KAAL,CAAWpT,KAAX,KAAqBiC,IADrB,IAEA,CAAC,KAAKmR,KAAL,CAAWqkC,WAHd;AAKD;A;AAEDqY,EAAAA,oBAAoB,CAACiK,SAAD,EAAoB93D,IAApB,EAA2C;AAC7D,UAAM+3D,OAAO,GAAGD,SAAS,GAAG93D,IAAI,CAACnH,MAAjC;A;AACA,QAAI,KAAKqX,KAAL,CAAWjK,KAAX,CAAiB6xD,SAAjB,EAA4BC,OAA5B,MAAyC/3D,IAA7C,EAAmD;AACjD,YAAMg4D,MAAM,GAAG,KAAK9nD,KAAL,CAAWzN,UAAX,CAAsBs1D,OAAtB,CAAf;AACA,aAAO,EACLzyC,gBAAgB,CAAC0yC,MAAD,CAAhB,IAIA,CAACA,MAAM,GAAG,MAAV,MAAsB,MALjB,CAAP;AAOD;A;AACD,WAAO,KAAP;AACD;A;AAEDn5B,EAAAA,qBAAqB,CAAC7+B,IAAD,EAAwB;AAC3C,UAAMsmB,IAAI,GAAG,KAAKqe,cAAL,EAAb;AACA,WAAO,KAAKkpB,oBAAL,CAA0BvnC,IAA1B,EAAgCtmB,IAAhC,CAAP;AACD;A;AAIDyxB,EAAAA,aAAa,CAACzxB,IAAD,EAAwB;AACnC,WAAO,KAAK4xB,YAAL,CAAkB5xB,IAAlB,KAA2B,KAAKmwB,GAAL,CAASjM,OAAE,CAAClkB,IAAZ,CAAlC;AACD;A;AAIDkwB,EAAAA,gBAAgB,CAAClwB,IAAD,EAAewL,QAAf,EAA+C;AAC7D,QAAI,CAAC,KAAKimB,aAAL,CAAmBzxB,IAAnB,CAAL,EAA+B,KAAKiyB,UAAL,CAAgB,IAAhB,EAAsBzmB,QAAtB;AAChC;A;AAIDusB,EAAAA,kBAAkB,GAAY;AAC5B,WACE,KAAK31B,KAAL,CAAW8hB,OAAE,CAAC/Z,GAAd,KACA,KAAK/H,KAAL,CAAW8hB,OAAE,CAACtZ,MAAd,CADA,IAEA,KAAK+Z,qBAAL,EAHF;AAKD;A;AAEDA,EAAAA,qBAAqB,GAAY;AAC/B,WAAOtV,SAAS,CAAC/X,IAAV,CACL,KAAK4Y,KAAL,CAAWjK,KAAX,CAAiB,KAAKkL,KAAL,CAAW0L,UAA5B,EAAwC,KAAK1L,KAAL,CAAWtS,KAAnD,CADK,CAAP;AAGD;A;AAEDoqD,EAAAA,qBAAqB,GAAY;AAC/B,WAAO55C,SAAS,CAAC/X,IAAV,CACL,KAAK4Y,KAAL,CAAWjK,KAAX,CAAiB,KAAKkL,KAAL,CAAWrS,GAA5B,EAAiC,KAAK6lC,cAAL,EAAjC,CADK,CAAP;AAGD;A;AAIDid,EAAAA,gBAAgB,GAAY;AAC1B,WAAO,KAAKzxB,GAAL,CAASjM,OAAE,CAACjZ,IAAZ,KAAqB,KAAK8sB,kBAAL,EAA5B;AACD;A;AAKD1G,EAAAA,SAAS,CAAC4mC,QAAiB,GAAG,IAArB,EAAiC;AACxC,QAAIA,QAAQ,GAAG,KAAKrW,gBAAL,EAAH,GAA6B,KAAKzxB,GAAL,CAASjM,OAAE,CAACjZ,IAAZ,CAAzC,EAA4D;AAC5D,SAAK8R,KAAL,CAAW,KAAK5L,KAAL,CAAW0L,UAAtB,EAAkCuF,aAAM,CAAClL,gBAAzC;AACD;A;AAKD4Y,EAAAA,MAAM,CAACl4B,IAAD,EAAkB4kB,GAAlB,EAAuC;AAC3C,SAAK2T,GAAL,CAASv4B,IAAT,KAAkB,KAAKq6B,UAAL,CAAgBzV,GAAhB,EAAqB5kB,IAArB,CAAlB;AACD;A;AAGDu1D,EAAAA,aAAa,CAAC5zD,OAAe,GAAG,mBAAnB,EAA8C;AACzD,QAAI,KAAK4X,KAAL,CAAWtS,KAAX,GAAmB,KAAKsS,KAAL,CAAW0L,UAAlC,EAA8C;AAE5C,WAAKE,KAAL,CAAW,KAAK5L,KAAL,CAAW0L,UAAtB,EAAkC;AAChCrN,QAAAA,IAAI,EAAEgD,UAAU,CAACC,WADe;AAEhC4J,QAAAA,UAAU,EAAE,iBAFoB;AAGhC7Q,QAAAA,QAAQ,EAAEjS;AAHsB,OAAlC;AAMD;AACF;A;AAKD04B,EAAAA,UAAU,CACRzV,GADQ,EAER07C,aAAwC,GAAG;AACzC1oD,IAAAA,IAAI,EAAEgD,UAAU,CAACC,WADwB;AAEzC4J,IAAAA,UAAU,EAAE,iBAF6B;AAGzC7Q,IAAAA,QAAQ,EAAE;AAH+B,GAFnC,EAOD;AACP,QAAI0sD,aAAa,YAAYpvD,SAA7B,EAAwC;AACtCovD,MAAAA,aAAa,GAAG;AACd1oD,QAAAA,IAAI,EAAEgD,UAAU,CAACC,WADH;AAEd4J,QAAAA,UAAU,EAAE,iBAFE;AAGd7Q,QAAAA,QAAQ,EAAG,+BAA8B0sD,aAAa,CAAClvD,KAAM;AAH/C,OAAhB;AAKD;A;AAED,UAAM,KAAK+T,KAAL,CAAWP,GAAG,IAAI,IAAP,GAAcA,GAAd,GAAoB,KAAKrL,KAAL,CAAWtS,KAA1C,EAAiDq5D,aAAjD,CAAN;AAED;A;AAEDtK,EAAAA,YAAY,CAAC5tD,IAAD,EAAewc,GAAf,EAAoC;AAC9C,QAAI,CAAC,KAAKhM,SAAL,CAAexQ,IAAf,CAAL,EAA2B;AACzB,YAAM,KAAKid,aAAL,CACJT,GAAG,IAAI,IAAP,GAAcA,GAAd,GAAoB,KAAKrL,KAAL,CAAWtS,KAD3B,EAEJ;AAAEs5D,QAAAA,aAAa,EAAE,CAACn4D,IAAD;AAAjB,OAFI,EAGH,kEAAiEA,IAAK,GAHnE,CAAN;AAKD;A;AAED,WAAO,IAAP;AACD;A;AAEDo4D,EAAAA,eAAe,CAACC,KAAD,EAAuB77C,GAAvB,EAA4C;AACzD,QAAI,CAAC67C,KAAK,CAACl7D,IAAN,CAAWuK,CAAC,IAAI,KAAK8I,SAAL,CAAe9I,CAAf,CAAhB,CAAL,EAAyC;AACvC,YAAM,KAAKuV,aAAL,CACJT,GAAG,IAAI,IAAP,GAAcA,GAAd,GAAoB,KAAKrL,KAAL,CAAWtS,KAD3B,EAEJ;AAAEs5D,QAAAA,aAAa,EAAEE;AAAjB,OAFI,EAGH,sFAAqFA,KAAK,CAAC5+D,IAAN,CACpF,IADoF,CAEpF,GALE,CAAN;AAOD;AACF;A;AAID+/B,EAAAA,QAAQ,CACNnjC,EADM,EAENiiE,QAAe,GAAG,KAAKnnD,KAAL,CAAWuoB,KAAX,EAFZ,EAMyC;AAC/C,UAAM6+B,WAA+B,GAAG;AAAEhnD,MAAAA,IAAI,EAAE;AAAR,KAAxC;A;AACA,QAAI;AACF,YAAMA,IAAI,GAAGlb,EAAE,CAAC,CAACkb,IAAI,GAAG,IAAR,KAAiB;AAC/BgnD,QAAAA,WAAW,CAAChnD,IAAZ,GAAmBA,IAAnB;AACA,cAAMgnD,WAAN;AACD,OAHc,CAAf;A;AAIA,UAAI,KAAKpnD,KAAL,CAAWiM,MAAX,CAAkBvkB,MAAlB,GAA2By/D,QAAQ,CAACl7C,MAAT,CAAgBvkB,MAA/C,EAAuD;AACrD,cAAM4gC,SAAS,GAAG,KAAKtoB,KAAvB;AACA,aAAKA,KAAL,GAAamnD,QAAb;AAIA,aAAKnnD,KAAL,CAAWwkC,YAAX,GAA0Blc,SAAS,CAACkc,YAApC;AACA,eAAO;AACLpkC,UAAAA,IADK;AAELjY,UAAAA,KAAK,EAAGmgC,SAAS,CAACrc,MAAV,CAAiBk7C,QAAQ,CAACl7C,MAAT,CAAgBvkB,MAAjC,CAFH;AAGLwnC,UAAAA,MAAM,EAAE,KAHH;AAILF,UAAAA,OAAO,EAAE,KAJJ;AAKL1G,UAAAA;AALK,SAAP;AAOD;A;AAED,aAAO;AACLloB,QAAAA,IADK;AAELjY,QAAAA,KAAK,EAAE,IAFF;AAGL+mC,QAAAA,MAAM,EAAE,KAHH;AAILF,QAAAA,OAAO,EAAE,KAJJ;AAKL1G,QAAAA,SAAS,EAAE;AALN,OAAP;AAOD,KA5BD,CA4BE,OAAOngC,KAAP,EAAc;AACd,YAAMmgC,SAAS,GAAG,KAAKtoB,KAAvB;AACA,WAAKA,KAAL,GAAamnD,QAAb;A;AACA,UAAIh/D,KAAK,YAAYmZ,WAArB,EAAkC;AAChC,eAAO;AAAElB,UAAAA,IAAI,EAAE,IAAR;AAAcjY,UAAAA,KAAd;AAAqB+mC,UAAAA,MAAM,EAAE,IAA7B;AAAmCF,UAAAA,OAAO,EAAE,KAA5C;AAAmD1G,UAAAA;AAAnD,SAAP;AACD;A;AACD,UAAIngC,KAAK,KAAKi/D,WAAd,EAA2B;AACzB,eAAO;AACLhnD,UAAAA,IAAI,EAAEgnD,WAAW,CAAChnD,IADb;AAELjY,UAAAA,KAAK,EAAE,IAFF;AAGL+mC,UAAAA,MAAM,EAAE,KAHH;AAILF,UAAAA,OAAO,EAAE,IAJJ;AAKL1G,UAAAA;AALK,SAAP;AAOD;A;AAED,YAAMngC,KAAN;AACD;AACF;A;AAEDk/D,EAAAA,qBAAqB,CACnBx2C,mBADmB,EAEnBy2C,QAFmB,EAGnB;AACA,QAAI,CAACz2C,mBAAL,EAA0B,OAAO,KAAP;AAC1B,UAAM;AAAE02C,MAAAA,eAAF;AAAmBC,MAAAA;AAAnB,QAAmC32C,mBAAzC;AACA,QAAI,CAACy2C,QAAL,EAAe,OAAOC,eAAe,IAAI,CAAnB,IAAwBC,WAAW,IAAI,CAA9C;A;AACf,QAAID,eAAe,IAAI,CAAvB,EAA0B;AACxB,WAAKzmC,UAAL,CAAgBymC,eAAhB;AACD;A;AACD,QAAIC,WAAW,IAAI,CAAnB,EAAsB;AACpB,WAAK57C,KAAL,CAAW47C,WAAX,EAAwBv2C,aAAM,CAAC5N,cAA/B;AACD;AACF;A;AAWD4pC,EAAAA,qBAAqB,GAAY;AAC/B,WACE,KAAKh8C,KAAL,CAAW8hB,OAAE,CAAClkB,IAAd,KACA,CAAC,CAAC,KAAKmR,KAAL,CAAWvZ,IAAX,CAAgBsR,OADlB,IAEA,KAAK9G,KAAL,CAAW8hB,OAAE,CAAC/hB,MAAd,CAFA,IAGA,KAAKC,KAAL,CAAW8hB,OAAE,CAACpa,GAAd,CAHA,IAIA,KAAK1H,KAAL,CAAW8hB,OAAE,CAACna,MAAd,CAJA,IAKA,KAAK3H,KAAL,CAAW8hB,OAAE,CAACla,OAAd,CANF;AAQD;A;AAMD2W,EAAAA,aAAa,CAACpP,IAAD,EAAsB;AACjC,WAAOA,IAAI,CAAC3Z,IAAL,KAAc,aAArB;AACD;A;AAOD8oB,EAAAA,gBAAgB,CAACnP,IAAD,EAAqB;AACnC,WAAOA,IAAI,CAAChZ,EAAL,CAAQyH,IAAf;AACD;A;AAODojB,EAAAA,wBAAwB,CAAC7R,IAAD,EAAsB;AAC5C,WACE,CAACA,IAAI,CAAC3Z,IAAL,KAAc,kBAAd,IACC2Z,IAAI,CAAC3Z,IAAL,KAAc,0BADhB,KAEA,KAAK+oB,aAAL,CAAmBpP,IAAI,CAACslB,QAAxB,CAHF;AAKD;A;AAEDxT,EAAAA,eAAe,CAAC9R,IAAD,EAAsB;AACnC,WACEA,IAAI,CAAC3Z,IAAL,KAAc,0BAAd,IACA2Z,IAAI,CAAC3Z,IAAL,KAAc,wBAFhB;AAID;A;AAED0nB,EAAAA,gBAAgB,CAAC/N,IAAD,EAAsB;AACpC,WAAOA,IAAI,CAAC3Z,IAAL,KAAc,gBAArB;AACD;A;AAED0rB,EAAAA,cAAc,CAAC/R,IAAD,EAAsB;AAClC,WAAOA,IAAI,CAAC3Z,IAAL,KAAc,cAArB;AACD;A;AAEDghE,EAAAA,gBAAgB,CACd7yC,QAAiB,GAAG,KAAKtc,OAAL,CAAaosC,UAAb,KAA4B,QADlC,EAEF;AAEZ,UAAMgjB,SAAS,GAAG,KAAK1nD,KAAL,CAAWikC,MAA7B;AACA,SAAKjkC,KAAL,CAAWikC,MAAX,GAAoB,EAApB;AAEA,UAAM0jB,sBAAsB,GAAG,KAAK3nD,KAAL,CAAWukC,mBAA1C;AACA,SAAKvkC,KAAL,CAAWukC,mBAAX,GAAiC,EAAjC;AAGA,UAAMqjB,WAAW,GAAG,KAAKhzC,QAAzB;AACA,SAAKA,QAAL,GAAgBA,QAAhB;AAEA,UAAMizC,QAAQ,GAAG,KAAKxuC,KAAtB;AACA,UAAMjB,YAAY,GAAG,KAAK6F,eAAL,EAArB;AACA,SAAK5E,KAAL,GAAa,IAAIjB,YAAJ,CAAiB,KAAKxM,KAAL,CAAW0hC,IAAX,CAAgB,IAAhB,CAAjB,EAAwC,KAAK14B,QAA7C,CAAb;AAEA,UAAMkzC,YAAY,GAAG,KAAKvR,SAA1B;AACA,SAAKA,SAAL,GAAiB,IAAItN,0BAAJ,EAAjB;AAEA,UAAMwb,aAAa,GAAG,KAAKG,UAA3B;AACA,SAAKA,UAAL,GAAkB,IAAIJ,iBAAJ,CAAsB,KAAK54C,KAAL,CAAW0hC,IAAX,CAAgB,IAAhB,CAAtB,CAAlB;AAEA,UAAMya,kBAAkB,GAAG,KAAKC,eAAhC;AACA,SAAKA,eAAL,GAAuB,IAAIhC,sBAAJ,CAA2B,KAAKp6C,KAAL,CAAW0hC,IAAX,CAAgB,IAAhB,CAA3B,CAAvB;AAEA,WAAO,MAAM;AAEX,WAAKttC,KAAL,CAAWikC,MAAX,GAAoByjB,SAApB;AACA,WAAK1nD,KAAL,CAAWukC,mBAAX,GAAiCojB,sBAAjC;AAGA,WAAK/yC,QAAL,GAAgBgzC,WAAhB;AACA,WAAKvuC,KAAL,GAAawuC,QAAb;AACA,WAAKtR,SAAL,GAAiBuR,YAAjB;AACA,WAAKlD,UAAL,GAAkBH,aAAlB;AACA,WAAKuD,eAAL,GAAuBD,kBAAvB;AACD,KAXD;AAYD;A;AAEDE,EAAAA,kBAAkB,GAAG;AACnB,QAAIC,UAAU,GAAGtf,KAAjB;A;AACA,QAAI,KAAKvpC,SAAL,CAAe,eAAf,KAAmC,KAAKuV,QAA5C,EAAsD;AACpDszC,MAAAA,UAAU,IAAIpf,WAAd;AACD;A;AACD,SAAKzvB,KAAL,CAAWF,KAAX,CAAiB9D,aAAjB;AACA,SAAKkhC,SAAL,CAAep9B,KAAf,CAAqB+uC,UAArB;AACD;A;AA1W+C;AAwX3C,MAAMC,gBAAN,CAAuB;AAAA;AAAA,SAC5BZ,eAD4B,GACV,CAAC,CADS;AAAA,SAE5BC,WAF4B,GAEd,CAAC,CAFa;AAAA;A;AAAA;A;AC7Y9B,MAAMY,IAAN,CAA+B;AAC7BxwD,EAAAA,WAAW,CAACywD,MAAD,EAAiBh9C,GAAjB,EAA8BtL,GAA9B,EAA6C;AAAA,SASxDtZ,IATwD;AAAA,SAUxDiH,KAVwD;AAAA,SAWxDC,GAXwD;AAAA,SAYxDoS,GAZwD;AAAA,SAaxDvS,KAbwD;AAAA,SAcxD0S,eAdwD;AAAA,SAexDD,gBAfwD;AAAA,SAgBxDkB,aAhBwD;AAAA,SAiBxDyM,KAjBwD;AACtD,SAAKnnB,IAAL,GAAY,EAAZ;AACA,SAAKiH,KAAL,GAAa2d,GAAb;AACA,SAAK1d,GAAL,GAAW,CAAX;AACA,SAAKoS,GAAL,GAAW,IAAIpB,cAAJ,CAAmBoB,GAAnB,CAAX;AACA,QAAIsoD,MAAJ,YAAIA,MAAM,CAAE/vD,OAAR,CAAgBqmD,MAApB,EAA4B,KAAKnxD,KAAL,GAAa,CAAC6d,GAAD,EAAM,CAAN,CAAb;AAC5B,QAAIg9C,MAAJ,YAAIA,MAAM,CAAEzpD,QAAZ,EAAsB,KAAKmB,GAAL,CAASnB,QAAT,GAAoBypD,MAAM,CAACzpD,QAA3B;AACvB;A;AAYDivB,EAAAA,OAAO,GAAS;AAEd,UAAMmZ,OAAY,GAAG,IAAIohB,IAAJ,EAArB;AACA,UAAM/1D,IAAI,GAAG3F,MAAM,CAAC2F,IAAP,CAAY,IAAZ,CAAb;A;AACA,SAAK,IAAI5K,CAAC,GAAG,CAAR,EAAWC,MAAM,GAAG2K,IAAI,CAAC3K,MAA9B,EAAsCD,CAAC,GAAGC,MAA1C,EAAkDD,CAAC,EAAnD,EAAuD;AACrD,YAAMmI,GAAG,GAAGyC,IAAI,CAAC5K,CAAD,CAAhB;A;AAEA,UACEmI,GAAG,KAAK,iBAAR,IACAA,GAAG,KAAK,kBADR,IAEAA,GAAG,KAAK,eAHV,EAIE;AAEAo3C,QAAAA,OAAO,CAACp3C,GAAD,CAAP,GAAe,KAAKA,GAAL,CAAf;AACD;AACF;A;AAED,WAAOo3C,OAAP;AACD;A;AAtC4B;A;AAyCxB,MAAMshB,SAAN,SAAwB7B,UAAxB,CAAmC;AACxC12C,EAAAA,SAAS,GAAmB;AAE1B,WAAO,IAAIq4C,IAAJ,CAAS,IAAT,EAAe,KAAKpoD,KAAL,CAAWtS,KAA1B,EAAiC,KAAKsS,KAAL,CAAWsL,QAA5C,CAAP;AACD;A;AAEDoC,EAAAA,WAAW,CAAcrC,GAAd,EAA2BtL,GAA3B,EAA6C;AAEtD,WAAO,IAAIqoD,IAAJ,CAAS,IAAT,EAAe/8C,GAAf,EAAoBtL,GAApB,CAAP;AACD;A;AAGDiS,EAAAA,eAAe,CAAcvrB,IAAd,EAAiC;AAC9C,WAAO,KAAKinB,WAAL,CAAiBjnB,IAAI,CAACiH,KAAtB,EAA6BjH,IAAI,CAACsZ,GAAL,CAASrS,KAAtC,CAAP;AACD;A;AAIDwiB,EAAAA,UAAU,CAAc9P,IAAd,EAAuB3Z,IAAvB,EAAwC;AAChD,WAAO,KAAKsnB,YAAL,CACL3N,IADK,EAEL3Z,IAFK,EAGL,KAAKuZ,KAAL,CAAW0L,UAHN,EAIL,KAAK1L,KAAL,CAAW2L,aAJN,CAAP;AAMD;A;AAIDoC,EAAAA,YAAY,CACV3N,IADU,EAEV3Z,IAFU,EAGV4kB,GAHU,EAIVtL,GAJU,EAKP;A;AAOHK,IAAAA,IAAI,CAAC3Z,IAAL,GAAYA,IAAZ;AACA2Z,IAAAA,IAAI,CAACzS,GAAL,GAAW0d,GAAX;AACAjL,IAAAA,IAAI,CAACL,GAAL,CAASpS,GAAT,GAAeoS,GAAf;AACA,QAAI,KAAKzH,OAAL,CAAaqmD,MAAjB,EAAyBv+C,IAAI,CAAC5S,KAAL,CAAW,CAAX,IAAgB6d,GAAhB;AACzB,SAAK1K,cAAL,CAAoBP,IAApB;AACA,WAAOA,IAAP;AACD;A;AAEDo6C,EAAAA,kBAAkB,CAACp6C,IAAD,EAAiB1S,KAAjB,EAAgC4d,QAAhC,EAA0D;AAC1ElL,IAAAA,IAAI,CAAC1S,KAAL,GAAaA,KAAb;AACA0S,IAAAA,IAAI,CAACL,GAAL,CAASrS,KAAT,GAAiB4d,QAAjB;AACA,QAAI,KAAKhT,OAAL,CAAaqmD,MAAjB,EAAyBv+C,IAAI,CAAC5S,KAAL,CAAW,CAAX,IAAgBE,KAAhB;AAC1B;A;AAEDuyB,EAAAA,gBAAgB,CACd7f,IADc,EAEdzS,GAAY,GAAG,KAAKqS,KAAL,CAAW0L,UAFZ,EAGdD,MAAiB,GAAG,KAAKzL,KAAL,CAAW2L,aAHjB,EAIR;AACNvL,IAAAA,IAAI,CAACzS,GAAL,GAAWA,GAAX;AACAyS,IAAAA,IAAI,CAACL,GAAL,CAASpS,GAAT,GAAe8d,MAAf;AACA,QAAI,KAAKnT,OAAL,CAAaqmD,MAAjB,EAAyBv+C,IAAI,CAAC5S,KAAL,CAAW,CAAX,IAAgBG,GAAhB;AAC1B;A;AAKDmhC,EAAAA,0BAA0B,CAAC1uB,IAAD,EAAiBmoD,YAAjB,EAA+C;AACvE,SAAK/N,kBAAL,CAAwBp6C,IAAxB,EAA8BmoD,YAAY,CAAC76D,KAA3C,EAAkD66D,YAAY,CAACxoD,GAAb,CAAiBrS,KAAnE;AACD;A;AAtEuC;A;ACvB1C,MAAM86D,6BAA6B,GAAIpoD,IAAD,IAAsB;AAC1D,SAAOA,IAAI,CAAC3Z,IAAL,KAAc,yBAAd,GACH+hE,6BAA6B,CAACpoD,IAAI,CAACuN,UAAN,CAD1B,GAEHvN,IAFJ;AAGD,CAJD;A;AAMe,MAAMqoD,UAAN,SAAyBH,SAAzB,CAAmC;AAuChDx3C,EAAAA,YAAY,CAAC1Q,IAAD,EAAa2Q,KAAc,GAAG,KAA9B,EAA2C;AAAA;A;AACrD,QAAIxC,aAAa,GAAGlpB,SAApB;A;AACA,QAAI+a,IAAI,CAAC3Z,IAAL,KAAc,yBAAd,mBAA2C2Z,IAAI,CAACwN,KAAhD,aAA2C,YAAYW,aAA3D,EAA0E;AACxEA,MAAAA,aAAa,GAAGi6C,6BAA6B,CAACpoD,IAAD,CAA7C;A;AACA,UAAI2Q,KAAJ,EAAW;AAKT,YAAIxC,aAAa,CAAC9nB,IAAd,KAAuB,YAA3B,EAAyC;AACvC,eAAKuhE,eAAL,CAAqB9B,kCAArB,CACE9lD,IAAI,CAAC1S,KADP,EAEEujB,aAAM,CAAC7L,8BAFT;AAID,SALD,MAKO,IAAImJ,aAAa,CAAC9nB,IAAd,KAAuB,kBAA3B,EAA+C;AAIpD,eAAKmlB,KAAL,CAAWxL,IAAI,CAAC1S,KAAhB,EAAuBujB,aAAM,CAAC7L,8BAA9B;AACD;AACF,OAhBD,MAgBO;AACL,aAAKwG,KAAL,CAAWxL,IAAI,CAAC1S,KAAhB,EAAuBujB,aAAM,CAAC7L,8BAA9B;AACD;AACF;A;AAED,YAAQhF,IAAI,CAAC3Z,IAAb;AACE,WAAK,YAAL;AACA,WAAK,eAAL;AACA,WAAK,cAAL;AACA,WAAK,mBAAL;AACE;A;AAEF,WAAK,kBAAL;AACE2Z,QAAAA,IAAI,CAAC3Z,IAAL,GAAY,eAAZ;A;AACA,aACE,IAAIgB,CAAC,GAAG,CAAR,EAAWC,MAAM,GAAG0Y,IAAI,CAACa,UAAL,CAAgBvZ,MAApC,EAA4CiY,IAAI,GAAGjY,MAAM,GAAG,CAD9D,EAEED,CAAC,GAAGC,MAFN,EAGED,CAAC,EAHH,EAIE;AAAA;A;AACA,gBAAM8oB,IAAI,GAAGnQ,IAAI,CAACa,UAAL,CAAgBxZ,CAAhB,CAAb;AACA,gBAAMihE,MAAM,GAAGjhE,CAAC,KAAKkY,IAArB;AACA,eAAKqR,gCAAL,CAAsCT,IAAtC,EAA4Cm4C,MAA5C,EAAoD33C,KAApD;A;AAEA,cACE23C,MAAM,IACNn4C,IAAI,CAAC9pB,IAAL,KAAc,aADd,oBAEA2Z,IAAI,CAACwN,KAFL,aAEA,aAAY8b,aAHd,EAIE;AACA,iBAAKi/B,gBAAL,CAAsBvoD,IAAI,CAACwN,KAAL,CAAW8b,aAAjC;AACD;AACF;A;AACD;A;AAEF,WAAK,gBAAL;AACE,aAAK5Y,YAAL,CAAkB1Q,IAAI,CAACxT,KAAvB,EAA8BmkB,KAA9B;AACA;A;AAEF,WAAK,eAAL;AAAsB;AACpB,eAAK63C,qBAAL,CAA2BxoD,IAA3B;AAEAA,UAAAA,IAAI,CAAC3Z,IAAL,GAAY,aAAZ;AACA,gBAAMwP,GAAG,GAAGmK,IAAI,CAACmlB,QAAjB;AACA,eAAKzU,YAAL,CAAkB7a,GAAlB,EAAuB8a,KAAvB;AACA;AACD;A;AAED,WAAK,iBAAL;AACE3Q,QAAAA,IAAI,CAAC3Z,IAAL,GAAY,cAAZ;AACA,aAAKgjC,gBAAL,CAAsBrpB,IAAI,CAACC,QAA3B,kBAAqCD,IAAI,CAACwN,KAA1C,qBAAqC,aAAY8b,aAAjD,EAAgE3Y,KAAhE;AACA;A;AAEF,WAAK,sBAAL;AACE,YAAI3Q,IAAI,CAACirB,QAAL,KAAkB,GAAtB,EAA2B;AACzB,eAAKzf,KAAL,CAAWxL,IAAI,CAAC0sB,IAAL,CAAUn/B,GAArB,EAA0BsjB,aAAM,CAACnL,qBAAjC;AACD;A;AAED1F,QAAAA,IAAI,CAAC3Z,IAAL,GAAY,mBAAZ;AACA,eAAO2Z,IAAI,CAACirB,QAAZ;AACA,aAAKva,YAAL,CAAkB1Q,IAAI,CAAC0sB,IAAvB,EAA6B/b,KAA7B;AACA;A;AAEF,WAAK,yBAAL;AAEE,aAAKD,YAAL,CAAkBvC,aAAlB,EAAiCwC,KAAjC;AACA;AA3DJ;A;AAiEA,WAAO3Q,IAAP;AACD;A;AAED4Q,EAAAA,gCAAgC,CAC9BT,IAD8B,EAE9Bm4C,MAF8B,EAG9B33C,KAH8B,EAI9B;AACA,QAAIR,IAAI,CAAC9pB,IAAL,KAAc,cAAlB,EAAkC;AAChC,YAAM0B,KAAK,GACTooB,IAAI,CAACP,IAAL,KAAc,KAAd,IAAuBO,IAAI,CAACP,IAAL,KAAc,KAArC,GACIiB,aAAM,CAAChK,kBADX,GAEIgK,aAAM,CAAC/J,gBAHb;AAMA,WAAK0E,KAAL,CAAW2E,IAAI,CAAC3gB,GAAL,CAASlC,KAApB,EAA2BvF,KAA3B;AAED,KATD,MASO,IAAIooB,IAAI,CAAC9pB,IAAL,KAAc,eAAd,IAAiC,CAACiiE,MAAtC,EAA8C;AACnD,WAAKC,gBAAL,CAAsBp4C,IAAI,CAAC7iB,KAA3B;AACD,KAFM,MAEA;AACL,WAAKojB,YAAL,CAAkBP,IAAlB,EAAwBQ,KAAxB;AACD;AACF;A;AAID0Y,EAAAA,gBAAgB,CACd6B,QADc,EAEdC,gBAFc,EAGdxa,KAHc,EAIW;AACzB,QAAIpjB,GAAG,GAAG29B,QAAQ,CAAC5jC,MAAnB;A;AACA,QAAIiG,GAAJ,EAAS;AACP,YAAMgS,IAAI,GAAG2rB,QAAQ,CAAC39B,GAAG,GAAG,CAAP,CAArB;A;AACA,UAAI,CAAAgS,IAAI,QAAJ,YAAAA,IAAI,CAAElZ,IAAN,MAAe,aAAnB,EAAkC;AAChC,UAAEkH,GAAF;AACD,OAFD,MAEO,IAAI,CAAAgS,IAAI,QAAJ,YAAAA,IAAI,CAAElZ,IAAN,MAAe,eAAnB,EAAoC;AACzCkZ,QAAAA,IAAI,CAAClZ,IAAL,GAAY,aAAZ;AACA,YAAIwP,GAAG,GAAG0J,IAAI,CAAC4lB,QAAf;AACA,aAAKzU,YAAL,CAAkB7a,GAAlB,EAAuB8a,KAAvB;AACA9a,QAAAA,GAAG,GAAGuyD,6BAA6B,CAACvyD,GAAD,CAAnC;A;AACA,YACEA,GAAG,CAACxP,IAAJ,KAAa,YAAb,IACAwP,GAAG,CAACxP,IAAJ,KAAa,kBADb,IAEAwP,GAAG,CAACxP,IAAJ,KAAa,cAFb,IAGAwP,GAAG,CAACxP,IAAJ,KAAa,eAJf,EAKE;AACA,eAAKq6B,UAAL,CAAgB7qB,GAAG,CAACvI,KAApB;AACD;A;AAED,YAAI69B,gBAAJ,EAAsB;AACpB,eAAKs9B,2BAAL,CAAiCt9B,gBAAjC;AACD;A;AAED,UAAE59B,GAAF;AACD;AACF;A;AACD,SAAK,IAAIlG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGkG,GAApB,EAAyBlG,CAAC,EAA1B,EAA8B;AAC5B,YAAM4wD,GAAG,GAAG/sB,QAAQ,CAAC7jC,CAAD,CAApB;A;AACA,UAAI4wD,GAAJ,EAAS;AACP,aAAKvnC,YAAL,CAAkBunC,GAAlB,EAAuBtnC,KAAvB;A;AACA,YAAIsnC,GAAG,CAAC5xD,IAAJ,KAAa,aAAjB,EAAgC;AAC9B,eAAKkiE,gBAAL,CAAsBtQ,GAAG,CAAC3qD,KAA1B;AACD;AACF;AACF;A;AACD,WAAO49B,QAAP;AACD;A;AAIDE,EAAAA,gBAAgB,CACdF,QADc,EAEdG,mBAFc,EAGe;AAC7B,WAAOH,QAAP;AACD;A;AAEDw9B,EAAAA,oBAAoB,CAClBx9B,QADkB,EAElBG,mBAFkB,EAGZ;AACN,SAAKD,gBAAL,CAAsBF,QAAtB,EAAgCG,mBAAhC;A;AAEA,SAAK,MAAM3D,IAAX,IAAmBwD,QAAnB,EAA6B;AAC3B,UAAI,CAAAxD,IAAI,QAAJ,YAAAA,IAAI,CAAErhC,IAAN,MAAe,iBAAnB,EAAsC;AACpC,aAAKqiE,oBAAL,CAA0BhhC,IAAI,CAACznB,QAA/B;AACD;AACF;AACF;A;AAID0oD,EAAAA,WAAW,CACTl4C,mBADS,EAETsX,gBAFS,EAGM;AACf,UAAM/nB,IAAI,GAAG,KAAK2P,SAAL,EAAb;AACA,SAAKoF,IAAL;AACA/U,IAAAA,IAAI,CAACmlB,QAAL,GAAgB,KAAK4D,uBAAL,CACdtY,mBADc,EAEdxrB,SAFc,EAGd8iC,gBAHc,CAAhB;AAKA,WAAO,KAAKjY,UAAL,CAAgB9P,IAAhB,EAAsB,eAAtB,CAAP;AACD;A;AAID4oD,EAAAA,gBAAgB,GAAgB;AAC9B,UAAM5oD,IAAI,GAAG,KAAK2P,SAAL,EAAb;AACA,SAAKoF,IAAL;AACA/U,IAAAA,IAAI,CAACmlB,QAAL,GAAgB,KAAK0I,gBAAL,EAAhB;AACA,WAAO,KAAK/d,UAAL,CAAgB9P,IAAhB,EAAsB,aAAtB,CAAP;AACD;A;AAGD6tB,EAAAA,gBAAgB,GAAY;AAE1B,YAAQ,KAAKjuB,KAAL,CAAWvZ,IAAnB;AACE,WAAKssB,OAAE,CAAC9Z,QAAR;AAAkB;AAChB,gBAAMmH,IAAI,GAAG,KAAK2P,SAAL,EAAb;AACA,eAAKoF,IAAL;AACA/U,UAAAA,IAAI,CAACC,QAAL,GAAgB,KAAKkwC,gBAAL,CACdx9B,OAAE,CAAC3Z,QADW,MAGd,IAHc,CAAhB;AAKA,iBAAO,KAAK8W,UAAL,CAAgB9P,IAAhB,EAAsB,cAAtB,CAAP;AACD;A;AAED,WAAK2S,OAAE,CAACzZ,MAAR;AACE,eAAO,KAAK2vD,eAAL,CAAqBl2C,OAAE,CAACtZ,MAAxB,EAAgC,IAAhC,CAAP;AAbJ;A;AAiBA,WAAO,KAAK8lB,eAAL,EAAP;AACD;A;AAGDgxB,EAAAA,gBAAgB,CACd5kB,KADc,EAEdu9B,aAFc,EAGdC,UAHc,EAIdh7B,cAJc,EAKiC;AAC/C,UAAMi7B,IAA0C,GAAG,EAAnD;AACA,QAAIljC,KAAK,GAAG,IAAZ;A;AACA,WAAO,CAAC,KAAKlH,GAAL,CAAS2M,KAAT,CAAR,EAAyB;AACvB,UAAIzF,KAAJ,EAAW;AACTA,QAAAA,KAAK,GAAG,KAAR;AACD,OAFD,MAEO;AACL,aAAKvH,MAAL,CAAY5L,OAAE,CAAClZ,KAAf;AACD;A;AACD,UAAIsvD,UAAU,IAAI,KAAKl4D,KAAL,CAAW8hB,OAAE,CAAClZ,KAAd,CAAlB,EAAwC;AAEtCuvD,QAAAA,IAAI,CAACjkE,IAAL,CAAU,IAAV;AACD,OAHD,MAGO,IAAI,KAAK65B,GAAL,CAAS2M,KAAT,CAAJ,EAAqB;AAC1B;AACD,OAFM,MAEA,IAAI,KAAK16B,KAAL,CAAW8hB,OAAE,CAACzY,QAAd,CAAJ,EAA6B;AAClC8uD,QAAAA,IAAI,CAACjkE,IAAL,CAAU,KAAKynC,4BAAL,CAAkC,KAAKo8B,gBAAL,EAAlC,CAAV;AACA,aAAKlO,mBAAL,CAAyBoO,aAAzB;AACA,aAAKvqC,MAAL,CAAYgN,KAAZ;AACA;AACD,OALM,MAKA;AACL,cAAMwsB,UAAU,GAAG,EAAnB;A;AACA,YAAI,KAAKlnD,KAAL,CAAW8hB,OAAE,CAACtY,EAAd,KAAqB,KAAK4E,SAAL,CAAe,YAAf,CAAzB,EAAuD;AACrD,eAAKuM,KAAL,CAAW,KAAK5L,KAAL,CAAWtS,KAAtB,EAA6BujB,aAAM,CAAC/G,6BAApC;AACD;A;AAED,eAAO,KAAKjZ,KAAL,CAAW8hB,OAAE,CAACtY,EAAd,CAAP,EAA0B;AACxB09C,UAAAA,UAAU,CAAChzD,IAAX,CAAgB,KAAKkkE,cAAL,EAAhB;AACD;A;AACDD,QAAAA,IAAI,CAACjkE,IAAL,CAAU,KAAK+yD,uBAAL,CAA6B/pB,cAA7B,EAA6CgqB,UAA7C,CAAV;AACD;AACF;A;AACD,WAAOiR,IAAP;AACD;A;AAEDlR,EAAAA,uBAAuB,CACrB/pB,cADqB,EAErBgqB,UAFqB,EAGU;AAC/B,UAAMrrB,IAAI,GAAG,KAAKD,iBAAL,EAAb;AACA,SAAKD,4BAAL,CAAkCE,IAAlC;AACA,UAAMurB,GAAG,GAAG,KAAKxrB,iBAAL,CAAuBC,IAAI,CAACp/B,KAA5B,EAAmCo/B,IAAI,CAAC/sB,GAAL,CAASrS,KAA5C,EAAmDo/B,IAAnD,CAAZ;A;AACA,QAAIqrB,UAAU,CAACzwD,MAAf,EAAuB;AACrBolC,MAAAA,IAAI,CAACqrB,UAAL,GAAkBA,UAAlB;AACD;A;AACD,WAAOE,GAAP;AACD;A;AAGDzrB,EAAAA,4BAA4B,CAAC1F,KAAD,EAA0B;AACpD,WAAOA,KAAP;AACD;A;AAID2F,EAAAA,iBAAiB,CACfjc,QADe,EAEftF,QAFe,EAGfwhB,IAHe,EAIN;AAAA;A;AACTxhB,IAAAA,QAAQ,gBAAGA,QAAH,wBAAe,KAAKtL,KAAL,CAAWsL,QAAlC;AACAsF,IAAAA,QAAQ,gBAAGA,QAAH,wBAAe,KAAK5Q,KAAL,CAAWtS,KAAlC;AAEAo/B,IAAAA,IAAI,YAAGA,IAAH,oBAAW,KAAKmB,gBAAL,EAAf;AACA,QAAI,CAAC,KAAKjP,GAAL,CAASjM,OAAE,CAACnY,EAAZ,CAAL,EAAsB,OAAOkyB,IAAP;AAEtB,UAAM1sB,IAAI,GAAG,KAAKsN,WAAL,CAAiBkD,QAAjB,EAA2BtF,QAA3B,CAAb;AACAlL,IAAAA,IAAI,CAAC0sB,IAAL,GAAYA,IAAZ;AACA1sB,IAAAA,IAAI,CAACyiB,KAAL,GAAa,KAAKsG,uBAAL,EAAb;AACA,WAAO,KAAKjZ,UAAL,CAAgB9P,IAAhB,EAAsB,mBAAtB,CAAP;AACD;A;AAkBD2rB,EAAAA,SAAS,CACPjE,IADO,EAEPoF,kBAFO,EAGP3T,WAAyB,GAAGrC,SAHrB,EAIPoyC,YAJO,EAKPC,kBALO,EAMPC,iBAA2B,GAAG,KANvB,EAOD;AACN,YAAQ1hC,IAAI,CAACrhC,IAAb;AACE,WAAK,YAAL;AAAmB;AACjB,gBAAM;AAAEoI,YAAAA;AAAF,cAAWi5B,IAAjB;A;AACA,cACE,KAAK9nB,KAAL,CAAWqU,MAAX,KAICm1C,iBAAiB,GACdz0C,wBAAwB,CAAClmB,IAAD,EAAO,KAAK+lB,QAAZ,CADV,GAEdE,4BAA4B,CAACjmB,IAAD,CANhC,CADF,EAQE;AACA,iBAAK+c,KAAL,CACEkc,IAAI,CAACp6B,KADP,EAEE6rB,WAAW,KAAKrC,SAAhB,GACIjG,aAAM,CAAC9I,mBADX,GAEI8I,aAAM,CAAC7I,0BAJb,EAKEvZ,IALF;AAOD;A;AAED,cAAIy6D,YAAJ,EAAkB;AAChB,gBAAIA,YAAY,CAAC/pD,GAAb,CAAiB1Q,IAAjB,CAAJ,EAA4B;AAC1B,mBAAK+c,KAAL,CAAWkc,IAAI,CAACp6B,KAAhB,EAAuBujB,aAAM,CAACjK,SAA9B;AACD,aAFD,MAEO;AACLsiD,cAAAA,YAAY,CAACz2B,GAAb,CAAiBhkC,IAAjB;AACD;AACF;A;AACD,cAAI06D,kBAAkB,IAAI16D,IAAI,KAAK,KAAnC,EAA0C;AACxC,iBAAK+c,KAAL,CAAWkc,IAAI,CAACp6B,KAAhB,EAAuBujB,aAAM,CAACvL,mBAA9B;AACD;A;AACD,cAAI,EAAE6T,WAAW,GAAGrC,SAAhB,CAAJ,EAAgC;AAC9B,iBAAKmC,KAAL,CAAWC,WAAX,CAAuBzqB,IAAvB,EAA6B0qB,WAA7B,EAA0CuO,IAAI,CAACp6B,KAA/C;AACD;A;AACD;AACD;A;AAED,WAAK,kBAAL;AACE,YAAI6rB,WAAW,KAAKrC,SAApB,EAA+B;AAC7B,eAAKtL,KAAL,CAAWkc,IAAI,CAACp6B,KAAhB,EAAuBujB,aAAM,CAAC3L,6BAA9B;AACD;A;AACD;A;AAEF,WAAK,eAAL;AACE,aAAK,IAAIiL,IAAT,IAAiBuX,IAAI,CAAC7mB,UAAtB,EAAkC;AAChC,cAAI,KAAKkN,gBAAL,CAAsBoC,IAAtB,CAAJ,EAAiCA,IAAI,GAAGA,IAAI,CAAC3jB,KAAZ,CAAjC,KAIK,IAAI,KAAKulB,cAAL,CAAoB5B,IAApB,CAAJ,EAA+B;AAEpC,eAAKwb,SAAL,CACExb,IADF,EAEE,8BAFF,EAGEgJ,WAHF,EAIE+vC,YAJF,EAKEC,kBALF;AAOD;A;AACD;A;AAEF,WAAK,cAAL;AACE,aAAK,MAAME,IAAX,IAAmB3hC,IAAI,CAACznB,QAAxB,EAAkC;AAChC,cAAIopD,IAAJ,EAAU;AACR,iBAAK19B,SAAL,CACE09B,IADF,EAEE,6BAFF,EAGElwC,WAHF,EAIE+vC,YAJF,EAKEC,kBALF;AAOD;AACF;A;AACD;A;AAEF,WAAK,mBAAL;AACE,aAAKx9B,SAAL,CACEjE,IAAI,CAACgF,IADP,EAEE,oBAFF,EAGEvT,WAHF,EAIE+vC,YAJF;AAMA;A;AAEF,WAAK,aAAL;AACE,aAAKv9B,SAAL,CACEjE,IAAI,CAACvC,QADP,EAEE,cAFF,EAGEhM,WAHF,EAIE+vC,YAJF;AAMA;A;AAEF,WAAK,yBAAL;AACE,aAAKv9B,SAAL,CACEjE,IAAI,CAACna,UADP,EAEE,0BAFF,EAGE4L,WAHF,EAIE+vC,YAJF;AAMA;A;AAEF;AAAS;AACP,eAAK19C,KAAL,CACEkc,IAAI,CAACp6B,KADP,EAEE6rB,WAAW,KAAKrC,SAAhB,GACIjG,aAAM,CAAClM,UADX,GAEIkM,aAAM,CAACjM,iBAJb,EAKEkoB,kBALF;AAOD;AA9GH;AAgHD;A;AAED07B,EAAAA,qBAAqB,CAACxoD,IAAD,EAA4B;AAC/C,QACEA,IAAI,CAACmlB,QAAL,CAAc9+B,IAAd,KAAuB,YAAvB,IACA2Z,IAAI,CAACmlB,QAAL,CAAc9+B,IAAd,KAAuB,kBAFzB,EAGE;AACA,WAAKmlB,KAAL,CAAWxL,IAAI,CAACmlB,QAAL,CAAc73B,KAAzB,EAAgCujB,aAAM,CAACzL,4BAAvC;AACD;AACF;A;AAEDs1C,EAAAA,mBAAmB,CAACnvB,KAAD,EAAyC;AAC1D,QAAI,KAAK16B,KAAL,CAAW8hB,OAAE,CAAClZ,KAAd,CAAJ,EAA0B;AACxB,UAAI,KAAKs5C,iBAAL,OAA6BxnB,KAAjC,EAAwC;AACtC,aAAKk9B,2BAAL,CAAiC,KAAK7oD,KAAL,CAAWtS,KAA5C;AACD,OAFD,MAEO;AACL,aAAKi7D,gBAAL,CAAsB,KAAK3oD,KAAL,CAAWtS,KAAjC;AACD;AACF;AACF;A;AAEDi7D,EAAAA,gBAAgB,CAACt9C,GAAD,EAAc;AAC5B,UAAM,KAAKO,KAAL,CAAWP,GAAX,EAAgB4F,aAAM,CAAC1N,gBAAvB,CAAN;AACD;A;AAEDslD,EAAAA,2BAA2B,CAACx9C,GAAD,EAAc;AACvC,SAAKO,KAAL,CAAWP,GAAX,EAAgB4F,aAAM,CAAClJ,iBAAvB;AACD;A;AA5f+C;A;AC8BnC,MAAM2hD,gBAAN,SAA+BjB,UAA/B,CAA0C;AAwCvDkB,EAAAA,UAAU,CACRp5C,IADQ,EAERq5C,QAFQ,EAGRC,QAHQ,EAIRh5C,mBAJQ,EAKF;AACN,QACEN,IAAI,CAAC9pB,IAAL,KAAc,eAAd,IACA,KAAK0rB,cAAL,CAAoB5B,IAApB,CADA,IAEAA,IAAI,CAACN,QAFL,IAIAM,IAAI,CAACG,SALP,EAME;AACA;AACD;A;AAED,UAAM9gB,GAAG,GAAG2gB,IAAI,CAAC3gB,GAAjB;AAEA,UAAMf,IAAI,GAAGe,GAAG,CAACnJ,IAAJ,KAAa,YAAb,GAA4BmJ,GAAG,CAACf,IAAhC,GAAuCe,GAAG,CAAChD,KAAxD;A;AAEA,QAAIiC,IAAI,KAAK,WAAb,EAA0B;AACxB,UAAI+6D,QAAJ,EAAc;AACZ,aAAKh+C,KAAL,CAAWhc,GAAG,CAAClC,KAAf,EAAsBujB,aAAM,CAACnJ,aAA7B;AACA;AACD;A;AACD,UAAI+hD,QAAQ,CAACC,IAAb,EAAmB;AACjB,YAAIj5C,mBAAJ,EAAyB;AAGvB,cAAIA,mBAAmB,CAAC22C,WAApB,KAAoC,CAAC,CAAzC,EAA4C;AAC1C32C,YAAAA,mBAAmB,CAAC22C,WAApB,GAAkC53D,GAAG,CAAClC,KAAtC;AACD;AACF,SAND,MAMO;AACL,eAAKke,KAAL,CAAWhc,GAAG,CAAClC,KAAf,EAAsBujB,aAAM,CAAC5N,cAA7B;AACD;AACF;A;AAEDwmD,MAAAA,QAAQ,CAACC,IAAT,GAAgB,IAAhB;AACD;AACF;A;AAEDC,EAAAA,oBAAoB,CAACjiC,IAAD,EAAqByb,gBAArB,EAAwD;AAC1E,WACEzb,IAAI,CAACrhC,IAAL,KAAc,yBAAd,IAA2CqhC,IAAI,CAACp6B,KAAL,KAAe61C,gBAD5D;AAGD;A;AAGDmY,EAAAA,aAAa,GAAkC;AAC7C,QAAIwM,UAAU,GAAGtf,KAAjB;A;AACA,QAAI,KAAKvpC,SAAL,CAAe,eAAf,KAAmC,KAAKuV,QAA5C,EAAsD;AACpDszC,MAAAA,UAAU,IAAIpf,WAAd;AACD;A;AACD,SAAKzvB,KAAL,CAAWF,KAAX,CAAiB9D,aAAjB;AACA,SAAKkhC,SAAL,CAAep9B,KAAf,CAAqB+uC,UAArB;AACA,SAAK73B,SAAL;AACA,UAAMvI,IAAI,GAAG,KAAK7I,eAAL,EAAb;A;AACA,QAAI,CAAC,KAAKhuB,KAAL,CAAW8hB,OAAE,CAAC/Z,GAAd,CAAL,EAAyB;AACvB,WAAK8nB,UAAL;AACD;A;AACDgH,IAAAA,IAAI,CAACqc,QAAL,GAAgB,KAAKnkC,KAAL,CAAWmkC,QAA3B;AACArc,IAAAA,IAAI,CAAC7b,MAAL,GAAc,KAAKjM,KAAL,CAAWiM,MAAzB;A;AACA,QAAI,KAAK3T,OAAL,CAAasmD,MAAjB,EAAyB;AACvB92B,MAAAA,IAAI,CAAC82B,MAAL,GAAc,KAAKA,MAAnB;AACD;A;AACD,WAAO92B,IAAP;AACD;A;AAqBD7I,EAAAA,eAAe,CACb+qC,UADa,EAEbn5C,mBAFa,EAGC;AACd,QAAIm5C,UAAJ,EAAgB;AACd,aAAO,KAAKC,aAAL,CAAmB,MACxB,KAAKC,mBAAL,CAAyBr5C,mBAAzB,CADK,CAAP;AAGD;A;AACD,WAAO,KAAKs5C,UAAL,CAAgB,MAAM,KAAKD,mBAAL,CAAyBr5C,mBAAzB,CAAtB,CAAP;AACD;A;AAGDq5C,EAAAA,mBAAmB,CAACr5C,mBAAD,EAAuD;AACxE,UAAMD,QAAQ,GAAG,KAAK5Q,KAAL,CAAWtS,KAA5B;AACA,UAAM4d,QAAQ,GAAG,KAAKtL,KAAL,CAAWsL,QAA5B;AACA,UAAMwc,IAAI,GAAG,KAAKmB,gBAAL,CAAsBpY,mBAAtB,CAAb;A;AACA,QAAI,KAAK5f,KAAL,CAAW8hB,OAAE,CAAClZ,KAAd,CAAJ,EAA0B;AACxB,YAAMuG,IAAI,GAAG,KAAKsN,WAAL,CAAiBkD,QAAjB,EAA2BtF,QAA3B,CAAb;AACAlL,MAAAA,IAAI,CAACgqD,WAAL,GAAmB,CAACtiC,IAAD,CAAnB;A;AACA,aAAO,KAAK9I,GAAL,CAASjM,OAAE,CAAClZ,KAAZ,CAAP,EAA2B;AACzBuG,QAAAA,IAAI,CAACgqD,WAAL,CAAiBjlE,IAAjB,CAAsB,KAAK8jC,gBAAL,CAAsBpY,mBAAtB,CAAtB;AACD;A;AACD,WAAK2a,gBAAL,CAAsBprB,IAAI,CAACgqD,WAA3B;AACA,aAAO,KAAKl6C,UAAL,CAAgB9P,IAAhB,EAAsB,oBAAtB,CAAP;AACD;A;AACD,WAAO0nB,IAAP;AACD;A;AAGDuiC,EAAAA,0BAA0B,CACxBx5C,mBADwB,EAExB0d,cAFwB,EAGxBpG,gBAHwB,EAIxB;AACA,WAAO,KAAK8hC,aAAL,CAAmB,MACxB,KAAKhhC,gBAAL,CACEpY,mBADF,EAEE0d,cAFF,EAGEpG,gBAHF,CADK,CAAP;AAOD;A;AAGDgB,EAAAA,uBAAuB,CACrBtY,mBADqB,EAErB0d,cAFqB,EAGrBpG,gBAHqB,EAIrB;AACA,WAAO,KAAKgiC,UAAL,CAAgB,MACrB,KAAKlhC,gBAAL,CACEpY,mBADF,EAEE0d,cAFF,EAGEpG,gBAHF,CADK,CAAP;AAOD;A;AAMDc,EAAAA,gBAAgB,CACdpY,mBADc,EAEd0d,cAFc,EAGdpG,gBAHc,EAIA;AACd,UAAMvX,QAAQ,GAAG,KAAK5Q,KAAL,CAAWtS,KAA5B;AACA,UAAM4d,QAAQ,GAAG,KAAKtL,KAAL,CAAWsL,QAA5B;A;AACA,QAAI,KAAKmV,YAAL,CAAkB,OAAlB,CAAJ,EAAgC;AAC9B,UAAI,KAAK81B,SAAL,CAAelN,QAAnB,EAA6B;AAI3B,aAAKrpC,KAAL,CAAWiT,WAAX,GAAyB,IAAzB;AACA,YAAI6Z,IAAI,GAAG,KAAKw9B,UAAL,EAAX;A;AACA,YAAI/7B,cAAJ,EAAoB;AAClBzB,UAAAA,IAAI,GAAGyB,cAAc,CAAC5pC,IAAf,CAAoB,IAApB,EAA0BmoC,IAA1B,EAAgClc,QAAhC,EAA0CtF,QAA1C,CAAP;AACD;A;AACD,eAAOwhB,IAAP;AACD;AACF;A;AAED,QAAIy9B,mBAAJ;A;AACA,QAAI15C,mBAAJ,EAAyB;AACvB05C,MAAAA,mBAAmB,GAAG,KAAtB;AACD,KAFD,MAEO;AACL15C,MAAAA,mBAAmB,GAAG,IAAIs3C,gBAAJ,EAAtB;AACAoC,MAAAA,mBAAmB,GAAG,IAAtB;AACD;A;AAED,QAAI,KAAKt5D,KAAL,CAAW8hB,OAAE,CAACpZ,MAAd,KAAyB,KAAK1I,KAAL,CAAW8hB,OAAE,CAAClkB,IAAd,CAA7B,EAAkD;AAChD,WAAKmR,KAAL,CAAWujC,gBAAX,GAA8B,KAAKvjC,KAAL,CAAWtS,KAAzC;AACD;A;AAED,QAAIo/B,IAAI,GAAG,KAAK09B,qBAAL,CACT35C,mBADS,EAETsX,gBAFS,CAAX;A;AAIA,QAAIoG,cAAJ,EAAoB;AAClBzB,MAAAA,IAAI,GAAGyB,cAAc,CAAC5pC,IAAf,CAAoB,IAApB,EAA0BmoC,IAA1B,EAAgClc,QAAhC,EAA0CtF,QAA1C,CAAP;AACD;A;AACD,QAAI,KAAKtL,KAAL,CAAWvZ,IAAX,CAAgB+Q,QAApB,EAA8B;AAC5B,YAAM4I,IAAI,GAAG,KAAKsN,WAAL,CAAiBkD,QAAjB,EAA2BtF,QAA3B,CAAb;AACA,YAAM+f,QAAQ,GAAG,KAAKrrB,KAAL,CAAWpT,KAA5B;AACAwT,MAAAA,IAAI,CAACirB,QAAL,GAAgBA,QAAhB;A;AAEA,UAAI,KAAKp6B,KAAL,CAAW8hB,OAAE,CAACnY,EAAd,CAAJ,EAAuB;AACrBwF,QAAAA,IAAI,CAAC0sB,IAAL,GAAY,KAAKhc,YAAL,CAAkBgc,IAAlB,EAAoC,IAApC,CAAZ;AACAjc,QAAAA,mBAAmB,CAAC22C,WAApB,GAAkC,CAAC,CAAnC;AACD,OAHD,MAGO;AACLpnD,QAAAA,IAAI,CAAC0sB,IAAL,GAAYA,IAAZ;AACD;A;AAED,UAAIjc,mBAAmB,CAAC02C,eAApB,IAAuCnnD,IAAI,CAAC0sB,IAAL,CAAUp/B,KAArD,EAA4D;AAC1DmjB,QAAAA,mBAAmB,CAAC02C,eAApB,GAAsC,CAAC,CAAvC;AACD;A;AAED,WAAKx7B,SAAL,CAAee,IAAf,EAAqB,uBAArB;AAEA,WAAK3X,IAAL;AACA/U,MAAAA,IAAI,CAACyiB,KAAL,GAAa,KAAKoG,gBAAL,EAAb;AACA,aAAO,KAAK/Y,UAAL,CAAgB9P,IAAhB,EAAsB,sBAAtB,CAAP;AACD,KArBD,MAqBO,IAAImqD,mBAAJ,EAAyB;AAC9B,WAAKlD,qBAAL,CAA2Bx2C,mBAA3B,EAAgD,IAAhD;AACD;A;AAED,WAAOic,IAAP;AACD;A;AAKD09B,EAAAA,qBAAqB,CACnB35C,mBADmB,EAEnBsX,gBAFmB,EAGL;AACd,UAAMvX,QAAQ,GAAG,KAAK5Q,KAAL,CAAWtS,KAA5B;AACA,UAAM4d,QAAQ,GAAG,KAAKtL,KAAL,CAAWsL,QAA5B;AACA,UAAMi4B,gBAAgB,GAAG,KAAKvjC,KAAL,CAAWujC,gBAApC;AACA,UAAMzb,IAAI,GAAG,KAAK2iC,YAAL,CAAkB55C,mBAAlB,CAAb;A;AAEA,QAAI,KAAKk5C,oBAAL,CAA0BjiC,IAA1B,EAAgCyb,gBAAhC,CAAJ,EAAuD;AACrD,aAAOzb,IAAP;AACD;A;AAED,WAAO,KAAKI,gBAAL,CAAsBJ,IAAtB,EAA4BlX,QAA5B,EAAsCtF,QAAtC,EAAgD6c,gBAAhD,CAAP;AACD;A;AAEDD,EAAAA,gBAAgB,CACdJ,IADc,EAEdlX,QAFc,EAGdtF,QAHc,EAMd6c,gBANc,EAOA;AACd,QAAI,KAAKnJ,GAAL,CAASjM,OAAE,CAAC7Y,QAAZ,CAAJ,EAA2B;AACzB,YAAMkG,IAAI,GAAG,KAAKsN,WAAL,CAAiBkD,QAAjB,EAA2BtF,QAA3B,CAAb;AACAlL,MAAAA,IAAI,CAACja,IAAL,GAAY2hC,IAAZ;AACA1nB,MAAAA,IAAI,CAACsoB,UAAL,GAAkB,KAAKS,uBAAL,EAAlB;AACA,WAAKxK,MAAL,CAAY5L,OAAE,CAAChZ,KAAf;AACAqG,MAAAA,IAAI,CAAC4oB,SAAL,GAAiB,KAAKC,gBAAL,EAAjB;AACA,aAAO,KAAK/Y,UAAL,CAAgB9P,IAAhB,EAAsB,uBAAtB,CAAP;AACD;A;AACD,WAAO0nB,IAAP;AACD;A;AAKD2iC,EAAAA,YAAY,CAAC55C,mBAAD,EAAsD;AAChE,UAAMD,QAAQ,GAAG,KAAK5Q,KAAL,CAAWtS,KAA5B;AACA,UAAM4d,QAAQ,GAAG,KAAKtL,KAAL,CAAWsL,QAA5B;AACA,UAAMi4B,gBAAgB,GAAG,KAAKvjC,KAAL,CAAWujC,gBAApC;AACA,UAAMzb,IAAI,GAAG,KAAKsrB,eAAL,CAAqBviC,mBAArB,CAAb;A;AAEA,QAAI,KAAKk5C,oBAAL,CAA0BjiC,IAA1B,EAAgCyb,gBAAhC,CAAJ,EAAuD;AACrD,aAAOzb,IAAP;AACD;A;AAED,WAAO,KAAKmxB,WAAL,CAAiBnxB,IAAjB,EAAuBlX,QAAvB,EAAiCtF,QAAjC,EAA2C,CAAC,CAA5C,CAAP;AACD;A;AAQD2tC,EAAAA,WAAW,CACTnsB,IADS,EAETosB,YAFS,EAGTC,YAHS,EAITC,OAJS,EAKK;AACd,QAAIsR,IAAI,GAAG,KAAK1qD,KAAL,CAAWvZ,IAAX,CAAgBwR,KAA3B;A;AACA,QAAIyyD,IAAI,IAAI,IAAR,KAAiB,KAAKnU,SAAL,CAAehN,KAAf,IAAwB,CAAC,KAAKt4C,KAAL,CAAW8hB,OAAE,CAAClV,GAAd,CAA1C,CAAJ,EAAmE;AACjE,UAAI6sD,IAAI,GAAGtR,OAAX,EAAoB;AAClB,cAAMsN,EAAE,GAAG,KAAK1mD,KAAL,CAAWvZ,IAAtB;A;AACA,YAAIigE,EAAE,KAAK3zC,OAAE,CAAC/X,QAAd,EAAwB;AACtB,eAAKyhD,YAAL,CAAkB,kBAAlB;A;AACA,cAAI,KAAKz8C,KAAL,CAAWgkC,0BAAf,EAA2C;AACzC,mBAAOlX,IAAP;AACD;A;AACD,eAAK9sB,KAAL,CAAWwjC,UAAX,GAAwB,IAAxB;AACA,eAAKmnB,4BAAL,CAAkC79B,IAAlC,EAAwCosB,YAAxC;AACD;A;AACD,cAAM94C,IAAI,GAAG,KAAKsN,WAAL,CAAiBwrC,YAAjB,EAA+BC,YAA/B,CAAb;AACA/4C,QAAAA,IAAI,CAAC0sB,IAAL,GAAYA,IAAZ;AACA1sB,QAAAA,IAAI,CAACirB,QAAL,GAAgB,KAAKrrB,KAAL,CAAWpT,KAA3B;AAEA,cAAMg+D,OAAO,GAAGlE,EAAE,KAAK3zC,OAAE,CAAC7X,SAAV,IAAuBwrD,EAAE,KAAK3zC,OAAE,CAAC5X,UAAjD;AACA,cAAM0vD,QAAQ,GAAGnE,EAAE,KAAK3zC,OAAE,CAAC9X,iBAA3B;A;AAEA,YAAI4vD,QAAJ,EAAc;AAGZH,UAAAA,IAAI,GAAK33C,OAAE,CAAC5X,UAAL,CAA0ClD,KAAjD;AACD;A;AAED,aAAKkd,IAAL;A;AAEA,YACEuxC,EAAE,KAAK3zC,OAAE,CAAC/X,QAAV,IACA,KAAKwE,eAAL,CAAqB,kBAArB,EAAyC,UAAzC,MAAyD,SAF3D,EAGE;AACA,cACE,KAAKvO,KAAL,CAAW8hB,OAAE,CAAClkB,IAAd,KACA,KAAKmR,KAAL,CAAWpT,KAAX,KAAqB,OADrB,IAEA,KAAK2pD,SAAL,CAAenN,QAHjB,EAIE;AACA,kBAAM,KAAKx9B,KAAL,CACJ,KAAK5L,KAAL,CAAWtS,KADP,EAEJujB,aAAM,CAACjI,gCAFH,CAAN;AAID;AACF;A;AAED5I,QAAAA,IAAI,CAACyiB,KAAL,GAAa,KAAKioC,oBAAL,CAA0BpE,EAA1B,EAA8BgE,IAA9B,CAAb;AACA,aAAKx6C,UAAL,CACE9P,IADF,EAEEwqD,OAAO,IAAIC,QAAX,GAAsB,mBAAtB,GAA4C,kBAF9C;AASA,cAAME,MAAM,GAAG,KAAK/qD,KAAL,CAAWvZ,IAA1B;A;AACA,YACGokE,QAAQ,KAAKE,MAAM,KAAKh4C,OAAE,CAAC7X,SAAd,IAA2B6vD,MAAM,KAAKh4C,OAAE,CAAC5X,UAA9C,CAAT,IACCyvD,OAAO,IAAIG,MAAM,KAAKh4C,OAAE,CAAC9X,iBAF5B,EAGE;AACA,gBAAM,KAAK2Q,KAAL,CAAW,KAAK5L,KAAL,CAAWtS,KAAtB,EAA6BujB,aAAM,CAAChL,yBAApC,CAAN;AACD;A;AAED,eAAO,KAAKgzC,WAAL,CAAiB74C,IAAjB,EAAuB84C,YAAvB,EAAqCC,YAArC,EAAmDC,OAAnD,CAAP;AACD;AACF;A;AACD,WAAOtsB,IAAP;AACD;A;AAKDg+B,EAAAA,oBAAoB,CAACpE,EAAD,EAAgBgE,IAAhB,EAA4C;AAC9D,UAAM95C,QAAQ,GAAG,KAAK5Q,KAAL,CAAWtS,KAA5B;AACA,UAAM4d,QAAQ,GAAG,KAAKtL,KAAL,CAAWsL,QAA5B;A;AACA,YAAQo7C,EAAR;AACE,WAAK3zC,OAAE,CAAC/X,QAAR;AACE,gBAAQ,KAAKwE,eAAL,CAAqB,kBAArB,EAAyC,UAAzC,CAAR;AACE,eAAK,OAAL;AACE,mBAAO,KAAKwrD,0BAAL,CAAgC,MAAM;AAC3C,qBAAO,KAAKC,sBAAL,CACL,KAAKC,wBAAL,CAA8BxE,EAA9B,EAAkCgE,IAAlC,CADK,EAEL95C,QAFK,EAGLtF,QAHK,CAAP;AAKD,aANM,CAAP;A;AAOF,eAAK,QAAL;AACE,mBAAO,KAAK6/C,8BAAL,CAAoC,MAAM;AAC/C,qBAAO,KAAKC,uBAAL,CAA6BV,IAA7B,CAAP;AACD,aAFM,CAAP;AAVJ;A;AAgBF;AACE,eAAO,KAAKQ,wBAAL,CAA8BxE,EAA9B,EAAkCgE,IAAlC,CAAP;AAnBJ;AAqBD;A;AAKDQ,EAAAA,wBAAwB,CAACxE,EAAD,EAAgBgE,IAAhB,EAA4C;AAClE,UAAM95C,QAAQ,GAAG,KAAK5Q,KAAL,CAAWtS,KAA5B;AACA,UAAM4d,QAAQ,GAAG,KAAKtL,KAAL,CAAWsL,QAA5B;AAEA,WAAO,KAAK2tC,WAAL,CACL,KAAK7F,eAAL,EADK,EAELxiC,QAFK,EAGLtF,QAHK,EAILo7C,EAAE,CAAC1uD,gBAAH,GAAsB0yD,IAAI,GAAG,CAA7B,GAAiCA,IAJ5B,CAAP;AAMD;A;AAEDW,EAAAA,0BAA0B,CAACjrD,IAAD,EAA8C;AACtE,QAAI,KAAKnP,KAAL,CAAW8hB,OAAE,CAACjX,QAAd,CAAJ,EAA6B;AAC3B,WAAK8P,KAAL,CACExL,IAAI,CAACmlB,QAAL,CAAc73B,KADhB,EAEEujB,aAAM,CAACrH,kCAFT;AAID;AACF;A;AAIDwpC,EAAAA,eAAe,CACbviC,mBADa,EAEby6C,QAFa,EAGC;AACd,UAAM16C,QAAQ,GAAG,KAAK5Q,KAAL,CAAWtS,KAA5B;AACA,UAAM4d,QAAQ,GAAG,KAAKtL,KAAL,CAAWsL,QAA5B;AACA,UAAMigD,OAAO,GAAG,KAAK9qC,YAAL,CAAkB,OAAlB,CAAhB;A;AAEA,QAAI8qC,OAAO,IAAI,KAAKC,cAAL,EAAf,EAAsC;AACpC,WAAKr2C,IAAL;AACA,YAAM2S,IAAI,GAAG,KAAK2jC,UAAL,CAAgB76C,QAAhB,EAA0BtF,QAA1B,CAAb;AACA,UAAI,CAACggD,QAAL,EAAe,KAAKD,0BAAL,CAAgCvjC,IAAhC;AACf,aAAOA,IAAP;AACD;A;AACD,QACE,KAAKrH,YAAL,CAAkB,QAAlB,KACA,KAAK0yB,iBAAL,UADA,IAEA,CAAC,KAAK2E,qBAAL,EAHH,EAIE;AACA,aAAO,KAAK4T,qBAAL,EAAP;AACD;A;AACD,UAAMtH,MAAM,GAAG,KAAKnzD,KAAL,CAAW8hB,OAAE,CAAClY,MAAd,CAAf;AACA,UAAMuF,IAAI,GAAG,KAAK2P,SAAL,EAAb;A;AACA,QAAI,KAAK/P,KAAL,CAAWvZ,IAAX,CAAgBgR,MAApB,EAA4B;AAC1B2I,MAAAA,IAAI,CAACirB,QAAL,GAAgB,KAAKrrB,KAAL,CAAWpT,KAA3B;AACAwT,MAAAA,IAAI,CAAC3I,MAAL,GAAc,IAAd;A;AAEA,UAAI,KAAKxG,KAAL,CAAW8hB,OAAE,CAAClW,MAAd,CAAJ,EAA2B;AACzB,aAAK4/C,YAAL,CAAkB,kBAAlB;AACD;A;AACD,YAAMkP,QAAQ,GAAG,KAAK16D,KAAL,CAAW8hB,OAAE,CAAC9U,OAAd,CAAjB;AACA,WAAKkX,IAAL;AAEA/U,MAAAA,IAAI,CAACmlB,QAAL,GAAgB,KAAK6tB,eAAL,CAAqB,IAArB,EAA2B,IAA3B,CAAhB;AAEA,WAAKiU,qBAAL,CAA2Bx2C,mBAA3B,EAAgD,IAAhD;A;AAEA,UAAI,KAAK7Q,KAAL,CAAWqU,MAAX,IAAqBs3C,QAAzB,EAAmC;AACjC,cAAM11D,GAAG,GAAGmK,IAAI,CAACmlB,QAAjB;A;AAEA,YAAItvB,GAAG,CAACxP,IAAJ,KAAa,YAAjB,EAA+B;AAC7B,eAAKmlB,KAAL,CAAWxL,IAAI,CAAC1S,KAAhB,EAAuBujB,aAAM,CAAC/I,YAA9B;AACD,SAFD,MAEO,IAAI,KAAK+J,wBAAL,CAA8Bhc,GAA9B,CAAJ,EAAwC;AAC7C,eAAK2V,KAAL,CAAWxL,IAAI,CAAC1S,KAAhB,EAAuBujB,aAAM,CAACjO,kBAA9B;AACD;AACF;A;AAED,UAAI,CAACohD,MAAL,EAAa;AACX,YAAI,CAACkH,QAAL,EAAe,KAAKD,0BAAL,CAAgCjrD,IAAhC;AACf,eAAO,KAAK8P,UAAL,CAAgB9P,IAAhB,EAAsB,iBAAtB,CAAP;AACD;AACF;A;AAED,UAAM0nB,IAAI,GAAG,KAAK8jC,WAAL,CAAiBxrD,IAAjB,EAAuBgkD,MAAvB,EAA+BvzC,mBAA/B,CAAb;A;AAEA,QAAI06C,OAAJ,EAAa;AACX,YAAMj0D,UAAU,GAAG,KAAK+H,SAAL,CAAe,aAAf,IACf,KAAKW,KAAL,CAAWvZ,IAAX,CAAgB6Q,UADD,GAEf,KAAK0I,KAAL,CAAWvZ,IAAX,CAAgB6Q,UAAhB,IAA8B,CAAC,KAAKrG,KAAL,CAAW8hB,OAAE,CAACpX,MAAd,CAFnC;A;AAGA,UAAIrE,UAAU,IAAI,CAAC,KAAKu0D,gBAAL,EAAnB,EAA4C;AAC1C,aAAK9/C,cAAL,CACE6E,QADF,EAEE,KAAKvR,SAAL,CAAe,eAAf,IACI4R,aAAM,CAACjP,sBADX,GAEIiP,aAAM,CAAChP,uBAJb;AAMA,eAAO,KAAKwpD,UAAL,CAAgB76C,QAAhB,EAA0BtF,QAA1B,CAAP;AACD;AACF;A;AAED,WAAOwc,IAAP;AACD;A;AAGD8jC,EAAAA,WAAW,CACTxrD,IADS,EAETgkD,MAFS,EAGTvzC,mBAHS,EAIK;AACd,QAAIuzC,MAAJ,EAAY;AACV,WAAKr4B,SAAL,CAAe3rB,IAAI,CAACmlB,QAApB,EAA8B,kBAA9B;AACA,aAAO,KAAKrV,UAAL,CAAgB9P,IAAhB,EAAsB,kBAAtB,CAAP;AACD;A;AAED,UAAMwQ,QAAQ,GAAG,KAAK5Q,KAAL,CAAWtS,KAA5B;AACA,UAAM4d,QAAQ,GAAG,KAAKtL,KAAL,CAAWsL,QAA5B;AACA,QAAIwc,IAAI,GAAG,KAAKgkC,mBAAL,CAAyBj7C,mBAAzB,CAAX;AACA,QAAI,KAAKw2C,qBAAL,CAA2Bx2C,mBAA3B,EAAgD,KAAhD,CAAJ,EAA4D,OAAOiX,IAAP;A;AAC5D,WAAO,KAAK9nB,KAAL,CAAWvZ,IAAX,CAAgBiR,OAAhB,IAA2B,CAAC,KAAKkvB,kBAAL,EAAnC,EAA8D;AAC5D,YAAMxmB,IAAI,GAAG,KAAKsN,WAAL,CAAiBkD,QAAjB,EAA2BtF,QAA3B,CAAb;AACAlL,MAAAA,IAAI,CAACirB,QAAL,GAAgB,KAAKrrB,KAAL,CAAWpT,KAA3B;AACAwT,MAAAA,IAAI,CAAC3I,MAAL,GAAc,KAAd;AACA2I,MAAAA,IAAI,CAACmlB,QAAL,GAAgBuC,IAAhB;AACA,WAAKiE,SAAL,CAAejE,IAAf,EAAqB,mBAArB;AACA,WAAK3S,IAAL;AACA2S,MAAAA,IAAI,GAAG,KAAK5X,UAAL,CAAgB9P,IAAhB,EAAsB,kBAAtB,CAAP;AACD;A;AACD,WAAO0nB,IAAP;AACD;A;AAIDgkC,EAAAA,mBAAmB,CAACj7C,mBAAD,EAAuD;AACxE,UAAMD,QAAQ,GAAG,KAAK5Q,KAAL,CAAWtS,KAA5B;AACA,UAAM4d,QAAQ,GAAG,KAAKtL,KAAL,CAAWsL,QAA5B;AACA,UAAMi4B,gBAAgB,GAAG,KAAKvjC,KAAL,CAAWujC,gBAApC;AACA,UAAMzb,IAAI,GAAG,KAAK9G,aAAL,CAAmBnQ,mBAAnB,CAAb;A;AAEA,QAAI,KAAKk5C,oBAAL,CAA0BjiC,IAA1B,EAAgCyb,gBAAhC,CAAJ,EAAuD;AACrD,aAAOzb,IAAP;AACD;A;AAED,WAAO,KAAK4H,eAAL,CAAqB5H,IAArB,EAA2BlX,QAA3B,EAAqCtF,QAArC,CAAP;AACD;A;AAEDokB,EAAAA,eAAe,CACb/d,IADa,EAEbf,QAFa,EAGbtF,QAHa,EAIbsG,OAJa,EAKC;AACd,UAAM5R,KAAK,GAAG;AACZ6R,MAAAA,mBAAmB,EAAE,KADT;AAEZk6C,MAAAA,eAAe,EAAE,KAAKjT,oBAAL,CAA0BnnC,IAA1B,CAFL;AAGZG,MAAAA,IAAI,EAAE;AAHM,KAAd;A;AAKA,OAAG;AACDH,MAAAA,IAAI,GAAG,KAAKD,cAAL,CAAoBC,IAApB,EAA0Bf,QAA1B,EAAoCtF,QAApC,EAA8CsG,OAA9C,EAAuD5R,KAAvD,CAAP;AAGAA,MAAAA,KAAK,CAAC+rD,eAAN,GAAwB,KAAxB;AACD,KALD,QAKS,CAAC/rD,KAAK,CAAC8R,IALhB;A;AAMA,WAAOH,IAAP;AACD;A;AAMDD,EAAAA,cAAc,CACZC,IADY,EAEZf,QAFY,EAGZtF,QAHY,EAIZsG,OAJY,EAKZ5R,KALY,EAME;AACd,QAAI,CAAC4R,OAAD,IAAY,KAAKoN,GAAL,CAASjM,OAAE,CAAC/Y,WAAZ,CAAhB,EAA0C;AACxC,aAAO,KAAKgyD,SAAL,CAAer6C,IAAf,EAAqBf,QAArB,EAA+BtF,QAA/B,EAAyCsG,OAAzC,EAAkD5R,KAAlD,CAAP;AACD,KAFD,MAEO,IAAI,KAAK/O,KAAL,CAAW8hB,OAAE,CAACxY,SAAd,CAAJ,EAA8B;AACnC,aAAO,KAAKy+C,6BAAL,CACLrnC,IADK,EAELf,QAFK,EAGLtF,QAHK,EAILtL,KAJK,CAAP;AAMD;A;AAED,QAAImR,QAAQ,GAAG,KAAf;A;AACA,QAAI,KAAKlgB,KAAL,CAAW8hB,OAAE,CAAC5Y,WAAd,CAAJ,EAAgC;AAC9B,UAAIyX,OAAO,IAAI,KAAKuhC,iBAAL,SAAf,EAAuE;AAErEnzC,QAAAA,KAAK,CAAC8R,IAAN,GAAa,IAAb;AACA,eAAOH,IAAP;AACD;A;AACD3R,MAAAA,KAAK,CAAC6R,mBAAN,GAA4BV,QAAQ,GAAG,IAAvC;AACA,WAAKgE,IAAL;AACD;A;AAED,QAAI,CAACvD,OAAD,IAAY,KAAK3gB,KAAL,CAAW8hB,OAAE,CAACpZ,MAAd,CAAhB,EAAuC;AACrC,aAAO,KAAKsyD,+BAAL,CACLt6C,IADK,EAELf,QAFK,EAGLtF,QAHK,EAILtL,KAJK,EAKLmR,QALK,CAAP;AAOD,KARD,MAQO,IAAIA,QAAQ,IAAI,KAAKlgB,KAAL,CAAW8hB,OAAE,CAAC9Z,QAAd,CAAZ,IAAuC,KAAK+lB,GAAL,CAASjM,OAAE,CAAC9Y,GAAZ,CAA3C,EAA6D;AAClE,aAAO,KAAKiyD,WAAL,CAAiBv6C,IAAjB,EAAuBf,QAAvB,EAAiCtF,QAAjC,EAA2CtL,KAA3C,EAAkDmR,QAAlD,CAAP;AACD,KAFM,MAEA;AACLnR,MAAAA,KAAK,CAAC8R,IAAN,GAAa,IAAb;AACA,aAAOH,IAAP;AACD;AACF;A;AAMDu6C,EAAAA,WAAW,CACTv6C,IADS,EAETf,QAFS,EAGTtF,QAHS,EAITtL,KAJS,EAKTmR,QALS,EAMwC;AACjD,UAAM/Q,IAAI,GAAG,KAAKsN,WAAL,CAAiBkD,QAAjB,EAA2BtF,QAA3B,CAAb;AACA,UAAM2E,QAAQ,GAAG,KAAK+O,GAAL,CAASjM,OAAE,CAAC9Z,QAAZ,CAAjB;AACAmH,IAAAA,IAAI,CAACylC,MAAL,GAAcl0B,IAAd;AACAvR,IAAAA,IAAI,CAAC6P,QAAL,GAAgBA,QAAhB;AACA,UAAMlX,WAAW,GACf,CAACkX,QAAD,IAAa,KAAKhf,KAAL,CAAW8hB,OAAE,CAACha,WAAd,CAAb,IAA2C,KAAKiH,KAAL,CAAWpT,KADxD;AAEA,UAAM84B,QAAQ,GAAGzV,QAAQ,GACrB,KAAKgP,eAAL,EADqB,GAErBlmB,WAAW,GACX,KAAKozD,gBAAL,EADW,GAEX,KAAK5sC,eAAL,CAAqB,IAArB,CAJJ;A;AAMA,QAAIxmB,WAAW,KAAK,KAApB,EAA2B;AACzB,UAAIqH,IAAI,CAACylC,MAAL,CAAYp/C,IAAZ,KAAqB,OAAzB,EAAkC;AAChC,aAAKmlB,KAAL,CAAWgF,QAAX,EAAqBK,aAAM,CAACvI,iBAA5B;AACD;A;AACD,WAAKk8C,UAAL,CAAgBO,cAAhB,CAA+BpsD,WAA/B,EAA4C2sB,QAAQ,CAACh4B,KAArD;AACD;A;AACD0S,IAAAA,IAAI,CAACslB,QAAL,GAAgBA,QAAhB;A;AAEA,QAAIzV,QAAJ,EAAc;AACZ,WAAK0O,MAAL,CAAY5L,OAAE,CAAC3Z,QAAf;AACD;A;AAED,QAAI4G,KAAK,CAAC6R,mBAAV,EAA+B;AAC7BzR,MAAAA,IAAI,CAAC+Q,QAAL,GAAgBA,QAAhB;AACA,aAAO,KAAKjB,UAAL,CAAgB9P,IAAhB,EAAsB,0BAAtB,CAAP;AACD,KAHD,MAGO;AACL,aAAO,KAAK8P,UAAL,CAAgB9P,IAAhB,EAAsB,kBAAtB,CAAP;AACD;AACF;A;AAGD4rD,EAAAA,SAAS,CACPr6C,IADO,EAEPf,QAFO,EAGPtF,QAHO,EAIPsG,OAJO,EAKP5R,KALO,EAMO;AACd,UAAMI,IAAI,GAAG,KAAKsN,WAAL,CAAiBkD,QAAjB,EAA2BtF,QAA3B,CAAb;AACAlL,IAAAA,IAAI,CAACylC,MAAL,GAAcl0B,IAAd;AACAvR,IAAAA,IAAI,CAACgR,MAAL,GAAc,KAAKg7C,eAAL,EAAd;AACApsD,IAAAA,KAAK,CAAC8R,IAAN,GAAa,IAAb;AACA,WAAO,KAAK4d,eAAL,CACL,KAAKxf,UAAL,CAAgB9P,IAAhB,EAAsB,gBAAtB,CADK,EAELwQ,QAFK,EAGLtF,QAHK,EAILsG,OAJK,CAAP;AAMD;A;AAMDq6C,EAAAA,+BAA+B,CAC7Bt6C,IAD6B,EAE7Bf,QAF6B,EAG7BtF,QAH6B,EAI7BtL,KAJ6B,EAK7BmR,QAL6B,EAMf;AACd,UAAM6mC,yBAAyB,GAAG,KAAKh4C,KAAL,CAAW8rB,sBAA7C;AACA,SAAK9rB,KAAL,CAAW8rB,sBAAX,GAAoC,IAApC;AAEA,SAAK3W,IAAL;AAEA,QAAI/U,IAAI,GAAG,KAAKsN,WAAL,CAAiBkD,QAAjB,EAA2BtF,QAA3B,CAAX;AACAlL,IAAAA,IAAI,CAACgR,MAAL,GAAcO,IAAd;A;AACA,QAAI3R,KAAK,CAAC+rD,eAAV,EAA2B;AACzB,WAAK/D,eAAL,CAAqB7uC,KAArB,CAA2BotC,kBAAkB,EAA7C;AACD;A;AAED,QAAIvmD,KAAK,CAAC6R,mBAAV,EAA+B;AAC7BzR,MAAAA,IAAI,CAAC+Q,QAAL,GAAgBA,QAAhB;AACD;A;AACD,QAAIA,QAAJ,EAAc;AACZ/Q,MAAAA,IAAI,CAACc,SAAL,GAAiB,KAAKyuB,4BAAL,CAAkC5c,OAAE,CAACnZ,MAArC,EAA6C,KAA7C,CAAjB;AACD,KAFD,MAEO;AACLwG,MAAAA,IAAI,CAACc,SAAL,GAAiB,KAAKyuB,4BAAL,CACf5c,OAAE,CAACnZ,MADY,EAEfoG,KAAK,CAAC+rD,eAFS,EAGfp6C,IAAI,CAAClrB,IAAL,KAAc,QAHC,EAIfkrB,IAAI,CAAClrB,IAAL,KAAc,OAJC,EAKf2Z,IALe,CAAjB;AAOD;A;AACD,SAAK8Q,oBAAL,CAA0B9Q,IAA1B,EAAgCJ,KAAK,CAAC6R,mBAAtC;A;AAEA,QAAI7R,KAAK,CAAC+rD,eAAN,IAAyB,KAAKz9B,qBAAL,EAAzB,IAAyD,CAACnd,QAA9D,EAAwE;AACtEnR,MAAAA,KAAK,CAAC8R,IAAN,GAAa,IAAb;AACA,WAAKk2C,eAAL,CAAqB5B,iBAArB;AACA,WAAK4B,eAAL,CAAqB5uC,IAArB;AACAhZ,MAAAA,IAAI,GAAG,KAAKiuB,iCAAL,CACL,KAAK3gB,WAAL,CAAiBkD,QAAjB,EAA2BtF,QAA3B,CADK,EAELlL,IAFK,CAAP;AAID,KARD,MAQO;AACL,UAAIJ,KAAK,CAAC+rD,eAAV,EAA2B;AACzB,aAAK/D,eAAL,CAAqB5uC,IAArB;AACD;A;AACD,WAAK9H,qBAAL,CAA2BlR,IAA3B;AACD;A;AAED,SAAKJ,KAAL,CAAW8rB,sBAAX,GAAoCksB,yBAApC;AAEA,WAAO53C,IAAP;AACD;A;AAEDkR,EAAAA,qBAAqB,CACnBlR,IADmB,EAEnBqrB,mBAFmB,EAGnB;AACA,SAAKq9B,oBAAL,CAA0B1oD,IAAI,CAACc,SAA/B,EAA0CuqB,mBAA1C;AACD;A;AAIDutB,EAAAA,6BAA6B,CAC3BrnC,IAD2B,EAE3Bf,QAF2B,EAG3BtF,QAH2B,EAI3BtL,KAJ2B,EAKC;AAC5B,UAAMI,IAAgC,GAAG,KAAKsN,WAAL,CACvCkD,QADuC,EAEvCtF,QAFuC,CAAzC;AAIAlL,IAAAA,IAAI,CAACisD,GAAL,GAAW16C,IAAX;AACAvR,IAAAA,IAAI,CAACksD,KAAL,GAAa,KAAKxZ,aAAL,CAAmB,IAAnB,CAAb;A;AACA,QAAI9yC,KAAK,CAAC6R,mBAAV,EAA+B;AAC7B,WAAKjG,KAAL,CAAWgF,QAAX,EAAqBK,aAAM,CAACnK,0BAA5B;AACD;A;AACD,WAAO,KAAKoJ,UAAL,CAAgB9P,IAAhB,EAAsB,0BAAtB,CAAP;AACD;A;AAED04C,EAAAA,oBAAoB,CAACnnC,IAAD,EAA8B;AAChD,WACEA,IAAI,CAAClrB,IAAL,KAAc,YAAd,IACAkrB,IAAI,CAAC9iB,IAAL,KAAc,OADd,IAEA,KAAKmR,KAAL,CAAW0L,UAAX,KAA0BiG,IAAI,CAAChkB,GAF/B,IAGA,CAAC,KAAKi5B,kBAAL,EAHD,IAKAjV,IAAI,CAAChkB,GAAL,GAAWgkB,IAAI,CAACjkB,KAAhB,KAA0B,CAL1B,IAMAikB,IAAI,CAACjkB,KAAL,KAAe,KAAKsS,KAAL,CAAWujC,gBAP5B;AASD;A;AAEDryB,EAAAA,oBAAoB,CAClB9Q,IADkB,EAElB+Q,QAFkB,EAGJ;AACd,QAAI/Q,IAAI,CAACgR,MAAL,CAAY3qB,IAAZ,KAAqB,QAAzB,EAAmC;AACjC,UAAI2Z,IAAI,CAACc,SAAL,CAAexZ,MAAf,KAA0B,CAA9B,EAAiC;AAGxB;AACL,cAAI,CAAC,KAAK2X,SAAL,CAAe,kBAAf,CAAL,EAAyC;AACvC,iBAAKo9C,YAAL,CAAkB,kBAAlB;AACD;AACF;AACF;A;AACD,UAAIr8C,IAAI,CAACc,SAAL,CAAexZ,MAAf,KAA0B,CAA1B,IAA+B0Y,IAAI,CAACc,SAAL,CAAexZ,MAAf,GAAwB,CAA3D,EAA8D;AAC5D,aAAKkkB,KAAL,CACExL,IAAI,CAAC1S,KADP,EAEEujB,aAAM,CAAC7M,eAFT,EAGE,KAAK/E,SAAL,CAAe,kBAAf,KACE,KAAKA,SAAL,CAAe,kBAAf,CADF,GAEI,sBAFJ,GAGI,cANN;AAQD,OATD,MASO;AACL,aAAK,MAAMpJ,GAAX,IAAkBmK,IAAI,CAACc,SAAvB,EAAkC;AAChC,cAAIjL,GAAG,CAACxP,IAAJ,KAAa,eAAjB,EAAkC;AAChC,iBAAKmlB,KAAL,CAAW3V,GAAG,CAACvI,KAAf,EAAsBujB,aAAM,CAAC3M,wBAA7B;AACD;AACF;AACF;AACF;A;AACD,WAAO,KAAK4L,UAAL,CACL9P,IADK,EAEL+Q,QAAQ,GAAG,wBAAH,GAA8B,gBAFjC,CAAP;AAID;A;AAEDwe,EAAAA,4BAA4B,CAC1BhE,KAD0B,EAE1B4gC,kBAF0B,EAG1BC,aAH0B,EAI1BC,gBAJ0B,EAK1BC,YAL0B,EAMK;AAC/B,UAAMtD,IAAI,GAAG,EAAb;AACA,QAAIljC,KAAK,GAAG,IAAZ;AACA,UAAMymC,6BAA6B,GAAG,KAAK3sD,KAAL,CAAWgkC,0BAAjD;AACA,SAAKhkC,KAAL,CAAWgkC,0BAAX,GAAwC,KAAxC;A;AAEA,WAAO,CAAC,KAAKhlB,GAAL,CAAS2M,KAAT,CAAR,EAAyB;AACvB,UAAIzF,KAAJ,EAAW;AACTA,QAAAA,KAAK,GAAG,KAAR;AACD,OAFD,MAEO;AACL,aAAKvH,MAAL,CAAY5L,OAAE,CAAClZ,KAAf;A;AACA,YAAI,KAAK5I,KAAL,CAAW06B,KAAX,CAAJ,EAAuB;AACrB,cACE6gC,aAAa,IACb,CAAC,KAAKntD,SAAL,CAAe,kBAAf,CADD,IAEA,CAAC,KAAKA,SAAL,CAAe,kBAAf,CAHH,EAIE;AACA,iBAAKuM,KAAL,CACE,KAAK5L,KAAL,CAAWuL,YADb,EAEE0F,aAAM,CAAC9M,+BAFT;AAID;A;AACD,cAAIuoD,YAAJ,EAAkB;AAChB,iBAAKj+C,QAAL,CACEi+C,YADF,EAEE,eAFF,EAGE,KAAK1sD,KAAL,CAAWuL,YAHb;AAKD;A;AACD,eAAK4J,IAAL;AACA;AACD;AACF;A;AAEDi0C,MAAAA,IAAI,CAACjkE,IAAL,CACE,KAAKynE,iBAAL,CACE,KADF,EAEEL,kBAAkB,GAAG,IAAIpE,gBAAJ,EAAH,GAA4B9iE,SAFhD,EAGEknE,kBAAkB,GAAG;AAAE7+D,QAAAA,KAAK,EAAE;AAAT,OAAH,GAAkBrI,SAHtC,EAIEonE,gBAJF,CADF;AAQD;A;AAED,SAAKzsD,KAAL,CAAWgkC,0BAAX,GAAwC2oB,6BAAxC;AAEA,WAAOvD,IAAP;AACD;A;AAED96B,EAAAA,qBAAqB,GAAY;AAC/B,WAAO,KAAKr9B,KAAL,CAAW8hB,OAAE,CAAC3Y,KAAd,KAAwB,CAAC,KAAKwsB,kBAAL,EAAhC;AACD;A;AAEDyH,EAAAA,iCAAiC,CAC/BjuB,IAD+B,EAE/Bzb,IAF+B,EAGJ;AAAA;A;AAC3B,SAAKg6B,MAAL,CAAY5L,OAAE,CAAC3Y,KAAf;AACA,SAAK81B,oBAAL,CACE9vB,IADF,EAEEzb,IAAI,CAACuc,SAFP,EAGE,IAHF,iBAIEvc,IAAI,CAACipB,KAJP,qBAIE,YAAY8b,aAJd;AAMA,WAAOtpB,IAAP;AACD;A;AAIDgsD,EAAAA,eAAe,GAAiB;AAC9B,UAAMx7C,QAAQ,GAAG,KAAK5Q,KAAL,CAAWtS,KAA5B;AACA,UAAM4d,QAAQ,GAAG,KAAKtL,KAAL,CAAWsL,QAA5B;AACA,WAAO,KAAKokB,eAAL,CAAqB,KAAK1O,aAAL,EAArB,EAA2CpQ,QAA3C,EAAqDtF,QAArD,EAA+D,IAA/D,CAAP;AACD;A;AAcD0V,EAAAA,aAAa,CAACnQ,mBAAD,EAAwD;AAGnE,QAAI,KAAK7Q,KAAL,CAAWvZ,IAAX,KAAoBssB,OAAE,CAAClX,KAA3B,EAAkC,KAAKslD,UAAL;AAElC,UAAM1xB,UAAU,GAAG,KAAKzvB,KAAL,CAAWujC,gBAAX,KAAgC,KAAKvjC,KAAL,CAAWtS,KAA9D;AACA,QAAI0S,IAAJ;A;AAEA,YAAQ,KAAKJ,KAAL,CAAWvZ,IAAnB;AACE,WAAKssB,OAAE,CAAC1V,MAAR;AACE,eAAO,KAAKwvD,UAAL,EAAP;A;AAEF,WAAK95C,OAAE,CAACtV,OAAR;AACE2C,QAAAA,IAAI,GAAG,KAAK2P,SAAL,EAAP;AACA,aAAKoF,IAAL;A;AAEA,YAAI,KAAKlkB,KAAL,CAAW8hB,OAAE,CAAC9Y,GAAd,CAAJ,EAAwB;AACtB,iBAAO,KAAK6yD,uBAAL,CAA6B1sD,IAA7B,CAAP;AACD;A;AAED,YAAI,CAAC,KAAKnP,KAAL,CAAW8hB,OAAE,CAACpZ,MAAd,CAAL,EAA4B;AAC1B,eAAKiS,KAAL,CAAW,KAAK5L,KAAL,CAAWuL,YAAtB,EAAoC0F,aAAM,CAACjH,iBAA3C;AACD;A;AACD,eAAO,KAAKkG,UAAL,CAAgB9P,IAAhB,EAAsB,QAAtB,CAAP;A;AACF,WAAK2S,OAAE,CAAC3V,KAAR;AACEgD,QAAAA,IAAI,GAAG,KAAK2P,SAAL,EAAP;AACA,aAAKoF,IAAL;AACA,eAAO,KAAKjF,UAAL,CAAgB9P,IAAhB,EAAsB,gBAAtB,CAAP;A;AAEF,WAAK2S,OAAE,CAAClkB,IAAR;AAAc;AACZ,gBAAMw1C,WAAW,GAAG,KAAKrkC,KAAL,CAAWqkC,WAA/B;AACA,gBAAMj9C,EAAE,GAAG,KAAKm4B,eAAL,EAAX;A;AAEA,cAAI,CAAC8kB,WAAD,IAAgBj9C,EAAE,CAACyH,IAAH,KAAY,OAA5B,IAAuC,CAAC,KAAK+3B,kBAAL,EAA5C,EAAuE;AACrE,gBAAI,KAAK31B,KAAL,CAAW8hB,OAAE,CAACtW,SAAd,CAAJ,EAA8B;AAC5B,oBAAMkD,IAAI,GAAG,KAAKK,KAAL,CAAWgT,OAAX,CAAmBtrB,MAAnB,GAA4B,CAAzC;A;AACA,kBAAI,KAAKsY,KAAL,CAAWgT,OAAX,CAAmBrT,IAAnB,MAA6BykC,KAAE,CAACtxB,iBAApC,EAAuD;AAQrD,sBAAM,IAAIwL,KAAJ,CAAU,gBAAV,CAAN;AACD;A;AACD,mBAAKte,KAAL,CAAWgT,OAAX,CAAmBrT,IAAnB,IAA2BykC,KAAE,CAACvxB,kBAA9B;AAEA,mBAAKsC,IAAL;AACA,qBAAO,KAAK43C,aAAL,CACL,KAAK/6C,eAAL,CAAqB5qB,EAArB,CADK,EAEL/B,SAFK,EAGL,IAHK,CAAP;AAKD,aApBD,MAoBO,IAAI,KAAK4L,KAAL,CAAW8hB,OAAE,CAAClkB,IAAd,CAAJ,EAAyB;AAI9B,kBAAI,KAAKskD,iBAAL,SAAJ,EAAqD;AACnD,uBAAO,KAAK6Z,4BAAL,CAAkC5lE,EAAlC,CAAP;AACD,eAFD,MAEO;AAGL,uBAAOA,EAAP;AACD;AACF,aAXM,MAWA,IAAI,KAAK6J,KAAL,CAAW8hB,OAAE,CAAC1W,GAAd,CAAJ,EAAwB;AAC7B,qBAAO,KAAK4wD,OAAL,CAAa,IAAb,CAAP;AACD;AACF;A;AAED,cAAIx9B,UAAU,IAAI,KAAKx+B,KAAL,CAAW8hB,OAAE,CAAC3Y,KAAd,CAAd,IAAsC,CAAC,KAAKwsB,kBAAL,EAA3C,EAAsE;AACpE,iBAAKzR,IAAL;AACA,mBAAO,KAAK+a,oBAAL,CACL,KAAKle,eAAL,CAAqB5qB,EAArB,CADK,EAEL,CAACA,EAAD,CAFK,EAGL,KAHK,CAAP;AAKD;A;AAED,iBAAOA,EAAP;AACD;A;AAED,WAAK2rB,OAAE,CAAC1W,GAAR;AAAa;AACX,iBAAO,KAAK4wD,OAAL,CAAa,KAAb,CAAP;AACD;A;AAED,WAAKl6C,OAAE,CAACja,MAAR;AAAgB;AACd,iBAAO,KAAK0T,kBAAL,CAAwB,KAAKxM,KAAL,CAAWpT,KAAnC,CAAP;AACD;A;AAED,WAAKmmB,OAAE,CAACpa,GAAR;AACE,eAAO,KAAKwU,mBAAL,CAAyB,KAAKnN,KAAL,CAAWpT,KAApC,CAAP;A;AAEF,WAAKmmB,OAAE,CAACna,MAAR;AACE,eAAO,KAAKiU,kBAAL,CAAwB,KAAK7M,KAAL,CAAWpT,KAAnC,CAAP;A;AAEF,WAAKmmB,OAAE,CAACla,OAAR;AACE,eAAO,KAAKmU,mBAAL,CAAyB,KAAKhN,KAAL,CAAWpT,KAApC,CAAP;A;AAEF,WAAKmmB,OAAE,CAAC/hB,MAAR;AACE,eAAO,KAAKkc,kBAAL,CAAwB,KAAKlN,KAAL,CAAWpT,KAAnC,CAAP;A;AAEF,WAAKmmB,OAAE,CAACrV,KAAR;AACE,eAAO,KAAK0P,gBAAL,EAAP;A;AAEF,WAAK2F,OAAE,CAACpV,KAAR;AACE,eAAO,KAAK0P,mBAAL,CAAyB,IAAzB,CAAP;A;AACF,WAAK0F,OAAE,CAACnV,MAAR;AACE,eAAO,KAAKyP,mBAAL,CAAyB,KAAzB,CAAP;A;AAEF,WAAK0F,OAAE,CAACpZ,MAAR;AACE,eAAO,KAAK61B,kCAAL,CAAwCC,UAAxC,CAAP;A;AAEF,WAAK1c,OAAE,CAAC5Z,WAAR;AACA,WAAK4Z,OAAE,CAAC7Z,YAAR;AAAsB;AACpB,iBAAO,KAAKwyB,cAAL,CACL,KAAK1rB,KAAL,CAAWvZ,IAAX,KAAoBssB,OAAE,CAAC5Z,WAAvB,GAAqC4Z,OAAE,CAAC1Z,WAAxC,GAAsD0Z,OAAE,CAAC3Z,QADpD,EAEc,KAFd,EAGS,IAHT,EAILyX,mBAJK,CAAP;AAMD;A;AACD,WAAKkC,OAAE,CAAC9Z,QAAR;AAAkB;AAChB,iBAAO,KAAKyyB,cAAL,CACL3Y,OAAE,CAAC3Z,QADE,EAEc,IAFd,EAGS,KAHT,EAILyX,mBAJK,CAAP;AAMD;A;AACD,WAAKkC,OAAE,CAACxZ,SAAR;AACA,WAAKwZ,OAAE,CAACvZ,UAAR;AAAoB;AAClB,iBAAO,KAAKyvD,eAAL,CACL,KAAKjpD,KAAL,CAAWvZ,IAAX,KAAoBssB,OAAE,CAACxZ,SAAvB,GAAmCwZ,OAAE,CAACrZ,SAAtC,GAAkDqZ,OAAE,CAACtZ,MADhD,EAEW,KAFX,EAGU,IAHV,EAILoX,mBAJK,CAAP;AAMD;A;AACD,WAAKkC,OAAE,CAACzZ,MAAR;AAAgB;AACd,iBAAO,KAAK2vD,eAAL,CACLl2C,OAAE,CAACtZ,MADE,EAEW,KAFX,EAGU,KAHV,EAILoX,mBAJK,CAAP;AAMD;A;AACD,WAAKkC,OAAE,CAACtW,SAAR;AACE,eAAO,KAAKywD,2BAAL,EAAP;A;AAEF,WAAKn6C,OAAE,CAACtY,EAAR;AACE,aAAK0yD,eAAL;A;AAEF,WAAKp6C,OAAE,CAACzV,MAAR;AACE8C,QAAAA,IAAI,GAAG,KAAK2P,SAAL,EAAP;AACA,aAAKusC,cAAL,CAAoBl8C,IAApB;AACA,eAAO,KAAKk3C,UAAL,CAAgBl3C,IAAhB,EAAsB,KAAtB,CAAP;A;AAEF,WAAK2S,OAAE,CAAC5V,IAAR;AACE,eAAO,KAAKiwD,mBAAL,EAAP;A;AAEF,WAAKr6C,OAAE,CAACxY,SAAR;AACE,eAAO,KAAKu4C,aAAL,CAAmB,KAAnB,CAAP;A;AAIF,WAAK//B,OAAE,CAAC/Y,WAAR;AAAqB;AACnBoG,UAAAA,IAAI,GAAG,KAAK2P,SAAL,EAAP;AACA,eAAKoF,IAAL;AACA/U,UAAAA,IAAI,CAACylC,MAAL,GAAc,IAAd;AACA,gBAAMz0B,MAAM,GAAIhR,IAAI,CAACgR,MAAL,GAAc,KAAKg7C,eAAL,EAA9B;A;AACA,cAAIh7C,MAAM,CAAC3qB,IAAP,KAAgB,kBAApB,EAAwC;AACtC,mBAAO,KAAKypB,UAAL,CAAgB9P,IAAhB,EAAsB,gBAAtB,CAAP;AACD,WAFD,MAEO;AACL,kBAAM,KAAKwL,KAAL,CAAWwF,MAAM,CAAC1jB,KAAlB,EAAyBujB,aAAM,CAACpH,eAAhC,CAAN;AACD;AACF;A;AAED,WAAKkJ,OAAE,CAACha,WAAR;AAAqB;AAInB,gBAAMrL,KAAK,GAAG,KAAKsS,KAAL,CAAWtS,KAAzB;AACA,gBAAMd,KAAK,GAAG,KAAKoT,KAAL,CAAWpT,KAAzB;AACAwT,UAAAA,IAAI,GAAG,KAAK+rD,gBAAL,EAAP;A;AACA,cAAI,KAAKl7D,KAAL,CAAW8hB,OAAE,CAAClV,GAAd,CAAJ,EAAwB;AACtB,iBAAK4+C,YAAL,CAAkB,WAAlB;AACA,iBAAKmI,UAAL,CAAgBO,cAAhB,CAA+Bv4D,KAA/B,EAAsCwT,IAAI,CAAC1S,KAA3C;AACD,WAHD,MAGO,IAAI,KAAK2R,SAAL,CAAe,WAAf,CAAJ,EAAiC;AACtC,iBAAKuM,KAAL,CAAW,KAAK5L,KAAL,CAAWtS,KAAtB,EAA6BujB,aAAM,CAACxJ,mBAApC,EAAyD7a,KAAzD;AACD,WAFM,MAEA;AACL,kBAAM,KAAKk0B,UAAL,CAAgBpzB,KAAhB,CAAN;AACD;A;AACD,iBAAO0S,IAAP;AACD;A;AACD,WAAK2S,OAAE,CAACrY,IAAR;AAAc;AACZ,cAAI,KAAKsF,KAAL,CAAWwjC,UAAf,EAA2B;AACzBpjC,YAAAA,IAAI,GAAG,KAAK2P,SAAL,EAAP;A;AAEA,gBACE,KAAKvQ,eAAL,CAAqB,kBAArB,EAAyC,UAAzC,MAAyD,OAD3D,EAEE;AACA,mBAAKoM,KAAL,CAAWxL,IAAI,CAAC1S,KAAhB,EAAuBujB,aAAM,CAACzJ,iCAA9B;AACD;A;AAED,iBAAK2N,IAAL;A;AAEA,gBAAI,CAAC,KAAKk4C,mDAAL,EAAL,EAAiE;AAC/D,mBAAKzhD,KAAL,CAAWxL,IAAI,CAAC1S,KAAhB,EAAuBujB,aAAM,CAAC1J,sBAA9B;AACD;A;AAED,iBAAK+lD,sBAAL;AACA,mBAAO,KAAKp9C,UAAL,CAAgB9P,IAAhB,EAAsB,+BAAtB,CAAP;AACD;AACF;A;AAED,WAAK2S,OAAE,CAACvX,UAAR;AAAoB;AAClB,cAAI,KAAKwE,KAAL,CAAWpT,KAAX,KAAqB,GAAzB,EAA8B;AAC5B,kBAAM2gE,WAAW,GAAG,KAAKxuD,KAAL,CAAWyuD,WAAX,CAAuB,KAAKh6B,cAAL,EAAvB,CAApB;A;AACA,gBACEvf,iBAAiB,CAACs5C,WAAD,CAAjB,IACAA,WAAW,OAFb,EAGE;AACA,qBAAKtG,eAAL,CAAqB,CAAC,KAAD,EAAQ,MAAR,EAAgB,YAAhB,CAArB;AACD;AACF;AACF;A;AAED;AACE,cAAM,KAAKnmC,UAAL,EAAN;AA7NJ;AA+ND;A;AAGDksC,EAAAA,4BAA4B,CAAC5lE,EAAD,EAA8C;AACxE,UAAMgZ,IAAI,GAAG,KAAK4R,eAAL,CAAqB5qB,EAArB,CAAb;AAGA,SAAKmvD,SAAL,CAAep9B,KAAf,CAAqBqwB,aAAa,CAAC,IAAD,EAAO,KAAK+M,SAAL,CAAelN,QAAtB,CAAlC;AACA,UAAMx9B,MAAM,GAAG,CAAC,KAAK0T,eAAL,EAAD,CAAf;AACA,SAAKg3B,SAAL,CAAen9B,IAAf;A;AACA,QAAI,KAAK5F,qBAAL,EAAJ,EAAkC;AAChC,WAAK5H,KAAL,CAAW,KAAK5L,KAAL,CAAWqL,GAAtB,EAA2B4F,aAAM,CAACtL,yBAAlC;AACD;A;AACD,SAAKgZ,MAAL,CAAY5L,OAAE,CAAC3Y,KAAf;AAEA,SAAK81B,oBAAL,CAA0B9vB,IAA1B,EAAgCyL,MAAhC,EAAwC,IAAxC;AACA,WAAOzL,IAAP;AACD;A;AAID6sD,EAAAA,OAAO,CAACh/C,OAAD,EAAmC;AACxC,SAAKwuC,YAAL,CAAkB,eAAlB;A;AACA,QAAIxuC,OAAJ,EAAa;AACX,WAAKwuC,YAAL,CAAkB,oBAAlB;AACD;A;AACD,UAAMr8C,IAAI,GAAG,KAAK2P,SAAL,EAAb;AACA3P,IAAAA,IAAI,CAAC6uB,KAAL,GAAahhB,OAAb;AACA,SAAKkH,IAAL;AACA,UAAMuyC,SAAS,GAAG,KAAK1nD,KAAL,CAAWikC,MAA7B;AACA,SAAKjkC,KAAL,CAAWikC,MAAX,GAAoB,EAApB;A;AACA,QAAIh2B,OAAJ,EAAa;AAGX,WAAKsoC,SAAL,CAAep9B,KAAf,CAAqB2vB,WAArB;AACA1oC,MAAAA,IAAI,CAACzX,IAAL,GAAY,KAAKyzD,UAAL,EAAZ;AACA,WAAK7F,SAAL,CAAen9B,IAAf;AACD,KAND,MAMO;AACLhZ,MAAAA,IAAI,CAACzX,IAAL,GAAY,KAAKyzD,UAAL,EAAZ;AACD;A;AAED,SAAKp8C,KAAL,CAAWikC,MAAX,GAAoByjB,SAApB;AACA,WAAO,KAAKx3C,UAAL,CAAgB9P,IAAhB,EAAsB,cAAtB,CAAP;AACD;A;AAGDysD,EAAAA,UAAU,GAAY;AACpB,UAAMzsD,IAAI,GAAG,KAAK2P,SAAL,EAAb;AACA,SAAKoF,IAAL;A;AACA,QACE,KAAKlkB,KAAL,CAAW8hB,OAAE,CAACpZ,MAAd,KACA,CAAC,KAAK0f,KAAL,CAAWzJ,gBADZ,IAEA,CAAC,KAAKtX,OAAL,CAAammD,uBAHhB,EAIE;AACA,WAAK7yC,KAAL,CAAWxL,IAAI,CAAC1S,KAAhB,EAAuBujB,aAAM,CAACxI,eAA9B;AACD,KAND,MAMO,IACL,CAAC,KAAK4Q,KAAL,CAAWX,UAAZ,IACA,CAAC,KAAKpgB,OAAL,CAAammD,uBAFT,EAGL;AACA,WAAK7yC,KAAL,CAAWxL,IAAI,CAAC1S,KAAhB,EAAuBujB,aAAM,CAACvH,eAA9B;AACD;A;AAED,QACE,CAAC,KAAKzY,KAAL,CAAW8hB,OAAE,CAACpZ,MAAd,CAAD,IACA,CAAC,KAAK1I,KAAL,CAAW8hB,OAAE,CAAC9Z,QAAd,CADD,IAEA,CAAC,KAAKhI,KAAL,CAAW8hB,OAAE,CAAC9Y,GAAd,CAHH,EAIE;AACA,WAAK2R,KAAL,CAAWxL,IAAI,CAAC1S,KAAhB,EAAuBujB,aAAM,CAAC7G,gBAA9B;AACD;A;AAED,WAAO,KAAK8F,UAAL,CAAgB9P,IAAhB,EAAsB,OAAtB,CAAP;AACD;A;AAEDiP,EAAAA,qBAAqB,CACnBqd,oBADmB,EAEW;AAC9B,UAAM+gC,SAAS,GAAG,KAAKx8D,KAAL,CAAW8hB,OAAE,CAACha,WAAd,CAAlB;A;AAEA,QAAI00D,SAAJ,EAAe;AACb,UAAI,CAAC/gC,oBAAL,EAA2B;AACzB,aAAK9gB,KAAL,CAAW,KAAK5L,KAAL,CAAWtS,KAAX,GAAmB,CAA9B,EAAiCujB,aAAM,CAACzH,sBAAxC;AACD;A;AACD,aAAO,KAAK2iD,gBAAL,EAAP;AACD,KALD,MAKO;AACL,aAAO,KAAK5sC,eAAL,CAAqB,IAArB,CAAP;AACD;AACF;A;AAED4sC,EAAAA,gBAAgB,GAAkB;AAChC,UAAM/rD,IAAI,GAAG,KAAK2P,SAAL,EAAb;AACA,UAAM3oB,EAAE,GAAG,KAAKsmB,WAAL,CACT,KAAK1N,KAAL,CAAWtS,KAAX,GAAmB,CADV,EAIT,IAAI8Q,QAAJ,CACE,KAAKwB,KAAL,CAAWsjC,OADb,EAEE,KAAKtjC,KAAL,CAAWtS,KAAX,GAAmB,CAAnB,GAAuB,KAAKsS,KAAL,CAAWf,SAFpC,CAJS,CAAX;AASA,UAAMpQ,IAAI,GAAG,KAAKmR,KAAL,CAAWpT,KAAxB;AACA,SAAKuoB,IAAL;AACA/U,IAAAA,IAAI,CAAChZ,EAAL,GAAU,KAAKq/B,gBAAL,CAAsBr/B,EAAtB,EAA0ByH,IAA1B,CAAV;AACA,WAAO,KAAKqhB,UAAL,CAAgB9P,IAAhB,EAAsB,aAAtB,CAAP;AACD;A;AAED8sD,EAAAA,2BAA2B,GAA0C;AACnE,UAAM9sD,IAAI,GAAG,KAAK2P,SAAL,EAAb;AAOA,SAAKoF,IAAL;A;AAEA,QAAI,KAAKohC,SAAL,CAAelN,QAAf,IAA2B,KAAKp4C,KAAL,CAAW8hB,OAAE,CAAC9Y,GAAd,CAA/B,EAAmD;AACjD,YAAMyzD,IAAI,GAAG,KAAKjnC,gBAAL,CACX,KAAKzU,eAAL,CAAqB5R,IAArB,CADW,EAEX,UAFW,CAAb;AAIA,WAAK+U,IAAL;AACA,aAAO,KAAKw4C,iBAAL,CAAuBvtD,IAAvB,EAA6BstD,IAA7B,EAAmC,MAAnC,CAAP;AACD;A;AACD,WAAO,KAAKX,aAAL,CAAmB3sD,IAAnB,CAAP;AACD;A;AAEDutD,EAAAA,iBAAiB,CACfvtD,IADe,EAEfstD,IAFe,EAGfE,YAHe,EAIC;AAChBxtD,IAAAA,IAAI,CAACstD,IAAL,GAAYA,IAAZ;A;AAEA,QAAIA,IAAI,CAAC7+D,IAAL,KAAc,UAAd,IAA4B++D,YAAY,KAAK,MAAjD,EAAyD;AAEvD,UAAI,KAAKntC,YAAL,CAAkBmtC,YAAlB,CAAJ,EAAqC;AACnC,aAAKnR,YAAL,CAAkB,cAAlB;AACD,OAFD,MAEO,IAAI,CAAC,KAAKp9C,SAAL,CAAe,cAAf,CAAL,EAAqC;AAE1C,aAAKyhB,UAAL;AACD;AACF;A;AAED,UAAMujB,WAAW,GAAG,KAAKrkC,KAAL,CAAWqkC,WAA/B;AAEAjkC,IAAAA,IAAI,CAACslB,QAAL,GAAgB,KAAKnG,eAAL,CAAqB,IAArB,CAAhB;A;AAEA,QAAInf,IAAI,CAACslB,QAAL,CAAc72B,IAAd,KAAuB++D,YAAvB,IAAuCvpB,WAA3C,EAAwD;AACtD,WAAKz4B,KAAL,CACExL,IAAI,CAACslB,QAAL,CAAch4B,KADhB,EAEEujB,aAAM,CAAChH,uBAFT,EAGEyjD,IAAI,CAAC7+D,IAHP,EAIE++D,YAJF;AAMD;A;AAED,WAAO,KAAK19C,UAAL,CAAgB9P,IAAhB,EAAsB,cAAtB,CAAP;AACD;A;AAGD0sD,EAAAA,uBAAuB,CAAC1sD,IAAD,EAAuC;AAC5D,UAAMhZ,EAAE,GAAG,KAAKq/B,gBAAL,CAAsB,KAAKzU,eAAL,CAAqB5R,IAArB,CAAtB,EAAkD,QAAlD,CAAX;AACA,SAAK+U,IAAL;A;AAEA,QAAI,KAAKsL,YAAL,CAAkB,MAAlB,CAAJ,EAA+B;AAC7B,UAAI,CAAC,KAAK7L,QAAV,EAAoB;AAClB,aAAKhJ,KAAL,CAAWxkB,EAAE,CAACsG,KAAd,EAAqBmgE,6BAAsB,CAAC/iD,uBAA5C;AACD;A;AACD,WAAK3L,iBAAL,GAAyB,IAAzB;AACD;A;AAED,WAAO,KAAKwuD,iBAAL,CAAuBvtD,IAAvB,EAA6BhZ,EAA7B,EAAiC,MAAjC,CAAP;AACD;A;AAEDo/B,EAAAA,kBAAkB,CAChB55B,KADgB,EAEhBnG,IAFgB,EAGhB2Z,IAHgB,EAIb;AACH,SAAKqO,QAAL,CAAcrO,IAAd,EAAoB,UAApB,EAAgCxT,KAAhC;AACA,SAAK6hB,QAAL,CAAcrO,IAAd,EAAoB,KAApB,EAA2B,KAAKrB,KAAL,CAAWjK,KAAX,CAAiBsL,IAAI,CAAC1S,KAAtB,EAA6B,KAAKsS,KAAL,CAAWrS,GAAxC,CAA3B;AACAyS,IAAAA,IAAI,CAACxT,KAAL,GAAaA,KAAb;AACA,SAAKuoB,IAAL;AACA,WAAO,KAAKjF,UAAL,CAAmB9P,IAAnB,EAAyB3Z,IAAzB,CAAP;AACD;A;AAEDwmB,EAAAA,YAAY,CAAYrgB,KAAZ,EAAwBnG,IAAxB,EAA0D;AACpE,UAAM2Z,IAAI,GAAG,KAAK2P,SAAL,EAAb;AACA,WAAO,KAAKyW,kBAAL,CAAwB55B,KAAxB,EAA+BnG,IAA/B,EAAqC2Z,IAArC,CAAP;AACD;A;AAED8M,EAAAA,kBAAkB,CAACtgB,KAAD,EAAa;AAC7B,WAAO,KAAKqgB,YAAL,CAAmCrgB,KAAnC,EAA0C,eAA1C,CAAP;AACD;A;AAEDugB,EAAAA,mBAAmB,CAACvgB,KAAD,EAAa;AAC9B,WAAO,KAAKqgB,YAAL,CAAoCrgB,KAApC,EAA2C,gBAA3C,CAAP;AACD;A;AAEDigB,EAAAA,kBAAkB,CAACjgB,KAAD,EAAa;AAC7B,WAAO,KAAKqgB,YAAL,CAAmCrgB,KAAnC,EAA0C,eAA1C,CAAP;AACD;A;AAEDogB,EAAAA,mBAAmB,CAACpgB,KAAD,EAAa;AAC9B,WAAO,KAAKqgB,YAAL,CAAoCrgB,KAApC,EAA2C,gBAA3C,CAAP;AACD;A;AAED4f,EAAAA,kBAAkB,CAAC5f,KAAD,EAAwD;AACxE,UAAMwT,IAAI,GAAG,KAAK6M,YAAL,CACXrgB,KAAK,CAACA,KADK,EAEX,eAFW,CAAb;AAIAwT,IAAAA,IAAI,CAACqM,OAAL,GAAe7f,KAAK,CAAC6f,OAArB;AACArM,IAAAA,IAAI,CAACsM,KAAL,GAAa9f,KAAK,CAAC8f,KAAnB;AACA,WAAOtM,IAAP;AACD;A;AAEDiN,EAAAA,mBAAmB,CAACzgB,KAAD,EAAiB;AAClC,UAAMwT,IAAI,GAAG,KAAK2P,SAAL,EAAb;AACA3P,IAAAA,IAAI,CAACxT,KAAL,GAAaA,KAAb;AACA,SAAKuoB,IAAL;AACA,WAAO,KAAKjF,UAAL,CAAkC9P,IAAlC,EAAwC,gBAAxC,CAAP;AACD;A;AAEDgN,EAAAA,gBAAgB,GAAG;AACjB,UAAMhN,IAAI,GAAG,KAAK2P,SAAL,EAAb;AACA,SAAKoF,IAAL;AACA,WAAO,KAAKjF,UAAL,CAA+B9P,IAA/B,EAAqC,aAArC,CAAP;AACD;A;AAGDovB,EAAAA,kCAAkC,CAACC,UAAD,EAAoC;AACpE,UAAM7e,QAAQ,GAAG,KAAK5Q,KAAL,CAAWtS,KAA5B;AACA,UAAM4d,QAAQ,GAAG,KAAKtL,KAAL,CAAWsL,QAA5B;AAEA,QAAIre,GAAJ;AACA,SAAKkoB,IAAL;AACA,SAAK6yC,eAAL,CAAqB7uC,KAArB,CAA2BmtC,iBAAiB,EAA5C;AAEA,UAAMtO,yBAAyB,GAAG,KAAKh4C,KAAL,CAAW8rB,sBAA7C;AACA,UAAM6gC,6BAA6B,GAAG,KAAK3sD,KAAL,CAAWgkC,0BAAjD;AACA,SAAKhkC,KAAL,CAAW8rB,sBAAX,GAAoC,IAApC;AACA,SAAK9rB,KAAL,CAAWgkC,0BAAX,GAAwC,KAAxC;AAEA,UAAM8pB,aAAa,GAAG,KAAK9tD,KAAL,CAAWtS,KAAjC;AACA,UAAMqgE,aAAa,GAAG,KAAK/tD,KAAL,CAAWsL,QAAjC;AACA,UAAMggB,QAAQ,GAAG,EAAjB;AACA,UAAMza,mBAAmB,GAAG,IAAIs3C,gBAAJ,EAA5B;AACA,UAAMhgC,gBAAgB,GAAG;AAAEz6B,MAAAA,KAAK,EAAE;AAAT,KAAzB;AACA,QAAIw4B,KAAK,GAAG,IAAZ;AACA,QAAI8nC,WAAJ;AACA,QAAIC,kBAAJ;A;AAEA,WAAO,CAAC,KAAKh9D,KAAL,CAAW8hB,OAAE,CAACnZ,MAAd,CAAR,EAA+B;AAC7B,UAAIssB,KAAJ,EAAW;AACTA,QAAAA,KAAK,GAAG,KAAR;AACD,OAFD,MAEO;AACL,aAAKvH,MAAL,CAAY5L,OAAE,CAAClZ,KAAf,EAAsBsuB,gBAAgB,CAACz6B,KAAjB,IAA0B,IAAhD;A;AACA,YAAI,KAAKuD,KAAL,CAAW8hB,OAAE,CAACnZ,MAAd,CAAJ,EAA2B;AACzBq0D,UAAAA,kBAAkB,GAAG,KAAKjuD,KAAL,CAAWtS,KAAhC;AACA;AACD;AACF;A;AAED,UAAI,KAAKuD,KAAL,CAAW8hB,OAAE,CAACzY,QAAd,CAAJ,EAA6B;AAC3B,cAAM4zD,kBAAkB,GAAG,KAAKluD,KAAL,CAAWtS,KAAtC;AACA,cAAMygE,kBAAkB,GAAG,KAAKnuD,KAAL,CAAWsL,QAAtC;AACA0iD,QAAAA,WAAW,GAAG,KAAKhuD,KAAL,CAAWtS,KAAzB;AACA49B,QAAAA,QAAQ,CAACnmC,IAAT,CACE,KAAKykC,cAAL,CACE,KAAKo/B,gBAAL,EADF,EAEEkF,kBAFF,EAGEC,kBAHF,CADF;AAQA,aAAKrT,mBAAL;AAEA;AACD,OAfD,MAeO;AACLxvB,QAAAA,QAAQ,CAACnmC,IAAT,CACE,KAAKgkC,uBAAL,CACEtY,mBADF,EAEE,KAAK+Y,cAFP,EAGEzB,gBAHF,CADF;AAOD;AACF;A;AAED,UAAMimC,WAAW,GAAG,KAAKpuD,KAAL,CAAW0L,UAA/B;AACA,UAAM2iD,WAAW,GAAG,KAAKruD,KAAL,CAAW2L,aAA/B;AACA,SAAKgT,MAAL,CAAY5L,OAAE,CAACnZ,MAAf;AAEA,SAAKoG,KAAL,CAAW8rB,sBAAX,GAAoCksB,yBAApC;AACA,SAAKh4C,KAAL,CAAWgkC,0BAAX,GAAwC2oB,6BAAxC;AAEA,QAAI2B,SAAS,GAAG,KAAK5gD,WAAL,CAAiBkD,QAAjB,EAA2BtF,QAA3B,CAAhB;A;AACA,QACEmkB,UAAU,IACV,KAAKL,gBAAL,EADA,KAECk/B,SAAS,GAAG,KAAKn/B,UAAL,CAAgBm/B,SAAhB,CAFb,CADF,EAIE;AACA,WAAKtG,eAAL,CAAqB5B,iBAArB;AACA,WAAK4B,eAAL,CAAqB5uC,IAArB;AACA,WAAK8W,oBAAL,CAA0Bo+B,SAA1B,EAAqChjC,QAArC,EAA+C,KAA/C;AACA,aAAOgjC,SAAP;AACD;A;AACD,SAAKtG,eAAL,CAAqB5uC,IAArB;A;AAEA,QAAI,CAACkS,QAAQ,CAAC5jC,MAAd,EAAsB;AACpB,WAAKo5B,UAAL,CAAgB,KAAK9gB,KAAL,CAAWuL,YAA3B;AACD;A;AACD,QAAI0iD,kBAAJ,EAAwB,KAAKntC,UAAL,CAAgBmtC,kBAAhB;AACxB,QAAID,WAAJ,EAAiB,KAAKltC,UAAL,CAAgBktC,WAAhB;AACjB,SAAK3G,qBAAL,CAA2Bx2C,mBAA3B,EAAgD,IAAhD;AACA,QAAIsX,gBAAgB,CAACz6B,KAArB,EAA4B,KAAKozB,UAAL,CAAgBqH,gBAAgB,CAACz6B,KAAjC;AAE5B,SAAKo7D,oBAAL,CAA0Bx9B,QAA1B,EAA8D,IAA9D;A;AACA,QAAIA,QAAQ,CAAC5jC,MAAT,GAAkB,CAAtB,EAAyB;AACvBuF,MAAAA,GAAG,GAAG,KAAKygB,WAAL,CAAiBogD,aAAjB,EAAgCC,aAAhC,CAAN;AACA9gE,MAAAA,GAAG,CAACm9D,WAAJ,GAAkB9+B,QAAlB;AACA,WAAKvd,YAAL,CAAkB9gB,GAAlB,EAAuB,oBAAvB,EAA6CmhE,WAA7C,EAA0DC,WAA1D;AACD,KAJD,MAIO;AACLphE,MAAAA,GAAG,GAAGq+B,QAAQ,CAAC,CAAD,CAAd;AACD;A;AAED,QAAI,CAAC,KAAKhzB,OAAL,CAAaumD,8BAAlB,EAAkD;AAChD,WAAKpwC,QAAL,CAAcxhB,GAAd,EAAmB,eAAnB,EAAoC,IAApC;AACA,WAAKwhB,QAAL,CAAcxhB,GAAd,EAAmB,YAAnB,EAAiC2jB,QAAjC;AACA,aAAO3jB,GAAP;AACD;A;AAED,UAAM2lB,eAAe,GAAG,KAAKlF,WAAL,CAAiBkD,QAAjB,EAA2BtF,QAA3B,CAAxB;AACAsH,IAAAA,eAAe,CAACjF,UAAhB,GAA6B1gB,GAA7B;AACA,SAAKijB,UAAL,CAAgB0C,eAAhB,EAAiC,yBAAjC;AACA,WAAOA,eAAP;AACD;A;AAEDwc,EAAAA,gBAAgB,GAAY;AAC1B,WAAO,CAAC,KAAKxI,kBAAL,EAAR;AACD;A;AAEDuI,EAAAA,UAAU,CAAC/uB,IAAD,EAA8D;AACtE,QAAI,KAAK4e,GAAL,CAASjM,OAAE,CAAC3Y,KAAZ,CAAJ,EAAwB;AACtB,aAAOgG,IAAP;AACD;AACF;A;AAEDwpB,EAAAA,cAAc,CACZxpB,IADY,EAEZwQ,QAFY,EAGZtF,QAHY,EAIE;AACd,WAAOlL,IAAP;AACD;A;AAEDgtD,EAAAA,mBAAmB,GAAqC;AACtD,UAAMhtD,IAAI,GAAG,KAAK2P,SAAL,EAAb;AACA,SAAKoF,IAAL;A;AACA,QAAI,KAAKlkB,KAAL,CAAW8hB,OAAE,CAAC9Y,GAAd,CAAJ,EAAwB;AAEtB,YAAMyzD,IAAI,GAAG,KAAKjnC,gBAAL,CAAsB,KAAKzU,eAAL,CAAqB5R,IAArB,CAAtB,EAAkD,KAAlD,CAAb;AACA,WAAK+U,IAAL;AACA,YAAMo5C,QAAQ,GAAG,KAAKZ,iBAAL,CAAuBvtD,IAAvB,EAA6BstD,IAA7B,EAAmC,QAAnC,CAAjB;A;AAEA,UAAI,CAAC,KAAKr0C,KAAL,CAAWP,kBAAZ,IAAkC,CAAC,KAAKO,KAAL,CAAWT,OAAlD,EAA2D;AACzD,aAAKhN,KAAL,CAAW2iD,QAAQ,CAAC7gE,KAApB,EAA2BujB,aAAM,CAAC3H,mBAAlC;AACD;A;AAED,aAAOilD,QAAP;AACD;A;AAED,WAAO,KAAKC,QAAL,CAAcpuD,IAAd,CAAP;AACD;A;AAQDouD,EAAAA,QAAQ,CAACpuD,IAAD,EAAsC;AAC5CA,IAAAA,IAAI,CAACgR,MAAL,GAAc,KAAKg7C,eAAL,EAAd;A;AACA,QAAIhsD,IAAI,CAACgR,MAAL,CAAY3qB,IAAZ,KAAqB,QAAzB,EAAmC;AACjC,WAAKmlB,KAAL,CAAWxL,IAAI,CAACgR,MAAL,CAAY1jB,KAAvB,EAA8BujB,aAAM,CAAC5M,0BAArC;AACD,KAFD,MAEO,IAAI,KAAK6N,eAAL,CAAqB9R,IAAI,CAACgR,MAA1B,CAAJ,EAAuC;AAC5C,WAAKxF,KAAL,CAAW,KAAK5L,KAAL,CAAW0L,UAAtB,EAAkCuF,aAAM,CAACpK,qBAAzC;AACD,KAFM,MAEA,IAAI,KAAKmY,GAAL,CAASjM,OAAE,CAAC5Y,WAAZ,CAAJ,EAA8B;AACnC,WAAKyR,KAAL,CAAW,KAAK5L,KAAL,CAAWtS,KAAtB,EAA6BujB,aAAM,CAACpK,qBAApC;AACD;A;AAED,SAAKmpB,iBAAL,CAAuB5vB,IAAvB;AACA,WAAO,KAAK8P,UAAL,CAAgB9P,IAAhB,EAAsB,eAAtB,CAAP;AACD;A;AAED4vB,EAAAA,iBAAiB,CAAC5vB,IAAD,EAA8B;AAC7C,QAAI,KAAK4e,GAAL,CAASjM,OAAE,CAACpZ,MAAZ,CAAJ,EAAyB;AACvB,YAAMgV,IAAI,GAAG,KAAK8/C,aAAL,CAAmB17C,OAAE,CAACnZ,MAAtB,CAAb;AACA,WAAK4xB,gBAAL,CAAsB7c,IAAtB;AAEAvO,MAAAA,IAAI,CAACc,SAAL,GAAiByN,IAAjB;AACD,KALD,MAKO;AACLvO,MAAAA,IAAI,CAACc,SAAL,GAAiB,EAAjB;AACD;AACF;A;AAIDwtD,EAAAA,oBAAoB,CAACC,QAAD,EAAuC;AACzD,UAAMlF,IAAI,GAAG,KAAK15C,SAAL,EAAb;A;AACA,QAAI,KAAK/P,KAAL,CAAWpT,KAAX,KAAqB,IAAzB,EAA+B;AAC7B,UAAI,CAAC+hE,QAAL,EAAe;AACb,aAAK/iD,KAAL,CAAW,KAAK5L,KAAL,CAAWtS,KAAX,GAAmB,CAA9B,EAAiCujB,aAAM,CAACrM,6BAAxC;AACD;AACF;A;AACD6kD,IAAAA,IAAI,CAAC78D,KAAL,GAAa;AACXkhB,MAAAA,GAAG,EAAE,KAAK/O,KAAL,CACFjK,KADE,CACI,KAAKkL,KAAL,CAAWtS,KADf,EACsB,KAAKsS,KAAL,CAAWrS,GADjC,EAEF+D,OAFE,CAEM,QAFN,EAEgB,IAFhB,CADM;AAIXk9D,MAAAA,MAAM,EAAE,KAAK5uD,KAAL,CAAWpT;AAJR,KAAb;AAMA,SAAKuoB,IAAL;AACAs0C,IAAAA,IAAI,CAACoF,IAAL,GAAY,KAAK59D,KAAL,CAAW8hB,OAAE,CAACxY,SAAd,CAAZ;AACA,WAAO,KAAK2V,UAAL,CAAgBu5C,IAAhB,EAAsB,iBAAtB,CAAP;AACD;A;AAGD3W,EAAAA,aAAa,CAAC6b,QAAD,EAAuC;AAClD,UAAMvuD,IAAI,GAAG,KAAK2P,SAAL,EAAb;AACA,SAAKoF,IAAL;AACA/U,IAAAA,IAAI,CAACgqD,WAAL,GAAmB,EAAnB;AACA,QAAI0E,MAAM,GAAG,KAAKJ,oBAAL,CAA0BC,QAA1B,CAAb;AACAvuD,IAAAA,IAAI,CAAC2uD,MAAL,GAAc,CAACD,MAAD,CAAd;A;AACA,WAAO,CAACA,MAAM,CAACD,IAAf,EAAqB;AACnB,WAAKlwC,MAAL,CAAY5L,OAAE,CAACvY,YAAf;AACA4F,MAAAA,IAAI,CAACgqD,WAAL,CAAiBjlE,IAAjB,CAAsB,KAAK4tD,yBAAL,EAAtB;AACA,WAAKp0B,MAAL,CAAY5L,OAAE,CAACtZ,MAAf;AACA2G,MAAAA,IAAI,CAAC2uD,MAAL,CAAY5pE,IAAZ,CAAkB2pE,MAAM,GAAG,KAAKJ,oBAAL,CAA0BC,QAA1B,CAA3B;AACD;A;AACD,SAAKx5C,IAAL;AACA,WAAO,KAAKjF,UAAL,CAAgB9P,IAAhB,EAAsB,iBAAtB,CAAP;AACD;A;AAGD2yC,EAAAA,yBAAyB,GAAiB;AACxC,WAAO,KAAK9zB,eAAL,EAAP;AACD;A;AAIDgqC,EAAAA,eAAe,CACbt9B,KADa,EAEbnb,SAFa,EAGbo5C,QAHa,EAIb/4C,mBAJa,EAKV;AACH,QAAI+4C,QAAJ,EAAc;AACZ,WAAKnN,YAAL,CAAkB,gBAAlB;AACD;A;AACD,UAAMkQ,6BAA6B,GAAG,KAAK3sD,KAAL,CAAWgkC,0BAAjD;AACA,SAAKhkC,KAAL,CAAWgkC,0BAAX,GAAwC,KAAxC;AACA,UAAMgrB,QAAa,GAAGtiE,MAAM,CAACK,MAAP,CAAc,IAAd,CAAtB;AACA,QAAIm5B,KAAK,GAAG,IAAZ;AACA,UAAM9lB,IAAI,GAAG,KAAK2P,SAAL,EAAb;AAEA3P,IAAAA,IAAI,CAACa,UAAL,GAAkB,EAAlB;AACA,SAAKkU,IAAL;A;AAEA,WAAO,CAAC,KAAKlkB,KAAL,CAAW06B,KAAX,CAAR,EAA2B;AACzB,UAAIzF,KAAJ,EAAW;AACTA,QAAAA,KAAK,GAAG,KAAR;AACD,OAFD,MAEO;AACL,aAAKvH,MAAL,CAAY5L,OAAE,CAAClZ,KAAf;A;AACA,YAAI,KAAK5I,KAAL,CAAW06B,KAAX,CAAJ,EAAuB;AACrB,eAAKld,QAAL,CAAcrO,IAAd,EAAoB,eAApB,EAAqC,KAAKJ,KAAL,CAAWuL,YAAhD;AACA;AACD;AACF;A;AAED,YAAMgF,IAAI,GAAG,KAAK0+C,uBAAL,CAA6Bz+C,SAA7B,EAAwCK,mBAAxC,CAAb;A;AACA,UAAI,CAACL,SAAL,EAAgB;AAEd,aAAKm5C,UAAL,CAAgBp5C,IAAhB,EAAsBq5C,QAAtB,EAAgCoF,QAAhC,EAA0Cn+C,mBAA1C;AACD;A;AAED,UACE+4C,QAAQ,IACR,CAAC,KAAKz7C,gBAAL,CAAsBoC,IAAtB,CADD,IAEAA,IAAI,CAAC9pB,IAAL,KAAc,eAHhB,EAIE;AACA,aAAKmlB,KAAL,CAAW2E,IAAI,CAAC7iB,KAAhB,EAAuBujB,aAAM,CAAC1L,qBAA9B;AACD;A;AAGD,UAAIgL,IAAI,CAACG,SAAT,EAAoB;AAClB,aAAKjC,QAAL,CAAc8B,IAAd,EAAoB,WAApB,EAAiC,IAAjC;AACD;A;AAEDnQ,MAAAA,IAAI,CAACa,UAAL,CAAgB9b,IAAhB,CAAqBorB,IAArB;AACD;A;AAMD,SAAKvQ,KAAL,CAAWiT,WAAX,GAAyB,KAAzB;AACA,SAAKkC,IAAL;AAEA,SAAKnV,KAAL,CAAWgkC,0BAAX,GAAwC2oB,6BAAxC;AACA,QAAIlmE,IAAI,GAAG,kBAAX;A;AACA,QAAI+pB,SAAJ,EAAe;AACb/pB,MAAAA,IAAI,GAAG,eAAP;AACD,KAFD,MAEO,IAAImjE,QAAJ,EAAc;AACnBnjE,MAAAA,IAAI,GAAG,kBAAP;AACD;A;AACD,WAAO,KAAKypB,UAAL,CAAgB9P,IAAhB,EAAsB3Z,IAAtB,CAAP;AACD;A;AAKDyoE,EAAAA,wBAAwB,CAAC3+C,IAAD,EAAkC;AACxD,WACE,CAACA,IAAI,CAACN,QAAN,IACAM,IAAI,CAAC3gB,GAAL,CAASnJ,IAAT,KAAkB,YADlB,KAEC,KAAKwmD,qBAAL,MACC,KAAKh8C,KAAL,CAAW8hB,OAAE,CAAC9Z,QAAd,CADD,IAEC,KAAKhI,KAAL,CAAW8hB,OAAE,CAACnX,IAAd,CAJF,CADF;AAOD;A;AAGDqzD,EAAAA,uBAAuB,CACrBz+C,SADqB,EAErBK,mBAFqB,EAG6B;AAClD,QAAIsnC,UAAU,GAAG,EAAjB;A;AACA,QAAI,KAAKlnD,KAAL,CAAW8hB,OAAE,CAACtY,EAAd,CAAJ,EAAuB;AACrB,UAAI,KAAK4E,SAAL,CAAe,YAAf,CAAJ,EAAkC;AAChC,aAAKuM,KAAL,CAAW,KAAK5L,KAAL,CAAWtS,KAAtB,EAA6BujB,aAAM,CAAC9G,4BAApC;AACD;A;AAID,aAAO,KAAKlZ,KAAL,CAAW8hB,OAAE,CAACtY,EAAd,CAAP,EAA0B;AACxB09C,QAAAA,UAAU,CAAChzD,IAAX,CAAgB,KAAKkkE,cAAL,EAAhB;AACD;AACF;A;AAED,UAAM94C,IAAI,GAAG,KAAKR,SAAL,EAAb;AACA,QAAIf,WAAW,GAAG,KAAlB;AACA,QAAIf,OAAO,GAAG,KAAd;AACA,QAAIwC,UAAU,GAAG,KAAjB;AACA,QAAIG,QAAJ;AACA,QAAItF,QAAJ;A;AAEA,QAAI,KAAKra,KAAL,CAAW8hB,OAAE,CAACzY,QAAd,CAAJ,EAA6B;AAC3B,UAAI69C,UAAU,CAACzwD,MAAf,EAAuB,KAAKo5B,UAAL;A;AACvB,UAAItQ,SAAJ,EAAe;AACb,aAAK2E,IAAL;AAEA5E,QAAAA,IAAI,CAACgV,QAAL,GAAgB,KAAKhG,eAAL,EAAhB;AACA,aAAKu7B,mBAAL;AACA,eAAO,KAAK5qC,UAAL,CAAgBK,IAAhB,EAAsB,aAAtB,CAAP;AACD;A;AAED,aAAO,KAAKw4C,WAAL,EAAP;AACD;A;AAED,QAAI5Q,UAAU,CAACzwD,MAAf,EAAuB;AACrB6oB,MAAAA,IAAI,CAAC4nC,UAAL,GAAkBA,UAAlB;AACAA,MAAAA,UAAU,GAAG,EAAb;AACD;A;AAED5nC,IAAAA,IAAI,CAAClC,MAAL,GAAc,KAAd;A;AAEA,QAAImC,SAAS,IAAIK,mBAAjB,EAAsC;AACpCD,MAAAA,QAAQ,GAAG,KAAK5Q,KAAL,CAAWtS,KAAtB;AACA4d,MAAAA,QAAQ,GAAG,KAAKtL,KAAL,CAAWsL,QAAtB;AACD;A;AAED,QAAI,CAACkF,SAAL,EAAgB;AACdxB,MAAAA,WAAW,GAAG,KAAKgQ,GAAL,CAASjM,OAAE,CAACnX,IAAZ,CAAd;AACD;A;AAED,UAAMyoC,WAAW,GAAG,KAAKrkC,KAAL,CAAWqkC,WAA/B;AACA,UAAMz0C,GAAG,GAAG,KAAK68B,iBAAL,CAAuBlc,IAAvB,EAAwD,KAAxD,CAAZ;A;AAEA,QACE,CAACC,SAAD,IACA,CAACxB,WADD,IAEA,CAACq1B,WAFD,IAGA,KAAK6qB,wBAAL,CAA8B3+C,IAA9B,CAJF,EAKE;AACA,YAAM4+C,OAAO,GAAGv/D,GAAG,CAACf,IAApB;A;AAGA,UAAIsgE,OAAO,KAAK,OAAZ,IAAuB,CAAC,KAAK37C,qBAAL,EAA5B,EAA0D;AACxDvF,QAAAA,OAAO,GAAG,IAAV;AACAe,QAAAA,WAAW,GAAG,KAAKgQ,GAAL,CAASjM,OAAE,CAACnX,IAAZ,CAAd;AACA,aAAK6wB,iBAAL,CAAuBlc,IAAvB,EAAwD,KAAxD;AACD;A;AAGD,UAAI4+C,OAAO,KAAK,KAAZ,IAAqBA,OAAO,KAAK,KAArC,EAA4C;AAC1C1+C,QAAAA,UAAU,GAAG,IAAb;AACAF,QAAAA,IAAI,CAACP,IAAL,GAAYm/C,OAAZ;A;AACA,YAAI,KAAKl+D,KAAL,CAAW8hB,OAAE,CAACnX,IAAd,CAAJ,EAAyB;AACvBoT,UAAAA,WAAW,GAAG,IAAd;AACA,eAAKpD,KAAL,CAAW,KAAK5L,KAAL,CAAWqL,GAAtB,EAA2B4F,aAAM,CAACvP,mBAAlC,EAAuDytD,OAAvD;AACA,eAAKh6C,IAAL;AACD;A;AACD,aAAKsX,iBAAL,CAAuBlc,IAAvB,EAAwD,KAAxD;AACD;AACF;A;AAED,SAAKoc,iBAAL,CACEpc,IADF,EAEEK,QAFF,EAGEtF,QAHF,EAIE0D,WAJF,EAKEf,OALF,EAMEuC,SANF,EAOEC,UAPF,EAQEI,mBARF;AAWA,WAAON,IAAP;AACD;A;AAED0qC,EAAAA,iCAAiC,CAC/B5sC,MAD+B,EAEvB;AACR,WAAOA,MAAM,CAAC2B,IAAP,KAAgB,KAAhB,GAAwB,CAAxB,GAA4B,CAAnC;AACD;A;AAGD5B,EAAAA,4BAA4B,CAACC,MAAD,EAAyC;AACnE,WAAOA,MAAM,CAACxC,MAAd;AACD;A;AAID2gB,EAAAA,uBAAuB,CAACne,MAAD,EAA+C;AAAA;A;AACpE,UAAMsX,UAAU,GAAG,KAAKs1B,iCAAL,CAAuC5sC,MAAvC,CAAnB;AACA,UAAMxC,MAAM,GAAG,KAAKuC,4BAAL,CAAkCC,MAAlC,CAAf;AAEA,UAAM3gB,KAAK,GAAG2gB,MAAM,CAAC3gB,KAArB;A;AAEA,QAAIme,MAAM,CAACnkB,MAAP,KAAkBi+B,UAAtB,EAAkC;AAChC,UAAItX,MAAM,CAAC2B,IAAP,KAAgB,KAApB,EAA2B;AACzB,aAAKpE,KAAL,CAAWle,KAAX,EAAkBujB,aAAM,CAAC/O,cAAzB;AACD,OAFD,MAEO;AACL,aAAK0J,KAAL,CAAWle,KAAX,EAAkBujB,aAAM,CAAC9O,cAAzB;AACD;AACF;A;AAED,QACEkM,MAAM,CAAC2B,IAAP,KAAgB,KAAhB,IACA,YAAAnE,MAAM,CAACA,MAAM,CAACnkB,MAAP,GAAgB,CAAjB,CAAN,6BAA2BjB,IAA3B,MAAoC,aAFtC,EAGE;AACA,WAAKmlB,KAAL,CAAWle,KAAX,EAAkBujB,aAAM,CAAC7O,sBAAzB;AACD;AACF;A;AAGDkO,EAAAA,iBAAiB,CACfC,IADe,EAEfvB,WAFe,EAGff,OAHe,EAIfuC,SAJe,EAKfC,UALe,EAME;AACjB,QAAIA,UAAJ,EAAgB;AAEd,WAAKtB,WAAL,CACEoB,IADF,EAIEvB,WAJF,EAKgB,KALhB,EAMsB,KANtB,EAOE,KAPF,EAQE,cARF;AAUA,WAAKwd,uBAAL,CAA6Bjc,IAA7B;AACA,aAAOA,IAAP;AACD;A;AAED,QAAItC,OAAO,IAAIe,WAAX,IAA0B,KAAK/d,KAAL,CAAW8hB,OAAE,CAACpZ,MAAd,CAA9B,EAAqD;AACnD,UAAI6W,SAAJ,EAAe,KAAKsQ,UAAL;AACfvQ,MAAAA,IAAI,CAACP,IAAL,GAAY,QAAZ;AACAO,MAAAA,IAAI,CAAClC,MAAL,GAAc,IAAd;AACA,aAAO,KAAKc,WAAL,CACLoB,IADK,EAELvB,WAFK,EAGLf,OAHK,EAIe,KAJf,EAKL,KALK,EAML,cANK,CAAP;AAQD;AACF;A;AAID0C,EAAAA,mBAAmB,CACjBJ,IADiB,EAEjBK,QAFiB,EAGjBtF,QAHiB,EAIjBkF,SAJiB,EAKjBK,mBALiB,EAME;AACnBN,IAAAA,IAAI,CAACG,SAAL,GAAiB,KAAjB;A;AAEA,QAAI,KAAKsO,GAAL,CAASjM,OAAE,CAAChZ,KAAZ,CAAJ,EAAwB;AACtBwW,MAAAA,IAAI,CAAC3jB,KAAL,GAAa4jB,SAAS,GAClB,KAAKqc,iBAAL,CAAuB,KAAK7sB,KAAL,CAAWtS,KAAlC,EAAyC,KAAKsS,KAAL,CAAWsL,QAApD,CADkB,GAElB,KAAK6d,uBAAL,CAA6BtY,mBAA7B,CAFJ;AAIA,aAAO,KAAKX,UAAL,CAAgBK,IAAhB,EAAsB,gBAAtB,CAAP;AACD;A;AAED,QAAI,CAACA,IAAI,CAACN,QAAN,IAAkBM,IAAI,CAAC3gB,GAAL,CAASnJ,IAAT,KAAkB,YAAxC,EAAsD;AAKpD,WAAKunC,iBAAL,CAAuBzd,IAAI,CAAC3gB,GAAL,CAASf,IAAhC,EAAsC0hB,IAAI,CAAC3gB,GAAL,CAASlC,KAA/C,EAAsD,IAAtD,EAA4D,KAA5D;A;AAEA,UAAI8iB,SAAJ,EAAe;AACbD,QAAAA,IAAI,CAAC3jB,KAAL,GAAa,KAAKigC,iBAAL,CACXjc,QADW,EAEXtF,QAFW,EAGXiF,IAAI,CAAC3gB,GAAL,CAASi+B,OAAT,EAHW,CAAb;AAKD,OAND,MAMO,IAAI,KAAK58B,KAAL,CAAW8hB,OAAE,CAACnY,EAAd,KAAqBiW,mBAAzB,EAA8C;AACnD,YAAIA,mBAAmB,CAAC02C,eAApB,KAAwC,CAAC,CAA7C,EAAgD;AAC9C12C,UAAAA,mBAAmB,CAAC02C,eAApB,GAAsC,KAAKvnD,KAAL,CAAWtS,KAAjD;AACD;A;AACD6iB,QAAAA,IAAI,CAAC3jB,KAAL,GAAa,KAAKigC,iBAAL,CACXjc,QADW,EAEXtF,QAFW,EAGXiF,IAAI,CAAC3gB,GAAL,CAASi+B,OAAT,EAHW,CAAb;AAKD,OATM,MASA;AACLtd,QAAAA,IAAI,CAAC3jB,KAAL,GAAa2jB,IAAI,CAAC3gB,GAAL,CAASi+B,OAAT,EAAb;AACD;A;AACDtd,MAAAA,IAAI,CAACG,SAAL,GAAiB,IAAjB;AAEA,aAAO,KAAKR,UAAL,CAAgBK,IAAhB,EAAsB,gBAAtB,CAAP;AACD;AACF;A;AAEDoc,EAAAA,iBAAiB,CACfpc,IADe,EAEfK,QAFe,EAGftF,QAHe,EAIf0D,WAJe,EAKff,OALe,EAMfuC,SANe,EAOfC,UAPe,EAQfI,mBARe,EAST;AACN,UAAMzQ,IAAI,GACR,KAAKkQ,iBAAL,CACEC,IADF,EAEEvB,WAFF,EAGEf,OAHF,EAIEuC,SAJF,EAKEC,UALF,KAOA,KAAKE,mBAAL,CACEJ,IADF,EAEEK,QAFF,EAGEtF,QAHF,EAIEkF,SAJF,EAKEK,mBALF,CARF;AAgBA,QAAI,CAACzQ,IAAL,EAAW,KAAK0gB,UAAL;AAGX,WAAO1gB,IAAP;AACD;A;AAEDqsB,EAAAA,iBAAiB,CACflc,IADe,EAEfmc,oBAFe,EAGc;AAC7B,QAAI,KAAK1N,GAAL,CAASjM,OAAE,CAAC9Z,QAAZ,CAAJ,EAA2B;AACxBsX,MAAAA,IAAD,CAA4CN,QAA5C,GAAuD,IAAvD;AACAM,MAAAA,IAAI,CAAC3gB,GAAL,GAAW,KAAKu5B,uBAAL,EAAX;AACA,WAAKxK,MAAL,CAAY5L,OAAE,CAAC3Z,QAAf;AACD,KAJD,MAIO;AACL,YAAMg2D,iBAAiB,GAAG,KAAKpvD,KAAL,CAAWyjC,cAArC;AACA,WAAKzjC,KAAL,CAAWyjC,cAAX,GAA4B,IAA5B;AAEA,YAAMh9C,IAAI,GAAG,KAAKuZ,KAAL,CAAWvZ,IAAxB;AACC8pB,MAAAA,IAAD,CAAmB3gB,GAAnB,GACEnJ,IAAI,KAAKssB,OAAE,CAACpa,GAAZ,IACAlS,IAAI,KAAKssB,OAAE,CAAC/hB,MADZ,IAEAvK,IAAI,KAAKssB,OAAE,CAACna,MAFZ,IAGAnS,IAAI,KAAKssB,OAAE,CAACla,OAHZ,GAII,KAAKmoB,aAAL,EAJJ,GAKI,KAAK3R,qBAAL,CAA2Bqd,oBAA3B,CANN;A;AAQA,UAAIjmC,IAAI,KAAKssB,OAAE,CAACha,WAAhB,EAA6B;AAE3BwX,QAAAA,IAAI,CAACN,QAAL,GAAgB,KAAhB;AACD;A;AAED,WAAKjQ,KAAL,CAAWyjC,cAAX,GAA4B2rB,iBAA5B;AACD;A;AAED,WAAO7+C,IAAI,CAAC3gB,GAAZ;AACD;A;AAIDoe,EAAAA,YAAY,CAAC5N,IAAD,EAAuC6N,OAAvC,EAAgE;AAC1E7N,IAAAA,IAAI,CAAChZ,EAAL,GAAU,IAAV;AACAgZ,IAAAA,IAAI,CAACivD,SAAL,GAAiB,KAAjB;AACAjvD,IAAAA,IAAI,CAAC6uB,KAAL,GAAa,CAAC,CAAChhB,OAAf;AACD;A;AAIDkB,EAAAA,WAAW,CACT/O,IADS,EAET4O,WAFS,EAGTf,OAHS,EAITgB,aAJS,EAKTW,gBALS,EAMTnpB,IANS,EAOTopB,YAAqB,GAAG,KAPf,EAQN;AACH,SAAK7B,YAAL,CAAkB5N,IAAlB,EAAwB6N,OAAxB;AACA7N,IAAAA,IAAI,CAACivD,SAAL,GAAiB,CAAC,CAACrgD,WAAnB;AACA,UAAMmf,cAAc,GAAGlf,aAAvB;AACA,SAAKoK,KAAL,CAAWF,KAAX,CACE7D,cAAc,GACZG,WADF,IAEG5F,YAAY,GAAG8F,WAAH,GAAiB,CAFhC,KAGG/F,gBAAgB,GAAG8F,kBAAH,GAAwB,CAH3C,CADF;AAMA,SAAK6gC,SAAL,CAAep9B,KAAf,CAAqBqwB,aAAa,CAACv7B,OAAD,EAAU7N,IAAI,CAACivD,SAAf,CAAlC;AACA,SAAKnhC,mBAAL,CAA0B9tB,IAA1B,EAAsC+tB,cAAtC;AACA,SAAK1G,0BAAL,CAAgCrnB,IAAhC,EAAsC3Z,IAAtC,EAA4C,IAA5C;AACA,SAAK8vD,SAAL,CAAen9B,IAAf;AACA,SAAKC,KAAL,CAAWD,IAAX;AAEA,WAAOhZ,IAAP;AACD;A;AAKDsrB,EAAAA,cAAc,CACZC,KADY,EAEZC,YAFY,EAGZC,OAHY,EAIZhb,mBAJY,EAK2B;AACvC,QAAIgb,OAAJ,EAAa;AACX,WAAK4wB,YAAL,CAAkB,gBAAlB;AACD;A;AACD,UAAMkQ,6BAA6B,GAAG,KAAK3sD,KAAL,CAAWgkC,0BAAjD;AACA,SAAKhkC,KAAL,CAAWgkC,0BAAX,GAAwC,KAAxC;AACA,UAAM5jC,IAAI,GAAG,KAAK2P,SAAL,EAAb;AACA,SAAKoF,IAAL;AACA/U,IAAAA,IAAI,CAACC,QAAL,GAAgB,KAAKouD,aAAL,CACd9iC,KADc,EAEG,CAACE,OAFJ,EAGdhb,mBAHc,EAIdzQ,IAJc,CAAhB;AAMA,SAAKJ,KAAL,CAAWgkC,0BAAX,GAAwC2oB,6BAAxC;AACA,WAAO,KAAKz8C,UAAL,CACL9P,IADK,EAELyrB,OAAO,GAAG,iBAAH,GAAuB,iBAFzB,CAAP;AAID;A;AAKDqE,EAAAA,oBAAoB,CAClB9vB,IADkB,EAElByL,MAFkB,EAGlBoC,OAHkB,EAIlBsd,gBAJkB,EAKS;AAC3B,SAAKlS,KAAL,CAAWF,KAAX,CAAiB7D,cAAc,GAAGC,WAAlC;AACA,QAAI7I,KAAK,GAAG88B,aAAa,CAACv7B,OAAD,EAAU,KAAV,CAAzB;A;AAEA,QAAI,CAAC,KAAKhd,KAAL,CAAW8hB,OAAE,CAAC9Z,QAAd,CAAD,IAA4B,KAAKs9C,SAAL,CAAehN,KAA/C,EAAsD;AACpD78B,MAAAA,KAAK,IAAIs8B,QAAT;AACD;A;AACD,SAAKuN,SAAL,CAAep9B,KAAf,CAAqBzM,KAArB;AACA,SAAKsB,YAAL,CAAkB5N,IAAlB,EAAwB6N,OAAxB;AACA,UAAM+pC,yBAAyB,GAAG,KAAKh4C,KAAL,CAAW8rB,sBAA7C;A;AAEA,QAAIjgB,MAAJ,EAAY;AACV,WAAK7L,KAAL,CAAW8rB,sBAAX,GAAoC,IAApC;AACA,WAAKuD,0BAAL,CAAgCjvB,IAAhC,EAAsCyL,MAAtC,EAA8C0f,gBAA9C;AACD;A;AACD,SAAKvrB,KAAL,CAAW8rB,sBAAX,GAAoC,KAApC;AACA,SAAKrc,iBAAL,CAAuBrP,IAAvB,EAA6B,IAA7B;AAEA,SAAKm2C,SAAL,CAAen9B,IAAf;AACA,SAAKC,KAAL,CAAWD,IAAX;AACA,SAAKpZ,KAAL,CAAW8rB,sBAAX,GAAoCksB,yBAApC;AAEA,WAAO,KAAK9nC,UAAL,CAAgB9P,IAAhB,EAAsB,yBAAtB,CAAP;AACD;A;AAEDivB,EAAAA,0BAA0B,CACxBjvB,IADwB,EAExByL,MAFwB,EAGxB0f,gBAHwB,EAIlB;AACNnrB,IAAAA,IAAI,CAACyL,MAAL,GAAc,KAAK4d,gBAAL,CAAsB5d,MAAtB,EAA8B0f,gBAA9B,EAAgD,KAAhD,CAAd;AACD;A;AAED9D,EAAAA,0BAA0B,CACxBrnB,IADwB,EAExB3Z,IAFwB,EAGxBkpB,QAAkB,GAAG,KAHG,EAIlB;AAEN,SAAKF,iBAAL,CAAuBrP,IAAvB,EAA6B,KAA7B,EAAoCuP,QAApC;AACA,SAAKO,UAAL,CAAgB9P,IAAhB,EAAsB3Z,IAAtB;AACD;A;AAGDgpB,EAAAA,iBAAiB,CACfrP,IADe,EAEfsP,eAFe,EAGfC,QAAkB,GAAG,KAHN,EAIT;AACN,UAAM2/C,YAAY,GAAG5/C,eAAe,IAAI,CAAC,KAAKze,KAAL,CAAW8hB,OAAE,CAACzZ,MAAd,CAAzC;AACA,SAAK0uD,eAAL,CAAqB7uC,KAArB,CAA2BqtC,kBAAkB,EAA7C;A;AAEA,QAAI8I,YAAJ,EAAkB;AAEhBlvD,MAAAA,IAAI,CAACzX,IAAL,GAAY,KAAKsgC,gBAAL,EAAZ;AACA,WAAKU,WAAL,CAAiBvpB,IAAjB,EAAuB,KAAvB,EAA8BsP,eAA9B,EAA+C,KAA/C;AACD,KAJD,MAIO;AACL,YAAM6sC,SAAS,GAAG,KAAKv8C,KAAL,CAAWqU,MAA7B;AAGA,YAAMqzC,SAAS,GAAG,KAAK1nD,KAAL,CAAWikC,MAA7B;AACA,WAAKjkC,KAAL,CAAWikC,MAAX,GAAoB,EAApB;AAIA,WAAKsS,SAAL,CAAep9B,KAAf,CAAqB,KAAKo9B,SAAL,CAAepN,YAAf,KAAgCJ,YAArD;AACA3oC,MAAAA,IAAI,CAACzX,IAAL,GAAY,KAAKyzD,UAAL,CACV,IADU,EAEV,KAFU,EAITmT,sBAAD,IAAqC;AACnC,cAAMC,SAAS,GAAG,CAAC,KAAKC,iBAAL,CAAuBrvD,IAAI,CAACyL,MAA5B,CAAnB;A;AAEA,YAAI0jD,sBAAsB,IAAIC,SAA9B,EAAyC;AAEvC,gBAAME,QAAQ,GAEZ,CAACtvD,IAAI,CAAC4P,IAAL,KAAc,QAAd,IAA0B5P,IAAI,CAAC4P,IAAL,KAAc,aAAzC,KAEA,CAAC,CAAC5P,IAAI,CAACxQ,GAFP,GAGIwQ,IAAI,CAACxQ,GAAL,CAASjC,GAHb,GAIIyS,IAAI,CAAC1S,KANX;AAOA,eAAKke,KAAL,CAAW8jD,QAAX,EAAqBz+C,aAAM,CAACjN,4BAA5B;AACD;A;AAED,cAAMwlD,iBAAiB,GAAG,CAACjN,SAAD,IAAc,KAAKv8C,KAAL,CAAWqU,MAAnD;AAIA,aAAKsV,WAAL,CACEvpB,IADF,EAEE,CAAC,KAAKJ,KAAL,CAAWqU,MAAZ,IAAsB,CAAC3E,eAAvB,IAA0C,CAACC,QAA3C,IAAuD,CAAC6/C,SAF1D,EAGE9/C,eAHF,EAIE85C,iBAJF;A;AAQA,YAAI,KAAKxpD,KAAL,CAAWqU,MAAX,IAAqBjU,IAAI,CAAChZ,EAA9B,EAAkC;AAChC,eAAK2kC,SAAL,CACE3rB,IAAI,CAAChZ,EADP,EAEE,eAFF,EAGE+vB,YAHF,EAIE9xB,SAJF,EAKEA,SALF,EAMEmkE,iBANF;AAQD;AACF,OAzCS,CAAZ;AA2CA,WAAKjT,SAAL,CAAen9B,IAAf;AACA,WAAK4uC,eAAL,CAAqB5uC,IAArB;AACA,WAAKpZ,KAAL,CAAWikC,MAAX,GAAoByjB,SAApB;AACD;AACF;A;AAED+H,EAAAA,iBAAiB,CACf5jD,MADe,EAEN;AACT,SAAK,IAAIpkB,CAAC,GAAG,CAAR,EAAW06D,GAAG,GAAGt2C,MAAM,CAACnkB,MAA7B,EAAqCD,CAAC,GAAG06D,GAAzC,EAA8C16D,CAAC,EAA/C,EAAmD;AACjD,UAAIokB,MAAM,CAACpkB,CAAD,CAAN,CAAUhB,IAAV,KAAmB,YAAvB,EAAqC,OAAO,KAAP;AACtC;A;AACD,WAAO,IAAP;AACD;A;AAEDkjC,EAAAA,WAAW,CACTvpB,IADS,EAETkvB,eAFS,EAITC,eAJS,EAKTi6B,iBAA2B,GAAG,IALrB,EAMH;AACN,UAAMF,YAAY,GAAG,IAAI/0C,GAAJ,EAArB;A;AACA,SAAK,MAAM2S,KAAX,IAAoB9mB,IAAI,CAACyL,MAAzB,EAAiC;AAC/B,WAAKkgB,SAAL,CACE7E,KADF,EAEE,yBAFF,EAGEtQ,QAHF,EAIE0Y,eAAe,GAAG,IAAH,GAAUg6B,YAJ3B,EAKEjkE,SALF,EAMEmkE,iBANF;AAQD;AACF;A;AAQDiF,EAAAA,aAAa,CACX9iC,KADW,EAEXw9B,UAFW,EAGXt4C,mBAHW,EAIX67C,YAJW,EAKoB;AAC/B,UAAMtD,IAAI,GAAG,EAAb;AACA,QAAIljC,KAAK,GAAG,IAAZ;A;AAEA,WAAO,CAAC,KAAKlH,GAAL,CAAS2M,KAAT,CAAR,EAAyB;AACvB,UAAIzF,KAAJ,EAAW;AACTA,QAAAA,KAAK,GAAG,KAAR;AACD,OAFD,MAEO;AACL,aAAKvH,MAAL,CAAY5L,OAAE,CAAClZ,KAAf;A;AACA,YAAI,KAAK5I,KAAL,CAAW06B,KAAX,CAAJ,EAAuB;AACrB,cAAI+gC,YAAJ,EAAkB;AAChB,iBAAKj+C,QAAL,CACEi+C,YADF,EAEE,eAFF,EAGE,KAAK1sD,KAAL,CAAWuL,YAHb;AAKD;A;AACD,eAAK4J,IAAL;AACA;AACD;AACF;A;AAEDi0C,MAAAA,IAAI,CAACjkE,IAAL,CAAU,KAAKynE,iBAAL,CAAuBzD,UAAvB,EAAmCt4C,mBAAnC,CAAV;AACD;A;AACD,WAAOu4C,IAAP;AACD;A;AAEDwD,EAAAA,iBAAiB,CACfzD,UADe,EAEft4C,mBAFe,EAGfsX,gBAHe,EAIfskC,gBAJe,EAKA;AACf,QAAIpU,GAAJ;A;AACA,QAAI,KAAKpnD,KAAL,CAAW8hB,OAAE,CAAClZ,KAAd,CAAJ,EAA0B;AACxB,UAAI,CAACsvD,UAAL,EAAiB;AACf,aAAKv9C,KAAL,CAAW,KAAK5L,KAAL,CAAWqL,GAAtB,EAA2B4F,aAAM,CAACtH,eAAlC,EAAmD,GAAnD;AACD;A;AACD0uC,MAAAA,GAAG,GAAG,IAAN;AACD,KALD,MAKO,IAAI,KAAKpnD,KAAL,CAAW8hB,OAAE,CAACzY,QAAd,CAAJ,EAA6B;AAClC,YAAM4zD,kBAAkB,GAAG,KAAKluD,KAAL,CAAWtS,KAAtC;AACA,YAAMygE,kBAAkB,GAAG,KAAKnuD,KAAL,CAAWsL,QAAtC;AACA+sC,MAAAA,GAAG,GAAG,KAAKzuB,cAAL,CACJ,KAAKm/B,WAAL,CAAiBl4C,mBAAjB,EAAsCsX,gBAAtC,CADI,EAEJ+lC,kBAFI,EAGJC,kBAHI,CAAN;AAKD,KARM,MAQA,IAAI,KAAKl9D,KAAL,CAAW8hB,OAAE,CAAC7Y,QAAd,CAAJ,EAA6B;AAClC,WAAKuiD,YAAL,CAAkB,oBAAlB;A;AACA,UAAI,CAACgQ,gBAAL,EAAuB;AACrB,aAAK7gD,KAAL,CAAW,KAAK5L,KAAL,CAAWtS,KAAtB,EAA6BujB,aAAM,CAAClI,6BAApC;AACD;A;AACD,YAAM3I,IAAI,GAAG,KAAK2P,SAAL,EAAb;AACA,WAAKoF,IAAL;AACAkjC,MAAAA,GAAG,GAAG,KAAKnoC,UAAL,CAAgB9P,IAAhB,EAAsB,qBAAtB,CAAN;AACD,KARM,MAQA;AACLi4C,MAAAA,GAAG,GAAG,KAAKlvB,uBAAL,CACJtY,mBADI,EAEJ,KAAK+Y,cAFD,EAGJzB,gBAHI,CAAN;AAKD;A;AACD,WAAOkwB,GAAP;AACD;A;AAQD94B,EAAAA,eAAe,CAACqD,OAAD,EAAkC;AAC/C,UAAMxiB,IAAI,GAAG,KAAK2P,SAAL,EAAb;AACA,UAAMlhB,IAAI,GAAG,KAAK6gD,mBAAL,CAAyBtvC,IAAI,CAAC1S,KAA9B,EAAqCk1B,OAArC,CAAb;AAEA,WAAO,KAAK6D,gBAAL,CAAsBrmB,IAAtB,EAA4BvR,IAA5B,CAAP;AACD;A;AAED43B,EAAAA,gBAAgB,CAACrmB,IAAD,EAAqBvR,IAArB,EAAiD;AAC/DuR,IAAAA,IAAI,CAACvR,IAAL,GAAYA,IAAZ;AACAuR,IAAAA,IAAI,CAACL,GAAL,CAASlB,cAAT,GAA0BhQ,IAA1B;AAEA,WAAO,KAAKqhB,UAAL,CAAgB9P,IAAhB,EAAsB,YAAtB,CAAP;AACD;A;AAEDsvC,EAAAA,mBAAmB,CAACrkC,GAAD,EAAcuX,OAAd,EAAyC;AAC1D,QAAI/zB,IAAJ;AAEA,UAAM;AAAEnB,MAAAA,KAAF;AAASjH,MAAAA;AAAT,QAAkB,KAAKuZ,KAA7B;A;AAEA,QAAIvZ,IAAI,KAAKssB,OAAE,CAAClkB,IAAhB,EAAsB;AACpBA,MAAAA,IAAI,GAAG,KAAKmR,KAAL,CAAWpT,KAAlB;AACD,KAFD,MAEO,IAAInG,IAAI,CAACsR,OAAT,EAAkB;AACvBlJ,MAAAA,IAAI,GAAGpI,IAAI,CAACsR,OAAZ;AAKA,YAAMob,UAAU,GAAG,KAAKA,UAAL,EAAnB;A;AACA,UACE,CAAC1sB,IAAI,KAAKssB,OAAE,CAACzV,MAAZ,IAAsB7W,IAAI,KAAKssB,OAAE,CAACtW,SAAnC,MACC0W,UAAU,KAAKixB,KAAE,CAACtxB,iBAAlB,IACCK,UAAU,KAAKixB,KAAE,CAACvxB,kBAFpB,CADF,EAIE;AACA,aAAK7S,KAAL,CAAWgT,OAAX,CAAmBhS,GAAnB;AACD;AACF,KAdM,MAcA;AACL,YAAM,KAAK8f,UAAL,EAAN;AACD;A;AAED,QAAI8B,OAAJ,EAAa;AAGX,WAAK5iB,KAAL,CAAWvZ,IAAX,GAAkBssB,OAAE,CAAClkB,IAArB;AACD,KAJD,MAIO;AACL,WAAKm/B,iBAAL,CAAuBn/B,IAAvB,EAA6BnB,KAA7B,EAAoC,CAAC,CAACjH,IAAI,CAACsR,OAA3C,EAAoD,KAApD;AACD;A;AAED,SAAKod,IAAL;AAEA,WAAOtmB,IAAP;AACD;A;AAEDm/B,EAAAA,iBAAiB,CACfrZ,IADe,EAEfrJ,QAFe,EAGfguC,aAHe,EAIfnuB,SAJe,EAKT;AACN,QAAI,KAAKorB,SAAL,CAAelN,QAAf,IAA2B10B,IAAI,KAAK,OAAxC,EAAiD;AAC/C,WAAK/I,KAAL,CAAWN,QAAX,EAAqB2F,aAAM,CAACvG,sBAA5B;AACA;AACD;A;AAED,QAAIiK,IAAI,KAAK,OAAb,EAAsB;AACpB,UAAI,KAAK4hC,SAAL,CAAenN,QAAnB,EAA6B;AAC3B,aAAKx9B,KAAL,CAAWN,QAAX,EAAqB2F,aAAM,CAACpP,sBAA5B;AACA;AACD,OAHD,MAGO,IAAI,KAAKwX,KAAL,CAAWR,aAAX,IAA4B,CAAC,KAAKQ,KAAL,CAAWP,kBAA5C,EAAgE;AACrE,aAAKlN,KAAL,CAAWN,QAAX,EAAqB2F,aAAM,CAACnP,mCAA5B;AACA;AACD,OAHM,MAGA;AACL,aAAKkmD,eAAL,CAAqB7B,+BAArB,CACE76C,QADF,EAEE2F,aAAM,CAACpP,sBAFT;AAID;AACF;A;AAED,QACE,KAAKwX,KAAL,CAAWT,OAAX,IACA,CAAC,KAAKS,KAAL,CAAWP,kBADZ,IAEAnE,IAAI,KAAK,WAHX,EAIE;AACA,WAAK/I,KAAL,CAAWN,QAAX,EAAqB2F,aAAM,CAACtP,gBAA5B;AACA;AACD;A;AACD,QAAI23C,aAAa,IAAItkC,SAAS,CAACL,IAAD,CAA9B,EAAsC;AACpC,WAAK/I,KAAL,CAAWN,QAAX,EAAqB2F,aAAM,CAAC9H,iBAA5B,EAA+CwL,IAA/C;AACA;AACD;A;AAED,UAAMg7C,YAAY,GAAG,CAAC,KAAK3vD,KAAL,CAAWqU,MAAZ,GACjBK,cADiB,GAEjByW,SAAS,GACTpW,wBADS,GAETF,oBAJJ;A;AAMA,QAAI86C,YAAY,CAACh7C,IAAD,EAAO,KAAKC,QAAZ,CAAhB,EAAuC;AACrC,WAAKhJ,KAAL,CAAWN,QAAX,EAAqB2F,aAAM,CAACxH,sBAA5B,EAAoDkL,IAApD;AACD;AACF;A;AAED62C,EAAAA,cAAc,GAAY;AACxB,QAAI,KAAKjV,SAAL,CAAenN,QAAnB,EAA6B,OAAO,IAAP;A;AAC7B,QAAI,KAAK9wC,OAAL,CAAagmD,yBAAb,IAA0C,CAAC,KAAKjlC,KAAL,CAAWb,UAA1D,EAAsE;AACpE,aAAO,IAAP;AACD;A;AACD,WAAO,KAAP;AACD;A;AAIDizC,EAAAA,UAAU,CAAC76C,QAAD,EAAmBtF,QAAnB,EAA0D;AAClE,UAAMlL,IAAI,GAAG,KAAKsN,WAAL,CAAiBkD,QAAjB,EAA2BtF,QAA3B,CAAb;AAEA,SAAK08C,eAAL,CAAqB/B,+BAArB,CACE7lD,IAAI,CAAC1S,KADP,EAEEujB,aAAM,CAAClP,8BAFT;A;AAKA,QAAI,KAAKid,GAAL,CAASjM,OAAE,CAACnX,IAAZ,CAAJ,EAAuB;AACrB,WAAKgQ,KAAL,CAAWxL,IAAI,CAAC1S,KAAhB,EAAuBujB,aAAM,CAACrK,iBAA9B;AACD;A;AAED,QAAI,CAAC,KAAKyS,KAAL,CAAWb,UAAZ,IAA0B,CAAC,KAAKlgB,OAAL,CAAagmD,yBAA5C,EAAuE;AACrE,UAAI,KAAKuN,gBAAL,EAAJ,EAA6B;AAC3B,aAAKzsD,2BAAL,GAAmC,IAAnC;AACD,OAFD,MAEO;AACL,aAAKD,iBAAL,GAAyB,IAAzB;AACD;AACF;A;AAED,QAAI,CAAC,KAAKa,KAAL,CAAW+jC,SAAhB,EAA2B;AACzB3jC,MAAAA,IAAI,CAACmlB,QAAL,GAAgB,KAAK6tB,eAAL,CAAqB,IAArB,EAA2B,IAA3B,CAAhB;AACD;A;AAED,WAAO,KAAKljC,UAAL,CAAgB9P,IAAhB,EAAsB,iBAAtB,CAAP;AACD;A;AAEDyrD,EAAAA,gBAAgB,GAAY;AAC1B,WACE,KAAKr4C,qBAAL,MAGA,KAAKviB,KAAL,CAAW8hB,OAAE,CAACrX,OAAd,CAHA,IAIA,KAAKzK,KAAL,CAAW8hB,OAAE,CAACpZ,MAAd,CAJA,IAKA,KAAK1I,KAAL,CAAW8hB,OAAE,CAAC9Z,QAAd,CALA,IAMA,KAAKhI,KAAL,CAAW8hB,OAAE,CAACxY,SAAd,CANA,IASA,KAAKtJ,KAAL,CAAW8hB,OAAE,CAACja,MAAd,CATA,IAUA,KAAK7H,KAAL,CAAW8hB,OAAE,CAAClX,KAAd,CAVA,IAaC,KAAKwD,SAAL,CAAe,aAAf,KAAiC,KAAKpO,KAAL,CAAW8hB,OAAE,CAACpX,MAAd,CAdpC;AAgBD;A;AAID2uD,EAAAA,UAAU,GAAsB;AAC9B,UAAMlqD,IAAI,GAAG,KAAK2P,SAAL,EAAb;AAEA,SAAKi4C,eAAL,CAAqB/B,+BAArB,CACE7lD,IAAI,CAAC1S,KADP,EAEEujB,aAAM,CAACtG,gBAFT;AAKA,SAAKwK,IAAL;A;AACA,QACE,KAAKlkB,KAAL,CAAW8hB,OAAE,CAACjZ,IAAd,KACC,CAAC,KAAK7I,KAAL,CAAW8hB,OAAE,CAACnX,IAAd,CAAD,IAAwB,CAAC,KAAKoE,KAAL,CAAWvZ,IAAX,CAAgB6Q,UAD1C,IAEA,KAAKkc,qBAAL,EAHF,EAIE;AACApT,MAAAA,IAAI,CAACwvD,QAAL,GAAgB,KAAhB;AACAxvD,MAAAA,IAAI,CAACmlB,QAAL,GAAgB,IAAhB;AACD,KAPD,MAOO;AACLnlB,MAAAA,IAAI,CAACwvD,QAAL,GAAgB,KAAK5wC,GAAL,CAASjM,OAAE,CAACnX,IAAZ,CAAhB;AACAwE,MAAAA,IAAI,CAACmlB,QAAL,GAAgB,KAAK0D,gBAAL,EAAhB;AACD;A;AACD,WAAO,KAAK/Y,UAAL,CAAgB9P,IAAhB,EAAsB,iBAAtB,CAAP;AACD;A;AAKDuqD,EAAAA,4BAA4B,CAAC79B,IAAD,EAAqBosB,YAArB,EAA2C;AACrE,QAAI,KAAK15C,eAAL,CAAqB,kBAArB,EAAyC,UAAzC,MAAyD,OAA7D,EAAsE;AACpE,UAAIstB,IAAI,CAACrmC,IAAL,KAAc,oBAAlB,EAAwC;AAGtC,aAAKmlB,KAAL,CAAWstC,YAAX,EAAyBjoC,aAAM,CAAC5J,8BAAhC;AACD;AACF;AACF;A;AAED4jD,EAAAA,sBAAsB,CACpB4E,eADoB,EAEpBj/C,QAFoB,EAGpBtF,QAHoB,EAIJ;AAChB,SAAKwkD,iCAAL,CAAuCD,eAAvC,EAAwDj/C,QAAxD;AAEA,WAAO,KAAKm/C,6BAAL,CACLF,eADK,EAELj/C,QAFK,EAGLtF,QAHK,CAAP;AAKD;A;AAEDwkD,EAAAA,iCAAiC,CAC/BD,eAD+B,EAE/Bj/C,QAF+B,EAGzB;AACN,QAAI,KAAK3f,KAAL,CAAW8hB,OAAE,CAAC3Y,KAAd,CAAJ,EAA0B;AAGxB,YAAM,KAAKwR,KAAL,CAAW,KAAK5L,KAAL,CAAWtS,KAAtB,EAA6BujB,aAAM,CAAC9J,mBAApC,CAAN;AACD,KAJD,MAIO,IAAI0oD,eAAe,CAACppE,IAAhB,KAAyB,oBAA7B,EAAmD;AACxD,WAAKmlB,KAAL,CAAWgF,QAAX,EAAqBK,aAAM,CAAC7J,8BAA5B;AACD;AACF;A;AAED2oD,EAAAA,6BAA6B,CAC3BF,eAD2B,EAE3Bj/C,QAF2B,EAG3BtF,QAH2B,EAIX;AAChB,UAAM2V,QAAQ,GAAG,KAAKvT,WAAL,CAAiBkD,QAAjB,EAA2BtF,QAA3B,CAAjB;AACA,UAAM0kD,iBAAiB,GAAG,KAAKA,iBAAL,CAAuBH,eAAvB,CAA1B;A;AACA,QAAIG,iBAAJ,EAAuB;AACrB/uC,MAAAA,QAAQ,CAAC7P,MAAT,GAAkBy+C,eAAlB;AACD,KAFD,MAEO;AACL,UAAI,CAAC,KAAKI,0CAAL,EAAL,EAAwD;AACtD,aAAKrkD,KAAL,CAAWgF,QAAX,EAAqBK,aAAM,CAAC3J,mBAA5B;AACD;A;AACD2Z,MAAAA,QAAQ,CAACtT,UAAT,GAAsBkiD,eAAtB;AACD;A;AACD,WAAO,KAAK3/C,UAAL,CACL+Q,QADK,EAEL+uC,iBAAiB,GAAG,sBAAH,GAA4B,yBAFxC,CAAP;AAID;A;AAEDA,EAAAA,iBAAiB,CAACriD,UAAD,EAAoC;AACnD,YAAQA,UAAU,CAAClnB,IAAnB;AACE,WAAK,kBAAL;AACE,eACE,CAACknB,UAAU,CAACsC,QAAZ,IAAwB,KAAK+/C,iBAAL,CAAuBriD,UAAU,CAACk4B,MAAlC,CAD1B;A;AAGF,WAAK,YAAL;AACE,eAAO,IAAP;A;AACF;AACE,eAAO,KAAP;AARJ;AAUD;A;AAQDmlB,EAAAA,0BAA0B,CAAIkF,QAAJ,EAA0B;AAClD,UAAMC,sBAAsB,GAAG,KAAKnwD,KAAL,CAAW4jC,YAA1C;AACA,SAAK5jC,KAAL,CAAW4jC,YAAX,GAA0B;AAExBC,MAAAA,wBAAwB,EAAE,CAFF;AAIxBC,MAAAA,aAAa,EAAE;AAJS,KAA1B;A;AAOA,QAAI;AACF,aAAOosB,QAAQ,EAAf;AACD,KAFD,SAEU;AACR,WAAKlwD,KAAL,CAAW4jC,YAAX,GAA0BusB,sBAA1B;AACD;AACF;A;AASDC,EAAAA,0BAA0B,CAAIF,QAAJ,EAA0B;AAClD,UAAMC,sBAAsB,GAAG,KAAKnwD,KAAL,CAAW4jC,YAA1C;AACA,SAAK5jC,KAAL,CAAW4jC,YAAX,GAA0B;AAExBC,MAAAA,wBAAwB,EAAE,CAFF;AAIxBC,MAAAA,aAAa,EAAE;AAJS,KAA1B;A;AAOA,QAAI;AACF,aAAOosB,QAAQ,EAAf;AACD,KAFD,SAEU;AACR,WAAKlwD,KAAL,CAAW4jC,YAAX,GAA0BusB,sBAA1B;AACD;AACF;A;AAEDhF,EAAAA,8BAA8B,CAAI+E,QAAJ,EAA0B;AACtD,UAAMG,0BAA0B,GAAG,KAAKrwD,KAAL,CAAW+jC,SAA9C;AACA,SAAK/jC,KAAL,CAAW+jC,SAAX,GAAuB,IAAvB;A;AAEA,QAAI;AACF,aAAOmsB,QAAQ,EAAf;AACD,KAFD,SAEU;AACR,WAAKlwD,KAAL,CAAW+jC,SAAX,GAAuBssB,0BAAvB;AACD;AACF;A;AAEDlG,EAAAA,UAAU,CAAI+F,QAAJ,EAA0B;AAClC,UAAMxjD,KAAK,GAAG,KAAK6pC,SAAL,CAAepN,YAAf,EAAd;AACA,UAAMmnB,cAAc,GAAGtnB,QAAQ,GAAG,CAACt8B,KAAnC;A;AACA,QAAI4jD,cAAJ,EAAoB;AAClB,WAAK/Z,SAAL,CAAep9B,KAAf,CAAqBzM,KAAK,GAAGs8B,QAA7B;A;AACA,UAAI;AACF,eAAOknB,QAAQ,EAAf;AACD,OAFD,SAEU;AACR,aAAK3Z,SAAL,CAAen9B,IAAf;AACD;AACF;A;AACD,WAAO82C,QAAQ,EAAf;AACD;A;AAEDjG,EAAAA,aAAa,CAAIiG,QAAJ,EAA0B;AACrC,UAAMxjD,KAAK,GAAG,KAAK6pC,SAAL,CAAepN,YAAf,EAAd;AACA,UAAMonB,gBAAgB,GAAGvnB,QAAQ,GAAGt8B,KAApC;A;AACA,QAAI6jD,gBAAJ,EAAsB;AACpB,WAAKha,SAAL,CAAep9B,KAAf,CAAqBzM,KAAK,GAAG,CAACs8B,QAA9B;A;AACA,UAAI;AACF,eAAOknB,QAAQ,EAAf;AACD,OAFD,SAEU;AACR,aAAK3Z,SAAL,CAAen9B,IAAf;AACD;AACF;A;AACD,WAAO82C,QAAQ,EAAf;AACD;A;AAID5C,EAAAA,sBAAsB,GAAS;AAC7B,SAAKttD,KAAL,CAAW4jC,YAAX,CAAwBE,aAAxB,GAAwC,CAAxC;AACD;A;AAEDupB,EAAAA,mDAAmD,GAAY;AAC7D,WAAO,KAAKrtD,KAAL,CAAW4jC,YAAX,CAAwBC,wBAAxB,IAAoD,CAA3D;AACD;A;AAEDosB,EAAAA,0CAA0C,GAAY;AACpD,WACE,KAAKjwD,KAAL,CAAW4jC,YAAX,CAAwBE,aAAxB,IAAyC,IAAzC,IACA,KAAK9jC,KAAL,CAAW4jC,YAAX,CAAwBE,aAAxB,IAAyC,CAF3C;AAID;A;AAEDsnB,EAAAA,uBAAuB,CAACV,IAAD,EAA6B;AAClD,UAAM95C,QAAQ,GAAG,KAAK5Q,KAAL,CAAWtS,KAA5B;AACA,UAAM4d,QAAQ,GAAG,KAAKtL,KAAL,CAAWsL,QAA5B;AAEA,SAAKtL,KAAL,CAAWujC,gBAAX,GAA8B,KAAKvjC,KAAL,CAAWtS,KAAzC;AACA,UAAMi/D,6BAA6B,GAAG,KAAK3sD,KAAL,CAAWgkC,0BAAjD;AACA,SAAKhkC,KAAL,CAAWgkC,0BAAX,GAAwC,IAAxC;AAEA,UAAM/zC,GAAG,GAAG,KAAKgpD,WAAL,CACV,KAAK7F,eAAL,EADU,EAEVxiC,QAFU,EAGVtF,QAHU,EAIVo/C,IAJU,CAAZ;AAOA,SAAK1qD,KAAL,CAAWgkC,0BAAX,GAAwC2oB,6BAAxC;AAEA,WAAO18D,GAAP;AACD;A;AAGDy7D,EAAAA,qBAAqB,GAAuB;AAC1C,SAAKjP,YAAL,CAAkB,cAAlB;AACA,UAAMr8C,IAAI,GAAG,KAAK2P,SAAL,EAAb;AACA,SAAKoF,IAAL;AACA,SAAK6J,GAAL,CAASjM,OAAE,CAACzZ,MAAZ;AAEA,UAAMk3D,YAAY,GAAG,KAAK/I,gBAAL,CAAsC,IAAtC,CAArB;AACA,SAAKQ,kBAAL;AAEA,UAAMx3B,OAAO,GAAG,KAAK1gB,SAAL,EAAhB;A;AACA,QAAI;AACF3P,MAAAA,IAAI,CAACzX,IAAL,GAAY,KAAK8nE,YAAL,CAAkBhgC,OAAlB,EAA2B1d,OAAE,CAACtZ,MAA9B,EAAsC,QAAtC,CAAZ;AACD,KAFD,SAEU;AACR+2D,MAAAA,YAAY;AACb;A;AACD,SAAKxxC,GAAL,CAASjM,OAAE,CAACtZ,MAAZ;AACA,WAAO,KAAKyW,UAAL,CAAoC9P,IAApC,EAA0C,kBAA1C,CAAP;AACD;A;AA1mFsD;A;AC1BzD,MAAMswD,SAAS,GAAG;AAAE1gD,EAAAA,IAAI,EAAE;AAAR,CAAlB;AAAA,MACE2gD,WAAW,GAAG;AAAE3gD,EAAAA,IAAI,EAAE;AAAR,CADhB;AAGA,MAAM4gD,aAAa,GAAG,KAAtB;AAAA,MACEC,cAAc,GAAG,KADnB;AAAA,MAEEC,sBAAsB,GAAG,KAF3B;AAAA,MAGEC,gBAAgB,GAAG,KAHrB;AAKA,MAAMC,aAAa,GAAG,kBAAtB;AAEA,MAAMC,yBAAyB,GAAG,kBAAlC;A;AASA,SAASC,kBAAT,CAA4BtS,MAA5B,EAAoC;AACC;AACjC,SAAK,IAAIn3D,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGm3D,MAAM,CAACl3D,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACtC,YAAM8Q,KAAK,GAAGqmD,MAAM,CAACn3D,CAAD,CAApB;A;AACA,UAAI8Q,KAAK,CAAC9R,IAAN,KAAessB,OAAE,CAACha,WAAtB,EAAmC;AACjC,cAAM;AAAEgH,UAAAA,GAAF;AAAOrS,UAAAA,KAAP;AAAcd,UAAAA,KAAd;AAAqBe,UAAAA;AAArB,YAA6B4K,KAAnC;AACA,cAAM44D,UAAU,GAAGzjE,KAAK,GAAG,CAA3B;AACA,cAAM0jE,UAAU,GAAG,IAAI5yD,QAAJ,CAAauB,GAAG,CAACrS,KAAJ,CAAUM,IAAvB,EAA6B+R,GAAG,CAACrS,KAAJ,CAAUgR,MAAV,GAAmB,CAAhD,CAAnB;AACAkgD,QAAAA,MAAM,CAAC1qD,MAAP,CACEzM,CADF,EAEE,CAFF,EAIE,IAAIg4D,KAAJ,CAAU;AACRh5D,UAAAA,IAAI,EAAEssB,OAAE,CAACrY,IADD;AAER9N,UAAAA,KAAK,EAAE,GAFC;AAGRc,UAAAA,KAAK,EAAEA,KAHC;AAIRC,UAAAA,GAAG,EAAEwjE,UAJG;AAKR7lD,UAAAA,QAAQ,EAAEvL,GAAG,CAACrS,KALN;AAMR+d,UAAAA,MAAM,EAAE2lD;AANA,SAAV,CAJF,EAaE,IAAI3R,KAAJ,CAAU;AACRh5D,UAAAA,IAAI,EAAEssB,OAAE,CAAClkB,IADD;AAERjC,UAAAA,KAAK,EAAEA,KAFC;AAGRc,UAAAA,KAAK,EAAEyjE,UAHC;AAIRxjE,UAAAA,GAAG,EAAEA,GAJG;AAKR2d,UAAAA,QAAQ,EAAE8lD,UALF;AAMR3lD,UAAAA,MAAM,EAAE1L,GAAG,CAACpS;AANJ,SAAV,CAbF;AAsBD;AACF;AACF;AACD,SAAOixD,MAAP;AACD;A;AACc,MAAMyS,eAAN,SAA8B3H,gBAA9B,CAA+C;AAQ5Dn5B,EAAAA,aAAa,CAACC,IAAD,EAAeC,OAAf,EAA2C;AACtDD,IAAAA,IAAI,CAACC,OAAL,GAAe,KAAKggC,YAAL,CAAkBhgC,OAAlB,CAAf;AACAD,IAAAA,IAAI,CAAC2T,QAAL,GAAgB,KAAKnkC,KAAL,CAAWmkC,QAA3B;AAEA,QAAI,KAAK7rC,OAAL,CAAasmD,MAAjB,EAAyBpuB,IAAI,CAACouB,MAAL,GAAcsS,kBAAkB,CAAC,KAAKtS,MAAN,CAAhC;AAEzB,WAAO,KAAK1uC,UAAL,CAAgBsgB,IAAhB,EAAsB,MAAtB,CAAP;AACD;A;AAEDigC,EAAAA,YAAY,CACVhgC,OADU,EAEV9iC,GAAc,GAAGolB,OAAE,CAAC/Z,GAFV,EAGV0rC,UAAsB,GAAG,KAAKpsC,OAAL,CAAaosC,UAH5B,EAIC;AACXjU,IAAAA,OAAO,CAACiU,UAAR,GAAqBA,UAArB;AACAjU,IAAAA,OAAO,CAAC6gC,WAAR,GAAsB,KAAKC,yBAAL,EAAtB;AACA,SAAK7iD,cAAL,CAAoB+hB,OAApB,EAA6B,IAA7B,EAAmC,IAAnC,EAAyC9iC,GAAzC;A;AACA,QACE,KAAKinB,QAAL,IACA,CAAC,KAAKtc,OAAL,CAAaomD,sBADd,IAEA,KAAKrlC,KAAL,CAAWf,gBAAX,CAA4BtlB,IAA5B,GAAmC,CAHrC,EAIE;AACA,WAAK,MAAM,CAACnE,IAAD,CAAX,IAAqB9E,KAAK,CAAC26D,IAAN,CAAW,KAAKrrC,KAAL,CAAWf,gBAAtB,CAArB,EAA8D;AAC5D,cAAMjN,GAAG,GAAG,KAAKgO,KAAL,CAAWf,gBAAX,CAA4B5Y,GAA5B,CAAgC7Q,IAAhC,CAAZ;AAEA,aAAK+c,KAAL,CAAWP,GAAX,EAAgB4F,aAAM,CAAC3K,qBAAvB,EAA8CzX,IAA9C;AACD;AACF;A;AACD,WAAO,KAAKqhB,UAAL,CAA2BugB,OAA3B,EAAoC,SAApC,CAAP;AACD;A;AAIDjiB,EAAAA,eAAe,CAACf,IAAD,EAAiC;AAC9C,UAAMqa,IAAI,GAAGra,IAAI,CAACE,UAAlB;AAEA,UAAMH,gBAAgB,GAAG,KAAKE,WAAL,CAAiBoa,IAAI,CAACp6B,KAAtB,EAA6Bo6B,IAAI,CAAC/nB,GAAL,CAASrS,KAAtC,CAAzB;AACA,UAAM6f,SAAS,GAAG,KAAKG,WAAL,CAAiBD,IAAI,CAAC/f,KAAtB,EAA6B+f,IAAI,CAAC1N,GAAL,CAASrS,KAAtC,CAAlB;AAEA,UAAMogB,GAAG,GAAG,KAAK/O,KAAL,CAAWjK,KAAX,CAAiBgzB,IAAI,CAACp6B,KAAtB,EAA6Bo6B,IAAI,CAACn6B,GAAlC,CAAZ;AACA,UAAMV,GAAG,GAAIugB,gBAAgB,CAAC5gB,KAAjB,GAAyBkhB,GAAG,CAAChZ,KAAJ,CAAU,CAAV,EAAa,CAAC,CAAd,CAAtC;AAEA,SAAK2Z,QAAL,CAAcjB,gBAAd,EAAgC,KAAhC,EAAuCM,GAAvC;AACA,SAAKW,QAAL,CAAcjB,gBAAd,EAAgC,UAAhC,EAA4CvgB,GAA5C;AAEAsgB,IAAAA,SAAS,CAAC3gB,KAAV,GAAkB,KAAKmhB,YAAL,CAChBP,gBADgB,EAEhB,kBAFgB,EAGhBsa,IAAI,CAACn6B,GAHW,EAIhBm6B,IAAI,CAAC/nB,GAAL,CAASpS,GAJO,CAAlB;AAOA,WAAO,KAAKogB,YAAL,CAAkBR,SAAlB,EAA6B,WAA7B,EAA0CE,IAAI,CAAC9f,GAA/C,EAAoD8f,IAAI,CAAC1N,GAAL,CAASpS,GAA7D,CAAP;AACD;A;AAED4jE,EAAAA,yBAAyB,GAAkC;AACzD,QAAI,CAAC,KAAKtgE,KAAL,CAAW8hB,OAAE,CAACpY,oBAAd,CAAL,EAA0C;AACxC,aAAO,IAAP;AACD;A;AAED,UAAMyF,IAAI,GAAG,KAAK2P,SAAL,EAAb;AACA3P,IAAAA,IAAI,CAACxT,KAAL,GAAa,KAAKoT,KAAL,CAAWpT,KAAxB;AACA,SAAKuoB,IAAL;AACA,WAAO,KAAKjF,UAAL,CAAgB9P,IAAhB,EAAsB,sBAAtB,CAAP;AACD;A;AAEDihB,EAAAA,KAAK,CAACrO,OAAD,EAA4B;AAC/B,QAAI,CAAC,KAAKyN,YAAL,CAAkB,KAAlB,CAAL,EAA+B;AAC7B,aAAO,KAAP;AACD;A;AACD,WAAO,KAAK+wC,YAAL,CAAkBx+C,OAAlB,CAAP;AACD;A;AAWDw+C,EAAAA,YAAY,CAACx+C,OAAD,EAA4B;AACtC,UAAMmC,IAAI,GAAG,KAAKqe,cAAL,EAAb;AACA,UAAMqzB,MAAM,GAAG,KAAK5G,cAAL,CAAoB9qC,IAApB,CAAf;A;AAMA,QACE0xC,MAAM,OAAN,IACAA,MAAM,OAFR,EAGE;AACA,aAAO,IAAP;AACD;A;AACD,QAAI7zC,OAAJ,EAAa,OAAO,KAAP;AAEb,QAAI6zC,MAAM,QAAV,EAAyC,OAAO,IAAP;A;AAEzC,QAAI5yC,iBAAiB,CAAC4yC,MAAD,CAArB,EAA+B;AAC7BoK,MAAAA,yBAAyB,CAAC5/D,SAA1B,GAAsC8jB,IAAtC;AACA,YAAMs8C,OAAO,GAAGR,yBAAyB,CAAC//D,IAA1B,CAA+B,KAAK6N,KAApC,CAAhB;A;AACA,UAAI0yD,OAAO,KAAK,IAAhB,EAAsB;AAGpB,cAAMC,KAAK,GAAG,KAAKzR,cAAL,CAAoB9qC,IAAI,GAAGs8C,OAAO,CAAC,CAAD,CAAP,CAAW/pE,MAAtC,CAAd;A;AACA,YAAI,CAACysB,gBAAgB,CAACu9C,KAAD,CAAjB,IAA4BA,KAAK,OAArC,EAA+D;AAC7D,iBAAO,KAAP;AACD;AACF;A;AACD,aAAO,IAAP;AACD;A;AACD,WAAO,KAAP;AACD;A;AAWDhqC,EAAAA,cAAc,CAAC1U,OAAD,EAAmB2U,QAAnB,EAAoD;AAChE,QAAI,KAAK12B,KAAL,CAAW8hB,OAAE,CAACtY,EAAd,CAAJ,EAAuB;AACrB,WAAK0yD,eAAL,CAAqB,IAArB;AACD;A;AACD,WAAO,KAAKvT,qBAAL,CAA2B5mC,OAA3B,EAAoC2U,QAApC,CAAP;AACD;A;AAEDiyB,EAAAA,qBAAqB,CAAC5mC,OAAD,EAAmB2U,QAAnB,EAAoD;AACvE,QAAIwvB,SAAS,GAAG,KAAKn3C,KAAL,CAAWvZ,IAA3B;AACA,UAAM2Z,IAAI,GAAG,KAAK2P,SAAL,EAAb;AACA,QAAIC,IAAJ;A;AAEA,QAAI,KAAKqR,KAAL,CAAWrO,OAAX,CAAJ,EAAyB;AACvBmkC,MAAAA,SAAS,GAAGpkC,OAAE,CAAChW,IAAf;AACAiT,MAAAA,IAAI,GAAG,KAAP;AACD;A;AAMD,YAAQmnC,SAAR;AACE,WAAKpkC,OAAE,CAAChX,MAAR;AACA,WAAKgX,OAAE,CAAC7W,SAAR;AAEE,eAAO,KAAKy1D,2BAAL,CAAiCvxD,IAAjC,EAAuC+2C,SAAS,CAACp/C,OAAjD,CAAP;A;AACF,WAAKgb,OAAE,CAAC5W,SAAR;AACE,eAAO,KAAKy1D,sBAAL,CAA4BxxD,IAA5B,CAAP;A;AACF,WAAK2S,OAAE,CAAC1W,GAAR;AACE,eAAO,KAAKw1D,gBAAL,CAAsBzxD,IAAtB,CAAP;A;AACF,WAAK2S,OAAE,CAACvW,IAAR;AACE,eAAO,KAAKs1D,iBAAL,CAAuB1xD,IAAvB,CAAP;A;AACF,WAAK2S,OAAE,CAACtW,SAAR;AACE,YAAI,KAAK02C,iBAAL,SAAJ,EAAgD;A;AAChD,YAAIngC,OAAJ,EAAa;AACX,cAAI,KAAKhT,KAAL,CAAWqU,MAAf,EAAuB;AACrB,iBAAKzI,KAAL,CAAW,KAAK5L,KAAL,CAAWtS,KAAtB,EAA6BujB,aAAM,CAAC5I,cAApC;AACD,WAFD,MAEO,IAAI2K,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,OAApC,EAA6C;AAClD,iBAAKpH,KAAL,CAAW,KAAK5L,KAAL,CAAWtS,KAAtB,EAA6BujB,aAAM,CAACjJ,cAApC;AACD;AACF;A;AACD,eAAO,KAAKqvC,sBAAL,CAA4Bj3C,IAA5B,EAAkC,KAAlC,EAAyC,CAAC4S,OAA1C,CAAP;A;AAEF,WAAKD,OAAE,CAACzV,MAAR;AACE,YAAI0V,OAAJ,EAAa,KAAK8N,UAAL;AACb,eAAO,KAAKw2B,UAAL,CAAgBl3C,IAAhB,EAAsB,IAAtB,CAAP;A;AAEF,WAAK2S,OAAE,CAACrW,GAAR;AACE,eAAO,KAAKq1D,gBAAL,CAAsB3xD,IAAtB,CAAP;A;AACF,WAAK2S,OAAE,CAACpW,OAAR;AACE,eAAO,KAAKq1D,oBAAL,CAA0B5xD,IAA1B,CAAP;A;AACF,WAAK2S,OAAE,CAACnW,OAAR;AACE,eAAO,KAAKq1D,oBAAL,CAA0B7xD,IAA1B,CAAP;A;AACF,WAAK2S,OAAE,CAAClW,MAAR;AACE,eAAO,KAAKq1D,mBAAL,CAAyB9xD,IAAzB,CAAP;A;AACF,WAAK2S,OAAE,CAACjW,IAAR;AACE,eAAO,KAAKq1D,iBAAL,CAAuB/xD,IAAvB,CAAP;A;AAEF,WAAK2S,OAAE,CAAC/V,MAAR;AACA,WAAK+V,OAAE,CAAChW,IAAR;AACEiT,QAAAA,IAAI,GAAGA,IAAI,IAAI,KAAKhQ,KAAL,CAAWpT,KAA1B;A;AACA,YAAIomB,OAAO,IAAIhD,IAAI,KAAK,KAAxB,EAA+B;AAC7B,eAAKpE,KAAL,CAAW,KAAK5L,KAAL,CAAWtS,KAAtB,EAA6BujB,aAAM,CAAC5H,4BAApC;AACD;A;AACD,eAAO,KAAKkuC,iBAAL,CAAuBn3C,IAAvB,EAA6B4P,IAA7B,CAAP;A;AAEF,WAAK+C,OAAE,CAAC9V,MAAR;AACE,eAAO,KAAKm1D,mBAAL,CAAyBhyD,IAAzB,CAAP;A;AACF,WAAK2S,OAAE,CAAC7V,KAAR;AACE,eAAO,KAAKm1D,kBAAL,CAAwBjyD,IAAxB,CAAP;A;AACF,WAAK2S,OAAE,CAACzZ,MAAR;AACE,eAAO,KAAK8iD,UAAL,EAAP;A;AACF,WAAKrpC,OAAE,CAACjZ,IAAR;AACE,eAAO,KAAKw4D,mBAAL,CAAyBlyD,IAAzB,CAAP;A;AACF,WAAK2S,OAAE,CAACtV,OAAR;AAAiB;AACf,gBAAM80D,iBAAiB,GAAG,KAAKpf,iBAAL,EAA1B;A;AACA,cACEof,iBAAiB,OAAjB,IACAA,iBAAiB,OAFnB,EAGE;AACA;AACD;AACF;A;AAED,WAAKx/C,OAAE,CAACvV,OAAR;AAAiB;AACf,cAAI,CAAC,KAAKlF,OAAL,CAAakmD,2BAAd,IAA6C,CAAC72B,QAAlD,EAA4D;AAC1D,iBAAK/b,KAAL,CAAW,KAAK5L,KAAL,CAAWtS,KAAtB,EAA6BujB,aAAM,CAAC/H,sBAApC;AACD;A;AAED,eAAKiM,IAAL;AAEA,cAAIiT,MAAJ;A;AACA,cAAI+uB,SAAS,KAAKpkC,OAAE,CAACtV,OAArB,EAA8B;AAC5B2qB,YAAAA,MAAM,GAAG,KAAKlH,WAAL,CAAiB9gB,IAAjB,CAAT;A;AAEA,gBACEgoB,MAAM,CAAC3hC,IAAP,KAAgB,mBAAhB,KACC,CAAC2hC,MAAM,CAAC9K,UAAR,IAAsB8K,MAAM,CAAC9K,UAAP,KAAsB,OAD7C,CADF,EAGE;AACA,mBAAKne,iBAAL,GAAyB,IAAzB;AACD;AACF,WATD,MASO;AACLipB,YAAAA,MAAM,GAAG,KAAK7W,WAAL,CAAiBnR,IAAjB,CAAT;A;AAEA,gBACGgoB,MAAM,CAAC3hC,IAAP,KAAgB,wBAAhB,KACE,CAAC2hC,MAAM,CAAC7G,UAAR,IAAsB6G,MAAM,CAAC7G,UAAP,KAAsB,OAD9C,CAAD,IAEC6G,MAAM,CAAC3hC,IAAP,KAAgB,sBAAhB,KACE,CAAC2hC,MAAM,CAAC7G,UAAR,IAAsB6G,MAAM,CAAC7G,UAAP,KAAsB,OAD9C,CAFD,IAIA6G,MAAM,CAAC3hC,IAAP,KAAgB,0BALlB,EAME;AACA,mBAAK0Y,iBAAL,GAAyB,IAAzB;AACD;AACF;A;AAED,eAAK2qB,uBAAL,CAA6B1pB,IAA7B;AAEA,iBAAOgoB,MAAP;AACD;A;AAED;AAAS;AACP,cAAI,KAAKoqC,eAAL,EAAJ,EAA4B;AAC1B,gBAAIx/C,OAAJ,EAAa;AACX,mBAAKpH,KAAL,CACE,KAAK5L,KAAL,CAAWtS,KADb,EAEEujB,aAAM,CAACrP,qCAFT;AAID;A;AACD,iBAAKuT,IAAL;AACA,mBAAO,KAAKkiC,sBAAL,CAA4Bj3C,IAA5B,EAAkC,IAAlC,EAAwC,CAAC4S,OAAzC,CAAP;AACD;AACF;AA9GH;A;AAsHA,UAAMy/C,SAAS,GAAG,KAAKzyD,KAAL,CAAWpT,KAA7B;AACA,UAAMk7B,IAAI,GAAG,KAAK7I,eAAL,EAAb;A;AAEA,QACEk4B,SAAS,KAAKpkC,OAAE,CAAClkB,IAAjB,IACAi5B,IAAI,CAACrhC,IAAL,KAAc,YADd,IAEA,KAAKu4B,GAAL,CAASjM,OAAE,CAAChZ,KAAZ,CAHF,EAIE;AACA,aAAO,KAAK24D,qBAAL,CAA2BtyD,IAA3B,EAAiCqyD,SAAjC,EAA4C3qC,IAA5C,EAAkD9U,OAAlD,CAAP;AACD,KAND,MAMO;AACL,aAAO,KAAK6U,wBAAL,CAA8BznB,IAA9B,EAAoC0nB,IAApC,CAAP;AACD;AACF;A;AAEDgC,EAAAA,uBAAuB,CAAC1pB,IAAD,EAAqB;AAC1C,QAAI,CAAC,KAAK9H,OAAL,CAAakmD,2BAAd,IAA6C,CAAC,KAAK5pC,QAAvD,EAAiE;AAC/D,WAAKhJ,KAAL,CAAWxL,IAAI,CAAC1S,KAAhB,EAAuBmgE,6BAAsB,CAAC9iD,mBAA9C;AACD;AACF;A;AAEDuxC,EAAAA,cAAc,CAACl8C,IAAD,EAA8B;AAC1C,UAAM+3C,UAAU,GACd,KAAKn4C,KAAL,CAAWkkC,cAAX,CAA0B,KAAKlkC,KAAL,CAAWkkC,cAAX,CAA0Bx8C,MAA1B,GAAmC,CAA7D,CADF;A;AAEA,QAAIywD,UAAU,CAACzwD,MAAf,EAAuB;AACrB0Y,MAAAA,IAAI,CAAC+3C,UAAL,GAAkBA,UAAlB;AACA,WAAKrpB,0BAAL,CAAgC1uB,IAAhC,EAAsC+3C,UAAU,CAAC,CAAD,CAAhD;AACA,WAAKn4C,KAAL,CAAWkkC,cAAX,CAA0B,KAAKlkC,KAAL,CAAWkkC,cAAX,CAA0Bx8C,MAA1B,GAAmC,CAA7D,IAAkE,EAAlE;AACD;AACF;A;AAEDszD,EAAAA,uBAAuB,GAAY;AACjC,WAAO,KAAK/pD,KAAL,CAAW8hB,OAAE,CAACzV,MAAd,CAAP;AACD;A;AAED6vD,EAAAA,eAAe,CAACwF,WAAD,EAA8B;AAC3C,UAAMC,wBAAwB,GAC5B,KAAK5yD,KAAL,CAAWkkC,cAAX,CAA0B,KAAKlkC,KAAL,CAAWkkC,cAAX,CAA0Bx8C,MAA1B,GAAmC,CAA7D,CADF;A;AAEA,WAAO,KAAKuJ,KAAL,CAAW8hB,OAAE,CAACtY,EAAd,CAAP,EAA0B;AACxB,YAAMo4D,SAAS,GAAG,KAAKxJ,cAAL,EAAlB;AACAuJ,MAAAA,wBAAwB,CAACztE,IAAzB,CAA8B0tE,SAA9B;AACD;A;AAED,QAAI,KAAK5hE,KAAL,CAAW8hB,OAAE,CAACvV,OAAd,CAAJ,EAA4B;AAC1B,UAAI,CAACm1D,WAAL,EAAkB;AAChB,aAAK7xC,UAAL;AACD;A;AAED,UACE,KAAKzhB,SAAL,CAAe,YAAf,KACA,CAAC,KAAKG,eAAL,CAAqB,YAArB,EAAmC,wBAAnC,CAFH,EAGE;AACA,aAAKoM,KAAL,CAAW,KAAK5L,KAAL,CAAWtS,KAAtB,EAA6BujB,aAAM,CAACpO,oBAApC;AACD;AACF,KAXD,MAWO,IAAI,CAAC,KAAKm4C,uBAAL,EAAL,EAAqC;AAC1C,YAAM,KAAKpvC,KAAL,CAAW,KAAK5L,KAAL,CAAWtS,KAAtB,EAA6BujB,aAAM,CAAC7H,0BAApC,CAAN;AACD;AACF;A;AAEDigD,EAAAA,cAAc,GAAgB;AAC5B,SAAKpC,eAAL,CAAqB,CAAC,mBAAD,EAAsB,YAAtB,CAArB;AAEA,UAAM7mD,IAAI,GAAG,KAAK2P,SAAL,EAAb;AACA,SAAKoF,IAAL;A;AAEA,QAAI,KAAK9V,SAAL,CAAe,YAAf,CAAJ,EAAkC;AAGhC,WAAKW,KAAL,CAAWkkC,cAAX,CAA0B/+C,IAA1B,CAA+B,EAA/B;AAEA,YAAMyrB,QAAQ,GAAG,KAAK5Q,KAAL,CAAWtS,KAA5B;AACA,YAAM4d,QAAQ,GAAG,KAAKtL,KAAL,CAAWsL,QAA5B;AACA,UAAIwc,IAAJ;A;AAEA,UAAI,KAAK9I,GAAL,CAASjM,OAAE,CAACpZ,MAAZ,CAAJ,EAAyB;AACvBmuB,QAAAA,IAAI,GAAG,KAAK7I,eAAL,EAAP;AACA,aAAKN,MAAL,CAAY5L,OAAE,CAACnZ,MAAf;AACD,OAHD,MAGO;AACLkuB,QAAAA,IAAI,GAAG,KAAKvI,eAAL,CAAqB,KAArB,CAAP;A;AAEA,eAAO,KAAKP,GAAL,CAASjM,OAAE,CAAC9Y,GAAZ,CAAP,EAAyB;AACvB,gBAAMmG,IAAI,GAAG,KAAKsN,WAAL,CAAiBkD,QAAjB,EAA2BtF,QAA3B,CAAb;AACAlL,UAAAA,IAAI,CAACylC,MAAL,GAAc/d,IAAd;AACA1nB,UAAAA,IAAI,CAACslB,QAAL,GAAgB,KAAKnG,eAAL,CAAqB,IAArB,CAAhB;AACAnf,UAAAA,IAAI,CAAC6P,QAAL,GAAgB,KAAhB;AACA6X,UAAAA,IAAI,GAAG,KAAK5X,UAAL,CAAgB9P,IAAhB,EAAsB,kBAAtB,CAAP;AACD;AACF;A;AAEDA,MAAAA,IAAI,CAACuN,UAAL,GAAkB,KAAKktC,4BAAL,CAAkC/yB,IAAlC,CAAlB;AACA,WAAK9nB,KAAL,CAAWkkC,cAAX,CAA0BljC,GAA1B;AACD,KA1BD,MA0BO;AACLZ,MAAAA,IAAI,CAACuN,UAAL,GAAkB,KAAKm+C,mBAAL,EAAlB;AACD;A;AACD,WAAO,KAAK57C,UAAL,CAAgB9P,IAAhB,EAAsB,WAAtB,CAAP;AACD;A;AAEDy6C,EAAAA,4BAA4B,CAAC/yB,IAAD,EAAmC;AAC7D,QAAI,KAAK9I,GAAL,CAASjM,OAAE,CAACpZ,MAAZ,CAAJ,EAAyB;AACvB,YAAMyG,IAAI,GAAG,KAAK4R,eAAL,CAAqB8V,IAArB,CAAb;AACA1nB,MAAAA,IAAI,CAACgR,MAAL,GAAc0W,IAAd;AACA1nB,MAAAA,IAAI,CAACc,SAAL,GAAiB,KAAKyuB,4BAAL,CAAkC5c,OAAE,CAACnZ,MAArC,EAA6C,KAA7C,CAAjB;AACA,WAAK4xB,gBAAL,CAAsBprB,IAAI,CAACc,SAA3B;AACA,aAAO,KAAKgP,UAAL,CAAgB9P,IAAhB,EAAsB,gBAAtB,CAAP;AACD;A;AAED,WAAO0nB,IAAP;AACD;A;AAED6pC,EAAAA,2BAA2B,CACzBvxD,IADyB,EAEzBrI,OAFyB,EAGe;AACxC,UAAM+6D,OAAO,GAAG/6D,OAAO,KAAK,OAA5B;AACA,SAAKod,IAAL;A;AAEA,QAAI,KAAKs7B,gBAAL,EAAJ,EAA6B;AAC3BrwC,MAAAA,IAAI,CAACvI,KAAL,GAAa,IAAb;AACD,KAFD,MAEO;AACLuI,MAAAA,IAAI,CAACvI,KAAL,GAAa,KAAK0nB,eAAL,EAAb;AACA,WAAKW,SAAL;AACD;A;AAED,SAAKi8B,mBAAL,CAAyB/7C,IAAzB,EAA+BrI,OAA/B;AAEA,WAAO,KAAKmY,UAAL,CACL9P,IADK,EAEL0yD,OAAO,GAAG,gBAAH,GAAsB,mBAFxB,CAAP;AAID;A;AAED3W,EAAAA,mBAAmB,CACjB/7C,IADiB,EAEjBrI,OAFiB,EAGjB;AACA,UAAM+6D,OAAO,GAAG/6D,OAAO,KAAK,OAA5B;AACA,QAAItQ,CAAJ;A;AACA,SAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,KAAKuY,KAAL,CAAWikC,MAAX,CAAkBv8C,MAAlC,EAA0C,EAAED,CAA5C,EAA+C;AAC7C,YAAMsrE,GAAG,GAAG,KAAK/yD,KAAL,CAAWikC,MAAX,CAAkBx8C,CAAlB,CAAZ;A;AACA,UAAI2Y,IAAI,CAACvI,KAAL,IAAc,IAAd,IAAsBk7D,GAAG,CAAClkE,IAAJ,KAAauR,IAAI,CAACvI,KAAL,CAAWhJ,IAAlD,EAAwD;AACtD,YAAIkkE,GAAG,CAAC/iD,IAAJ,IAAY,IAAZ,KAAqB8iD,OAAO,IAAIC,GAAG,CAAC/iD,IAAJ,KAAa,MAA7C,CAAJ,EAA0D;AAC1D,YAAI5P,IAAI,CAACvI,KAAL,IAAci7D,OAAlB,EAA2B;AAC5B;AACF;A;AACD,QAAIrrE,CAAC,KAAK,KAAKuY,KAAL,CAAWikC,MAAX,CAAkBv8C,MAA5B,EAAoC;AAClC,WAAKkkB,KAAL,CAAWxL,IAAI,CAAC1S,KAAhB,EAAuBujB,aAAM,CAAClN,oBAA9B,EAAoDhM,OAApD;AACD;AACF;A;AAED65D,EAAAA,sBAAsB,CAACxxD,IAAD,EAAiD;AACrE,SAAK+U,IAAL;AACA,SAAK+K,SAAL;AACA,WAAO,KAAKhQ,UAAL,CAAgB9P,IAAhB,EAAsB,mBAAtB,CAAP;AACD;A;AAED4yD,EAAAA,qBAAqB,GAAiB;AACpC,SAAKr0C,MAAL,CAAY5L,OAAE,CAACpZ,MAAf;AACA,UAAM1M,GAAG,GAAG,KAAKgyB,eAAL,EAAZ;AACA,SAAKN,MAAL,CAAY5L,OAAE,CAACnZ,MAAf;AACA,WAAO3M,GAAP;AACD;A;AAED4kE,EAAAA,gBAAgB,CAACzxD,IAAD,EAA+C;AAC7D,SAAK+U,IAAL;AACA,SAAKnV,KAAL,CAAWikC,MAAX,CAAkB9+C,IAAlB,CAAuBurE,SAAvB;AAEAtwD,IAAAA,IAAI,CAACzX,IAAL,GAIE,KAAKynE,0BAAL,CAAgC,MAE9B,KAAK1oC,cAAL,CAAoB,IAApB,CAFF,CAJF;AASA,SAAK1nB,KAAL,CAAWikC,MAAX,CAAkBjjC,GAAlB;AAEA,SAAK2d,MAAL,CAAY5L,OAAE,CAAC9V,MAAf;AACAmD,IAAAA,IAAI,CAACja,IAAL,GAAY,KAAK6sE,qBAAL,EAAZ;AACA,SAAKh0C,GAAL,CAASjM,OAAE,CAACjZ,IAAZ;AACA,WAAO,KAAKoW,UAAL,CAAgB9P,IAAhB,EAAsB,kBAAtB,CAAP;AACD;A;AAUD0xD,EAAAA,iBAAiB,CAAC1xD,IAAD,EAA0B;AACzC,SAAK+U,IAAL;AACA,SAAKnV,KAAL,CAAWikC,MAAX,CAAkB9+C,IAAlB,CAAuBurE,SAAvB;AAEA,QAAIuC,OAAO,GAAG,CAAC,CAAf;A;AACA,QAAI,KAAKzH,cAAL,MAAyB,KAAKlrC,aAAL,CAAmB,OAAnB,CAA7B,EAA0D;AACxD2yC,MAAAA,OAAO,GAAG,KAAKjzD,KAAL,CAAWuL,YAArB;AACD;A;AACD,SAAK8N,KAAL,CAAWF,KAAX,CAAiB/D,WAAjB;AACA,SAAKuJ,MAAL,CAAY5L,OAAE,CAACpZ,MAAf;A;AAEA,QAAI,KAAK1I,KAAL,CAAW8hB,OAAE,CAACjZ,IAAd,CAAJ,EAAyB;AACvB,UAAIm5D,OAAO,GAAG,CAAC,CAAf,EAAkB;AAChB,aAAKnyC,UAAL,CAAgBmyC,OAAhB;AACD;A;AACD,aAAO,KAAKC,QAAL,CAAc9yD,IAAd,EAAoB,IAApB,CAAP;AACD;A;AAED,UAAM+yD,aAAa,GAAG,KAAK1yC,YAAL,CAAkB,KAAlB,CAAtB;AACA,UAAMY,KAAK,GAAG8xC,aAAa,IAAI,KAAK3B,YAAL,EAA/B;A;AACA,QAAI,KAAKvgE,KAAL,CAAW8hB,OAAE,CAAChW,IAAd,KAAuB,KAAK9L,KAAL,CAAW8hB,OAAE,CAAC/V,MAAd,CAAvB,IAAgDqkB,KAApD,EAA2D;AACzD,YAAM4Q,IAAI,GAAG,KAAKliB,SAAL,EAAb;AACA,YAAMC,IAAI,GAAGqR,KAAK,GAAG,KAAH,GAAW,KAAKrhB,KAAL,CAAWpT,KAAxC;AACA,WAAKuoB,IAAL;AACA,WAAKi+C,QAAL,CAAcnhC,IAAd,EAAoB,IAApB,EAA0BjiB,IAA1B;AACA,WAAKE,UAAL,CAAgB+hB,IAAhB,EAAsB,qBAAtB;A;AAEA,UACE,CAAC,KAAKhhC,KAAL,CAAW8hB,OAAE,CAAClV,GAAd,KAAsB,KAAK4iB,YAAL,CAAkB,IAAlB,CAAvB,KACAwR,IAAI,CAACohC,YAAL,CAAkB3rE,MAAlB,KAA6B,CAF/B,EAGE;AACA,eAAO,KAAK4rE,UAAL,CAAgBlzD,IAAhB,EAAsB6xB,IAAtB,EAA4BghC,OAA5B,CAAP;AACD;A;AACD,UAAIA,OAAO,GAAG,CAAC,CAAf,EAAkB;AAChB,aAAKnyC,UAAL,CAAgBmyC,OAAhB;AACD;A;AACD,aAAO,KAAKC,QAAL,CAAc9yD,IAAd,EAAoB6xB,IAApB,CAAP;AACD;A;AAID,UAAMshC,uBAAuB,GAC3B,KAAKtiE,KAAL,CAAW8hB,OAAE,CAAClkB,IAAd,KAAuB,CAAC,KAAKmR,KAAL,CAAWqkC,WADrC;AAGA,UAAMxzB,mBAAmB,GAAG,IAAIs3C,gBAAJ,EAA5B;AACA,UAAMl2B,IAAI,GAAG,KAAKhT,eAAL,CAAqB,IAArB,EAA2BpO,mBAA3B,CAAb;AACA,UAAM2iD,OAAO,GAAG,KAAK/yC,YAAL,CAAkB,IAAlB,CAAhB;A;AACA,QAAI+yC,OAAJ,EAAa;AAEX,UAAIL,aAAJ,EAAmB;AACjB,aAAKvnD,KAAL,CAAWqmB,IAAI,CAACvkC,KAAhB,EAAuBujB,aAAM,CAACpN,QAA9B;AACD,OAFD,MAEO,IAELovD,OAAO,KAAK,CAAC,CAAb,IACAM,uBADA,IAEAthC,IAAI,CAACxrC,IAAL,KAAc,YAFd,IAGAwrC,IAAI,CAACpjC,IAAL,KAAc,OALT,EAML;AAKA,aAAK+c,KAAL,CAAWqmB,IAAI,CAACvkC,KAAhB,EAAuBujB,aAAM,CAACrN,UAA9B;AACD;AACF;A;AACD,QAAI4vD,OAAO,IAAI,KAAKviE,KAAL,CAAW8hB,OAAE,CAAClV,GAAd,CAAf,EAAmC;AACjC,WAAKiT,YAAL,CAAkBmhB,IAAlB,EAAoC,IAApC;AACA,YAAMwhC,WAAW,GAAGD,OAAO,GAAG,kBAAH,GAAwB,kBAAnD;AACA,WAAKznC,SAAL,CAAekG,IAAf,EAAqBwhC,WAArB;AACA,aAAO,KAAKH,UAAL,CAAgBlzD,IAAhB,EAAsB6xB,IAAtB,EAA4BghC,OAA5B,CAAP;AACD,KALD,MAKO;AACL,WAAK5L,qBAAL,CAA2Bx2C,mBAA3B,EAAgD,IAAhD;AACD;A;AACD,QAAIoiD,OAAO,GAAG,CAAC,CAAf,EAAkB;AAChB,WAAKnyC,UAAL,CAAgBmyC,OAAhB;AACD;A;AACD,WAAO,KAAKC,QAAL,CAAc9yD,IAAd,EAAoB6xB,IAApB,CAAP;AACD;A;AAEDolB,EAAAA,sBAAsB,CACpBj3C,IADoB,EAEpB6N,OAFoB,EAGpBylD,mBAHoB,EAIG;AACvB,SAAKv+C,IAAL;AACA,WAAO,KAAK43C,aAAL,CACL3sD,IADK,EAELywD,cAAc,IAAI6C,mBAAmB,GAAG,CAAH,GAAO5C,sBAA9B,CAFT,EAGL7iD,OAHK,CAAP;AAKD;A;AAED8jD,EAAAA,gBAAgB,CAAC3xD,IAAD,EAAqC;AACnD,SAAK+U,IAAL;AACA/U,IAAAA,IAAI,CAACja,IAAL,GAAY,KAAK6sE,qBAAL,EAAZ;AACA5yD,IAAAA,IAAI,CAACsoB,UAAL,GAAkB,KAAKhB,cAAL,CAAoB,IAApB,CAAlB;AACAtnB,IAAAA,IAAI,CAAC4oB,SAAL,GAAiB,KAAKhK,GAAL,CAASjM,OAAE,CAACzW,KAAZ,IAAqB,KAAKorB,cAAL,CAAoB,IAApB,CAArB,GAAiD,IAAlE;AACA,WAAO,KAAKxX,UAAL,CAAgB9P,IAAhB,EAAsB,aAAtB,CAAP;AACD;A;AAED4xD,EAAAA,oBAAoB,CAAC5xD,IAAD,EAA6C;AAC/D,QAAI,CAAC,KAAKm2C,SAAL,CAAejN,SAAhB,IAA6B,CAAC,KAAKhxC,OAAL,CAAaimD,0BAA/C,EAA2E;AACzE,WAAK3yC,KAAL,CAAW,KAAK5L,KAAL,CAAWtS,KAAtB,EAA6BujB,aAAM,CAAChN,aAApC;AACD;A;AAED,SAAKkR,IAAL;A;AAMA,QAAI,KAAKs7B,gBAAL,EAAJ,EAA6B;AAC3BrwC,MAAAA,IAAI,CAACmlB,QAAL,GAAgB,IAAhB;AACD,KAFD,MAEO;AACLnlB,MAAAA,IAAI,CAACmlB,QAAL,GAAgB,KAAKtG,eAAL,EAAhB;AACA,WAAKiB,SAAL;AACD;A;AAED,WAAO,KAAKhQ,UAAL,CAAgB9P,IAAhB,EAAsB,iBAAtB,CAAP;AACD;A;AAED6xD,EAAAA,oBAAoB,CAAC7xD,IAAD,EAA6C;AAC/D,SAAK+U,IAAL;AACA/U,IAAAA,IAAI,CAACuzD,YAAL,GAAoB,KAAKX,qBAAL,EAApB;AACA,UAAMY,KAAK,GAAIxzD,IAAI,CAACwzD,KAAL,GAAa,EAA5B;AACA,SAAKj1C,MAAL,CAAY5L,OAAE,CAACzZ,MAAf;AACA,SAAK0G,KAAL,CAAWikC,MAAX,CAAkB9+C,IAAlB,CAAuBwrE,WAAvB;AACA,SAAKt3C,KAAL,CAAWF,KAAX,CAAiB/D,WAAjB;AAMA,QAAIy+C,GAAJ;A;AACA,SAAK,IAAIC,UAAT,EAAqB,CAAC,KAAK7iE,KAAL,CAAW8hB,OAAE,CAACtZ,MAAd,CAAtB,GAA+C;AAC7C,UAAI,KAAKxI,KAAL,CAAW8hB,OAAE,CAAC/W,KAAd,KAAwB,KAAK/K,KAAL,CAAW8hB,OAAE,CAAC3W,QAAd,CAA5B,EAAqD;AACnD,cAAM23D,MAAM,GAAG,KAAK9iE,KAAL,CAAW8hB,OAAE,CAAC/W,KAAd,CAAf;AACA,YAAI63D,GAAJ,EAAS,KAAK3jD,UAAL,CAAgB2jD,GAAhB,EAAqB,YAArB;AACTD,QAAAA,KAAK,CAACzuE,IAAN,CAAY0uE,GAAG,GAAG,KAAK9jD,SAAL,EAAlB;AACA8jD,QAAAA,GAAG,CAACnrC,UAAJ,GAAiB,EAAjB;AACA,aAAKvT,IAAL;A;AACA,YAAI4+C,MAAJ,EAAY;AACVF,UAAAA,GAAG,CAAC1tE,IAAJ,GAAW,KAAK84B,eAAL,EAAX;AACD,SAFD,MAEO;AACL,cAAI60C,UAAJ,EAAgB;AACd,iBAAKloD,KAAL,CACE,KAAK5L,KAAL,CAAWuL,YADb,EAEE0F,aAAM,CAAC1K,wBAFT;AAID;A;AACDutD,UAAAA,UAAU,GAAG,IAAb;AACAD,UAAAA,GAAG,CAAC1tE,IAAJ,GAAW,IAAX;AACD;A;AACD,aAAKw4B,MAAL,CAAY5L,OAAE,CAAChZ,KAAf;AACD,OAnBD,MAmBO;AACL,YAAI85D,GAAJ,EAAS;AACPA,UAAAA,GAAG,CAACnrC,UAAJ,CAAevjC,IAAf,CAAoB,KAAKuiC,cAAL,CAAoB,IAApB,CAApB;AACD,SAFD,MAEO;AACL,eAAK5G,UAAL;AACD;AACF;AACF;A;AACD,SAAKzH,KAAL,CAAWD,IAAX;AACA,QAAIy6C,GAAJ,EAAS,KAAK3jD,UAAL,CAAgB2jD,GAAhB,EAAqB,YAArB;AACT,SAAK1+C,IAAL;AACA,SAAKnV,KAAL,CAAWikC,MAAX,CAAkBjjC,GAAlB;AACA,WAAO,KAAKkP,UAAL,CAAgB9P,IAAhB,EAAsB,iBAAtB,CAAP;AACD;A;AAED8xD,EAAAA,mBAAmB,CAAC9xD,IAAD,EAA2C;AAC5D,SAAK+U,IAAL;A;AACA,QAAI,KAAK3B,qBAAL,EAAJ,EAAkC;AAChC,WAAK5H,KAAL,CAAW,KAAK5L,KAAL,CAAW0L,UAAtB,EAAkCuF,aAAM,CAACzK,iBAAzC;AACD;A;AACDpG,IAAAA,IAAI,CAACmlB,QAAL,GAAgB,KAAKtG,eAAL,EAAhB;AACA,SAAKiB,SAAL;AACA,WAAO,KAAKhQ,UAAL,CAAgB9P,IAAhB,EAAsB,gBAAtB,CAAP;AACD;A;AAEDi7C,EAAAA,qBAAqB,GAAc;AACjC,UAAMn0B,KAAK,GAAG,KAAK+G,gBAAL,EAAd;AAEA,UAAM+lC,MAAM,GAAG9sC,KAAK,CAACzgC,IAAN,KAAe,YAA9B;AACA,SAAK4yB,KAAL,CAAWF,KAAX,CAAiB66C,MAAM,GAAGx+C,kBAAH,GAAwB,CAA/C;AACA,SAAKuW,SAAL,CAAe7E,KAAf,EAAsB,cAAtB,EAAsCvQ,YAAtC;AAEA,WAAOuQ,KAAP;AACD;A;AAEDirC,EAAAA,iBAAiB,CAAC/xD,IAAD,EAAuC;AACtD,SAAK+U,IAAL;AAEA/U,IAAAA,IAAI,CAACogD,KAAL,GAAa,KAAKpE,UAAL,EAAb;AACAh8C,IAAAA,IAAI,CAAC6zD,OAAL,GAAe,IAAf;A;AAEA,QAAI,KAAKhjE,KAAL,CAAW8hB,OAAE,CAAC9W,MAAd,CAAJ,EAA2B;AACzB,YAAMi4D,MAAM,GAAG,KAAKnkD,SAAL,EAAf;AACA,WAAKoF,IAAL;A;AACA,UAAI,KAAKlkB,KAAL,CAAW8hB,OAAE,CAACpZ,MAAd,CAAJ,EAA2B;AACzB,aAAKglB,MAAL,CAAY5L,OAAE,CAACpZ,MAAf;AACAu6D,QAAAA,MAAM,CAAChtC,KAAP,GAAe,KAAKm0B,qBAAL,EAAf;AACA,aAAK18B,MAAL,CAAY5L,OAAE,CAACnZ,MAAf;AACD,OAJD,MAIO;AACLs6D,QAAAA,MAAM,CAAChtC,KAAP,GAAe,IAAf;AACA,aAAK7N,KAAL,CAAWF,KAAX,CAAiB/D,WAAjB;AACD;A;AAED8+C,MAAAA,MAAM,CAACvrE,IAAP,GAGE,KAAKynE,0BAAL,CAAgC,MAE9B,KAAKhU,UAAL,CAAgB,KAAhB,EAAuB,KAAvB,CAFF,CAHF;AAOA,WAAK/iC,KAAL,CAAWD,IAAX;AAEAhZ,MAAAA,IAAI,CAAC6zD,OAAL,GAAe,KAAK/jD,UAAL,CAAgBgkD,MAAhB,EAAwB,aAAxB,CAAf;AACD;A;AAED9zD,IAAAA,IAAI,CAAC+zD,SAAL,GAAiB,KAAKn1C,GAAL,CAASjM,OAAE,CAACxW,QAAZ,IAAwB,KAAK6/C,UAAL,EAAxB,GAA4C,IAA7D;A;AAEA,QAAI,CAACh8C,IAAI,CAAC6zD,OAAN,IAAiB,CAAC7zD,IAAI,CAAC+zD,SAA3B,EAAsC;AACpC,WAAKvoD,KAAL,CAAWxL,IAAI,CAAC1S,KAAhB,EAAuBujB,aAAM,CAACxK,gBAA9B;AACD;A;AAED,WAAO,KAAKyJ,UAAL,CAAgB9P,IAAhB,EAAsB,cAAtB,CAAP;AACD;A;AAEDm3C,EAAAA,iBAAiB,CACfn3C,IADe,EAEf4P,IAFe,EAGQ;AACvB,SAAKmF,IAAL;AACA,SAAKi+C,QAAL,CAAchzD,IAAd,EAAoB,KAApB,EAA2B4P,IAA3B;AACA,SAAKkQ,SAAL;AACA,WAAO,KAAKhQ,UAAL,CAAgB9P,IAAhB,EAAsB,qBAAtB,CAAP;AACD;A;AAEDgyD,EAAAA,mBAAmB,CAAChyD,IAAD,EAA2C;AAC5D,SAAK+U,IAAL;AACA/U,IAAAA,IAAI,CAACja,IAAL,GAAY,KAAK6sE,qBAAL,EAAZ;AACA,SAAKhzD,KAAL,CAAWikC,MAAX,CAAkB9+C,IAAlB,CAAuBurE,SAAvB;AAEAtwD,IAAAA,IAAI,CAACzX,IAAL,GAIE,KAAKynE,0BAAL,CAAgC,MAE9B,KAAK1oC,cAAL,CAAoB,OAApB,CAFF,CAJF;AASA,SAAK1nB,KAAL,CAAWikC,MAAX,CAAkBjjC,GAAlB;AAEA,WAAO,KAAKkP,UAAL,CAAgB9P,IAAhB,EAAsB,gBAAtB,CAAP;AACD;A;AAEDiyD,EAAAA,kBAAkB,CAACjyD,IAAD,EAAyC;AACzD,QAAI,KAAKJ,KAAL,CAAWqU,MAAf,EAAuB;AACrB,WAAKzI,KAAL,CAAW,KAAK5L,KAAL,CAAWtS,KAAtB,EAA6BujB,aAAM,CAACzI,UAApC;AACD;A;AACD,SAAK2M,IAAL;AACA/U,IAAAA,IAAI,CAACylC,MAAL,GAAc,KAAKmtB,qBAAL,EAAd;AAEA5yD,IAAAA,IAAI,CAACzX,IAAL,GAKE,KAAKynE,0BAAL,CAAgC,MAE9B,KAAK1oC,cAAL,CAAoB,MAApB,CAFF,CALF;AAUA,WAAO,KAAKxX,UAAL,CAAgB9P,IAAhB,EAAsB,eAAtB,CAAP;AACD;A;AAEDkyD,EAAAA,mBAAmB,CAAClyD,IAAD,EAA2C;AAC5D,SAAK+U,IAAL;AACA,WAAO,KAAKjF,UAAL,CAAgB9P,IAAhB,EAAsB,gBAAtB,CAAP;AACD;A;AAEDsyD,EAAAA,qBAAqB,CACnBtyD,IADmB,EAEnBqyD,SAFmB,EAGnB3qC,IAHmB,EAInB9U,OAJmB,EAKC;AACpB,SAAK,MAAMnb,KAAX,IAAoB,KAAKmI,KAAL,CAAWikC,MAA/B,EAAuC;AACrC,UAAIpsC,KAAK,CAAChJ,IAAN,KAAe4jE,SAAnB,EAA8B;AAC5B,aAAK7mD,KAAL,CAAWkc,IAAI,CAACp6B,KAAhB,EAAuBujB,aAAM,CAACxL,kBAA9B,EAAkDgtD,SAAlD;AACD;AACF;A;AAED,UAAMziD,IAAI,GAAG,KAAKhQ,KAAL,CAAWvZ,IAAX,CAAgB8Q,MAAhB,GACT,MADS,GAET,KAAKtG,KAAL,CAAW8hB,OAAE,CAACnW,OAAd,IACA,QADA,GAEA,IAJJ;A;AAKA,SAAK,IAAInV,CAAC,GAAG,KAAKuY,KAAL,CAAWikC,MAAX,CAAkBv8C,MAAlB,GAA2B,CAAxC,EAA2CD,CAAC,IAAI,CAAhD,EAAmDA,CAAC,EAApD,EAAwD;AACtD,YAAMoQ,KAAK,GAAG,KAAKmI,KAAL,CAAWikC,MAAX,CAAkBx8C,CAAlB,CAAd;A;AACA,UAAIoQ,KAAK,CAACu8D,cAAN,KAAyBh0D,IAAI,CAAC1S,KAAlC,EAAyC;AACvCmK,QAAAA,KAAK,CAACu8D,cAAN,GAAuB,KAAKp0D,KAAL,CAAWtS,KAAlC;AACAmK,QAAAA,KAAK,CAACmY,IAAN,GAAaA,IAAb;AACD,OAHD,MAGO;AACL;AACD;AACF;A;AAED,SAAKhQ,KAAL,CAAWikC,MAAX,CAAkB9+C,IAAlB,CAAuB;AACrB0J,MAAAA,IAAI,EAAE4jE,SADe;AAErBziD,MAAAA,IAAI,EAAEA,IAFe;AAGrBokD,MAAAA,cAAc,EAAE,KAAKp0D,KAAL,CAAWtS;AAHN,KAAvB;AAKA0S,IAAAA,IAAI,CAACzX,IAAL,GAAY,KAAK++B,cAAL,CACV1U,OAAO,GACHA,OAAO,CAACrtB,OAAR,CAAgB,OAAhB,MAA6B,CAAC,CAA9B,GACEqtB,OAAO,GAAG,OADZ,GAEEA,OAHC,GAIH,OALM,CAAZ;AAQA,SAAKhT,KAAL,CAAWikC,MAAX,CAAkBjjC,GAAlB;AACAZ,IAAAA,IAAI,CAACvI,KAAL,GAAaiwB,IAAb;AACA,WAAO,KAAK5X,UAAL,CAAgB9P,IAAhB,EAAsB,kBAAtB,CAAP;AACD;A;AAEDynB,EAAAA,wBAAwB,CACtBznB,IADsB,EAEtB0nB,IAFsB,EAGT;AACb1nB,IAAAA,IAAI,CAACuN,UAAL,GAAkBma,IAAlB;AACA,SAAK5H,SAAL;AACA,WAAO,KAAKhQ,UAAL,CAAgB9P,IAAhB,EAAsB,qBAAtB,CAAP;AACD;A;AAMDg8C,EAAAA,UAAU,CACRiY,eAAyB,GAAG,KADpB,EAERC,qBAA+B,GAAG,IAF1B,EAGRC,eAHQ,EAIU;AAClB,UAAMn0D,IAAI,GAAG,KAAK2P,SAAL,EAAb;A;AACA,QAAIskD,eAAJ,EAAqB;AACnB,WAAKr0D,KAAL,CAAWskC,YAAX,CAAwB/8C,KAAxB;AACD;A;AACD,SAAKo3B,MAAL,CAAY5L,OAAE,CAACzZ,MAAf;A;AACA,QAAIg7D,qBAAJ,EAA2B;AACzB,WAAKj7C,KAAL,CAAWF,KAAX,CAAiB/D,WAAjB;AACD;A;AACD,SAAK1G,cAAL,CACEtO,IADF,EAEEi0D,eAFF,EAGE,KAHF,EAIEthD,OAAE,CAACtZ,MAJL,EAKE86D,eALF;A;AAOA,QAAID,qBAAJ,EAA2B;AACzB,WAAKj7C,KAAL,CAAWD,IAAX;AACD;A;AACD,WAAO,KAAKlJ,UAAL,CAAgB9P,IAAhB,EAAsB,gBAAtB,CAAP;AACD;A;AAEDkO,EAAAA,gBAAgB,CAACb,IAAD,EAA6B;AAC3C,WACEA,IAAI,CAAChnB,IAAL,KAAc,qBAAd,IACAgnB,IAAI,CAACE,UAAL,CAAgBlnB,IAAhB,KAAyB,eADzB,IAEA,CAACgnB,IAAI,CAACE,UAAL,CAAgBC,KAAhB,CAAsBW,aAHzB;AAKD;A;AAEDG,EAAAA,cAAc,CACZtO,IADY,EAEZi0D,eAFY,EAGZ1sC,QAHY,EAIZh6B,GAJY,EAKZ4mE,eALY,EAMN;AACN,UAAM5rE,IAAI,GAAIyX,IAAI,CAACzX,IAAL,GAAY,EAA1B;AACA,UAAMkmB,UAAU,GAAIzO,IAAI,CAACyO,UAAL,GAAkB,EAAtC;AACA,SAAKsnC,2BAAL,CACExtD,IADF,EAEE0rE,eAAe,GAAGxlD,UAAH,GAAgBxpB,SAFjC,EAGEsiC,QAHF,EAIEh6B,GAJF,EAKE4mE,eALF;AAOD;A;AAKDpe,EAAAA,2BAA2B,CACzBxtD,IADyB,EAEzBkmB,UAFyB,EAGzB8Y,QAHyB,EAIzBh6B,GAJyB,EAKzB4mE,eALyB,EAMnB;AACN,UAAMhY,SAAS,GAAG,KAAKv8C,KAAL,CAAWqU,MAA7B;AACA,QAAIk7C,sBAAsB,GAAG,KAA7B;AACA,QAAIiF,kBAAkB,GAAG,KAAzB;A;AAEA,WAAO,CAAC,KAAKvjE,KAAL,CAAWtD,GAAX,CAAR,EAAyB;AACvB,YAAM8f,IAAI,GAAG,KAAKia,cAAL,CAAoB,IAApB,EAA0BC,QAA1B,CAAb;A;AAEA,UAAI9Y,UAAU,IAAI,CAAC2lD,kBAAnB,EAAuC;AACrC,YAAI,KAAKlmD,gBAAL,CAAsBb,IAAtB,CAAJ,EAAiC;AAC/B,gBAAMF,SAAS,GAAG,KAAKiB,eAAL,CAAqBf,IAArB,CAAlB;AACAoB,UAAAA,UAAU,CAAC1pB,IAAX,CAAgBooB,SAAhB;A;AAEA,cACE,CAACgiD,sBAAD,IACAhiD,SAAS,CAAC3gB,KAAV,CAAgBA,KAAhB,KAA0B,YAF5B,EAGE;AACA2iE,YAAAA,sBAAsB,GAAG,IAAzB;AACA,iBAAKnP,SAAL,CAAe,IAAf;AACD;A;AAED;AACD;A;AACDoU,QAAAA,kBAAkB,GAAG,IAArB;AAEA,aAAKx0D,KAAL,CAAWskC,YAAX,CAAwB/8C,KAAxB;AACD;A;AACDoB,MAAAA,IAAI,CAACxD,IAAL,CAAUsoB,IAAV;AACD;A;AAED,QAAI8mD,eAAJ,EAAqB;AACnBA,MAAAA,eAAe,CAAC5vE,IAAhB,CAAqB,IAArB,EAA2B4qE,sBAA3B;AACD;A;AAED,QAAI,CAAChT,SAAL,EAAgB;AACd,WAAK6D,SAAL,CAAe,KAAf;AACD;A;AAED,SAAKjrC,IAAL;AACD;A;AAMD+9C,EAAAA,QAAQ,CACN9yD,IADM,EAEN6xB,IAFM,EAGU;AAChB7xB,IAAAA,IAAI,CAAC6xB,IAAL,GAAYA,IAAZ;AACA,SAAK/R,SAAL,CAA8B,KAA9B;AACA9f,IAAAA,IAAI,CAACja,IAAL,GAAY,KAAK8K,KAAL,CAAW8hB,OAAE,CAACjZ,IAAd,IAAsB,IAAtB,GAA6B,KAAKmlB,eAAL,EAAzC;AACA,SAAKiB,SAAL,CAA8B,KAA9B;AACA9f,IAAAA,IAAI,CAACgkD,MAAL,GAAc,KAAKnzD,KAAL,CAAW8hB,OAAE,CAACnZ,MAAd,IAAwB,IAAxB,GAA+B,KAAKqlB,eAAL,EAA7C;AACA,SAAKN,MAAL,CAAY5L,OAAE,CAACnZ,MAAf;AAEAwG,IAAAA,IAAI,CAACzX,IAAL,GAIE,KAAKynE,0BAAL,CAAgC,MAE9B,KAAK1oC,cAAL,CAAoB,KAApB,CAFF,CAJF;AASA,SAAKrO,KAAL,CAAWD,IAAX;AACA,SAAKpZ,KAAL,CAAWikC,MAAX,CAAkBjjC,GAAlB;AAEA,WAAO,KAAKkP,UAAL,CAAgB9P,IAAhB,EAAsB,cAAtB,CAAP;AACD;A;AAKDkzD,EAAAA,UAAU,CACRlzD,IADQ,EAER6xB,IAFQ,EAGRghC,OAHQ,EAIG;AACX,UAAMwB,OAAO,GAAG,KAAKxjE,KAAL,CAAW8hB,OAAE,CAAClV,GAAd,CAAhB;AACA,SAAKsX,IAAL;A;AAEA,QAAIs/C,OAAJ,EAAa;AACX,UAAIxB,OAAO,GAAG,CAAC,CAAf,EAAkB,KAAKnyC,UAAL,CAAgBmyC,OAAhB;AACnB,KAFD,MAEO;AACL7yD,MAAAA,IAAI,CAACs0D,KAAL,GAAazB,OAAO,GAAG,CAAC,CAAxB;AACD;A;AAED,QACEhhC,IAAI,CAACxrC,IAAL,KAAc,qBAAd,IACAwrC,IAAI,CAACohC,YAAL,CAAkB,CAAlB,EAAqBphC,IAArB,IAA6B,IAD7B,KAEC,CAACwiC,OAAD,IACC,KAAKz0D,KAAL,CAAWqU,MADZ,IAEC4d,IAAI,CAACjiB,IAAL,KAAc,KAFf,IAGCiiB,IAAI,CAACohC,YAAL,CAAkB,CAAlB,EAAqBjsE,EAArB,CAAwBX,IAAxB,KAAiC,YALnC,CADF,EAOE;AACA,WAAKmlB,KAAL,CACEqmB,IAAI,CAACvkC,KADP,EAEEujB,aAAM,CAACtN,sBAFT,EAGE8wD,OAAO,GAAG,QAAH,GAAc,QAHvB;AAKD,KAbD,MAaO,IAAIxiC,IAAI,CAACxrC,IAAL,KAAc,mBAAlB,EAAuC;AAC5C,WAAKmlB,KAAL,CAAWqmB,IAAI,CAACvkC,KAAhB,EAAuBujB,aAAM,CAAClM,UAA9B,EAA0C,UAA1C;AACD;A;AAED3E,IAAAA,IAAI,CAAC0sB,IAAL,GAAYmF,IAAZ;AACA7xB,IAAAA,IAAI,CAACyiB,KAAL,GAAa4xC,OAAO,GAChB,KAAKx1C,eAAL,EADgB,GAEhB,KAAKkK,uBAAL,EAFJ;AAGA,SAAKxK,MAAL,CAAY5L,OAAE,CAACnZ,MAAf;AAEAwG,IAAAA,IAAI,CAACzX,IAAL,GAIE,KAAKynE,0BAAL,CAAgC,MAE9B,KAAK1oC,cAAL,CAAoB,KAApB,CAFF,CAJF;AASA,SAAKrO,KAAL,CAAWD,IAAX;AACA,SAAKpZ,KAAL,CAAWikC,MAAX,CAAkBjjC,GAAlB;AAEA,WAAO,KAAKkP,UAAL,CAAgB9P,IAAhB,EAAsBq0D,OAAO,GAAG,gBAAH,GAAsB,gBAAnD,CAAP;AACD;A;AAIDrB,EAAAA,QAAQ,CACNhzD,IADM,EAENu0D,KAFM,EAGN3kD,IAHM,EAIiB;AACvB,UAAMqjD,YAAY,GAAIjzD,IAAI,CAACizD,YAAL,GAAoB,EAA1C;AACA,UAAMuB,YAAY,GAAG,KAAKv1D,SAAL,CAAe,YAAf,CAArB;AACAe,IAAAA,IAAI,CAAC4P,IAAL,GAAYA,IAAZ;A;AACA,aAAS;AACP,YAAM+Z,IAAI,GAAG,KAAKha,SAAL,EAAb;AACA,WAAKqe,UAAL,CAAgBrE,IAAhB,EAAsB/Z,IAAtB;A;AACA,UAAI,KAAKgP,GAAL,CAASjM,OAAE,CAACnY,EAAZ,CAAJ,EAAqB;AACnBmvB,QAAAA,IAAI,CAACkI,IAAL,GAAY0iC,KAAK,GACb,KAAKtK,0BAAL,EADa,GAEb,KAAKlhC,uBAAL,EAFJ;AAGD,OAJD,MAIO;AACL,YACEnZ,IAAI,KAAK,OAAT,IACA,EAAE,KAAK/e,KAAL,CAAW8hB,OAAE,CAAClV,GAAd,KAAsB,KAAK4iB,YAAL,CAAkB,IAAlB,CAAxB,CAFF,EAGE;AAGA,cAAI,CAACm0C,YAAL,EAAmB;AACjB,iBAAKhpD,KAAL,CACE,KAAK5L,KAAL,CAAW0L,UADb,EAEEuF,aAAM,CAACvO,6BAFT,EAGE,oBAHF;AAKD;AACF,SAbD,MAaO,IACLqnB,IAAI,CAAC3iC,EAAL,CAAQX,IAAR,KAAiB,YAAjB,IACA,EAAEkuE,KAAK,KAAK,KAAK1jE,KAAL,CAAW8hB,OAAE,CAAClV,GAAd,KAAsB,KAAK4iB,YAAL,CAAkB,IAAlB,CAA3B,CAAP,CAFK,EAGL;AACA,eAAK7U,KAAL,CACE,KAAK5L,KAAL,CAAW0L,UADb,EAEEuF,aAAM,CAACvO,6BAFT,EAGE,0BAHF;AAKD;A;AACDqnB,QAAAA,IAAI,CAACkI,IAAL,GAAY,IAAZ;AACD;A;AACDohC,MAAAA,YAAY,CAACluE,IAAb,CAAkB,KAAK+qB,UAAL,CAAgB6Z,IAAhB,EAAsB,oBAAtB,CAAlB;AACA,UAAI,CAAC,KAAK/K,GAAL,CAASjM,OAAE,CAAClZ,KAAZ,CAAL,EAAyB;AAC1B;A;AACD,WAAOuG,IAAP;AACD;A;AAEDguB,EAAAA,UAAU,CAACrE,IAAD,EAA6B/Z,IAA7B,EAAkE;AAC1E+Z,IAAAA,IAAI,CAAC3iC,EAAL,GAAU,KAAK6mC,gBAAL,EAAV;AACA,SAAKlC,SAAL,CACEhC,IAAI,CAAC3iC,EADP,EAEE,sBAFF,EAGE4oB,IAAI,KAAK,KAAT,GAAiB4G,QAAjB,GAA4BD,YAH9B,EAIEtxB,SAJF,EAKE2qB,IAAI,KAAK,KALX;AAOD;A;AAKD+8C,EAAAA,aAAa,CACX3sD,IADW,EAEXy0D,SAAkB,GAAGjE,aAFV,EAGX3iD,OAAiB,GAAG,KAHT,EAIR;AACH,UAAMuc,WAAW,GAAGqqC,SAAS,GAAGhE,cAAhC;AACA,UAAMiE,kBAAkB,GAAGD,SAAS,GAAG/D,sBAAvC;AACA,UAAMiE,SAAS,GAAG,CAAC,CAACvqC,WAAF,IAAiB,EAAEqqC,SAAS,GAAG9D,gBAAd,CAAnC;AAEA,SAAK/iD,YAAL,CAAkB5N,IAAlB,EAAwB6N,OAAxB;A;AAEA,QAAI,KAAKhd,KAAL,CAAW8hB,OAAE,CAACnX,IAAd,KAAuBk5D,kBAA3B,EAA+C;AAC7C,WAAKlpD,KAAL,CAAW,KAAK5L,KAAL,CAAWtS,KAAtB,EAA6BujB,aAAM,CAACnN,iCAApC;AACD;A;AACD1D,IAAAA,IAAI,CAACivD,SAAL,GAAiB,KAAKrwC,GAAL,CAASjM,OAAE,CAACnX,IAAZ,CAAjB;A;AAEA,QAAI4uB,WAAJ,EAAiB;AACfpqB,MAAAA,IAAI,CAAChZ,EAAL,GAAU,KAAKi1D,eAAL,CAAqB0Y,SAArB,CAAV;AACD;A;AAED,UAAM/c,yBAAyB,GAAG,KAAKh4C,KAAL,CAAW8rB,sBAA7C;AACA,SAAK9rB,KAAL,CAAW8rB,sBAAX,GAAoC,KAApC;AACA,SAAKzS,KAAL,CAAWF,KAAX,CAAiB7D,cAAjB;AACA,SAAKihC,SAAL,CAAep9B,KAAf,CAAqBqwB,aAAa,CAACv7B,OAAD,EAAU7N,IAAI,CAACivD,SAAf,CAAlC;A;AAEA,QAAI,CAAC7kC,WAAL,EAAkB;AAChBpqB,MAAAA,IAAI,CAAChZ,EAAL,GAAU,KAAKi1D,eAAL,EAAV;AACD;A;AAED,SAAKnuB,mBAAL,CAAyB9tB,IAAzB,EAAoD,KAApD;AAKA,SAAKgwD,0BAAL,CAAgC,MAAM;AAEpC,WAAK3oC,0BAAL,CACErnB,IADF,EAEEoqB,WAAW,GAAG,qBAAH,GAA2B,oBAFxC;AAID,KAND;AAQA,SAAK+rB,SAAL,CAAen9B,IAAf;AACA,SAAKC,KAAL,CAAWD,IAAX;A;AAEA,QAAIoR,WAAW,IAAI,CAACsqC,kBAApB,EAAwC;AAItC,WAAKrc,2BAAL,CAAiCr4C,IAAjC;AACD;A;AAED,SAAKJ,KAAL,CAAW8rB,sBAAX,GAAoCksB,yBAApC;AACA,WAAO53C,IAAP;AACD;A;AAEDi8C,EAAAA,eAAe,CAAC0Y,SAAD,EAAqC;AAClD,WAAOA,SAAS,IAAI,KAAK9jE,KAAL,CAAW8hB,OAAE,CAAClkB,IAAd,CAAb,GAAmC,KAAK0wB,eAAL,EAAnC,GAA4D,IAAnE;AACD;A;AAED2O,EAAAA,mBAAmB,CAAC9tB,IAAD,EAAmB+tB,cAAnB,EAAmD;AACpE,SAAKxP,MAAL,CAAY5L,OAAE,CAACpZ,MAAf;AACA,SAAKquD,eAAL,CAAqB7uC,KAArB,CAA2BktC,4BAA4B,EAAvD;AACAjmD,IAAAA,IAAI,CAACyL,MAAL,GAAc,KAAK0kC,gBAAL,CACZx9B,OAAE,CAACnZ,MADS,MAGK,KAHL,EAIZu0B,cAJY,CAAd;AAOA,SAAK65B,eAAL,CAAqB5uC,IAArB;AACD;A;AAEDq/B,EAAAA,2BAA2B,CAACr4C,IAAD,EAAyB;AAClD,QAAI,CAACA,IAAI,CAAChZ,EAAV,EAAc;AAMd,SAAKiyB,KAAL,CAAWC,WAAX,CACElZ,IAAI,CAAChZ,EAAL,CAAQyH,IADV,EAEE,KAAKmR,KAAL,CAAWqU,MAAX,IAAqBjU,IAAI,CAACivD,SAA1B,IAAuCjvD,IAAI,CAAC6uB,KAA5C,GACI,KAAK5V,KAAL,CAAWN,mBAAX,GACEnC,QADF,GAEED,YAHN,GAIIE,aANN,EAOEzW,IAAI,CAAChZ,EAAL,CAAQsG,KAPV;AASD;A;AAKD4pD,EAAAA,UAAU,CACRl3C,IADQ,EAERoqB,WAFQ,EAGRC,UAHQ,EAIL;AACH,SAAKtV,IAAL;AACA,SAAKmnC,cAAL,CAAoBl8C,IAApB;AAGA,UAAMm8C,SAAS,GAAG,KAAKv8C,KAAL,CAAWqU,MAA7B;AACA,SAAKrU,KAAL,CAAWqU,MAAX,GAAoB,IAApB;AAEA,SAAKkW,YAAL,CAAkBnqB,IAAlB,EAAwBoqB,WAAxB,EAAqCC,UAArC;AACA,SAAK4B,eAAL,CAAqBjsB,IAArB;AAEAA,IAAAA,IAAI,CAACzX,IAAL,GAAY,KAAK6zD,cAAL,CAAoB,CAAC,CAACp8C,IAAI,CAACmM,UAA3B,EAAuCgwC,SAAvC,CAAZ;AAEA,WAAO,KAAKrsC,UAAL,CACL9P,IADK,EAELoqB,WAAW,GAAG,kBAAH,GAAwB,iBAF9B,CAAP;AAID;A;AAEDyB,EAAAA,eAAe,GAAY;AACzB,WAAO,KAAKh7B,KAAL,CAAW8hB,OAAE,CAACnY,EAAd,KAAqB,KAAK3J,KAAL,CAAW8hB,OAAE,CAACjZ,IAAd,CAArB,IAA4C,KAAK7I,KAAL,CAAW8hB,OAAE,CAACtZ,MAAd,CAAnD;AACD;A;AAEDuyB,EAAAA,aAAa,GAAY;AACvB,WAAO,KAAK/6B,KAAL,CAAW8hB,OAAE,CAACpZ,MAAd,CAAP;AACD;A;AAEDuyB,EAAAA,sBAAsB,CAAC7d,MAAD,EAAmD;AACvE,WACE,CAACA,MAAM,CAAC4B,QAAR,IACA,CAAC5B,MAAM,CAAC+V,MADR,KAEC/V,MAAM,CAACze,GAAP,CAAWf,IAAX,KAAoB,aAApB,IACCwf,MAAM,CAACze,GAAP,CAAWhD,KAAX,KAAqB,aAHvB,CADF;AAMD;A;AAGD4vD,EAAAA,cAAc,CAACpC,aAAD,EAAyBmC,SAAzB,EAA0D;AACtE,SAAKqI,UAAL,CAAgBzrC,KAAhB;AAEA,UAAMnZ,KAA8B,GAAG;AACrCg1D,MAAAA,cAAc,EAAE,KADqB;AAErC5a,MAAAA;AAFqC,KAAvC;AAIA,QAAIjC,UAAyB,GAAG,EAAhC;AACA,UAAMppC,SAAsB,GAAG,KAAKgB,SAAL,EAA/B;AACAhB,IAAAA,SAAS,CAACpmB,IAAV,GAAiB,EAAjB;AAEA,SAAKg2B,MAAL,CAAY5L,OAAE,CAACzZ,MAAf;AAIA,SAAK82D,0BAAL,CAAgC,MAAM;AACpC,aAAO,CAAC,KAAKn/D,KAAL,CAAW8hB,OAAE,CAACtZ,MAAd,CAAR,EAA+B;AAC7B,YAAI,KAAKulB,GAAL,CAASjM,OAAE,CAACjZ,IAAZ,CAAJ,EAAuB;AACrB,cAAIq+C,UAAU,CAACzwD,MAAX,GAAoB,CAAxB,EAA2B;AACzB,kBAAM,KAAKkkB,KAAL,CAAW,KAAK5L,KAAL,CAAW0L,UAAtB,EAAkCuF,aAAM,CAACnO,kBAAzC,CAAN;AACD;A;AACD;AACD;A;AAED,YAAI,KAAK7R,KAAL,CAAW8hB,OAAE,CAACtY,EAAd,CAAJ,EAAuB;AACrB09C,UAAAA,UAAU,CAAChzD,IAAX,CAAgB,KAAKkkE,cAAL,EAAhB;AACA;AACD;A;AAED,cAAM1+B,MAAM,GAAG,KAAK5a,SAAL,EAAf;A;AAGA,YAAIooC,UAAU,CAACzwD,MAAf,EAAuB;AACrBijC,UAAAA,MAAM,CAACwtB,UAAP,GAAoBA,UAApB;AACA,eAAKrpB,0BAAL,CAAgCnE,MAAhC,EAAwCwtB,UAAU,CAAC,CAAD,CAAlD;AACAA,UAAAA,UAAU,GAAG,EAAb;AACD;A;AAED,aAAKztB,gBAAL,CAAsB3b,SAAtB,EAAiC4b,MAAjC,EAAyC3qB,KAAzC;A;AAEA,YACE2qB,MAAM,CAAC3a,IAAP,KAAgB,aAAhB,IACA2a,MAAM,CAACwtB,UADP,IAEAxtB,MAAM,CAACwtB,UAAP,CAAkBzwD,MAAlB,GAA2B,CAH7B,EAIE;AACA,eAAKkkB,KAAL,CAAW+e,MAAM,CAACj9B,KAAlB,EAAyBujB,aAAM,CAACrO,oBAAhC;AACD;AACF;AACF,KAjCD;AAmCA,SAAK5C,KAAL,CAAWqU,MAAX,GAAoBkoC,SAApB;AAEA,SAAKpnC,IAAL;A;AAEA,QAAIgjC,UAAU,CAACzwD,MAAf,EAAuB;AACrB,YAAM,KAAKkkB,KAAL,CAAW,KAAK5L,KAAL,CAAWtS,KAAtB,EAA6BujB,aAAM,CAACtI,iBAApC,CAAN;AACD;A;AAED,SAAKi8C,UAAL,CAAgBxrC,IAAhB;AAEA,WAAO,KAAKlJ,UAAL,CAAgBnB,SAAhB,EAA2B,WAA3B,CAAP;AACD;A;AAID6b,EAAAA,4BAA4B,CAC1B7b,SAD0B,EAE1B4b,MAF0B,EAGjB;AACT,UAAM/6B,GAAG,GAAG,KAAK2vB,eAAL,CAAqB,IAArB,CAAZ;A;AAEA,QAAI,KAAKyM,aAAL,EAAJ,EAA0B;AACxB,YAAM3d,MAAqB,GAAIsc,MAA/B;AAGAtc,MAAAA,MAAM,CAAC2B,IAAP,GAAc,QAAd;AACA3B,MAAAA,MAAM,CAAC4B,QAAP,GAAkB,KAAlB;AACA5B,MAAAA,MAAM,CAACze,GAAP,GAAaA,GAAb;AACAye,MAAAA,MAAM,CAAC+V,MAAP,GAAgB,KAAhB;AACA,WAAKtV,eAAL,CACEC,SADF,EAEEV,MAFF,EAGE,KAHF,EAIE,KAJF,EAKsB,KALtB,EAME,KANF;AAQA,aAAO,IAAP;AACD,KAjBD,MAiBO,IAAI,KAAK4d,eAAL,EAAJ,EAA4B;AACjC,YAAM1b,IAAqB,GAAIoa,MAA/B;AAGApa,MAAAA,IAAI,CAACN,QAAL,GAAgB,KAAhB;AACAM,MAAAA,IAAI,CAAC3gB,GAAL,GAAWA,GAAX;AACA2gB,MAAAA,IAAI,CAAC6T,MAAL,GAAc,KAAd;AACArV,MAAAA,SAAS,CAACpmB,IAAV,CAAexD,IAAf,CAAoB,KAAKgrB,kBAAL,CAAwBI,IAAxB,CAApB;AACA,aAAO,IAAP;AACD;A;AACD,WAAO,KAAP;AACD;A;AAEDma,EAAAA,gBAAgB,CACd3b,SADc,EAEd4b,MAFc,EAGd3qB,KAHc,EAIR;AACN,UAAMmkB,QAAQ,GAAG,KAAK1D,YAAL,CAAkB,QAAlB,CAAjB;A;AAEA,QAAI0D,QAAJ,EAAc;AACZ,UAAI,KAAKyG,4BAAL,CAAkC7b,SAAlC,EAA6C4b,MAA7C,CAAJ,EAA0D;AAExD;AACD;A;AACD,UAAI,KAAK3L,GAAL,CAASjM,OAAE,CAACzZ,MAAZ,CAAJ,EAAyB;AACvB,aAAK2gD,qBAAL,CAA2BlrC,SAA3B,EAAwC4b,MAAxC;AACA;AACD;AACF;A;AAED,SAAKuvB,4BAAL,CAAkCnrC,SAAlC,EAA6C4b,MAA7C,EAAqD3qB,KAArD,EAA4DmkB,QAA5D;AACD;A;AAED+1B,EAAAA,4BAA4B,CAC1BnrC,SAD0B,EAE1B4b,MAF0B,EAG1B3qB,KAH0B,EAI1BmkB,QAJ0B,EAK1B;AACA,UAAM8wC,YAAyC,GAAGtqC,MAAlD;AACA,UAAMuqC,aAAiD,GAAGvqC,MAA1D;AACA,UAAMwqC,UAAuC,GAAGxqC,MAAhD;AACA,UAAMyqC,WAA+C,GAAGzqC,MAAxD;AAEA,UAAMtc,MAAkD,GAAG4mD,YAA3D;AACA,UAAMI,YAAqD,GAAGJ,YAA9D;AAEAtqC,IAAAA,MAAM,CAACvG,MAAP,GAAgBD,QAAhB;A;AAEA,QAAI,KAAKnF,GAAL,CAASjM,OAAE,CAACnX,IAAZ,CAAJ,EAAuB;AAErByS,MAAAA,MAAM,CAAC2B,IAAP,GAAc,QAAd;AACA,YAAMR,aAAa,GAAG,KAAKve,KAAL,CAAW8hB,OAAE,CAACha,WAAd,CAAtB;AACA,WAAKu8D,qBAAL,CAA2BjnD,MAA3B;A;AAEA,UAAImB,aAAJ,EAAmB;AAEjB,aAAK4c,sBAAL,CAA4Brd,SAA5B,EAAuCmmD,aAAvC,EAAsD,IAAtD,EAA4D,KAA5D;AACA;AACD;A;AAED,UAAI,KAAKhpC,sBAAL,CAA4B+oC,YAA5B,CAAJ,EAA+C;AAC7C,aAAKrpD,KAAL,CAAWqpD,YAAY,CAACrlE,GAAb,CAAiBlC,KAA5B,EAAmCujB,aAAM,CAACxO,sBAA1C;AACD;A;AAED,WAAKqM,eAAL,CACEC,SADF,EAEEkmD,YAFF,EAGE,IAHF,EAIE,KAJF,EAKsB,KALtB,EAME,KANF;AASA;AACD;A;AAED,UAAM5wB,WAAW,GAAG,KAAKrkC,KAAL,CAAWqkC,WAA/B;AACA,UAAMopB,SAAS,GAAG,KAAKx8D,KAAL,CAAW8hB,OAAE,CAACha,WAAd,CAAlB;AACA,UAAMnJ,GAAG,GAAG,KAAK0lE,qBAAL,CAA2B3qC,MAA3B,CAAZ;AAEA,UAAM4qC,QAAQ,GAAG3lE,GAAG,CAACnJ,IAAJ,KAAa,YAA9B;AACA,UAAM+uE,uBAAuB,GAAG,KAAKx1D,KAAL,CAAWtS,KAA3C;AAEA,SAAK2sD,4BAAL,CAAkCgb,YAAlC;A;AAEA,QAAI,KAAKrpC,aAAL,EAAJ,EAA0B;AACxB3d,MAAAA,MAAM,CAAC2B,IAAP,GAAc,QAAd;A;AAEA,UAAIy9C,SAAJ,EAAe;AACb,aAAKrhC,sBAAL,CAA4Brd,SAA5B,EAAuCmmD,aAAvC,EAAsD,KAAtD,EAA6D,KAA7D;AACA;AACD;A;AAGD,YAAMjmD,aAAa,GAAG,KAAKid,sBAAL,CAA4B+oC,YAA5B,CAAtB;AACA,UAAI/lD,iBAAiB,GAAG,KAAxB;A;AACA,UAAID,aAAJ,EAAmB;AACjBgmD,QAAAA,YAAY,CAACjlD,IAAb,GAAoB,aAApB;A;AAGA,YAAIhQ,KAAK,CAACg1D,cAAN,IAAwB,CAAC,KAAK31D,SAAL,CAAe,YAAf,CAA7B,EAA2D;AACzD,eAAKuM,KAAL,CAAWhc,GAAG,CAAClC,KAAf,EAAsBujB,aAAM,CAAC/N,oBAA7B;AACD;A;AACD,YAAI+L,aAAa,IAAI,KAAK5P,SAAL,CAAe,YAAf,CAAjB,IAAiDsrB,MAAM,CAACwvB,QAA5D,EAAsE;AACpE,eAAKvuC,KAAL,CAAWhc,GAAG,CAAClC,KAAf,EAAsBujB,aAAM,CAAClK,qBAA7B;AACD;A;AACD/G,QAAAA,KAAK,CAACg1D,cAAN,GAAuB,IAAvB;AACA9lD,QAAAA,iBAAiB,GAAGlP,KAAK,CAACo6C,aAA1B;AACD;A;AAED,WAAKtrC,eAAL,CACEC,SADF,EAEEkmD,YAFF,EAGE,KAHF,EAIE,KAJF,EAKEhmD,aALF,EAMEC,iBANF;AAQD,KAjCD,MAiCO,IAAI,KAAK+c,eAAL,EAAJ,EAA4B;AACjC,UAAIwhC,SAAJ,EAAe;AACb,aAAKgI,wBAAL,CAA8B1mD,SAA9B,EAAyCqmD,WAAzC;AACD,OAFD,MAEO;AACL,aAAKM,iBAAL,CAAuB3mD,SAAvB,EAAkComD,UAAlC;AACD;AACF,KANM,MAMA,IACLI,QAAQ,IACR3lE,GAAG,CAACf,IAAJ,KAAa,OADb,IAEA,CAACw1C,WAFD,IAGA,CAAC,KAAKoM,gBAAL,EAJI,EAKL;AAEA,YAAMzhC,WAAW,GAAG,KAAKgQ,GAAL,CAASjM,OAAE,CAACnX,IAAZ,CAApB;A;AAEA,UAAIy5D,YAAY,CAAClkD,QAAjB,EAA2B;AACzB,aAAK2P,UAAL,CAAgB00C,uBAAhB;AACD;A;AAEDnnD,MAAAA,MAAM,CAAC2B,IAAP,GAAc,QAAd;AAEA,YAAMy9C,SAAS,GAAG,KAAKx8D,KAAL,CAAW8hB,OAAE,CAACha,WAAd,CAAlB;AACA,WAAKu8D,qBAAL,CAA2BjnD,MAA3B;AACA,WAAKgsC,4BAAL,CAAkCgb,YAAlC;A;AAEA,UAAI5H,SAAJ,EAAe;AAEb,aAAKrhC,sBAAL,CACErd,SADF,EAEEmmD,aAFF,EAGElmD,WAHF,EAIE,IAJF;AAMD,OARD,MAQO;AACL,YAAI,KAAKkd,sBAAL,CAA4B+oC,YAA5B,CAAJ,EAA+C;AAC7C,eAAKrpD,KAAL,CAAWqpD,YAAY,CAACrlE,GAAb,CAAiBlC,KAA5B,EAAmCujB,aAAM,CAACzO,kBAA1C;AACD;A;AAED,aAAKsM,eAAL,CACEC,SADF,EAEEkmD,YAFF,EAGEjmD,WAHF,EAIE,IAJF,EAKsB,KALtB,EAME,KANF;AAQD;AACF,KAzCM,MAyCA,IACLumD,QAAQ,KACP3lE,GAAG,CAACf,IAAJ,KAAa,KAAb,IAAsBe,GAAG,CAACf,IAAJ,KAAa,KAD5B,CAAR,IAEA,CAACw1C,WAFD,IAGA,EAAE,KAAKpzC,KAAL,CAAW8hB,OAAE,CAACnX,IAAd,KAAuB,KAAK60C,gBAAL,EAAzB,CAJK,EAKL;AAGApiC,MAAAA,MAAM,CAAC2B,IAAP,GAAcpgB,GAAG,CAACf,IAAlB;AAEA,YAAM4+D,SAAS,GAAG,KAAKx8D,KAAL,CAAW8hB,OAAE,CAACha,WAAd,CAAlB;AACA,WAAKu8D,qBAAL,CAA2BL,YAA3B;A;AAEA,UAAIxH,SAAJ,EAAe;AAEb,aAAKrhC,sBAAL,CAA4Brd,SAA5B,EAAuCmmD,aAAvC,EAAsD,KAAtD,EAA6D,KAA7D;AACD,OAHD,MAGO;AACL,YAAI,KAAKhpC,sBAAL,CAA4B+oC,YAA5B,CAAJ,EAA+C;AAC7C,eAAKrpD,KAAL,CAAWqpD,YAAY,CAACrlE,GAAb,CAAiBlC,KAA5B,EAAmCujB,aAAM,CAAC1O,qBAA1C;AACD;A;AACD,aAAKuM,eAAL,CACEC,SADF,EAEEkmD,YAFF,EAGE,KAHF,EAIE,KAJF,EAKsB,KALtB,EAME,KANF;AAQD;A;AAED,WAAKzoC,uBAAL,CAA6ByoC,YAA7B;AACD,KA/BM,MA+BA,IAAI,KAAKxkB,gBAAL,EAAJ,EAA6B;AAElC,UAAIgd,SAAJ,EAAe;AACb,aAAKgI,wBAAL,CAA8B1mD,SAA9B,EAAyCqmD,WAAzC;AACD,OAFD,MAEO;AACL,aAAKM,iBAAL,CAAuB3mD,SAAvB,EAAkComD,UAAlC;AACD;AACF,KAPM,MAOA;AACL,WAAKr0C,UAAL;AACD;AACF;A;AAGDw0C,EAAAA,qBAAqB,CAAC3qC,MAAD,EAAqD;AACxE,UAAM;AAAElkC,MAAAA,IAAF;AAAQmG,MAAAA,KAAR;AAAec,MAAAA;AAAf,QAAyB,KAAKsS,KAApC;A;AACA,QACE,CAACvZ,IAAI,KAAKssB,OAAE,CAAClkB,IAAZ,IAAoBpI,IAAI,KAAKssB,OAAE,CAAC/hB,MAAjC,KACA25B,MAAM,CAACvG,MADP,IAEAx3B,KAAK,KAAK,WAHZ,EAIE;AACA,WAAKgf,KAAL,CAAWle,KAAX,EAAkBujB,aAAM,CAAChJ,eAAzB;AACD;A;AAED,QAAIxhB,IAAI,KAAKssB,OAAE,CAACha,WAAZ,IAA2BnM,KAAK,KAAK,aAAzC,EAAwD;AACtD,WAAKgf,KAAL,CAAWle,KAAX,EAAkBujB,aAAM,CAAC3O,4BAAzB;AACD;A;AAED,WAAO,KAAKmqB,iBAAL,CAAuB9B,MAAvB,EAA0D,IAA1D,CAAP;AACD;A;AAEDsvB,EAAAA,qBAAqB,CACnBlrC,SADmB,EAEnB4b,MAFmB,EAGnB;AAAA;A;AACA,SAAK8xB,YAAL,CAAkB,kBAAlB,EAAsC9xB,MAAM,CAACj9B,KAA7C;AAEA,SAAK2rB,KAAL,CAAWF,KAAX,CAAiBxD,WAAW,GAAGC,kBAAd,GAAmCH,WAApD;AAEA,UAAMiyC,SAAS,GAAG,KAAK1nD,KAAL,CAAWikC,MAA7B;AACA,SAAKjkC,KAAL,CAAWikC,MAAX,GAAoB,EAApB;AAGA,SAAKsS,SAAL,CAAep9B,KAAf,CAAqByvB,KAArB;AACA,UAAMjgD,IAAI,GAAIgiC,MAAM,CAAChiC,IAAP,GAAc,EAA5B;AACA,SAAKwtD,2BAAL,CAAiCxtD,IAAjC,EAAuCtD,SAAvC,EAAkD,KAAlD,EAAyD0tB,OAAE,CAACtZ,MAA5D;AACA,SAAK88C,SAAL,CAAen9B,IAAf;AACA,SAAKC,KAAL,CAAWD,IAAX;AACA,SAAKpZ,KAAL,CAAWikC,MAAX,GAAoByjB,SAApB;AACA34C,IAAAA,SAAS,CAACpmB,IAAV,CAAexD,IAAf,CAAoB,KAAK+qB,UAAL,CAA+Bya,MAA/B,EAAuC,aAAvC,CAApB;A;AACA,8BAAIA,MAAM,CAACwtB,UAAX,aAAI,mBAAmBzwD,MAAvB,EAA+B;AAC7B,WAAKkkB,KAAL,CAAW+e,MAAM,CAACj9B,KAAlB,EAAyBujB,aAAM,CAAClO,oBAAhC;AACD;AACF;A;AAED2yD,EAAAA,iBAAiB,CAAC3mD,SAAD,EAAyBwB,IAAzB,EAAgD;AAC/D,QACE,CAACA,IAAI,CAACN,QAAN,KACCM,IAAI,CAAC3gB,GAAL,CAASf,IAAT,KAAkB,aAAlB,IAAmC0hB,IAAI,CAAC3gB,GAAL,CAAShD,KAAT,KAAmB,aADvD,CADF,EAGE;AAGA,WAAKgf,KAAL,CAAW2E,IAAI,CAAC3gB,GAAL,CAASlC,KAApB,EAA2BujB,aAAM,CAAC5O,qBAAlC;AACD;A;AAED0M,IAAAA,SAAS,CAACpmB,IAAV,CAAexD,IAAf,CAAoB,KAAKgrB,kBAAL,CAAwBI,IAAxB,CAApB;AACD;A;AAEDklD,EAAAA,wBAAwB,CACtB1mD,SADsB,EAEtBwB,IAFsB,EAGtB;AACA,UAAMnQ,IAAI,GAAG,KAAKiQ,yBAAL,CAA+BE,IAA/B,CAAb;AACAxB,IAAAA,SAAS,CAACpmB,IAAV,CAAexD,IAAf,CAAoBib,IAApB;AAEA,SAAKwkD,UAAL,CAAgBD,kBAAhB,CACE,KAAKp1C,gBAAL,CAAsBnP,IAAI,CAACxQ,GAA3B,CADF,EAEEmoB,mBAFF,EAGE3X,IAAI,CAACxQ,GAAL,CAASlC,KAHX;AAKD;A;AAEDohB,EAAAA,eAAe,CACbC,SADa,EAEbV,MAFa,EAGbW,WAHa,EAIbf,OAJa,EAKbgB,aALa,EAMbC,iBANa,EAOP;AACNH,IAAAA,SAAS,CAACpmB,IAAV,CAAexD,IAAf,CACE,KAAKgqB,WAAL,CACEd,MADF,EAEEW,WAFF,EAGEf,OAHF,EAIEgB,aAJF,EAKEC,iBALF,EAME,aANF,EAOE,IAPF,CADF;AAWD;A;AAEDkd,EAAAA,sBAAsB,CACpBrd,SADoB,EAEpBV,MAFoB,EAGpBW,WAHoB,EAIpBf,OAJoB,EAKd;AACN,UAAM7N,IAAI,GAAG,KAAK+O,WAAL,CACXd,MADW,EAEXW,WAFW,EAGXf,OAHW,EAIS,KAJT,EAKX,KALW,EAMX,oBANW,EAOX,IAPW,CAAb;AASAc,IAAAA,SAAS,CAACpmB,IAAV,CAAexD,IAAf,CAAoBib,IAApB;AAEA,UAAM4P,IAAI,GACR5P,IAAI,CAAC4P,IAAL,KAAc,KAAd,GACI5P,IAAI,CAACgkB,MAAL,GACEzM,2BADF,GAEEE,6BAHN,GAIIzX,IAAI,CAAC4P,IAAL,KAAc,KAAd,GACA5P,IAAI,CAACgkB,MAAL,GACExM,2BADF,GAEEE,6BAHF,GAIAC,mBATN;AAUA,SAAK6sC,UAAL,CAAgBD,kBAAhB,CACE,KAAKp1C,gBAAL,CAAsBnP,IAAI,CAACxQ,GAA3B,CADF,EAEEogB,IAFF,EAGE5P,IAAI,CAACxQ,GAAL,CAASlC,KAHX;AAKD;A;AAGD2sD,EAAAA,4BAA4B,CAE1BC,YAF0B,EAGpB;A;AAGRjqC,EAAAA,yBAAyB,CACvBjQ,IADuB,EAEC;AACxB,SAAKu1D,gBAAL,CAAsBv1D,IAAtB;AACA,SAAK8f,SAAL;AACA,WAAO,KAAKhQ,UAAL,CAAgB9P,IAAhB,EAAsB,sBAAtB,CAAP;AACD;A;AAGD+P,EAAAA,kBAAkB,CAAC/P,IAAD,EAAyC;AACzD,SAAKu1D,gBAAL,CAAsBv1D,IAAtB;AACA,SAAK8f,SAAL;AACA,WAAO,KAAKhQ,UAAL,CAAgB9P,IAAhB,EAAsB,eAAtB,CAAP;AACD;A;AAGDu1D,EAAAA,gBAAgB,CAACv1D,IAAD,EAAuD;AACrE,SAAKiZ,KAAL,CAAWF,KAAX,CAAiBxD,WAAW,GAAGF,WAA/B;AACA,SAAKuyC,eAAL,CAAqB7uC,KAArB,CAA2BqtC,kBAAkB,EAA7C;AACA,SAAKjQ,SAAL,CAAep9B,KAAf,CAAqByvB,KAArB;AACAxoC,IAAAA,IAAI,CAACxT,KAAL,GAAa,KAAKoyB,GAAL,CAASjM,OAAE,CAACnY,EAAZ,IAAkB,KAAKuuB,uBAAL,EAAlB,GAAmD,IAAhE;AACA,SAAK6+B,eAAL,CAAqB5uC,IAArB;AACA,SAAKm9B,SAAL,CAAen9B,IAAf;AACA,SAAKC,KAAL,CAAWD,IAAX;AACD;A;AAEDmR,EAAAA,YAAY,CACVnqB,IADU,EAEVoqB,WAFU,EAGVC,UAHU,EAIVlR,WAAyB,GAAG7C,UAJlB,EAKJ;AACN,QAAI,KAAKzlB,KAAL,CAAW8hB,OAAE,CAAClkB,IAAd,CAAJ,EAAyB;AACvBuR,MAAAA,IAAI,CAAChZ,EAAL,GAAU,KAAKm4B,eAAL,EAAV;A;AACA,UAAIiL,WAAJ,EAAiB;AACf,aAAKuB,SAAL,CAAe3rB,IAAI,CAAChZ,EAApB,EAAwB,YAAxB,EAAsCmyB,WAAtC;AACD;AACF,KALD,MAKO;AACL,UAAIkR,UAAU,IAAI,CAACD,WAAnB,EAAgC;AAC9BpqB,QAAAA,IAAI,CAAChZ,EAAL,GAAU,IAAV;AACD,OAFD,MAEO;AACL,aAAK05B,UAAL,CAAgB,IAAhB,EAAsB7P,aAAM,CAACpL,gBAA7B;AACD;AACF;AACF;A;AAGDwmB,EAAAA,eAAe,CAACjsB,IAAD,EAAsB;AACnCA,IAAAA,IAAI,CAACmM,UAAL,GAAkB,KAAKyS,GAAL,CAASjM,OAAE,CAACxV,QAAZ,IAAwB,KAAKuuD,mBAAL,EAAxB,GAAqD,IAAvE;AACD;A;AAKDv6C,EAAAA,WAAW,CAACnR,IAAD,EAA4B;AACrC,UAAMw1D,UAAU,GAAG,KAAKhZ,gCAAL,CAAsCx8C,IAAtC,CAAnB;AACA,UAAMy1D,iBAAiB,GAAG,CAACD,UAAD,IAAe,KAAK52C,GAAL,CAASjM,OAAE,CAAClZ,KAAZ,CAAzC;AACA,UAAMi8D,OAAO,GAAGD,iBAAiB,IAAI,KAAKzrC,aAAL,CAAmBhqB,IAAnB,CAArC;AACA,UAAMkqB,YAAY,GAChBwrC,OAAO,IAAI,KAAKzrC,kCAAL,CAAwCjqB,IAAxC,CADb;AAEA,UAAM21D,mBAAmB,GACvBF,iBAAiB,KAAK,CAACvrC,YAAD,IAAiB,KAAKtL,GAAL,CAASjM,OAAE,CAAClZ,KAAZ,CAAtB,CADnB;AAEA,UAAMm8D,cAAc,GAAGJ,UAAU,IAAIE,OAArC;A;AAEA,QAAIA,OAAO,IAAI,CAACxrC,YAAhB,EAA8B;AAC5B,UAAIsrC,UAAJ,EAAgB,KAAK90C,UAAL;AAChB,WAAKqJ,eAAL,CAAqB/pB,IAArB,EAA2B,IAA3B;AAEA,aAAO,KAAK8P,UAAL,CAAgB9P,IAAhB,EAAsB,sBAAtB,CAAP;AACD;A;AAED,UAAM61D,aAAa,GAAG,KAAKC,+BAAL,CAAqC91D,IAArC,CAAtB;A;AAEA,QACGw1D,UAAU,IAAIC,iBAAd,IAAmC,CAACC,OAApC,IAA+C,CAACG,aAAjD,IACC3rC,YAAY,IAAIyrC,mBAAhB,IAAuC,CAACE,aAF3C,EAGE;AACA,YAAM,KAAKn1C,UAAL,CAAgB,IAAhB,EAAsB/N,OAAE,CAACzZ,MAAzB,CAAN;AACD;A;AAED,QAAI68D,cAAJ;A;AACA,QAAIH,cAAc,IAAIC,aAAtB,EAAqC;AACnCE,MAAAA,cAAc,GAAG,KAAjB;AACA,WAAKhsC,eAAL,CAAqB/pB,IAArB,EAA2B41D,cAA3B;AACD,KAHD,MAGO;AACLG,MAAAA,cAAc,GAAG,KAAKC,2BAAL,CAAiCh2D,IAAjC,CAAjB;AACD;A;AAED,QAAI41D,cAAc,IAAIC,aAAlB,IAAmCE,cAAvC,EAAuD;AACrD,WAAKtZ,WAAL,CAAiBz8C,IAAjB,EAAuB,IAAvB,EAA6B,KAA7B,EAAoC,CAAC,CAACA,IAAI,CAAC3S,MAA3C;AACA,aAAO,KAAKyiB,UAAL,CAAgB9P,IAAhB,EAAsB,wBAAtB,CAAP;AACD;A;AAED,QAAI,KAAK4e,GAAL,CAASjM,OAAE,CAAC3W,QAAZ,CAAJ,EAA2B;AAEzBgE,MAAAA,IAAI,CAACgd,WAAL,GAAmB,KAAK6K,4BAAL,EAAnB;AACA,WAAK40B,WAAL,CAAiBz8C,IAAjB,EAAuB,IAAvB,EAA6B,IAA7B;AAEA,aAAO,KAAK8P,UAAL,CAAgB9P,IAAhB,EAAsB,0BAAtB,CAAP;AACD;A;AAED,UAAM,KAAK0gB,UAAL,CAAgB,IAAhB,EAAsB/N,OAAE,CAACzZ,MAAzB,CAAN;AACD;A;AAGD8wB,EAAAA,aAAa,CAAChqB,IAAD,EAAwB;AACnC,WAAO,KAAK4e,GAAL,CAASjM,OAAE,CAACnX,IAAZ,CAAP;AACD;A;AAEDghD,EAAAA,gCAAgC,CAACx8C,IAAD,EAAwB;AACtD,QAAI,KAAK4nB,wBAAL,EAAJ,EAAqC;AAEnC,WAAKy0B,YAAL,CAAkB,mBAAlB;AACA,YAAMxvB,SAAS,GAAG,KAAKld,SAAL,EAAlB;AACAkd,MAAAA,SAAS,CAACzb,QAAV,GAAqB,KAAK+N,eAAL,CAAqB,IAArB,CAArB;AACAnf,MAAAA,IAAI,CAACqR,UAAL,GAAkB,CAAC,KAAKvB,UAAL,CAAgB+c,SAAhB,EAA2B,wBAA3B,CAAD,CAAlB;AACA,aAAO,IAAP;AACD;A;AACD,WAAO,KAAP;AACD;A;AAED5C,EAAAA,kCAAkC,CAACjqB,IAAD,EAAwB;AACxD,QAAI,KAAKqgB,YAAL,CAAkB,IAAlB,CAAJ,EAA6B;AAC3B,UAAI,CAACrgB,IAAI,CAACqR,UAAV,EAAsBrR,IAAI,CAACqR,UAAL,GAAkB,EAAlB;AAEtB,YAAMwb,SAAS,GAAG,KAAKvf,WAAL,CAChB,KAAK1N,KAAL,CAAWuL,YADK,EAEhB,KAAKvL,KAAL,CAAWwL,eAFK,CAAlB;AAKA,WAAK2J,IAAL;AAEA8X,MAAAA,SAAS,CAACzb,QAAV,GAAqB,KAAKgc,qBAAL,EAArB;AACAptB,MAAAA,IAAI,CAACqR,UAAL,CAAgBtsB,IAAhB,CACE,KAAK+qB,UAAL,CAAgB+c,SAAhB,EAA2B,0BAA3B,CADF;AAGA,aAAO,IAAP;AACD;A;AACD,WAAO,KAAP;AACD;A;AAEDipC,EAAAA,+BAA+B,CAAC91D,IAAD,EAAwB;AACrD,QAAI,KAAKnP,KAAL,CAAW8hB,OAAE,CAACzZ,MAAd,CAAJ,EAA2B;AACzB,UAAI,CAAC8G,IAAI,CAACqR,UAAV,EAAsBrR,IAAI,CAACqR,UAAL,GAAkB,EAAlB;AACtBrR,MAAAA,IAAI,CAACqR,UAAL,CAAgBtsB,IAAhB,CAAqB,GAAG,KAAK+kC,qBAAL,EAAxB;AAEA9pB,MAAAA,IAAI,CAAC3S,MAAL,GAAc,IAAd;AACA2S,MAAAA,IAAI,CAACgd,WAAL,GAAmB,IAAnB;AAEA,aAAO,IAAP;AACD;A;AACD,WAAO,KAAP;AACD;A;AAEDg5C,EAAAA,2BAA2B,CAACh2D,IAAD,EAAwB;AACjD,QAAI,KAAK2nB,4BAAL,EAAJ,EAAyC;AACvC3nB,MAAAA,IAAI,CAACqR,UAAL,GAAkB,EAAlB;AACArR,MAAAA,IAAI,CAAC3S,MAAL,GAAc,IAAd;AACA2S,MAAAA,IAAI,CAACgd,WAAL,GAAmB,KAAK4M,sBAAL,CAA4B5pB,IAA5B,CAAnB;AACA,aAAO,IAAP;AACD;A;AACD,WAAO,KAAP;AACD;A;AAEDoyD,EAAAA,eAAe,GAAY;AACzB,QAAI,CAAC,KAAK/xC,YAAL,CAAkB,OAAlB,CAAL,EAAiC,OAAO,KAAP;AACjC,UAAMtL,IAAI,GAAG,KAAKqe,cAAL,EAAb;AACA,WACE,CAACt1B,SAAS,CAAC/X,IAAV,CAAe,KAAK4Y,KAAL,CAAWjK,KAAX,CAAiB,KAAKkL,KAAL,CAAWqL,GAA5B,EAAiC8J,IAAjC,CAAf,CAAD,IACA,KAAKunC,oBAAL,CAA0BvnC,IAA1B,EAAgC,UAAhC,CAFF;AAID;A;AAED8S,EAAAA,4BAA4B,GAAiC;AAC3D,UAAMH,IAAI,GAAG,KAAK/X,SAAL,EAAb;AAEA,UAAM9B,OAAO,GAAG,KAAKukD,eAAL,EAAhB;A;AAEA,QAAI,KAAKvhE,KAAL,CAAW8hB,OAAE,CAACtW,SAAd,KAA4BwR,OAAhC,EAAyC;AACvC,WAAKkH,IAAL;A;AACA,UAAIlH,OAAJ,EAAa;AACX,aAAKkH,IAAL;AACD;A;AAED,aAAO,KAAK43C,aAAL,CACLjlC,IADK,EAEL+oC,cAAc,GAAGE,gBAFZ,EAGL9iD,OAHK,CAAP;AAKD,KAXD,MAWO,IAAI,KAAKhd,KAAL,CAAW8hB,OAAE,CAACzV,MAAd,CAAJ,EAA2B;AAChC,aAAO,KAAKg6C,UAAL,CAAgBxvB,IAAhB,EAAsB,IAAtB,EAA4B,IAA5B,CAAP;AACD,KAFM,MAEA,IAAI,KAAK72B,KAAL,CAAW8hB,OAAE,CAACtY,EAAd,CAAJ,EAAuB;AAC5B,UACE,KAAK4E,SAAL,CAAe,YAAf,KACA,KAAKG,eAAL,CAAqB,YAArB,EAAmC,wBAAnC,CAFF,EAGE;AACA,aAAKoM,KAAL,CAAW,KAAK5L,KAAL,CAAWtS,KAAtB,EAA6BujB,aAAM,CAACtO,qBAApC;AACD;A;AACD,WAAKwqD,eAAL,CAAqB,KAArB;AACA,aAAO,KAAK7V,UAAL,CAAgBxvB,IAAhB,EAAsB,IAAtB,EAA4B,IAA5B,CAAP;AACD,KATM,MASA,IAAI,KAAK72B,KAAL,CAAW8hB,OAAE,CAAC/V,MAAd,KAAyB,KAAK/L,KAAL,CAAW8hB,OAAE,CAAChW,IAAd,CAAzB,IAAgD,KAAKskB,KAAL,EAApD,EAAkE;AACvE,YAAM,KAAKzV,KAAL,CAAW,KAAK5L,KAAL,CAAWtS,KAAtB,EAA6BujB,aAAM,CAAClH,wBAApC,CAAN;AACD,KAFM,MAEA;AACL,YAAMjc,GAAG,GAAG,KAAKq7B,uBAAL,EAAZ;AACA,WAAKjJ,SAAL;AACA,aAAOpyB,GAAP;AACD;AACF;A;AAGDk8B,EAAAA,sBAAsB,CAAC5pB,IAAD,EAAiD;AACrE,WAAO,KAAKsnB,cAAL,CAAoB,IAApB,CAAP;AACD;A;AAEDM,EAAAA,wBAAwB,GAAY;AAClC,QAAI,KAAK/2B,KAAL,CAAW8hB,OAAE,CAAClkB,IAAd,CAAJ,EAAyB;AACvB,YAAMjC,KAAK,GAAG,KAAKoT,KAAL,CAAWpT,KAAzB;A;AACA,UAAKA,KAAK,KAAK,OAAV,IAAqB,CAAC,KAAKoT,KAAL,CAAWqkC,WAAlC,IAAkDz3C,KAAK,KAAK,KAAhE,EAAuE;AACrE,eAAO,KAAP;AACD;A;AACD,UACE,CAACA,KAAK,KAAK,MAAV,IAAoBA,KAAK,KAAK,WAA/B,KACA,CAAC,KAAKoT,KAAL,CAAWqkC,WAFd,EAGE;AACA,cAAMgyB,CAAC,GAAG,KAAKhyC,SAAL,EAAV;A;AAKA,YACGgyC,CAAC,CAAC5vE,IAAF,KAAWssB,OAAE,CAAClkB,IAAd,IAAsBwnE,CAAC,CAACzpE,KAAF,KAAY,MAAnC,IACAypE,CAAC,CAAC5vE,IAAF,KAAWssB,OAAE,CAACzZ,MAFhB,EAGE;AACA,eAAK2tD,eAAL,CAAqB,CAAC,MAAD,EAAS,YAAT,CAArB;AACA,iBAAO,KAAP;AACD;AACF;AACF,KAtBD,MAsBO,IAAI,CAAC,KAAKh2D,KAAL,CAAW8hB,OAAE,CAAC3W,QAAd,CAAL,EAA8B;AACnC,aAAO,KAAP;AACD;A;AAED,UAAM+Y,IAAI,GAAG,KAAKqe,cAAL,EAAb;AACA,UAAM8iC,OAAO,GAAG,KAAK5Z,oBAAL,CAA0BvnC,IAA1B,EAAgC,MAAhC,CAAhB;A;AACA,QACE,KAAKpW,KAAL,CAAWzN,UAAX,CAAsB6jB,IAAtB,YACC,KAAKlkB,KAAL,CAAW8hB,OAAE,CAAClkB,IAAd,KAAuBynE,OAF1B,EAGE;AACA,aAAO,IAAP;AACD;A;AAED,QAAI,KAAKrlE,KAAL,CAAW8hB,OAAE,CAAC3W,QAAd,KAA2Bk6D,OAA/B,EAAwC;AACtC,YAAMC,aAAa,GAAG,KAAKx3D,KAAL,CAAWzN,UAAX,CACpB,KAAKqrD,mBAAL,CAAyBxnC,IAAI,GAAG,CAAhC,CADoB,CAAtB;AAGA,aACEohD,aAAa,OAAb,IACAA,aAAa,OAFf;AAID;A;AACD,WAAO,KAAP;AACD;A;AAEDpsC,EAAAA,eAAe,CAAC/pB,IAAD,EAAiCue,MAAjC,EAAyD;AACtE,QAAI,KAAK2B,aAAL,CAAmB,MAAnB,CAAJ,EAAgC;AAC9BlgB,MAAAA,IAAI,CAAC3S,MAAL,GAAc,KAAKwvD,iBAAL,EAAd;AACA,WAAKJ,WAAL,CAAiBz8C,IAAjB;AACA,YAAMo2D,UAAU,GAAG,KAAKC,0BAAL,EAAnB;A;AACA,UAAID,UAAJ,EAAgB;AACdp2D,QAAAA,IAAI,CAACo2D,UAAL,GAAkBA,UAAlB;AACD;AACF,KAPD,MAOO;AACL,UAAI73C,MAAJ,EAAY;AACV,aAAKmC,UAAL;AACD,OAFD,MAEO;AACL1gB,QAAAA,IAAI,CAAC3S,MAAL,GAAc,IAAd;AACD;AACF;A;AAED,SAAKyyB,SAAL;AACD;A;AAED6H,EAAAA,4BAA4B,GAAY;AACtC,QAAI,KAAK92B,KAAL,CAAW8hB,OAAE,CAACtY,EAAd,CAAJ,EAAuB;AACrB,WAAKwsD,eAAL,CAAqB,CAAC,YAAD,EAAe,mBAAf,CAArB;A;AACA,UAAI,KAAK5nD,SAAL,CAAe,YAAf,CAAJ,EAAkC;AAChC,YAAI,KAAKG,eAAL,CAAqB,YAArB,EAAmC,wBAAnC,CAAJ,EAAkE;AAChE,eAAKshB,UAAL,CAAgB,KAAK9gB,KAAL,CAAWtS,KAA3B,EAAkCujB,aAAM,CAACtO,qBAAzC;AACD,SAFD,MAEO;AACL,iBAAO,IAAP;AACD;AACF;AACF;A;AAED,WACE,KAAK3C,KAAL,CAAWvZ,IAAX,CAAgBsR,OAAhB,KAA4B,KAA5B,IACA,KAAKiI,KAAL,CAAWvZ,IAAX,CAAgBsR,OAAhB,KAA4B,OAD5B,IAEA,KAAKiI,KAAL,CAAWvZ,IAAX,CAAgBsR,OAAhB,KAA4B,UAF5B,IAGA,KAAKiI,KAAL,CAAWvZ,IAAX,CAAgBsR,OAAhB,KAA4B,OAH5B,IAIA,KAAKspB,KAAL,EAJA,IAKA,KAAKmxC,eAAL,EANF;AAQD;A;AAED3V,EAAAA,WAAW,CACTz8C,IADS,EAETs2D,UAFS,EAGTC,SAHS,EAITC,MAJS,EAKH;AACN,QAAIF,UAAJ,EAAgB;AAEd,UAAIC,SAAJ,EAAe;AAEb,aAAKpd,qBAAL,CAA2Bn5C,IAA3B,EAAiC,SAAjC;A;AACA,YAAI,KAAKf,SAAL,CAAe,mBAAf,CAAJ,EAAyC;AAAA;A;AACvC,gBAAM+d,WAAW,GAAKhd,IAAF,CACjBgd,WADH;A;AAEA,cACEA,WAAW,CAAC32B,IAAZ,KAAqB,YAArB,IACA22B,WAAW,CAACvuB,IAAZ,KAAqB,MADrB,IAEAuuB,WAAW,CAACzvB,GAAZ,GAAkByvB,WAAW,CAAC1vB,KAA9B,KAAwC,CAFxC,IAGA,wBAAC0vB,WAAW,CAACxP,KAAb,aAAC,mBAAmBW,aAApB,CAJF,EAKE;AACA,iBAAK3C,KAAL,CAAWwR,WAAW,CAAC1vB,KAAvB,EAA8BujB,aAAM,CAACvN,6BAArC;AACD;AACF;AACF,OAfD,MAeO,IAAItD,IAAI,CAACqR,UAAL,IAAmBrR,IAAI,CAACqR,UAAL,CAAgB/pB,MAAvC,EAA+C;AAEpD,aAAK,MAAMulC,SAAX,IAAwB7sB,IAAI,CAACqR,UAA7B,EAAyC;AACvC,gBAAM;AAAED,YAAAA;AAAF,cAAeyb,SAArB;AACA,gBAAM4pC,YAAY,GAChBrlD,QAAQ,CAAC/qB,IAAT,KAAkB,YAAlB,GAAiC+qB,QAAQ,CAAC3iB,IAA1C,GAAiD2iB,QAAQ,CAAC5kB,KAD5D;AAEA,eAAK2sD,qBAAL,CAA2BtsB,SAA3B,EAAsC4pC,YAAtC;A;AAEA,cAAI,CAACD,MAAD,IAAW3pC,SAAS,CAACE,KAAzB,EAAgC;AAC9B,kBAAM;AAAEA,cAAAA;AAAF,gBAAYF,SAAlB;A;AACA,gBAAIE,KAAK,CAAC1mC,IAAN,KAAe,YAAnB,EAAiC;AAC/B,mBAAKmlB,KAAL,CACEqhB,SAAS,CAACv/B,KADZ,EAEEujB,aAAM,CAACxN,qBAFT,EAGE0pB,KAAK,CAACvgC,KAHR,EAIEiqE,YAJF;AAMD,aAPD,MAOO;AAEL,mBAAK7oC,iBAAL,CAAuBb,KAAK,CAACt+B,IAA7B,EAAmCs+B,KAAK,CAACz/B,KAAzC,EAAgD,IAAhD,EAAsD,KAAtD;AAEA,mBAAK2rB,KAAL,CAAWO,gBAAX,CAA4BuT,KAA5B;AACD;AACF;AACF;AACF,OAzBM,MAyBA,IAAI/sB,IAAI,CAACgd,WAAT,EAAsB;AAE3B,YACEhd,IAAI,CAACgd,WAAL,CAAiB32B,IAAjB,KAA0B,qBAA1B,IACA2Z,IAAI,CAACgd,WAAL,CAAiB32B,IAAjB,KAA0B,kBAF5B,EAGE;AACA,gBAAMW,EAAE,GAAGgZ,IAAI,CAACgd,WAAL,CAAiBh2B,EAA5B;AACA,cAAI,CAACA,EAAL,EAAS,MAAM,IAAIk3B,KAAJ,CAAU,mBAAV,CAAN;AAET,eAAKi7B,qBAAL,CAA2Bn5C,IAA3B,EAAiChZ,EAAE,CAACyH,IAApC;AACD,SARD,MAQO,IAAIuR,IAAI,CAACgd,WAAL,CAAiB32B,IAAjB,KAA0B,qBAA9B,EAAqD;AAC1D,eAAK,MAAM22B,WAAX,IAA0Bhd,IAAI,CAACgd,WAAL,CAAiBi2C,YAA3C,EAAyD;AACvD,iBAAKnlD,gBAAL,CAAsBkP,WAAW,CAACh2B,EAAlC;AACD;AACF;AACF;AACF;A;AAED,UAAMwrE,wBAAwB,GAC5B,KAAK5yD,KAAL,CAAWkkC,cAAX,CAA0B,KAAKlkC,KAAL,CAAWkkC,cAAX,CAA0Bx8C,MAA1B,GAAmC,CAA7D,CADF;A;AAIA,QAAIkrE,wBAAwB,CAAClrE,MAA7B,EAAqC;AACnC,YAAM,KAAKkkB,KAAL,CAAWxL,IAAI,CAAC1S,KAAhB,EAAuBujB,aAAM,CAACnH,0BAA9B,CAAN;AACD;AACF;A;AAEDoE,EAAAA,gBAAgB,CAAC9N,IAAD,EAA2C;AACzD,QAAIA,IAAI,CAAC3Z,IAAL,KAAc,YAAlB,EAAgC;AAC9B,WAAK8yD,qBAAL,CAA2Bn5C,IAA3B,EAAiCA,IAAI,CAACvR,IAAtC;AACD,KAFD,MAEO,IAAIuR,IAAI,CAAC3Z,IAAL,KAAc,eAAlB,EAAmC;AACxC,WAAK,MAAM8pB,IAAX,IAAmBnQ,IAAI,CAACa,UAAxB,EAAoC;AAClC,aAAKiN,gBAAL,CAAsBqC,IAAtB;AACD;AACF,KAJM,MAIA,IAAInQ,IAAI,CAAC3Z,IAAL,KAAc,cAAlB,EAAkC;AACvC,WAAK,MAAMgjE,IAAX,IAAmBrpD,IAAI,CAACC,QAAxB,EAAkC;AAChC,YAAIopD,IAAJ,EAAU;AACR,eAAKv7C,gBAAL,CAAsBu7C,IAAtB;AACD;AACF;AACF,KANM,MAMA,IAAIrpD,IAAI,CAAC3Z,IAAL,KAAc,gBAAlB,EAAoC;AACzC,WAAKynB,gBAAL,CAAsB9N,IAAI,CAACxT,KAA3B;AACD,KAFM,MAEA,IAAIwT,IAAI,CAAC3Z,IAAL,KAAc,aAAlB,EAAiC;AACtC,WAAKynB,gBAAL,CAAsB9N,IAAI,CAACmlB,QAA3B;AACD,KAFM,MAEA,IAAInlB,IAAI,CAAC3Z,IAAL,KAAc,mBAAlB,EAAuC;AAC5C,WAAKynB,gBAAL,CAAsB9N,IAAI,CAAC0sB,IAA3B;AACD;AACF;A;AAEDysB,EAAAA,qBAAqB,CACnBn5C,IADmB,EAOnBvR,IAPmB,EAQb;AACN,QAAI,KAAKmR,KAAL,CAAWukC,mBAAX,CAA+B5+C,OAA/B,CAAuCkJ,IAAvC,IAA+C,CAAC,CAApD,EAAuD;AACrD,WAAK+c,KAAL,CACExL,IAAI,CAAC1S,KADP,EAEEmB,IAAI,KAAK,SAAT,GACIoiB,aAAM,CAAC9N,sBADX,GAEI8N,aAAM,CAAC7N,eAJb,EAKEvU,IALF;AAOD;A;AACD,SAAKmR,KAAL,CAAWukC,mBAAX,CAA+Bp/C,IAA/B,CAAoC0J,IAApC;AACD;A;AAIDq7B,EAAAA,qBAAqB,GAA6B;AAChD,UAAM4sC,KAAK,GAAG,EAAd;AACA,QAAI5wC,KAAK,GAAG,IAAZ;AAGA,SAAKvH,MAAL,CAAY5L,OAAE,CAACzZ,MAAf;A;AAEA,WAAO,CAAC,KAAK0lB,GAAL,CAASjM,OAAE,CAACtZ,MAAZ,CAAR,EAA6B;AAC3B,UAAIysB,KAAJ,EAAW;AACTA,QAAAA,KAAK,GAAG,KAAR;AACD,OAFD,MAEO;AACL,aAAKvH,MAAL,CAAY5L,OAAE,CAAClZ,KAAf;AACA,YAAI,KAAKmlB,GAAL,CAASjM,OAAE,CAACtZ,MAAZ,CAAJ,EAAyB;AAC1B;A;AAED,YAAM2G,IAAI,GAAG,KAAK2P,SAAL,EAAb;AACA3P,MAAAA,IAAI,CAAC+sB,KAAL,GAAa,KAAKK,qBAAL,EAAb;AACAptB,MAAAA,IAAI,CAACoR,QAAL,GAAgB,KAAK8O,aAAL,CAAmB,IAAnB,IACZ,KAAKkN,qBAAL,EADY,GAEZptB,IAAI,CAAC+sB,KAAL,CAAWU,OAAX,EAFJ;AAGAipC,MAAAA,KAAK,CAAC3xE,IAAN,CAAW,KAAK+qB,UAAL,CAAgB9P,IAAhB,EAAsB,iBAAtB,CAAX;AACD;A;AAED,WAAO02D,KAAP;AACD;A;AAGDtpC,EAAAA,qBAAqB,GAAmC;AACtD,QAAI,KAAKv8B,KAAL,CAAW8hB,OAAE,CAAC/hB,MAAd,CAAJ,EAA2B;AACzB,YAAMo3B,MAAM,GAAG,KAAKlb,kBAAL,CAAwB,KAAKlN,KAAL,CAAWpT,KAAnC,CAAf;AACA,YAAMmqE,SAAS,GAAG3uC,MAAM,CAACx7B,KAAP,CAAaqE,KAAb,CAAmB+/D,aAAnB,CAAlB;A;AACA,UAAI+F,SAAJ,EAAe;AACb,aAAKnrD,KAAL,CACEwc,MAAM,CAAC16B,KADT,EAEEujB,aAAM,CAAC5K,gCAFT,EAGE0wD,SAAS,CAAC,CAAD,CAAT,CAAazlE,UAAb,CAAwB,CAAxB,EAA2BsD,QAA3B,CAAoC,EAApC,CAHF;AAKD;A;AACD,aAAOwzB,MAAP;AACD;A;AACD,WAAO,KAAK7I,eAAL,CAAqB,IAArB,CAAP;AACD;A;AAKD2B,EAAAA,WAAW,CAAC9gB,IAAD,EAA4B;AAErCA,IAAAA,IAAI,CAACqR,UAAL,GAAkB,EAAlB;A;AACA,QAAI,CAAC,KAAKxgB,KAAL,CAAW8hB,OAAE,CAAC/hB,MAAd,CAAL,EAA4B;AAG1B,YAAM4kE,UAAU,GAAG,KAAKxoC,gCAAL,CAAsChtB,IAAtC,CAAnB;AAOA,YAAM42D,SAAS,GAAG,CAACpB,UAAD,IAAe,KAAK52C,GAAL,CAASjM,OAAE,CAAClZ,KAAZ,CAAjC;AAGA,YAAMi8D,OAAO,GAAGkB,SAAS,IAAI,KAAKja,6BAAL,CAAmC38C,IAAnC,CAA7B;AAGA,UAAI42D,SAAS,IAAI,CAAClB,OAAlB,EAA2B,KAAK9Y,0BAAL,CAAgC58C,IAAhC;AAC3B,WAAK2e,gBAAL,CAAsB,MAAtB;AACD;A;AACD3e,IAAAA,IAAI,CAAC3S,MAAL,GAAc,KAAKwvD,iBAAL,EAAd;AAIA,UAAMuZ,UAAU,GAAG,KAAKC,0BAAL,EAAnB;A;AACA,QAAID,UAAJ,EAAgB;AACdp2D,MAAAA,IAAI,CAACo2D,UAAL,GAAkBA,UAAlB;AACD,KAFD,MAE0C;AACxC,YAAMnlD,UAAU,GAAG,KAAK4lD,0BAAL,EAAnB;A;AACA,UAAI5lD,UAAJ,EAAgB;AACdjR,QAAAA,IAAI,CAACiR,UAAL,GAAkBA,UAAlB;AACD;AACF;A;AAED,SAAK6O,SAAL;AACA,WAAO,KAAKhQ,UAAL,CAAgB9P,IAAhB,EAAsB,mBAAtB,CAAP;AACD;A;AAED68C,EAAAA,iBAAiB,GAAoB;AACnC,QAAI,CAAC,KAAKhsD,KAAL,CAAW8hB,OAAE,CAAC/hB,MAAd,CAAL,EAA4B,KAAK8vB,UAAL;AAC5B,WAAO,KAAKE,aAAL,EAAP;AACD;A;AAGD+L,EAAAA,wBAAwB,CAAC3sB,IAAD,EAAqC;AAC3D,WAAO,KAAKnP,KAAL,CAAW8hB,OAAE,CAAClkB,IAAd,CAAP;AACD;A;AAEDm+B,EAAAA,yBAAyB,CACvB5sB,IADuB,EAEvB6sB,SAFuB,EAGvBxmC,IAHuB,EAIvBymC,kBAJuB,EAKjB;AACND,IAAAA,SAAS,CAACE,KAAV,GAAkB,KAAK5N,eAAL,EAAlB;AACA,SAAKwM,SAAL,CAAekB,SAAS,CAACE,KAAzB,EAAgCD,kBAAhC,EAAoDvW,YAApD;AACAvW,IAAAA,IAAI,CAACqR,UAAL,CAAgBtsB,IAAhB,CAAqB,KAAK+qB,UAAL,CAAgB+c,SAAhB,EAA2BxmC,IAA3B,CAArB;AACD;A;AASDywE,EAAAA,kBAAkB,GAAwB;AACxC,UAAMC,KAAK,GAAG,EAAd;AACA,UAAMC,SAAS,GAAG,IAAI7iD,GAAJ,EAAlB;A;AAEA,OAAG;AACD,UAAI,KAAKtjB,KAAL,CAAW8hB,OAAE,CAACtZ,MAAd,CAAJ,EAA2B;AACzB;AACD;A;AAED,YAAM2G,IAAI,GAAG,KAAK2P,SAAL,EAAb;AAGA,YAAMo/C,OAAO,GAAG,KAAKnvD,KAAL,CAAWpT,KAA3B;A;AACA,UAAI,KAAKqE,KAAL,CAAW8hB,OAAE,CAAC/hB,MAAd,CAAJ,EAA2B;AACzBoP,QAAAA,IAAI,CAACxQ,GAAL,GAAW,KAAKsd,kBAAL,CAAwBiiD,OAAxB,CAAX;AACD,OAFD,MAEO;AACL/uD,QAAAA,IAAI,CAACxQ,GAAL,GAAW,KAAK2vB,eAAL,CAAqB,IAArB,CAAX;AACD;A;AACD,WAAKZ,MAAL,CAAY5L,OAAE,CAAChZ,KAAf;A;AAGA,UAAIo1D,OAAO,KAAK,MAAhB,EAAwB;AACtB,aAAKvjD,KAAL,CACExL,IAAI,CAACxQ,GAAL,CAASlC,KADX,EAEEujB,aAAM,CAAC/K,gCAFT,EAGEipD,OAHF;AAKD;A;AAID,UAAIiI,SAAS,CAAC73D,GAAV,CAAc4vD,OAAd,CAAJ,EAA4B;AAC1B,aAAKvjD,KAAL,CACExL,IAAI,CAACxQ,GAAL,CAASlC,KADX,EAEEujB,aAAM,CAAC7K,iCAFT,EAGE+oD,OAHF;AAKD;A;AACDiI,MAAAA,SAAS,CAACvkC,GAAV,CAAcs8B,OAAd;A;AAEA,UAAI,CAAC,KAAKl+D,KAAL,CAAW8hB,OAAE,CAAC/hB,MAAd,CAAL,EAA4B;AAC1B,cAAM,KAAK8vB,UAAL,CACJ,KAAK9gB,KAAL,CAAWtS,KADP,EAEJujB,aAAM,CAAC9K,2BAFH,CAAN;AAID;A;AACD/F,MAAAA,IAAI,CAACxT,KAAL,GAAa,KAAKsgB,kBAAL,CAAwB,KAAKlN,KAAL,CAAWpT,KAAnC,CAAb;AACA,WAAKsjB,UAAL,CAAmC9P,IAAnC,EAAyC,iBAAzC;AACA+2D,MAAAA,KAAK,CAAChyE,IAAN,CAAWib,IAAX;AACD,KA7CD,QA6CS,KAAK4e,GAAL,CAASjM,OAAE,CAAClZ,KAAZ,CA7CT;A;AA+CA,WAAOs9D,KAAP;AACD;A;AAQDF,EAAAA,0BAA0B,GAAG;AAC3B,QAAI,KAAKhmE,KAAL,CAAW8hB,OAAE,CAAC7V,KAAd,KAAwB,CAAC,KAAKsW,qBAAL,EAA7B,EAA2D;AACzD,WAAKipC,YAAL,CAAkB,kBAAlB;AACA,WAAKtnC,IAAL;AACD,KAHD,MAGO;AACL,UAAI,KAAK9V,SAAL,CAAe,kBAAf,CAAJ,EAAwC,OAAO,EAAP;AACxC,aAAO,IAAP;AACD;A;AACD,UAAM83D,KAAK,GAAG,EAAd;AACA,UAAM9lD,UAAU,GAAG,IAAIkD,GAAJ,EAAnB;A;AACA,OAAG;AACD,YAAMnU,IAAI,GAAG,KAAK2P,SAAL,EAAb;AACA3P,MAAAA,IAAI,CAACxQ,GAAL,GAAW,KAAK2vB,eAAL,CAAqB,IAArB,CAAX;A;AAEA,UAAInf,IAAI,CAACxQ,GAAL,CAASf,IAAT,KAAkB,MAAtB,EAA8B;AAC5B,aAAK+c,KAAL,CACExL,IAAI,CAACxQ,GAAL,CAASlC,KADX,EAEEujB,aAAM,CAAC/K,gCAFT,EAGE9F,IAAI,CAACxQ,GAAL,CAASf,IAHX;AAKD;A;AAED,UAAIwiB,UAAU,CAAC9R,GAAX,CAAea,IAAI,CAACxQ,GAAL,CAASf,IAAxB,CAAJ,EAAmC;AACjC,aAAK+c,KAAL,CACExL,IAAI,CAACxQ,GAAL,CAASlC,KADX,EAEEujB,aAAM,CAAC7K,iCAFT,EAGEhG,IAAI,CAACxQ,GAAL,CAASf,IAHX;AAKD;A;AACDwiB,MAAAA,UAAU,CAACwhB,GAAX,CAAezyB,IAAI,CAACxQ,GAAL,CAASf,IAAxB;AACA,WAAK8vB,MAAL,CAAY5L,OAAE,CAAChZ,KAAf;A;AACA,UAAI,CAAC,KAAK9I,KAAL,CAAW8hB,OAAE,CAAC/hB,MAAd,CAAL,EAA4B;AAC1B,cAAM,KAAK8vB,UAAL,CACJ,KAAK9gB,KAAL,CAAWtS,KADP,EAEJujB,aAAM,CAAC9K,2BAFH,CAAN;AAID;A;AACD/F,MAAAA,IAAI,CAACxT,KAAL,GAAa,KAAKsgB,kBAAL,CAAwB,KAAKlN,KAAL,CAAWpT,KAAnC,CAAb;AACA,WAAKsjB,UAAL,CAAgB9P,IAAhB,EAAsB,iBAAtB;AACA+2D,MAAAA,KAAK,CAAChyE,IAAN,CAAWib,IAAX;AACD,KA9BD,QA8BS,KAAK4e,GAAL,CAASjM,OAAE,CAAClZ,KAAZ,CA9BT;A;AAgCA,WAAOs9D,KAAP;AACD;A;AAEDV,EAAAA,0BAA0B,GAAG;AAE3B,QAAI,KAAKh2C,YAAL,CAAkB,QAAlB,KAA+B,CAAC,KAAKjN,qBAAL,EAApC,EAAkE;AAChE,WAAKipC,YAAL,CAAkB,kBAAlB;AACA,WAAKtnC,IAAL;AACD,KAHD,MAGO;AACL,UAAI,KAAK9V,SAAL,CAAe,kBAAf,CAAJ,EAAwC,OAAO,EAAP;AACxC,aAAO,IAAP;AACD;A;AAED,SAAK2f,GAAL,CAASjM,OAAE,CAACzZ,MAAZ;AACA,UAAM69D,KAAK,GAAG,KAAKD,kBAAL,EAAd;AACA,SAAKl4C,GAAL,CAASjM,OAAE,CAACtZ,MAAZ;AAEA,WAAO09D,KAAP;AACD;A;AAED/pC,EAAAA,gCAAgC,CAAChtB,IAAD,EAAqC;AACnE,QAAI,KAAK2sB,wBAAL,CAA8B3sB,IAA9B,CAAJ,EAAyC;AAEvC,WAAK4sB,yBAAL,CACE5sB,IADF,EAEE,KAAK2P,SAAL,EAFF,EAGE,wBAHF,EAIE,0BAJF;AAMA,aAAO,IAAP;AACD;A;AACD,WAAO,KAAP;AACD;A;AAEDgtC,EAAAA,6BAA6B,CAAC38C,IAAD,EAAqC;AAChE,QAAI,KAAKnP,KAAL,CAAW8hB,OAAE,CAACnX,IAAd,CAAJ,EAAyB;AACvB,YAAMqxB,SAAS,GAAG,KAAKld,SAAL,EAAlB;AACA,WAAKoF,IAAL;AACA,WAAK4J,gBAAL,CAAsB,IAAtB;AAEA,WAAKiO,yBAAL,CACE5sB,IADF,EAEE6sB,SAFF,EAGE,0BAHF,EAIE,4BAJF;AAMA,aAAO,IAAP;AACD;A;AACD,WAAO,KAAP;AACD;A;AAED+vB,EAAAA,0BAA0B,CAAC58C,IAAD,EAA4B;AACpD,QAAI8lB,KAAK,GAAG,IAAZ;AACA,SAAKvH,MAAL,CAAY5L,OAAE,CAACzZ,MAAf;A;AACA,WAAO,CAAC,KAAK0lB,GAAL,CAASjM,OAAE,CAACtZ,MAAZ,CAAR,EAA6B;AAC3B,UAAIysB,KAAJ,EAAW;AACTA,QAAAA,KAAK,GAAG,KAAR;AACD,OAFD,MAEO;AAEL,YAAI,KAAKlH,GAAL,CAASjM,OAAE,CAAChZ,KAAZ,CAAJ,EAAwB;AACtB,gBAAM,KAAK6R,KAAL,CAAW,KAAK5L,KAAL,CAAWtS,KAAtB,EAA6BujB,aAAM,CAAChO,sBAApC,CAAN;AACD;A;AAED,aAAK0b,MAAL,CAAY5L,OAAE,CAAClZ,KAAf;AACA,YAAI,KAAKmlB,GAAL,CAASjM,OAAE,CAACtZ,MAAZ,CAAJ,EAAyB;AAC1B;A;AAED,WAAK4zB,oBAAL,CAA0BjtB,IAA1B;AACD;AACF;A;AAGDitB,EAAAA,oBAAoB,CAACjtB,IAAD,EAAkC;AACpD,UAAM6sB,SAAS,GAAG,KAAKld,SAAL,EAAlB;AACA,UAAMsnD,gBAAgB,GAAG,KAAKpmE,KAAL,CAAW8hB,OAAE,CAAC/hB,MAAd,CAAzB;AACAi8B,IAAAA,SAAS,CAACW,QAAV,GAAqB,KAAKJ,qBAAL,EAArB;A;AACA,QAAI,KAAKlN,aAAL,CAAmB,IAAnB,CAAJ,EAA8B;AAC5B2M,MAAAA,SAAS,CAACE,KAAV,GAAkB,KAAK5N,eAAL,EAAlB;AACD,KAFD,MAEO;AACL,YAAM;AAAEqO,QAAAA;AAAF,UAAeX,SAArB;A;AACA,UAAIoqC,gBAAJ,EAAsB;AACpB,cAAM,KAAKzrD,KAAL,CACJqhB,SAAS,CAACv/B,KADN,EAEJujB,aAAM,CAAC/M,qBAFH,EAGJ0pB,QAAQ,CAAChhC,KAHL,CAAN;AAKD;A;AACD,WAAKohC,iBAAL,CAAuBJ,QAAQ,CAAC/+B,IAAhC,EAAsCo+B,SAAS,CAACv/B,KAAhD,EAAuD,IAAvD,EAA6D,IAA7D;AACAu/B,MAAAA,SAAS,CAACE,KAAV,GAAkBS,QAAQ,CAACC,OAAT,EAAlB;AACD;A;AACD,SAAK9B,SAAL,CAAekB,SAAS,CAACE,KAAzB,EAAgC,kBAAhC,EAAoDxW,YAApD;AACAvW,IAAAA,IAAI,CAACqR,UAAL,CAAgBtsB,IAAhB,CAAqB,KAAK+qB,UAAL,CAAgB+c,SAAhB,EAA2B,iBAA3B,CAArB;AACD;A;AAIDd,EAAAA,WAAW,CACTjF,KADS,EAEA;AACT,WAAOA,KAAK,CAACzgC,IAAN,KAAe,YAAf,IAA+BygC,KAAK,CAACr4B,IAAN,KAAe,MAArD;AACD;A;AAnzE2D;A;AChF/C,MAAMyoE,MAAN,SAAqBjG,eAArB,CAAqC;AAQlDz5D,EAAAA,WAAW,CAACU,OAAD,EAAoByG,KAApB,EAAmC;AAC5CzG,IAAAA,OAAO,GAAGwmD,UAAU,CAACxmD,OAAD,CAApB;AACA,UAAMA,OAAN,EAAeyG,KAAf;AAEA,SAAKzG,OAAL,GAAeA,OAAf;AACA,SAAKmvD,gBAAL;AACA,SAAKnoD,OAAL,GAAei4D,UAAU,CAAC,KAAKj/D,OAAL,CAAagH,OAAd,CAAzB;AACA,SAAKV,QAAL,GAAgBtG,OAAO,CAAC+lD,cAAxB;AACD;A;AAGDpgC,EAAAA,eAAe,GAA2B;AACxC,WAAO7F,YAAP;AACD;A;AAED5xB,EAAAA,KAAK,GAAS;AACZ,SAAKyhE,kBAAL;AACA,UAAMz3B,IAAI,GAAG,KAAKzgB,SAAL,EAAb;AACA,UAAM0gB,OAAO,GAAG,KAAK1gB,SAAL,EAAhB;AACA,SAAKsgB,SAAL;AACAG,IAAAA,IAAI,CAACvkB,MAAL,GAAc,IAAd;AACA,SAAKskB,aAAL,CAAmBC,IAAnB,EAAyBC,OAAzB;AACAD,IAAAA,IAAI,CAACvkB,MAAL,GAAc,KAAKjM,KAAL,CAAWiM,MAAzB;AACA,WAAOukB,IAAP;AACD;A;AAhCiD;A;AAmCpD,SAAS+mC,UAAT,CAAoBj4D,OAApB,EAAqD;AACnD,QAAMk4D,SAAqB,GAAG,IAAIp/D,GAAJ,EAA9B;A;AACA,OAAK,MAAMqH,MAAX,IAAqBH,OAArB,EAA8B;AAC5B,UAAM,CAACzQ,IAAD,EAAOyJ,OAAP,IAAkBvO,KAAK,CAACC,OAAN,CAAcyV,MAAd,IAAwBA,MAAxB,GAAiC,CAACA,MAAD,EAAS,EAAT,CAAzD;AACA,QAAI,CAAC+3D,SAAS,CAACj4D,GAAV,CAAc1Q,IAAd,CAAL,EAA0B2oE,SAAS,CAACh/D,GAAV,CAAc3J,IAAd,EAAoByJ,OAAO,IAAI,EAA/B;AAC3B;A;AACD,SAAOk/D,SAAP;AACD;A;ACpCM,SAAShxE,KAAT,CAAeuY,KAAf,EAA8BzG,OAA9B,EAAuD;AAAA;A;AAC5D,MAAI,aAAAA,OAAO,SAAP,qBAASosC,UAAT,MAAwB,aAA5B,EAA2C;AACzCpsC,IAAAA,OAAO,qBACFA,OADE,CAAP;A;AAGA,QAAI;AACFA,MAAAA,OAAO,CAACosC,UAAR,GAAqB,QAArB;AACA,YAAM2jB,MAAM,GAAGoP,SAAS,CAACn/D,OAAD,EAAUyG,KAAV,CAAxB;AACA,YAAM24D,GAAG,GAAGrP,MAAM,CAAC7hE,KAAP,EAAZ;A;AAEA,UAAI6hE,MAAM,CAAClpD,iBAAX,EAA8B;AAC5B,eAAOu4D,GAAP;AACD;A;AAED,UAAIrP,MAAM,CAACjpD,2BAAX,EAAwC;AAMtC,YAAI;AACF9G,UAAAA,OAAO,CAACosC,UAAR,GAAqB,QAArB;AACA,iBAAO+yB,SAAS,CAACn/D,OAAD,EAAUyG,KAAV,CAAT,CAA0BvY,KAA1B,EAAP;AACD,SAHD,CAGE,gBAAM;AACT,OAVD,MAUO;AAGLkxE,QAAAA,GAAG,CAACjnC,OAAJ,CAAYiU,UAAZ,GAAyB,QAAzB;AACD;A;AAED,aAAOgzB,GAAP;AACD,KA1BD,CA0BE,OAAOC,WAAP,EAAoB;AACpB,UAAI;AACFr/D,QAAAA,OAAO,CAACosC,UAAR,GAAqB,QAArB;AACA,eAAO+yB,SAAS,CAACn/D,OAAD,EAAUyG,KAAV,CAAT,CAA0BvY,KAA1B,EAAP;AACD,OAHD,CAGE,iBAAM;A;AAER,YAAMmxE,WAAN;AACD;AACF,GAtCD,MAsCO;AACL,WAAOF,SAAS,CAACn/D,OAAD,EAAUyG,KAAV,CAAT,CAA0BvY,KAA1B,EAAP;AACD;AACF;AAEM,SAASy4B,eAAT,CAAyBlgB,KAAzB,EAAwCzG,OAAxC,EAAuE;AAC5E,QAAM+vD,MAAM,GAAGoP,SAAS,CAACn/D,OAAD,EAAUyG,KAAV,CAAxB;A;AACA,MAAIspD,MAAM,CAAC/vD,OAAP,CAAemsC,UAAnB,EAA+B;AAC7B4jB,IAAAA,MAAM,CAACroD,KAAP,CAAaqU,MAAb,GAAsB,IAAtB;AACD;A;AACD,SAAOg0C,MAAM,CAAC3M,aAAP,EAAP;AACD;A;AAID,SAAS+b,SAAT,CAAmBn/D,OAAnB,EAAsCyG,KAAtC,EAA6D;AAC3D,MAAI46C,GAAG,GAAG2d,MAAV;A;AACA,MAAIh/D,OAAJ,YAAIA,OAAO,CAAEgH,OAAb,EAAsB;AACpBk+C,IAAAA,eAAe,CAACllD,OAAO,CAACgH,OAAT,CAAf;AACAq6C,IAAAA,GAAG,GAAGie,cAAc,CAACt/D,OAAO,CAACgH,OAAT,CAApB;AACD;A;AAED,SAAO,IAAIq6C,GAAJ,CAAQrhD,OAAR,EAAiByG,KAAjB,CAAP;AACD;A;AAED,MAAM84D,gBAAkD,GAAG,EAA3D;A;AAGA,SAASD,cAAT,CAAwBE,kBAAxB,EAAuE;AACrE,QAAMC,UAAU,GAAG5Z,gBAAgB,CAACv3D,MAAjB,CAAwBiI,IAAI,IAC7CwQ,SAAS,CAACy4D,kBAAD,EAAqBjpE,IAArB,CADQ,CAAnB;AAIA,QAAMe,GAAG,GAAGmoE,UAAU,CAACzvE,IAAX,CAAgB,GAAhB,CAAZ;AACA,MAAIqxD,GAAG,GAAGke,gBAAgB,CAACjoE,GAAD,CAA1B;A;AACA,MAAI,CAAC+pD,GAAL,EAAU;AACRA,IAAAA,GAAG,GAAG2d,MAAN;A;AACA,SAAK,MAAM73D,MAAX,IAAqBs4D,UAArB,EAAiC;AAC/Bpe,MAAAA,GAAG,GAAGkE,YAAY,CAACp+C,MAAD,CAAZ,CAAqBk6C,GAArB,CAAN;AACD;A;AACDke,IAAAA,gBAAgB,CAACjoE,GAAD,CAAhB,GAAwB+pD,GAAxB;AACD;A;AACD,SAAOA,GAAP;AACD;A;A;A;A;A;;;CCnGA,UAAU7iD,QAAQkhE;SACXxrE,YAAY,mBAAmBpI,WAAW,cAAc4zE,QAAQxrE,kBAChEyrE,WAAW,cAAcA,OAAOC,MAAMD,QAAQ,YAAYD,YAChElhE,SAASA,UAAUD,MAAMmhE,QAAQlhE,OAAOqhE;GACxC,MAAO,UAAU3rE;EAAW;;;;;;;;EAW7B;IACCoL;;MAEC,KAAKwgE,cAAc;;MAGnB,KAAKC,gBAAgB;;MAGrB,KAAKC,cAAc;;MAGnB,KAAKtlD;QACJgtC,MAAM,MAAO,KAAKoY,cAAc;QAChClvE,QAAQ,MAAO,KAAKmvE,gBAAgB;QACpC3mE,SAAS,AAAC0O,QAAU,KAAKk4D,cAAcl4D;;;;;;;;;;IAWzC1O,QAAQ5L,QAAQyqB,MAAMnf,OAAOgP;UACxBta;YACCsL,UAAU;UACbtL,OAAOyqB,MAAMnf,SAASgP;;UAEtBta,OAAOyqB,QAAQnQ;;;;;;;;;;IAWlBlX,OAAOpD,QAAQyqB,MAAMnf;UAChBtL;YACCsL,UAAU;UACbtL,OAAOyqB,MAAMrc,OAAO9C,OAAO;;iBAEpBtL,OAAOyqB;;;;;;;;;;;;;;;EAmBlB,yBAAyBgoD;;;;;;IAMxB3gE,YAAYuhB,OAAOq/C;MAClB;;MAGA,KAAKr/C,QAAQA;;MAGb,KAAKq/C,QAAQA;;;;;;;;;;IAWdC,MAAMr4D,MAAMta,QAAQyqB,MAAMnf;UACrBgP;YACC,KAAK+Y;gBACFu/C,eAAe,KAAKN;gBACpBO,iBAAiB,KAAKN;gBACtBO,eAAe,KAAKN;UAC1B,KAAKF,cAAc;UACnB,KAAKC,gBAAgB;UACrB,KAAKC,cAAc;UAEnB,KAAKn/C,MAAMx0B,KAAK,KAAKquB,SAAS5S,MAAMta,QAAQyqB,MAAMnf;cAE9C,KAAKknE;YACRl4D,OAAO,KAAKk4D;YACZ,KAAK5mE,QAAQ5L,QAAQyqB,MAAMnf,OAAOgP;;cAG/B,KAAKi4D;YACR,KAAKnvE,OAAOpD,QAAQyqB,MAAMnf;;gBAGrBynE,UAAU,KAAKT;gBACfU,UAAU,KAAKT;UAErB,KAAKD,cAAcM;UACnB,KAAKL,gBAAgBM;UACrB,KAAKL,cAAcM;cAEfC,gBAAgBz4D;cAChB04D,gBAAgB;;mBAGVlpE,OAAOwQ;gBACXxT,QAAQwT,KAAKxQ;qBAERhD,UAAU;;qBAEV7C,MAAMC,QAAQ4C;qBACfnF,IAAI,GAAGA,IAAImF,MAAMlF,QAAQD,KAAK;kBAClCmF,MAAMnF,OAAO,eAAemF,MAAMnF,GAAGhB,SAAS;qBAC5C,KAAKgyE,MAAM7rE,MAAMnF,IAAI2Y,MAAMxQ,KAAKnI;;kBAEpCA;;;;qBAIOmF,UAAU,eAAeA,MAAMnG,SAAS;YAClD,KAAKgyE,MAAM7rE,OAAOwT,MAAMxQ,KAAK;;;YAI3B,KAAK4oE;gBACFI,eAAe,KAAKN;gBACpBK,iBAAiB,KAAKN;UAC5B,KAAKC,cAAc;UACnB,KAAKD,gBAAgB;UAErB,KAAKG,MAAM7zE,KAAK,KAAKquB,SAAS5S,MAAMta,QAAQyqB,MAAMnf;cAE9C,KAAKknE;YACRl4D,OAAO,KAAKk4D;YACZ,KAAK5mE,QAAQ5L,QAAQyqB,MAAMnf,OAAOgP;;cAG/B,KAAKi4D;YACR,KAAKnvE,OAAOpD,QAAQyqB,MAAMnf;;gBAGrB0nE,UAAU,KAAKT;UAErB,KAAKC,cAAcM;UACnB,KAAKP,gBAAgBM;cAEjBG,gBAAgB;;;aAIf14D;;;;;;;;;;;;;EAiBT,0BAA0Bm4D;;;;;;IAMzB3gE,YAAYuhB,OAAOq/C;MAClB;;MAGA,KAAKr/C,QAAQA;;MAGb,KAAKq/C,QAAQA;;;;;;;;;;UAWRC,MAAMr4D,MAAMta,QAAQyqB,MAAMnf;UAC3BgP;YACC,KAAK+Y;gBACFu/C,eAAe,KAAKN;gBACpBO,iBAAiB,KAAKN;gBACtBO,eAAe,KAAKN;UAC1B,KAAKF,cAAc;UACnB,KAAKC,gBAAgB;UACrB,KAAKC,cAAc;UAEnB,MAAM,KAAKn/C,MAAMx0B,KAAK,KAAKquB,SAAS5S,MAAMta,QAAQyqB,MAAMnf;cAEpD,KAAKknE;YACRl4D,OAAO,KAAKk4D;YACZ,KAAK5mE,QAAQ5L,QAAQyqB,MAAMnf,OAAOgP;;cAG/B,KAAKi4D;YACR,KAAKnvE,OAAOpD,QAAQyqB,MAAMnf;;gBAGrBynE,UAAU,KAAKT;gBACfU,UAAU,KAAKT;UAErB,KAAKD,cAAcM;UACnB,KAAKL,gBAAgBM;UACrB,KAAKL,cAAcM;cAEfC,gBAAgBz4D;cAChB04D,gBAAgB;;mBAGVlpE,OAAOwQ;gBACXxT,QAAQwT,KAAKxQ;qBAERhD,UAAU;;qBAEV7C,MAAMC,QAAQ4C;qBACfnF,IAAI,GAAGA,IAAImF,MAAMlF,QAAQD,KAAK;kBAClCmF,MAAMnF,OAAO,eAAemF,MAAMnF,GAAGhB,SAAS;qBAC3C,MAAM,KAAKgyE,MAAM7rE,MAAMnF,IAAI2Y,MAAMxQ,KAAKnI;;kBAE3CA;;;;qBAIOmF,UAAU,eAAeA,MAAMnG,SAAS;YAClD,MAAM,KAAKgyE,MAAM7rE,OAAOwT,MAAMxQ,KAAK;;;YAIjC,KAAK4oE;gBACFI,eAAe,KAAKN;gBACpBK,iBAAiB,KAAKN;UAC5B,KAAKC,cAAc;UACnB,KAAKD,gBAAgB;UAErB,MAAM,KAAKG,MAAM7zE,KAAK,KAAKquB,SAAS5S,MAAMta,QAAQyqB,MAAMnf;cAEpD,KAAKknE;YACRl4D,OAAO,KAAKk4D;YACZ,KAAK5mE,QAAQ5L,QAAQyqB,MAAMnf,OAAOgP;;cAG/B,KAAKi4D;YACR,KAAKnvE,OAAOpD,QAAQyqB,MAAMnf;;gBAGrB0nE,UAAU,KAAKT;UAErB,KAAKC,cAAcM;UACnB,KAAKP,gBAAgBM;cAEjBG,gBAAgB;;;aAIf14D;;;;;;;;;;;;;;;;EAmBT,cAAcs3D,MAAOv+C,OAAOq/C;UACrBO,eAAeC,WAAW7/C,OAAOq/C;WAChCO,SAASN,MAAMf,KAAK;;;;;;;;;;;EAY5B,yBAAyBA,MAAOv+C,OAAOq/C;UAChCO,eAAeE,YAAY9/C,OAAOq/C;WACjC,MAAMO,SAASN,MAAMf,KAAK;;EAGlClrE,QAAQ0sE,YAAYA;EACpB1sE,QAAQ2sE,OAAOA;EAEfzsE,OAAOC,eAAeH,SAAS;IAAgBI,OAAO;;;;;ACrVvD;sBAE6B;EAC3BxI,OAAOoI,UAAUC,QAAQ;;EAEzBrI,OAAOozzCA;sBAE6B;EAC3BrI,OAAOoI,UAAUC,QAAQ;;EAEzBrI,OAAOoI,UAAUC,QAAQ;;;;ACL3B;;AAEAC,OAAOC,eAAeH,SAAS;EAAgBI,OAAO;;IAElDwsE,aAAa3sE,QAAQ;IACrB4sE,SAAS5sE,QAAQ;MAEfxE;AACN,4BAA4BqxE;EACxBrxE,MAAM9C,KAAKm0E;;AAEf;EACIrxE,MAAM+Y;;AAEV,cAAcu4D,QAAQ5qD;;;EAGlByqD,WAAWI;QACLT,WAAW9wE,MAAMP,SAASO,MAAMA,MAAMP,SAAS,GAAG+xE,YAAY;QAC9DC,iBAAiBX,YAAYA,SAASY,WAAWC,OAAOC;QACxDC,QAAQC;MACVL;IACAM,sBAAsBN,gBAAgBX,UAAU;KAC5CQ,MAAM5qD,KAAKrmB,KAAK,KAChBywE,YAAYA,SAASkB,OACrBH,MACKvwE,IAAI,EAAG+vE,YAAa,MAAMY,oBAAoBnB,UAAUO,MAAM7yE,MAAM,IACpE6B,KAAK,OACVwxE;;UAIEK,aAAa,cAAcZ,IAAI,MAAM5qD;;QAEvCmrD,MAAMpyE;KAEL;MACDyyE,SAASh1E,MAAM,QAAQi1E,YAAYN;;IAEvCxyE,QAAQ0B,QAAQmxE;;EAEpBf,WAAWiB;;AAEf;MACQC,eAAeryE,MAAMA,MAAMP,SAAS;OACnC4yE;;;;;;QAMCC;SACCD;UACG36D,OAAO46D,gBAAgB;QACzB56D,QAAQA,KAAK25D,UAAUgB;MACvB36D,KAAK66D;;MAGLD,gBAAgBp1E;QACZm0E,OAAOgB;QACPE,cAAc;;;UAGhBC,iBAAiBH,aAAab,aAAaa,aAAab,UAAU3zE;IACxEw0E,eAAeG,kBAAkBA,eAAenB;;SAE7CiB;;;AAGX,qBAAqBT;QACXY;EACNZ,MAAM9yE,QAAQ,CAAC2zE,OAAOlzE;IAClBizE,KAAKv1E,QAASsC,MAAM,WAAW,SAAUmzE,iBAAiBD;;SAEvDD;;AAEX,2BAA4BpB,OAAOkB;QACzB9iE,UAAU8iE,eAAe,KAAK,OAAOA,aAAa,sBAAsB;QACxEK,SAASvB,MAAMG,YAAYH,MAAMG,UAAU3zE,UAAU,OAAO;QAC5Dg1E,QAAQ,OAAOZ,oBAAoBZ,MAAMG,WAAWH,MAAM7yE,MAAMo0E,QAAQ;QACxElvC,SAAS,KAAKj0B;SACb4hE,MAAMyB,SACND,SAASE,YAAY1B,MAAMyB,QAAQpvC,UACnCmvC,OAAOnvC;;;AAGlB,qBAAqBovC;QACXjtE;QACAuE,OAAO3F,OAAO2F,KAAK0oE;EACzB1oE,KAAKyC,MAAM,GAAG,GAAG9N,QAAQ,AAAA4I;IACrB9B,IAAI3I,QAAQ81E,WAAWrrE,KAAKmrE,MAAMnrE;;MAElCyC,KAAK3K,SAAS;IACdoG,IAAI3I,MAAM;;SAEP2I;;;AAGX,oBAAoB8B,KAAKhD,OAAOkhB;MACxBurD,OAAO3pE,SAAS9C;IAChBA,QAAQrG,KAAKqM,UAAUhG;WAChBkhB,MAAMlhB,UAAU,EAAEgD,IAAI,GAAGhD,MAAM;oBAE1BA,UAAU,mBACfA,UAAU,aACjBA,SAAS;WACFkhB,MAAMlhB,UAAU,EAAEgD,IAAI,GAAGhD,MAAM;aAEjCwsE,WAAW8B,MAAMtuE;IACtBA,QAAQquE,WAAWrrE,KAAKwpE,WAAW+B,MAAMvuE,MAAMA,QAAQ;WAChDkhB,MAAMlhB,UAAU,EAAEgD,IAAI,QAAQhD,QAAQ;aAExCysE,OAAO/kE,WAAW1H;aACd,EAAEgD,IAAI,KAAKhD,MAAMiC,QAAQ,GAAGjC,MAAMiC,KAAK,MAAM,EAAE;;IAGxDjC,QAAQwsE,WAAW+B,MAAMvuE;WAClBkhB,MAAMlhB,UAAU,EAAEgD,IAAI,IAAIhD;;;MAInCwuE;GACD;EAA2B;GAC3B;EAAoB;GACpB;EAA0B;GAC1B;EAAoB;GACpB;EAA2B;GAC3B;EAAoB;GACpB;EAA6B;GAC7B;EAAuB;GACvB;EAAsB;GACtB;EAAyB;GACzB;EAA4B;GAC5B;EAA6B;GAC7B;EAA+B;GAC/B;EAAyB;GACzB;EAA0B;GAC1B;EAAuB;GACvB;EAAyB;GACzB;EAAwB;GACxB;EAA+B;GAC/B;EAAkC;GAClC;EAAqB;GACrB;EAAyB;GACzB;EAA0B;GAC1B;EAA6B;GAC7B;EAA4B;GAC5B;EAAwB;GACxB;EAAkC;GAClC;EAAqB,0DAClB;;AAER,+BAA+Bl2E,IAAI6zE,UAAUtyE,MAAMkoB;MAC3C7gB;;IAEAA,MAAM6gB,OAAOzpB,MAAMypB,QAAQzpB;WAExBmnB;IACHgvD,YAAYhvD,KAAK0sD,UAAUtyE;;SAExBqH;;AAEX,oCAAoC5I,IAAI6zE,UAAUtyE,MAAMkoB;MAChD0qD,OAAO/kE,WAAWpP;UACZ4I,MAAMksE,sBAAsB90E,IAAI6zE,UAAUtyE,MAAMkoB;QAClD7gB,OAAOurE,OAAO7kE,UAAU1G;MACxBA,IAAI4G,MAAM,AAAA2X;QACNgvD,YAAYhvD,KAAK0sD,UAAUtyE;;;WAG5BqH;;QAELsF;WACG3L,IAAI,GAAGA,IAAIvC,GAAGwC,QAAQD;IAC3B2L,OAAOjO,KAAKm2E,2BAA2Bp2E,GAAGuC,IAAIsxE,UAAUtyE,MAAMkoB;;SAE3Dvb;;AAEX,qBAAqBiZ,KAAK0sD,UAAUtyE,MAAM80E,aAAa;QAC7CC,eAAezC,WAAWA,SAASO,QAAQ;MAC7CP;QACIlF,MAAMkF,SAASjzE;;UAEb21E,kBAAkB1C,SAASkB;;UAE3ByB,YAAYN,iBAAiB30E;WAC5BotE;YACG8H,qBAAqB9H,IAAI+H;UAC3BD;iBACSl0E,IAAI,GAAGA,IAAIk0E,mBAAmBj0E,QAAQD;cACvCk0E,mBAAmBl0E,GAAG4kB,KAAKovD,iBAAiBC,eAAe;;;;;MAKvE7H,MAAMA,IAAI/tE;;;UAGR+1E,kBAAkB9C,SAASY,WAAWC,OAAOkC;QAC/CD;MACA7B,sBAAsB6B,iBAAiB,MAAM;OAA6BxvD,KAAKovD,iBAAiBC;;;;EAIxGK,SAAS1vD,KAAK5lB,MAAM+0E,cAAcD;;AAEtC,kBAAkBlvD,KAAK5lB,MAAM+0E,cAAcD,aAAa;;UAE1CS,OAAOZ,iBAAiB30E;QAC1B+0E;MACAS,mBAAmBT;;IAEvBxyE,MAAM,iBAAiBgzE,QAAQ,uBAAuBA,KAAK,KAAK,EAAE;QAC9DR;MACAU;;;QAGAX;YACMlvD;;MAGN/kB,QAAQa,MAAMkkB;;;;IAKtB8vD,aAAa;IACbC,iBAAiB;MACfC;IACFC,aAAa;MACXC;IACFC,oBAAoB;IACpBC,gBAAgB;MACdC;IACFC,qBAAqB;IACrBC,iBAAiB;MACfC,kBAAkBC,QAAQC;IAC5BC,sBAAsB;IACtBC,2BAA2B;MACzBC,kBAAkB;AACxB,kBAAkBh4E;QACRw4D,IAAIsf,uBAAuBH;SAC1B33E,KAAKw4D,EAAEjpD,KAAK,OAAOvP,GAAGooD,KAAK,QAAQpoD,MAAMw4D;;;;;;AAMpD,4BAA4Byf;;MAEpBzvE,QAAQ4uE,aAAa;MACrB3uE,MAAM0uE,MAAM30E;QACV01E,QAAQC,MAAMF;SACbzvE,QAAQC;UACL2vE,SAAU5vE,QAAQC,QAAS;UAC3B4vE,cAAcF,MAAMhB,MAAMiB;IAChCC,cAAcH,QAAS1vE,QAAQ4vE,SAAS,IAAM3vE,MAAM2vE;;SAEjD5vE;;AAEX,kBAAkByvE;;;;;;;QAORd,MAAM30E,WACP20E,MAAMriD,SAASmjD,KAAKhB,cAAcgB,IAAIK,eAAelB,aAAa,IAAIA,gBACvEa,QAAQF;UACF5xD,MAAMoyD,mBAAmBN;QAC3B9xD,OAAO;MACPgxD,MAAMnoE,OAAOmX,KAAK,GAAG8xD;;MAGrBd,MAAMl3E,KAAKg4E;;IAEfO;;;AAGR;OACSvB,eAAeC;IAChBA,iBAAiB;IACjBY,sBAAsBH,gBAAgBpoE,KAAKkpE;;;AAGnD,uBAAuBR;QACb11E,IAAI40E,MAAM12E,QAAQw3E;MACpB11E,IAAI60E;IACJD,MAAMnoE,OAAOzM,GAAG;;;AAGxB,iBAAiByE,IAAI0xE,aAAaC,cAAczsE;OACvCioE,OAAOrvE,QAAQkC;SACX0xE,gBACAA,YAAY5jD,SAAS9tB,IAAIA,GAAGsxE,eAAepsE,QAAQ,IAAIA;MACxDysE,aAAa14E,KAAK+G;;;;;;IAOtB2xE,aAAa14E,QAAQ+G;;EAEzBwxE;;AAEJ,yBAAyBxxE;EACrB4xE,QAAQ5xE,IAAIswE,mBAAmBD,oBAAoBE;;AAEvD,0BAA0BvwE;EACtB4xE,QAAQ5xE,IAAIywE,oBAAoBD,qBAAqBE;;AAEzD,0BAA0BmB,MAAMC,YAAY;MACpCzB,mBAAmB70E;IACnBu1E,2BAA2Be;IAC3BxB,4BAA4BjoD,IAAIgoD;IAChCA,mBAAmB70E,SAAS;;MAExBq2E,OAAOA,YAAY3lE;;SAElBqkE,gBAAgB,GAAGA,gBAAgBD,kBAAkB90E,QAAQ+0E;;QAE1DwB,sBAAsBF,MAAMvB,kBAAkBC;;MAElDD,kBAAkBC;;IAEtBD,oBAAoB;IACpBC,gBAAgB;IAChBQ,2BAA2B;;IAE3BiB,iBAAiBH,MAAMC;;;AAG/B,2BAA2BD;MACnBrB,oBAAoBh1E;UACdy2E,kBAAkB5pD,IAAImoD;IAC5BA,oBAAoBh1E,SAAS;;QAEzBi1E;MACAA,mBAAmBx3E,QAAQg5E;;;IAG/BxB,qBAAqBwB;;MAEjBJ,OAAOA,YAAY3lE;;IAEvBukE,mBAAmByB,KAAK,CAACzsE,GAAGC,MAAMyrE,MAAM1rE,KAAK0rE,MAAMzrE;SAC9CgrE,iBAAiB,GAAGA,iBAAiBD,mBAAmBj1E,QAAQk1E;;QAE7DqB,sBAAsBF,MAAMpB,mBAAmBC;;MAEnDD,mBAAmBC;;IAEvBD,qBAAqB;IACrBC,iBAAiB;;;MAGnBS,QAAQ,AAACF,OAAQA,IAAI/1E,MAAM,OAAOq7D,WAAW0a,IAAI/1E;AACvD,mBAAmB22E;EACf3B,iBAAiB;EACjBD,aAAa;;IAET4B,OAAOA,YAAY3lE;;EAEvB8lE,iBAAiBH;;;;;;;;EAQjB1B,MAAM+B,KAAK,CAACzsE,GAAGC,MAAMyrE,MAAM1rE,KAAK0rE,MAAMzrE;;SAE7B0qE,aAAa,GAAGA,aAAaD,MAAM30E,QAAQ40E;YACtCa,MAAMd,MAAMC;UACda;YACI;UACAc,sBAAsBF,MAAMZ;;QAEhCnD,sBAAsBmD,KAAK,MAAM;;;;IAKzCb,aAAa;IACbD,MAAM30E,SAAS;IACf22E,kBAAkBN;IAClB5B,aAAa;IACba,sBAAsB;;;QAGlBX,MAAM30E,UAAUg1E,oBAAoBh1E;MACpCi2E,UAAUI;;;;AAItB,+BAA+BA,MAAM74E;OAC5B64E,KAAKx+D,IAAIra;IACV64E,KAAKvlE,IAAItT,IAAI;;UAGP2I,QAAQkwE,KAAKr+D,IAAIxa;QACnB2I,QAAQqvE;gBACE5+C,OAAO,yCACZ,oEACA,2EACA,kEACA;;MAGLy/C,KAAKvlE,IAAItT,IAAI2I,QAAQ;;;;;IAM7BywE,gBAAgB;MACdC,yBAAyBhqD;;;;;;;QAOrBiqD,sBAAsB1nE,WAAW,cACjCA,gBACOD,SAAS,cACZA,cACOjP,WAAW,cACdA;EAEd42E,aAAaC;IACTC,cAAcC,QAAQD;IACtBE,UAAUD,QAAQC;IAClB/2E,QAAQ82E,QAAQ92E;;;MAGlB0B,UAAU6O;AAChB,qBAAqB2gE;QACX3xE,KAAK2xE,SAAStyE,KAAKo4E;MACrBC,SAASv1E,IAAImW,IAAItY;OAChB03E;IACDJ,aAAat3E,IAAI2xE,SAAStyE;IAC1Bq4E,SAASv1E,IAAImW,IAAItY;;EAErB03E,OAAOC,UAAUlsC,IAAIkmC;;AAEzB,uBAAuBA;EACnBxvE,IAAImW,IAAIq5D,SAAStyE,KAAKo4E,SAASE,UAAUrlD,OAAOq/C;;AAEpD,sBAAsB3xE,IAAIqyE;OACjBA;IACDzwE,MAAM,oCACD,wEACA;IACLywE;;MAEAlwE,IAAIgW,IAAInY;WACD;;EAEXmC,IAAIiP,IAAIpR;IACJqyE,WAAWuF,iBAAiBvF,aAAaA,UAAUwF,YAAYxF;IAC/DsF,eAAexqD;;SAEZ;;AAEX,kBAAkBntB,IAAI83E;QACZJ,SAASv1E,IAAImW,IAAItY;OAClB03E;MAEDI,WACAJ,OAAOrF,UAAUptE,SAAS6yE;;;EAG9Bn1E,MAAM26D,KAAKoa,OAAOC,WAAW/3E,QAAQ,AAAA+xE;QAC7BmG;MACAnG,SAAS1sE,SAAS6yE;;IAEtBnG,SAASoG;;IAETb,gBAAgB;IAChBvF,SAAS3U;IACTka,gBAAgB;;;AAGxB,gBAAgBl3E,IAAIg4E;QACVN,SAASv1E,IAAImW,IAAItY;OAClB03E;;;SAIGrF,WAAWsF,aAAcD;OAC5BP,mBAAmBh/D,IAAIk6D;;IAExB2F,UAAUJ,iBAAiBI,WAAWA,QAAQH,YAAYG;IAC1D/F,OAAOtlE,OAAO0lE,WAAW2F;eACdxvE,OAAO6pE;aACR7pE,OAAOwvE;eACF3F,UAAU7pE;;;;;IAKzB2uE,mBAAmB1rC,IAAI4mC;;IAEvB4F,iBAAiB;MACbd,mBAAmB7kD,OAAO+/C;;;EAGlC1vE,MAAM26D,KAAKqa,WAAW/3E,QAAQ,AAAA+xE;QACtBA,SAASjzE;;;;MAITw5E,SAASvG,SAASjzE,OAAOs+D;eAEpB2U,SAASY,WAAW9xE;;MAEzBkxE,SAASY,WAAW9xE;sBAERD,WAAW;;MAEvBA,OAAOnC,SAASoC;;MAGhBP,QAAQ0B,KAAK;;;;AAIzB,iBAAiB9D;SACN,CAACkC,IAAI6O;;aAEG/Q,GAAGkC,IAAI6O;aAEXnN;MACHxB,QAAQa,MAAMW;MACdxB,QAAQ0B,MAAM,iEACT;;;;AAKjB,yBAAyBu2E;EACrB/yE,QAAQgzE,WAAWD;;AAEvB,yBAAyBE,KAAKC;;OAErBlzE,QAAQgzE;EAEbhzE,QAAQgzE,SAASG,KAAK;EAA2BF,KAAKC;IAClDE;IACAC;IACAC;IACAC;;;AAGR,4BAA4BN;OACnBjzE,QAAQgzE;EAEbhzE,QAAQgzE,SAASG,KAAK;EAAiCF;;MAErDO,sCAAuCC,4BAA4B;MACnEC,wCAAyCD,4BAA4B;MACrEE,wCAAyCF,4BAA4B;AAC3E,qCAAqCV;SAC1B,AAAC9F;SACCjtE,QAAQgzE;IAEbhzE,QAAQgzE,SAASG,KAAKJ,MAAM9F,UAAUE,WAAW8F,KAAKhG,UAAU2G,KAAK3G,UAAU3zE,SAAS2zE,UAAU3zE,OAAOs6E,MAAM/6E,WAAWo0E;;;AAGlI,+BAA+BA,WAAWnzE,OAAOulB;OACxCrf,QAAQgzE;EAEbhzE,QAAQgzE,SAASG,KAAK;EAAuClG,UAAUE,WAAW8F,KAAKhG,WAAWnzE,OAAOulB;;AAG7G,cAAcktD,UAAUzyE,UAAU+5E;QACxBtF,QAAQhC,SAASO,MAAMyB,SAAS1B,OAAO9lE;;WAEjC+sE,cAAcC,eAAeA,iBAAkBxH;QACnDuH;aACMh6E,SAASg6E;aACNC,mBAAkBlH,OAAOzjE,aAAatP,UAAUi6E;UACjDv3E,MAAM,2BAA2B1C,MAAM,qCAClC,8BAA8B+yE,OAAOzjE,aAAatP,OAAO;;;cAI5Dk6E,YAAYF,aAAah6E;YAC3B+yE,OAAO/kE,WAAWksE;gBACZC,UAAUD,aAAaH;eACxBI;YACDz3E,MAAM,8DAA8D1C,MAAM;;;;;;MAM1FqoB,OAAO0xD;QACLvsE,kBAAkBxN,MAAMgK,WAAW;;QAEnCowE,WAAW5sE,mBAAmBxN,MAAMwO,MAAM;MAC5C4rE,aAAYA,YAAY3F;UAClB4F,gBAAgB,EAAED,aAAa,eAAe,UAAUA,SAAS;WAC/DE,QAAQzwE,QAAS4qE,MAAM4F,iBAAiBtH,OAAO9lE;QACnDpD;MACAwe,OAAO0xD,QAAQ92E,IAAI,AAAAoI,KAAKA,EAAExB;eAErBywE;MACLjyD,OAAO0xD,QAAQ92E,IAAI8vE,OAAO/iE;;;;IAI9BuqE,sBAAsB9H,UAAUzyE,OAAOqoB;;;UAGjCmyD,iBAAiBx6E,MAAM4G;QACzB4zE,mBAAmBx6E,SAASy0E,MAAM1B,OAAOzjE,aAAakrE;MACtD93E,MAAM,SAAS83E,eAAe,+BACzB,EAAE5G,oBAAoBnB,UAAUA,SAAStyE,MAAM,sCAAsCH,MAAM,QAC3F,uEACA,qEACA,2BAA2B+yE,OAAO9oE,UAAUjK,OAAO,gBAAgBA,MAAM;;;MAGlFy6E;MACA9M,UAAU8G,MAAOgG,cAAc1H,OAAOzjE,aAAatP;EAEnDy0E,MAAOgG,cAAc1H,OAAOzjE,aAAayjE,OAAOhkE,SAAS/O;;;OAGxD2tE,WAAWngE;IACZmgE,UAAU8G,MAAOgG,cAAc1H,OAAOzjE,aAAayjE,OAAO9oE,UAAUjK;;MAEpE2tE;IACAqH,2BAA2BrH,SAAS8E,UAAU;IAAiCpqD;;QAE7EqyD,cAAcjG,MAAMgG,eAAe;MACrCC;SACKjI,SAASkI;OACTlI,SAASkI,cAAcF,eAAe;eAElChI,SAASkI,QAAQF;;;IAG1BzF,2BAA2B0F,aAAajI,UAAU;IAAiCpqD;;;AAG3F,+BAA+BuyD,MAAMvH,YAAYwH,UAAU;OAClDxH,WAAWyH,SAASF,KAAKG,YAAYh8E;WAC/B67E,KAAKG;;QAEVvzD,MAAMozD,KAAKI;MACb9xE;;MAEA+xE,aAAa;OACZlI,OAAO/kE,WAAW4sE;UACbM,cAAc,AAAC1zD;YACX2zD,uBAAuBC,sBAAsB5zD,KAAK6rD,YAAY;UAChE8H;QACAF,aAAa;QACblI,OAAOtlE,OAAOvE,YAAYiyE;;;SAG7BN,WAAWxH,WAAW53C,OAAOr6B;MAC9BiyE,WAAW53C,OAAO/6B,QAAQw6E;;QAE1BN,KAAKr/C;MACL2/C,YAAYN,KAAKr/C;;QAEjBq/C,KAAKn/C;MACLm/C,KAAKn/C,OAAO/6B,QAAQw6E;;;OAGvB1zD,QAAQyzD;WACDL,KAAKG,UAAU;;MAEvBhI,OAAOrvE,QAAQ8jB;IACfA,IAAI9mB,QAAQ,AAAA4I,OAAQJ,WAAWI,OAAO;;IAGtCypE,OAAOtlE,OAAOvE,YAAYse;;SAEtBozD,KAAKG,UAAU7xE;;;;;AAK3B,wBAAwB8I,SAAS1I;OACxB0I,YAAY+gE,OAAOxlE,KAAKjE;WAClB;;EAEXA,MAAMA,IAAIkF,MAAM,GAAGpD,QAAQ,SAAS;SAC5B2nE,OAAOjlE,OAAOkE,SAAS1I,IAAI,GAAG1C,gBAAgB0C,IAAIkF,MAAM,OAC5DukE,OAAOjlE,OAAOkE,SAAS+gE,OAAO9oE,UAAUX,SACxCypE,OAAOjlE,OAAOkE,SAAS1I;;IAG3B+xE,0BAA0B;MACxBC,2BAA2B,AAACrrE,KAAOorE,2BAA2BprE;;;;;AAKpE,oBAAoBsrE,OAAOhzE,MAAMksE;;AAGjC+G,UAAUC;MACFC,OAAOH,MAAMhzE;MACbmzE,QAAQA,KAAKt6E,SAAS;IACtBsB,MAAM,wEACD,0EACA;IACLg5E,OAAO;;;;;;EAMXL;EACAM;QACMC,mBAAmBF,QAAQG,iBAAiBH,KAAKjH;QACjDqH,WAAWC,YAAYzC;IAAYhwE,KAAKmrE,MAAMnrE,QAAQ,GAAGf,KAAK;KAAKqzE,qBAAqBJ,WAAWA,kBAAkBI,oBAAoBL,MAAMvsE,MAAM;EACrJ;;GACC;OACFysE,aAAaK,SAASE;IACvBF,SAASG,gBAAgBH,SAASE,UAAU;;EAEhDX;SACOS;;AAEX,0BAA0BI;SACfA,OAAOx2E,KAAK,AAAAy2E;SACVC,QAAQD,eACF;QACPA,MAAMh8E,SAASq5E,gBACR;QACP2C,MAAMh8E,SAASm5E,aACduC,iBAAiBM,MAAM96B,kBACjB;WACJ;OAEL66B,SACA;;;;;;IAONG,2BAA2B;IAC3BC,iBAAiB;;;;;;;;;;;AAWrB,qCAAqC7J;QAC3BrW,OAAOigB;EACbA,2BAA2B5J;EAC3B6J,iBAAkB7J,YAAYA,SAAStyE,KAAKo8E,aAAc;SACnDngB;;;;;;AAMX,qBAAqBt7D;EACjBw7E,iBAAiBx7E;;;;;;;AAOrB;EACIw7E,iBAAiB;;;;;;MAMfE,cAAc,AAACC,OAAQC;;;;;AAK7B,iBAAiB99E,IAAI+9E,MAAMN;OAClBM,YACM/9E;QACLg+E,sBAAsB,IAAIv0D;;;;SAIvBgzD;MACDM,UAAU;;UAERkB,eAAeC,4BAA4BH;UAC3Cn1E,MAAM5I,MAAMypB;IAClBy0D,4BAA4BD;SACvBxB;MACD0B;;WAEGv1E;;;;;EAKXo1E,oBAAoBI,KAAK;SAClBJ;;;;;;;IAQPK,gBAAgB;AACpB;EACIA,gBAAgB;;AAEpB,6BAA6BxK;SACjBtyE,MAAM+8E,WAAWlK,OAAOW,OAAOwJ,WAAW1I,OAAOwF,eAAeA,eAAesB,OAAO1K,OAAOwI,MAAMtzE,QAAQ8yE,aAAat6E,MAAM6+E,YAAYT,OAAQlK;MACtJ3wC;QACEs6B,OAAO0gB,4BAA4BrK;;IAErCwK,gBAAgB;;;QAGZI;QACArK,MAAMsK,YAAY;;;;YAGZC,aAAaJ,aAAaxJ;MAChC7xC,SAAS07C,eAAez3E,OAAO1H,KAAKk/E,YAAYA,YAAY1E,aAAapE,OAAO2I,YAAY7+E,MAAMo+E;MAClGU,mBAAmBxM;;;YAIb9qE,SAASm3E;;UAEX,QAAQrM,UAAU4D;QAClBgJ;;MAEJ37C,SAAS07C,eAAez3E,OAAO3E,SAAS,IAClC2E,OAAO0uE,OAAO;YAEJ5D;UACA4M;iBACO5M;;QAEX0K;QACAlC;;QAEAxI;QAAO0K;QAAOlC;WACpBtzE,OAAO0uE,OAAO;MACpB4I,mBAAmBH,UAAUzI,QACvB5D,QACA6M,yBAAyB7M;;;;;QAK/BhwE,OAAOihC;QACP67C,UAAU5+E;QACV,QACA+iC,OAAO87C,YAAY,KACnB97C,OAAO87C,YAAY;;;OAElB/8E,MAAM88E,WAAWE,aAAa/7C;;QAE/Bo7C,UAAUY,iBAAiB,SAAST;YAC9BtxE,OAAO3F,OAAO2F,KAAKsxE;aACjBC,aAAcz8E;UAClBkL,KAAK3K;YACDk8E,YAAY;QACZA,YAAY;;cACRrD,gBAAgBluE,KAAKrG,KAAKqtE,OAAOvlE;;;;;YAKjC6vE,mBAAmBU,qBAAqBV,kBAAkBpD;;UAE9Dp5E,OAAOm9E,WAAWn9E,MAAMw8E;mBAEnB,SAASJ,iBAAiBp8E,KAAKV,SAASq5E;gBACvCyE,WAAW73E,OAAO2F,KAAK8kE;gBACvBqN;gBACAC;mBACGh9E,IAAI,GAAG4uE,IAAIkO,SAAS78E,QAAQD,IAAI4uE,GAAG5uE;kBAClCmI,MAAM20E,SAAS98E;gBACjB4xE,OAAOxlE,KAAKjE;;mBAEPypE,OAAOvlE,gBAAgBlE;;;gBAGxB40E,WAAWr/E,KAAKyK,IAAI,GAAG1C,gBAAgB0C,IAAIkF,MAAM;;;cAIrD2vE,WAAWt/E,KAAKyK;;;cAGpB60E,WAAW/8E;YACXsB,MAAM,sCACD,EAAEy7E,WAAWn8E,KAAK,MAAM,OACxB,uEACA;;cAELk8E,WAAW98E;YACXsB,MAAM,2CACD,EAAEw7E,WAAWl8E,KAAK,MAAM,OACxB,uEACA,4DACA,+EACA;;;;;;QAMjBgxE,MAAMoL;UACF,SAASC,cAAcx9E;QACvB6B,MAAM,qEACD;;MAET7B,KAAKu9E,OAAOv9E,KAAKu9E,OAAOv9E,KAAKu9E,KAAKz6E,OAAOqvE,MAAMoL,QAAQpL,MAAMoL;;;QAG7DpL,MAAMsL;UACF,SAASD,cAAcx9E;QACvB6B,MAAM,iEACD;;MAET7B,KAAKy9E,aAAatL,MAAMsL;;QAExB,QAAQX;MACRA,QAAQ98E;;MAGRihC,SAASjhC;;WAGVklB;IACHw4D,WAAWn9E,SAAS;IACpB2zE,YAAYhvD,KAAK0sD,UAAU;IAC3B3wC,SAAS08C,YAAYhF;;EAEzBsD,4BAA4B1gB;SACrBt6B;;;;;;;;MAQL+7C,eAAe,AAAC7K;QACZyL,cAAczL,MAAM3xB;QACpBq9B,kBAAkB1L,MAAM0L;QACxBC,YAAYC,iBAAiBH;OAC9BE;YACO3L,OAAOj0E;;QAEb+L,QAAQ2zE,YAAYp/E,QAAQs/E;QAC5BE,eAAeH,kBAAkBA,gBAAgBr/E,QAAQs/E,cAAc;QACvEhB,UAAU,AAACmB;IACbL,YAAY3zE,SAASg0E;QACjBJ;UACIG,gBAAgB;QAChBH,gBAAgBG,gBAAgBC;iBAE3BA,YAAYlB,YAAY;QAC7B5K,MAAM0L,sBAAsBA,iBAAiBI;;;;UAIjDtB,eAAemB,YAAYhB;;AAEvC,0BAA0Bt8B;MAClB09B;WACK59E,IAAI,GAAGA,IAAIkgD,SAASjgD,QAAQD;UAC3Bg7E,QAAQ96B,SAASlgD;QACnBi7E,QAAQD;;UAEJA,MAAMh8E,SAASq5E,WAAW2C,MAAM96B,aAAa;YACzC09B;;;;UAKAA,aAAa5C;;;;;;;SAQtB4C;;MAELrB,2BAA2B,AAAC7M;MAC1BrpE;aACO8B,OAAOunE;QACVvnE,QAAQ,WAAWA,QAAQ,WAAWypE,OAAOxlE,KAAKjE;OACjD9B,QAAQA,WAAW8B,OAAOunE,MAAMvnE;;;SAGlC9B;;MAELu2E,uBAAuB,CAAClN,OAAO4D;QAC3BjtE;aACK8B,OAAOunE;SACTkC,OAAOvlE,gBAAgBlE,WAAUA,IAAIkF,MAAM,MAAMimE;MAClDjtE,IAAI8B,OAAOunE,MAAMvnE;;;SAGlB9B;;MAEL62E,gBAAgB,AAACrL;SACXA,MAAMsK,YAAY;EACtBtK,MAAMsK,YAAY;EAClBtK,MAAM7yE,SAASq5E;;AAGvB,+BAA+BwF,WAAWC,WAAWC;SACzCzK,OAAO0K,WAAW99B,UAAU+9B,cAAcjM,aAAc6L;SACxDvK,OAAO4K,WAAWh+B,UAAUi+B,cAAc1B,aAAcqB;QAC1DjE,QAAQ7H,UAAU6G;;;;OAInBoF,gBAAgBE,iBAAiBtH;WAC3B;;;MAGPiH,UAAUb,QAAQa,UAAUX;WACrB;;MAEPY,aAAatB,aAAa;QACtBA,YAAY;;;;aAGL;;QAEPA,YAAY;;WACPuB;iBACQE;;;aAGNE,gBAAgBJ,WAAWE,WAAWrE;eAExC4C,YAAY;;YACX4B,eAAeP,UAAUO;eACtBr+E,IAAI,GAAGA,IAAIq+E,aAAap+E,QAAQD;cAC/BmI,MAAMk2E,aAAar+E;YACrBk+E,UAAU/1E,SAAS61E,UAAU71E,SAC5Bm2E,eAAezE,OAAO1xE;iBAChB;;;;;;;QAQf81E,gBAAgBE;WACXA,iBAAiBA,aAAaI;eACxB;;;QAGXP,cAAcE;aACP;;SAENF;eACQE;;SAERA;aACM;;WAEJE,gBAAgBJ,WAAWE,WAAWrE;;SAE1C;;AAEX,yBAAyBmE,WAAWE,WAAWrF;QACrC2F,WAAWv5E,OAAO2F,KAAKszE;MACzBM,SAASv+E,WAAWgF,OAAO2F,KAAKozE,WAAW/9E;WACpC;;WAEFD,IAAI,GAAGA,IAAIw+E,SAASv+E,QAAQD;UAC3BmI,MAAMq2E,SAASx+E;QACjBk+E,UAAU/1E,SAAS61E,UAAU71E,SAC5Bm2E,eAAezF,cAAc1wE;aACvB;;;SAGR;;AAEX,0BAA2B0pE,OAAOxzE,SAAUmO;;SAEjCnO,UAAUA,OAAOogF,YAAY5M;KAC/BA,QAAQxzE,OAAOwzE,OAAOrlE,KAAKA;IAC5BnO,SAASA,OAAOA;;;MAIlBqgF,aAAa,AAAC1/E,QAASA,KAAK2/E;;;;MAI5BC;EACFx3E,MAAM;;;;;EAKNu3E,cAAc;EACdE,QAAQC,IAAIC,IAAIC,WAAWC,QAAQC,iBAAiBC,gBAAgBC,OAAOtE,cAAciD;EAEzFsB;QACQP,MAAM;MACNQ,cAAcP,IAAIC,WAAWC,QAAQC,iBAAiBC,gBAAgBC,OAAOtE,cAAciD,WAAWsB;;MAGtGE,cAAcT,IAAIC,IAAIC,WAAWC,QAAQC,iBAAiBE,OAAOtE,cAAciD,WAAWsB;;;EAGlGG,SAASC;EACTn6E,QAAQo6E;;;MAGNC,WAAYf;AAElB,uBAAuB/M,OAAOmN,WAAWC,QAAQC,iBAAiBC,gBAAgBC,OAAOtE,cAAciD,WAAWsB;SACtGppB,GAAG2pB,OAAOC,IAAKl+E,kBAAoB09E;QACrCS,kBAAkBn+E,cAAc;QAChCo+E,WAAYlO,MAAMkO,WAAWL,uBAAuB7N,OAAOsN,gBAAgBD,iBAAiBF,WAAWc,iBAAiBb,QAAQG,OAAOtE,cAAciD,WAAWsB;;EAEtKO,MAAM,MAAOG,SAASC,gBAAgBnO,MAAMoO,WAAYH,iBAAiB,MAAMZ,iBAAiBa,UAAUX,OAAOtE;;MAE7GiF,SAAS77E,OAAO;;;IAGhB07E,MAAM,MAAM/N,MAAMqO,YAAYlB,WAAWC,QAAQC,iBAAiB;IAClEE,OAAOtE;IACPqF,gBAAgBJ,UAAUlO,MAAMqO;;;IAIhCH,SAASzK;;;AAGjB,uBAAuBwJ,IAAIC,IAAIC,WAAWC,QAAQC,iBAAiBE,OAAOtE,cAAciD,YAAa9nB,GAAG2pB,OAAOQ,IAAIC,SAASR,IAAKl+E;QACvHo+E,WAAYhB,GAAGgB,WAAWjB,GAAGiB;EACnCA,SAASlO,QAAQkN;EACjBA,GAAGvyE,KAAKsyE,GAAGtyE;QACL8zE,YAAYvB,GAAGkB;QACfM,cAAcxB,GAAGmB;SACfM,cAAcR,eAAeS,cAAcC,eAAgBX;MAC/DC;IACAD,SAASC,gBAAgBM;QACrBK,gBAAgBL,WAAWN;;MAE3BJ,MAAMI,eAAeM,WAAWP,SAASD,iBAAiB,MAAMZ,iBAAiBa,UAAUX,OAAOtE,cAAciD;UAC5GgC,SAAS77E,QAAQ;QACjB67E,SAASzK;iBAEJmL;QACLb,MAAMY,cAAcD,aAAavB,WAAWC,QAAQC,iBAAiB;QACrEE,OAAOtE,cAAciD;QACrBoC,gBAAgBJ,UAAUQ;;;;MAK9BR,SAASa;UACLF;;;;QAIAX,SAASW,cAAc;QACvBX,SAASS,eAAeR;;QAGxBK,QAAQL,eAAed,iBAAiBa;;;;MAI5CA,SAAS77E,OAAO;;MAEhB67E,SAASc,QAAQ5gF,SAAS;;MAE1B8/E,SAASD,kBAAkBn+E,cAAc;UACrC8+E;;QAEAb,MAAM,MAAMU,WAAWP,SAASD,iBAAiB,MAAMZ,iBAAiBa,UAAUX,OAAOtE,cAAciD;YACnGgC,SAAS77E,QAAQ;UACjB67E,SAASzK;;UAGTsK,MAAMY,cAAcD,aAAavB,WAAWC,QAAQC,iBAAiB;UACrEE,OAAOtE,cAAciD;UACrBoC,gBAAgBJ,UAAUQ;;iBAGzBC,gBAAgBG,gBAAgBL,WAAWE;;QAEhDZ,MAAMY,cAAcF,WAAWtB,WAAWC,QAAQC,iBAAiBa,UAAUX,OAAOtE,cAAciD;;QAElGgC,SAASzK,QAAQ;;;QAIjBsK,MAAM,MAAMU,WAAWP,SAASD,iBAAiB,MAAMZ,iBAAiBa,UAAUX,OAAOtE,cAAciD;YACnGgC,SAAS77E,QAAQ;UACjB67E,SAASzK;;;;;QAMjBkL,gBAAgBG,gBAAgBL,WAAWE;;MAE3CZ,MAAMY,cAAcF,WAAWtB,WAAWC,QAAQC,iBAAiBa,UAAUX,OAAOtE,cAAciD;MAClGoC,gBAAgBJ,UAAUO;;;;YAKpBQ,YAAY/B,GAAGzL,SAASyL,GAAGzL,MAAMwN;UACnClP,OAAO/kE,WAAWi0E;QAClBA;;;MAGJf,SAASC,gBAAgBM;MACzBP,SAASa;MACThB,MAAM,MAAMU,WAAWP,SAASD,iBAAiB,MAAMZ,iBAAiBa,UAAUX,OAAOtE,cAAciD;UACnGgC,SAAS77E,QAAQ;;QAEjB67E,SAASzK;;eAGDyL,SAASH,aAAcb;YAC3BgB,UAAU;UACVv9E,WAAW;gBACHu8E,SAASa,cAAcA;cACvBb,SAAS1F,SAASkG;;aAEvBQ;mBAEEA,YAAY;UACjBhB,SAAS1F,SAASkG;;;;;;IAMlCS,YAAY;AAChB,gCAAgCnP,OAAOxzE,QAAQ6gF,iBAAiBF,WAAWc,iBAAiBb,QAAQG,OAAOtE,cAAciD,WAAWsB,mBAAmBqB,cAAc;;OAE5JM;IACDA,YAAY;;IAEZnhF,QAAQA,QAAQ00E,OAAO,SAAS,QAAQ;;SAEpCte,GAAG2pB,OAAOqB,GAAGC,MAAMd,IAAIC,SAASvxE,GAAG4e,MAAMmyD,IAAK/8E,YAAYrB,WAAa49E;QACzE0B,UAAUnP,OAAO/iE,SAASgjE,MAAMyB,SAASzB,MAAMyB,MAAMyN;QACrDhB;IACFlO;IACAxzE;IACA6gF;IACAE;IACAJ;IACAc;IACAb;IACA/6E,MAAM;IACN08E,WAAW;IACXG,gBAAgBA,YAAY,WAAWA,WAAW;IAClDP,cAAc;IACdR,eAAe;IACfS,cAAc;IACdC;IACAS,aAAa;IACbN;IACAvL,QAAQ8L,SAAS;;aAEJA,WAAWrB,SAASC;oBACXnpD,OAAO;;YAEjBkpD,SAASoB;oBACCtqD,OAAO;;;aAGjBg7C,OAAO2O,cAAcR,eAAeY,WAAWC,SAAS3B,iBAAiBF,aAAce;UAC3FA,SAASW;QACTX,SAASW,cAAc;kBAEjBU;cACAC,aAAab,gBACfR,cAAc7C,cACd6C,cAAc7C,WAAWmE,SAAS;YAClCD;UACAb,aAAarD,WAAWoE,aAAa;gBAC7BX,cAAcb,SAASa;cACvBM,KAAKlB,eAAehB,WAAWC,QAAQ;;;;;aAK7CA,UAAWc;;YAEbS;;;UAGAvB,SAASvxD,KAAK8yD;UACdH,QAAQG,cAActB,iBAAiBa,UAAU;;aAEhDsB;;UAEDH,KAAKlB,eAAehB,WAAWC,QAAQ;;;MAG/CkB,gBAAgBJ,UAAUC;MAC1BD,SAASC,gBAAgB;MACzBD,SAASU,eAAe;;;UAGpBpiF,SAAS0hF,SAAS1hF;UAClBmjF,wBAAwB;aACrBnjF;YACCA,OAAO2hF;;;UAGP3hF,OAAOwiF,QAAQnjF,QAAQmjF;UACvBW,wBAAwB;;;QAG5BnjF,SAASA,OAAOA;;;WAGfmjF;QACD5J,iBAAiBiJ;;MAErBd,SAASc;;YAEHY,YAAY5P,MAAMyB,SAASzB,MAAMyB,MAAMmO;UACzC7P,OAAO/kE,WAAW40E;QAClBA;;;IAGRpH,SAASqH;WACA3B,SAASC;;;aAGNnO,OAAO2O,cAActB,iBAAiBF,WAAWI,SAAUW;;YAE7D4B,aAAa9P,MAAMyB,SAASzB,MAAMyB,MAAMqO;UAC1C/P,OAAO/kE,WAAW80E;QAClBA;;YAEE1C,SAASvxD,KAAK8yD;YACdoB,gBAAgB;aACb7B,SAASU;;;;QAIdb,MAAM,MAAM8B,eAAe1C,WAAWC,QAAQC,iBAAiB;QAC/DE,OAAOtE,cAAciD;QACrBoC,gBAAgBJ,UAAU2B;;YAExBL,aAAaK,cAAcvE,cAAcuE,cAAcvE,WAAWmE,SAAS;UAC7ED;QACAb,aAAarD,WAAWoE,aAAaK;;;MAGzCvB,QAAQG,cAActB,iBAAiB;MACvC;MAEAa,SAASU,eAAe;WACnBY;QACDO;;;IAGRV,KAAKlC,WAAWC,QAAQjgF;MACpB+gF,SAASS,gBACLU,KAAKnB,SAASS,cAAcxB,WAAWC,QAAQjgF;MACnD+gF,SAASf,YAAYA;;IAEzBtxD;aACWqyD,SAASS,gBAAgB9yD,KAAKqyD,SAASS;;IAElDqB,YAAYvQ,UAAUwQ;YACZC,wBAAwBhC,SAASC;UACnC+B;QACAhC,SAAS77E;;YAEP89E,aAAa1Q,SAASO,MAAMrlE;MAClC8kE,SACK2Q,SAASh1E,MAAM,AAAA2X;QAChBgvD,YAAYhvD,KAAK0sD,UAAU;SAE1BtkE,KAAK,AAAAk1E;;;YAGF5Q,SAAS6P,eACTpB,SAASoB,eACTpB,SAASa,cAActP,SAAS6Q;;;;QAIpC7Q,SAAS8Q,gBAAgB;eACjBvQ,SAAUP;;UAEdkD,mBAAmB3C;;QAEvBwQ,kBAAkB/Q,UAAU4Q,kBAAkB;YAC1CF;;;UAGAnQ,MAAMrlE,KAAKw1E;;cAET9tB,eAAe8tB,cAAc1Q,SAASmN,QAAQjyE;QACpDs1E,kBAAkBxQ,UAAUO;;;QAI5B/uE,WAAWk/E,cAAc1Q,SAASmN,QAAQjyE;;QAG1Cw1E,aAAa,OAAOt0D,KAAK4jD,SAASmN,UAAUsB,UAAUX,OAAOrB;YACzD7pB;UACAzyD,OAAOyyD;;QAEXouB,gBAAgBhR,UAAUO,MAAMrlE;;UAE5BioE;;;;YAGAsN,yBAAyBhC,SAAS77E,SAAS;UAC3C67E,SAASzK;;;;IAIrB+K,QAAQlB,gBAAgBoD;MACpBxC,SAASoB,cAAc;UACnBpB,SAASS;QACTH,QAAQN,SAASS,cAActB,iBAAiBC,gBAAgBoD;;UAEhExC,SAASC;QACTK,QAAQN,SAASC,eAAed,iBAAiBC,gBAAgBoD;;;;SAItExC;;AAEX,yBAAyBpnE,MAAMk5D,OAAOqN,iBAAiBC,gBAAgBC,OAAOtE,cAAciD,WAAWsB,mBAAmBmD;;QAEhHzC,WAAYlO,MAAMkO,WAAWL,uBAAuB7N,OAAOsN,gBAAgBD,iBAAiBvmE,KAAK7V,YAAY7B,SAASU,cAAc,QAAQ,MAAMy9E,OAAOtE,cAAciD,WAAWsB,mBAAmB;;;;;;;QAOrM1+C,SAAS6hD,YAAY7pE,MAAOonE,SAASC,gBAAgBnO,MAAMoO,WAAYf,iBAAiBa,UAAUjF,cAAciD;MAClHgC,SAAS77E,SAAS;IAClB67E,SAASzK;;SAEN30C;;AAGX,mCAAmCkxC;SACvBsK,WAAWj8B,YAAa2xB;MAC5BzX;MACAigB;MACA8B,YAAY;;IACZ/hB,UAAUqoB,sBAAsBviC,SAASvmB;IACzC0gD,WAAWoI,sBAAsBviC,SAASm6B;;IAG1CjgB,UAAUqoB,sBAAsBviC;IAChCm6B,WAAWgC,eAAe;;;IAG1BjiB;IACAigB;;;AAGR,+BAA+BqI;MACvB9Q,OAAO/kE,WAAW61E;IAClBA,IAAIA;;MAEJ9Q,OAAOrvE,QAAQmgF;UACTC,cAAclF,iBAAiBiF;SAChCC;MACDphF,MAAM;;IAEVmhF,IAAIC;;SAEDtG,eAAeqG;;AAE1B,iCAAiCjlF,IAAIsiF;MAC7BA,YAAYA,SAASC;QACjBpO,OAAOrvE,QAAQ9E;MACfsiF,SAASc,QAAQnjF,QAAQD;;MAGzBsiF,SAASc,QAAQnjF,KAAKD;;;IAI1Bm6E,iBAAiBn6E;;;AAGzB,yBAAyBsiF,UAAU6C;EAC/B7C,SAASS,eAAeoC;SAChB/Q,OAAOqN,mBAAoBa;QAC7BvzE,KAAMqlE,MAAMrlE,KAAKo2E,OAAOp2E;;;MAG1B0yE,mBAAmBA,gBAAgBT,YAAY5M;IAC/CqN,gBAAgBrN,MAAMrlE,KAAKA;IAC3B81E,gBAAgBpD,iBAAiB1yE;;;AAIzC,mBAAmB8kE,UAAUuR,UAAUC;AACvCC,QAAQ;QACEzP;QACA5D;EACNkC,OAAOnjE,IAAIihE,OAAOsT,mBAAmB;EACrC1R,SAAS2R,gBAAgBh+E,OAAOK,OAAO;EACvC49E,aAAa5R,UAAUuR,UAAUvP,OAAO5D;;;IAGpCyT,cAAcN,kBAAgBvP,OAAOhC;;MAErCwR;;IAEAxR,SAASgC,QAAQyP,QAAQzP,QAAQ3B,WAAWyR,gBAAgB9P;;SAGvDhC,SAAStyE,KAAKs0E;;MAEfhC,SAASgC,QAAQ5D;;;MAIjB4B,SAASgC,QAAQA;;;EAGzBhC,SAAS5B,QAAQA;;AAErB,qBAAqB4B,UAAUuR,UAAUQ,cAActF;SAC3CzK,OAAO5D,OAAOmC,QAAS4K,cAAgBnL;QACzCgS,kBAAkB3R,WAAW+B,MAAMJ;SAClCziE,WAAWygE,SAASwH;;;;IAKxBxH,SAAStyE,KAAKo4E,WACR9F,SAASjzE,UAAUizE,SAASjzE,OAAOW,KAAKo4E,aAC5C2G,aAAatB,YAAY,QACxBA,YAAY;QACVA,YAAY;;;;YAGN8G,gBAAgBjS,SAASO,MAAMwM;eAC5Br+E,IAAI,GAAGA,IAAIujF,cAActjF,QAAQD;cAChCmI,MAAMo7E,cAAcvjF;;cAEpBmF,QAAQ09E,SAAS16E;YACnB0I;;;cAGI+gE,OAAOjlE,OAAO+iE,OAAOvnE;YACrBunE,MAAMvnE,OAAOhD;;kBAGPq+E,eAAe5R,OAAOhkE,SAASzF;YACrCmrE,MAAMkQ,gBAAgBC,iBAAiB5yE,SAASyyE,iBAAiBE,cAAcr+E,OAAOmsE;;;UAI1F5B,MAAMvnE,OAAOhD;;;;;;IAOzB+9E,aAAa5R,UAAUuR,UAAUvP,OAAO5D;;;QAGpCgU;eACOv7E,OAAOm7E;WACTT;OAECjR,OAAOjlE,OAAOk2E,UAAU16E;;OAGpBu7E,WAAW9R,OAAO9oE,UAAUX,UAAUA,QAAQypE,OAAOjlE,OAAOk2E,UAAUa;YACxE7yE;cACIwyE;UAECA,aAAal7E,SAASvK;UAEnBylF,aAAaK,cAAc9lF;YAC/B01E,MAAMnrE,OAAOs7E,iBAAiB5yE,SAASgyE,YAAYjR,OAAO9lE,WAAW3D,KAAKvK,WAAW0zE;;;iBAIlFgC,MAAMnrE;;;;;;QAMrBunE,UAAU4T;iBACCn7E,OAAOunE;aACTmT,aAAajR,OAAOjlE,OAAOk2E,UAAU16E;iBAC/BunE,MAAMvnE;;;;;;EAM7BwpE,WAAWgS,QAAQrS,UAAU;EAAiB;;IAE1C6R,cAAcN,kBAAgBvP,OAAOhC;;;AAG7C,sBAAsBA,UAAUuR,UAAUvP,OAAO5D;SACtC7+D,SAAS+yE,gBAAgBtS,SAASwH;MACrC+J;eACW16E,OAAO06E;YACR19E,QAAQ09E,SAAS16E;;UAEnBypE,OAAOpkE,eAAerF;;;;;UAKtB07E;UACAhzE,WAAW+gE,OAAOjlE,OAAOkE,SAAUgzE,WAAWjS,OAAOhkE,SAASzF;QAC9DmrE,MAAMuQ,YAAY1+E;kBAEZm5E,eAAehN,SAASuH,cAAc1wE;;;;QAI5CunE,MAAMvnE,OAAOhD;;;;MAIrBy+E;UACMN,kBAAkB3R,WAAW+B,MAAMJ;aAChCtzE,IAAI,GAAGA,IAAI4jF,aAAa3jF,QAAQD;YAC/BmI,MAAMy7E,aAAa5jF;MACzBszE,MAAMnrE,OAAOs7E,iBAAiB5yE,SAASyyE,iBAAiBn7E,KAAKm7E,gBAAgBn7E,MAAMmpE;;;;AAI/F,0BAA0BzgE,SAASyiE,OAAOnrE,KAAKhD,OAAOmsE;QAC5CwS,MAAMjzE,QAAQ1I;MAChB27E,OAAO;UACD3V,aAAayD,OAAOjlE,OAAOm3E,KAAK;;QAElC3V,cAAchpE,UAAUvH;YAClBmmF,eAAeD,IAAInqD;UACrBmqD,IAAI9kF,SAASmF,YAAYytE,OAAO/kE,WAAWk3E;eACnCd,iBAAkB3R;aACtBnpE,OAAO86E;UACP99E,QAAQ89E,cAAc96E;;UAGtB67E,mBAAmB1S;UACnBnsE,QAAQ89E,cAAc96E,OAAO47E,aAAazQ;UAC1C0Q,mBAAmB;;;QAIvB7+E,QAAQ4+E;;;;QAIZD,IAAI;WACClS,OAAOjlE,OAAO2mE,OAAOnrE,SAASgmE;QAC/BhpE,QAAQ;iBAEH2+E,IAAI,OACR3+E,UAAU,MAAMA,UAAUysE,OAAO9oE,UAAUX;QAC5ChD,QAAQ;;;;SAIbA;;AAEX,+BAA+Bs0E,MAAMvH,YAAYwH,UAAU;OAClDxH,WAAWyH,SAASF,KAAKwK;WACnBxK,KAAKwK;;QAEV59D,MAAMozD,KAAKnG;QACXvrE;QACA67E;;MAEF9J,aAAa;OACZlI,OAAO/kE,WAAW4sE;UACbyK,cAAc,AAAC79D;MACjByzD,aAAa;aACNxG,OAAO1oE,QAAQu5E,sBAAsB99D,KAAK6rD,YAAY;MAC7DN,OAAOtlE,OAAOvE,YAAYurE;UACtB1oE,MACAg5E,aAAalmF,QAAQkN;;SAExB8uE,WAAWxH,WAAW53C,OAAOr6B;MAC9BiyE,WAAW53C,OAAO/6B,QAAQ2kF;;QAE1BzK,KAAKr/C;MACL8pD,YAAYzK,KAAKr/C;;QAEjBq/C,KAAKn/C;MACLm/C,KAAKn/C,OAAO/6B,QAAQ2kF;;;OAGvB79D,QAAQyzD;WACDL,KAAKwK,UAAUrS,OAAO5lE;;MAE9B4lE,OAAOrvE,QAAQ8jB;aACNrmB,IAAI,GAAGA,IAAIqmB,IAAIpmB,QAAQD;WACvB4xE,OAAO3pE,SAASoe,IAAIrmB;QACrBuB,MAAM,iDAAiD8kB,IAAIrmB;;YAEzD4I,gBAAgBgpE,OAAOhkE,SAASyY,IAAIrmB;UACtCokF,iBAAiBx7E;QACjBb,WAAWa,iBAAiBgpE,OAAO9lE;;;aAItCua;SACAurD,OAAOxpE,SAASie;MACjB9kB,MAAM,wBAAwB8kB;;eAEvBle,OAAOke;YACRzd,gBAAgBgpE,OAAOhkE,SAASzF;UAClCi8E,iBAAiBx7E;cACXk7E,MAAMz9D,IAAIle;cACV2gB,OAAQ/gB,WAAWa,iBACrBgpE,OAAOrvE,QAAQuhF,QAAQlS,OAAO/kE,WAAWi3E;UAAS9kF,MAAM8kF;YAAQA;YAChEh7D;gBACMu7D,eAAeC,aAAaC,SAASz7D,KAAK9pB;gBAC1CwlF,cAAcF,aAAa39E,QAAQmiB,KAAK9pB;UAC9C8pB,KAAK,KAAsBu7D,gBAAgB;UAC3Cv7D,KAAK,KACD07D,cAAc,KAAKH,eAAeG;;cAElCH,gBAAgB,KAAKzS,OAAOjlE,OAAOmc,MAAM;YACzC86D,aAAalmF,KAAKkL;;;;;;SAM9B6wE,KAAKwK,WAAWl8E,YAAY67E;;AAExC,0BAA0Bz7E;MAClBA,IAAI,OAAO;WACJ;;IAGP5G,MAAM,sBAAsB4G,IAAI;;SAE7B;;;;AAIX,iBAAiBs8E;QACPj7E,QAAQi7E,QAAQA,KAAKt3E,WAAW3D,MAAM;SACrCA,QAAQA,MAAM,KAAK;;AAE9B,oBAAoBU,GAAGC;SACZu6E,QAAQx6E,OAAOw6E,QAAQv6E;;AAElC,sBAAsBnL,MAAM2lF;MACpB/S,OAAOrvE,QAAQoiF;WACRA,cAAc15E,UAAU,AAAA4hD,KAAK+3B,WAAW/3B,GAAG7tD;aAE7C4yE,OAAO/kE,WAAW83E;WAChBC,WAAWD,eAAe3lF,QAAQ,KAAK;;UAE1C;;;;;AAKZ,uBAAuB6jF,UAAUvP,OAAOhC;QAC9BuT,iBAAiBlT,WAAW+B,MAAMJ;QAClCziE,UAAUygE,SAASwH,aAAa;aAC3B3wE,OAAO0I;QACVizE,MAAMjzE,QAAQ1I;QACd27E,OAAO;IAEXgB,aAAa38E,KAAK08E,eAAe18E,MAAM27E,MAAMlS,OAAOjlE,OAAOk2E,UAAU16E,SAASypE,OAAOjlE,OAAOk2E,UAAUjR,OAAO9oE,UAAUX;;;;;;AAM/H,sBAAsBf,MAAMjC,OAAO2jB,MAAMi8D;SAC7B/lF,MAAMgmF,UAAUjM,aAAcjwD;;MAElCk8D,YAAYD;IACZxjF,KAAK,6BAA6B6F,OAAO;;;;MAIzCjC,SAAS,SAAS2jB,KAAKk8D;;;;MAIvBhmF,QAAQ,QAAQA,SAAS;QACrBg6E,UAAU;UACR/nE,QAAQ2gE,OAAOrvE,QAAQvD,QAAQA,QAAQA;UACvC2lF;;aAEG3kF,IAAI,GAAGA,IAAIiR,MAAMhR,WAAW+4E,SAASh5E;aAClCohC,OAAOsJ,gBAAiBu6C,WAAW9/E,OAAO8L,MAAMjR;MACxD2kF,cAAcjnF,KAAKgtC,gBAAgB;MACnCsuC,UAAU53C;;SAET43C;MACDz3E,KAAK2jF,sBAAsB99E,MAAMjC,OAAOw/E;;;;;MAK5C5L,cAAcA,UAAU5zE;IACxB5D,KAAK,2DAA2D6F,OAAO;;;MAGzE+9E,4BAA6BvT,OAAO9rE,QAAQ;;;;AAIlD,oBAAoBX,OAAOnG;MACnBoiC;QACEsJ,eAAeg6C,QAAQ1lF;MACzBmmF,aAAaz6C;UACPmiB,WAAW1nD;IACjBi8B,QAAQyrB,MAAMniB,aAAajlC;;SAEtB27B,SAASyrB,MAAM;MAChBzrB,QAAQj8B,iBAAiBnG;;aAGxB0rC,iBAAiB;IACtBtJ,QAAQwwC,OAAOxpE,SAASjD;aAEnBulC,iBAAiB;IACtBtJ,QAAQwwC,OAAOrvE,QAAQ4C;;IAGvBi8B,QAAQj8B,iBAAiBnG;;;IAGzBoiC;IACAsJ;;;;;;AAMR,+BAA+BtjC,MAAMjC,OAAOw/E;MACpChkF,WAAW,4CAA4CyG,KAAK,OAC3D,YAAYu9E,cAAc7iF,IAAI8vE,OAAO3jE,YAAYpN,KAAK,MAAM;QAC3D6pC,eAAei6C,cAAc;QAC7BS,eAAexT,OAAOxkE,UAAUjI;QAChCkgF,gBAAgBC,WAAWngF,OAAOulC;QAClC66C,gBAAgBD,WAAWngF,OAAOigF;;MAEpCT,cAAc1kF,WAAW,KACzBulF,aAAa96C,kBACZ+6C,UAAU/6C,cAAc06C;IACzBzkF,YAAY,cAAc0kF,cAAc;;EAE5C1kF,YAAY,QAAQykF,aAAa;;MAE7BI,aAAaJ;IACbzkF,YAAY,aAAa4kF,cAAc;;SAEpC5kF;;;;;AAKX,oBAAoBwE,OAAOnG;MACnBA,SAAS;YACD,GAAGmG,MAAM;aAEZnG,SAAS;YACN,EAAEk8D,OAAO/1D,OAAO;;YAGhB,EAAEA,MAAM;;;;;;AAMxB,sBAAsBnG;QACZ0mF,iBAAiB,UAAU,UAAU;SACpCA,cAAcnhF,KAAK,AAAAy9D,QAAQhjE,KAAKyG,kBAAkBu8D;;;;;AAK7D,sBAAsB96C;SACXA,KAAK3iB,KAAK,AAAAy9D,QAAQA,KAAKv8D,kBAAkB;;AAGpD,oBAAoBzG,MAAM84E,MAAM6N,SAASC,iBAAiBC,UAAU;MAC5DF;UACMG,QAAQH,OAAO3mF,UAAU2mF,OAAO3mF;;;;UAIhC+mF,cAAcjO,KAAKkO,UACpBlO,KAAKkO,QAAQ,IAAI9+D;UACVy+D,OAAOxE;;;;;MAKXxP,WAAWI;;;;MAIXiS,mBAAmB2B;YACbt/E,MAAMwtE,2BAA2BiE,MAAM6N,QAAQ3mF,MAAMkoB;MAC3D88D,mBAAmB;MACnBrS,WAAWiB;aACJvsE;;QAEXw/E;MACAC,MAAMG,QAAQF;;MAGdD,MAAMpoF,KAAKqoF;;WAERA;;UAGDG,UAAUtU,OAAOzjE,aAAawlE,iBAAiB30E,MAAMiL,QAAQ,UAAU;IAC7E1I,MAAM,EAAE2kF,QAAQ,iEACX,sBACA,4EACC,sEACO;;;MAIfC,aAAa,AAACC,aAAc,CAACtO,MAAM6N,SAASC;CAEjDS,yBAAyBC,WAAWF,WAAWtO,MAAM6N;MAChDY,gBAAgBJ,WAAW;MAC3BK,YAAYL,WAAW;MACvBM,iBAAiBN,WAAW;MAC5BO,YAAYP,WAAW;MACvBQ,kBAAkBR,WAAW;MAC7BS,cAAcT,WAAW;MACzBU,oBAAoBV,WAAW;MAC/BW,kBAAkBX,WAAW;MAC7BY,kBAAkB,CAACjP,MAAM6N,SAASC;EACpCU,WAAW;EAA2BxO,MAAM6N;;;AAIhD,qBAAqBqB,QAAQn2E;SAClBo2E,QAAQD,QAAQ,MAAMn2E;;;MAG3Bq2E;;AAEN,eAAelhF,QAAQvB,IAAIoM;OAClB+gE,OAAO/kE,WAAWpI;IACnBlD,MAAM,yEACD,mEACA;;SAEF0lF,QAAQjhF,QAAQvB,IAAIoM;;AAE/B,iBAAiB7K,QAAQvB,KAAM0iF,WAAWC,MAAMC,OAAOC,SAASC,aAAc3V,OAAO9lE,WAAWwlE,WAAWsU;OAClGnhF;QACG0iF,cAAcvpF;MACd2D,MAAM,iEACD;;QAEL6lF,SAASxpF;MACT2D,MAAM,4DACD;;;QAGPimF,oBAAoB,AAAC9E;IACvBnhF,MAAM,yBAAyBmhF,IAAI,iEAC9B;;MAEL+E;MACAC,eAAe;MACf/V,WAAW8B,MAAMztE;IACjByhF,SAAS,MAAMzhF,OAAOb;IACtBuiF,iBAAiB1hF,OAAO2hF;aAEnBhW,WAAWiW,WAAW5hF;IAC3ByhF,SAAS,MAAMzhF;IACfohF,OAAO;aAEFxV,OAAOrvE,QAAQyD;IACpByhF,SAAS,MAAMzhF,OAAOlE,IAAI,AAAA4gF;UAClB/Q,WAAW8B,MAAMiP;eACVA,EAAEv9E;iBAEJwsE,WAAWiW,WAAWlF;eACpBmF,SAASnF;iBAEX9Q,OAAO/kE,WAAW61E;eAChBnQ,sBAAsBmQ,GAAGpR,UAAU;SACtCA,YAAYA,SAASkB;;QAIzBgV,kBAAkB9E;;;aAIrB9Q,OAAO/kE,WAAW7G;QACnBvB;;MAEAgjF,SAAS,MAAMlV,sBAAsBvsE,QAAQsrE,UAAU;OACnDA,YAAYA,SAASkB;;;MAKzBiV,SAAS;YACDnW,YAAYA,SAAS6P;;;YAGrB2G;UACAA;;eAEGjU,2BAA2B7tE,QAAQsrE,UAAU;SAAyByW;;;;IAKrFN,SAAS7V,OAAO3lE;IAChBu7E,kBAAkBxhF;;MAElBvB,MAAM2iF;UACAY,aAAaP;IACnBA,SAAS,MAAMI,SAASG;;MAExBF;MACAC,eAAe,AAACtqF;IAChBqqF,UAAUG,OAAOp3E,QAAQq3E,SAAS;MAC9B3V,sBAAsB90E,IAAI6zE,UAAU;;;;;MAKxC+U;;IAEA0B,eAAenW,OAAO3lE;SACjBxH;MACDgjF;eAEKN;MACLtT,2BAA2BpvE,IAAI6sE,UAAU;OACrCmW,UACA7pF,WACAmqF;;WAGDnW,OAAO3lE;;MAEdoC,WAAWujE,OAAOrvE,QAAQyD,eAAekhF;QACvCxR,MAAM;SACHuS,OAAOE;;;QAGR1jF;;YAEM2jF,WAAWH;UACbb,QAAQM,gBAAgB9V,OAAOxjE,WAAWg6E,UAAU/5E;;YAEhDy5E;UACAA;;QAEJjU,2BAA2BpvE,IAAI6sE,UAAU;SACrC8W;QAEA/5E,aAAa64E,wBAAwBtpF,YAAYyQ,UACjD05E;QAEJ15E,WAAW+5E;;;;MAKfH;;;;;EAKRvS,IAAIK,iBAAiBtxE;MACjB4jF;MACAhB,UAAU;IACVgB,YAAY3S;aAEP2R,UAAU;IACfgB,YAAY,MAAMC,sBAAsB5S,KAAKpE,YAAYA,SAASyO;;;IAIlEsI,YAAY;WACH/W,YAAYA,SAASiX;QACtBC,gBAAgB9S;;;;QAKhBA;;;;QAINuS,SAAStW,WAAWqV,OAAOS;IAC7BgB,MAAM;IACNnB;IACAC;IACAc;;EAEJK,0BAA0BT,QAAQ3W;;MAE9B7sE;QACI0iF;MACAzR;;MAGArnE,WAAW45E;;aAGVZ,UAAU;IACfiB,sBAAsBL,QAAQ3W,YAAYA,SAASyO;;IAGnDkI;;SAEG;IACHtW,WAAWtnD,KAAK49D;QACZ3W;MACAM,OAAOnwE,OAAO6vE,SAASuP,SAASoH;;;;;AAK5C,uBAAuBjiF,QAAQvB,IAAIoM;QACzB83E,aAAa,KAAKnW;QAClBiV,SAAS7V,OAAO3pE,SAASjC,UACzB,MAAM2iF,WAAW3iF,UACjBA,OAAO6/C,KAAK8iC;SACX1B,QAAQQ,QAAQhjF,GAAGohD,KAAK8iC,aAAa93E,SAAS;;AAEzD,kBAAkB1L,OAAOmxE,WAAWxpD;OAC3B8kD,OAAOxpE,SAASjD,UAAUmxE,KAAKx+D,IAAI3S;WAC7BA;;EAEXmxE,KAAKlrC,IAAIjmC;MACLwsE,WAAW8B,MAAMtuE;IACjB0iF,SAAS1iF,MAAMA,OAAOmxE;aAEjB1E,OAAOrvE,QAAQ4C;aACXnF,IAAI,GAAGA,IAAImF,MAAMlF,QAAQD;MAC9B6nF,SAAS1iF,MAAMnF,IAAIs2E;;aAGlB1E,OAAOlmE,MAAMvG,UAAUysE,OAAOtmE,MAAMnG;IACzCA,MAAM5F,QAAQ,AAACiF;MACXqjF,SAASrjF,GAAG8xE;;;eAILnuE,OAAOhD;MACd0iF,SAAS1iF,MAAMgD,MAAMmuE;;;SAGtBnxE;;AAGX;QACUoT;IACFgwE,WAAW;IACXK,WAAW;IACXC,cAAc;IACdC,mBAAmBn4E;;EAEvB61E,UAAU;IACNjuE,MAAMgwE,YAAY;;EAEtB5B,gBAAgB;IACZpuE,MAAMswE,eAAe;;SAElBtwE;;MAELwwE,2BAA2B5kF,UAAU7B;MACrC0mF;EACF5hF,OAAO;EACPksE;IACIgO,MAAM36E;IACNsiF,QAAQ1E;IACR2E,WAAW3E;;IAEX4E,eAAeJ;IACfK,SAASL;IACTM,cAAcN;IACdO,kBAAkBP;;IAElBQ,eAAeR;IACfS,SAAST;IACTU,cAAcV;IACdW,kBAAkBX;;IAElBY,gBAAgBZ;IAChBa,UAAUb;IACVc,eAAed;IACfe,mBAAmBf;;EAEvBgB,MAAMzW,QAAS8G;UACL9I,WAAW0Y;UACXzxE,QAAQ0xE;QACVC;WACG;YACGhqC,WAAWk6B,MAAMzgD,WAAWwwD,yBAAyB/P,MAAMzgD,WAAW;WACvEumB,aAAaA,SAASjgD;;;;UAIvBigD,SAASjgD,SAAS;QAClBsB,KAAK,yEACD;;;;YAIFshF,WAAWlR,WAAW+B,MAAMJ;aAC1BgO,QAASuB;;UAEbvB,UAAU,UAAU,UAAU,WAAW/uD,SAAS+uD;QAClD//E,MAAM,6BAA6B+/E,KAAK;;;YAGtCtG,QAAQ96B,SAAS;UACnB3nC,MAAMqwE;eACCwB,iBAAiBpP;;;;YAItBqP,aAAaC,kBAAkBtP;WAChCqP;eACMD,iBAAiBpP;;YAEtBuP,aAAaC,uBAAuBH,YAAYxH,UAAUtqE,OAAO+4D;MACvEmZ,mBAAmBJ,YAAYE;YACzBG,WAAWpZ,SAASmN;YACpBkM,gBAAgBD,YAAYJ,kBAAkBI;UAChDE,uBAAuB;aACnBC,oBAAqBR,WAAWrrF;UACpC6rF;cACM1iF,MAAM0iF;YACRX,sBAAsBtsF;UACtBssF,oBAAoB/hF;mBAEfA,QAAQ+hF;UACbA,oBAAoB/hF;UACpByiF,uBAAuB;;;;UAI3BD,iBACAA,cAAc3rF,SAASq5E,aACrBsI,gBAAgB0J,YAAYM,kBAAkBC;cAC1CE,eAAeN,uBAAuBG,eAAe9H,UAAUtqE,OAAO+4D;;QAE5EmZ,mBAAmBE,eAAeG;;YAE9BxJ,SAAS;UACT/oE,MAAMqwE,YAAY;;UAElBkC,aAAavJ,aAAa;YACtBhpE,MAAMqwE,YAAY;YAClBtX,SAAS3U;;iBAENytB,iBAAiBpP;mBAEnBsG,SAAS,YAAY+I,WAAWrrF,SAASq5E;UAC9CyS,aAAaC,aAAa,CAACv+E,IAAIw+E,aAAaC;kBAClCC,qBAAqBC,uBAAuB5yE,OAAOoyE;YACzDO,mBAAmBvkF,OAAOgkF,cAAcxiF,QAAQwiF;;YAEhDn+E,GAAG4+E,WAAW;cACVJ;cACAx+E,GAAG4+E,WAAWxtF;qBACP2sF,WAAWU;;YAEtBV,WAAWU,eAAeA;;;;aAI/BjQ;;;;;;MAMbqQ,iBAAiBrC;AACvB,gCAAgCzwE,OAAOs5D;SAC3BiX,iBAAkBvwE;MACtB2yE,qBAAqBpC,cAAc7wE,IAAI45D,MAAM7yE;OAC5CksF;IACDA,qBAAqBjmF,OAAOK,OAAO;IACnCwjF,cAAc/3E,IAAI8gE,MAAM7yE,MAAMksF;;SAE3BA;;;;AAIX,gCAAgCrZ,OAAOyB,OAAO/6D,OAAO+4D;SACzC2X,QAAQ3H,MAAM4H,YAAY,OAAOC,eAAeC,SAASC,cAAcC,kBAAkBC,eAAeC,SAASC,cAAcC,kBAAkBC,gBAAgBC,UAAUC,eAAeC,qBAAsBxW;QAClNnrE,MAAMxB,OAAOkrE,MAAM1pE;QACnB+iF,qBAAqBC,uBAAuB5yE,OAAOs5D;QACnDyZ,WAAW,CAACxT,MAAM5wD;IACpB4wD,QACIjE,2BAA2BiE,MAAMxG,UAAU;IAAyBpqD;;QAEtE4+D;IACFxE;IACA4H;IACAqC,YAAY/+E;UACJsrE,OAAOqR;WACN5wE,MAAMgwE;YACHU;UACAnR,OAAO6R,kBAAkBR;;;;;;UAO7B38E,GAAG4+E;QACH5+E,GAAG4+E,SAAS;;;YAGVI,eAAeN,mBAAmB/iF;UACpCqjF,gBACA7K,gBAAgB9O,OAAO2Z,iBACvBA,aAAah/E,GAAG4+E;;QAEhBI,aAAah/E,GAAG4+E;;MAEpBE,SAASxT,OAAOtrE;;IAEpBklB,MAAMllB;UACEsrE,OAAOsR;UACPqC,YAAYpC;UACZqC,aAAapC;WACZ/wE,MAAMgwE;YACHU;UACAnR,OAAO8R,YAAYR;UACnBqC,YAAY5B,iBAAiBR;UAC7BqC,aAAa5B,qBAAqBR;;;;;UAMtCqC,SAAS;YACPC,OAAQp/E,GAAGq/E,WAAW,AAACC;YACrBH;QAEJA,SAAS;YACLG;UACAR,SAASI,aAAal/E;;UAGtB8+E,SAASG,YAAYj/E;;YAErBs5E,MAAMmF;UACNnF,MAAMmF;;QAEVz+E,GAAGq/E,WAAWjuF;;UAEdk6E;QACAA,KAAKtrE,IAAIo/E;YACL9T,KAAK73E,UAAU;UACf2rF;;;QAIJA;;;IAGR7a,MAAMvkE,IAAI/K;YACA0G,MAAMxB,OAAOkrE,MAAM1pE;UACrBqE,GAAGq/E;QACHr/E,GAAGq/E,SAAS;;UAEZtzE,MAAMswE;eACCpnF;;MAEX6pF,SAAS/B,gBAAgB/8E;UACrBm/E,SAAS;YACPC,OAAQp/E,GAAG4+E,WAAW,AAACU;YACrBH;QAEJA,SAAS;QACTlqF;YACIqqF;UACAR,SAAS5B,mBAAmBl9E;;UAG5B8+E,SAAS7B,eAAej9E;;QAE5BA,GAAG4+E,WAAWxtF;YACVstF,mBAAmB/iF,SAAS0pE;iBACrBqZ,mBAAmB/iF;;;MAGlC+iF,mBAAmB/iF,OAAO0pE;UACtB2X;QACAA,QAAQh9E,IAAIo/E;YACRpC,QAAQvpF,UAAU;UAClB2rF;;;QAIJA;;;IAGR9qD,MAAM+wC;aACK2Y,uBAAuB3Y,OAAOyB,OAAO/6D,OAAO+4D;;;SAGpDwU;;;;;;AAMX,0BAA0BjU;MAClBka,YAAYla;IACZA,QAAQgL,WAAWhL;IACnBA,MAAM3xB,WAAW;WACV2xB;;;AAGf,2BAA2BA;SAChBka,YAAYla,SACbA,MAAM3xB,WACF2xB,MAAM3xB,SAAS,KACftiD,YACJi0E;;AAEV,4BAA4BA,OAAOiU;MAC3BjU,MAAMsK,YAAY;EAAqBtK,MAAMG;IAC7CyY,mBAAmB5Y,MAAMG,UAAUyM,SAASqH;aAEvCjU,MAAMsK,YAAY;;IACvBtK,MAAMoO,UAAU9C,aAAa2I,MAAMhlD,MAAM+wC,MAAMoO;IAC/CpO,MAAMqO,WAAW/C,aAAa2I,MAAMhlD,MAAM+wC,MAAMqO;;IAGhDrO,MAAMsL,aAAa2I;;;AAG3B,kCAAkC5lC,UAAU8rC,cAAc;MAClDxjF;MACAyjF,qBAAqB;WAChBjsF,IAAI,GAAGA,IAAIkgD,SAASjgD,QAAQD;UAC3Bg7E,QAAQ96B,SAASlgD;;QAEnBg7E,MAAMh8E,SAASm5E;UACX6C,MAAMyB,YAAY;MAClBwP;MACJzjF,MAAMA,IAAIhG,OAAO2nF,yBAAyBnP,MAAM96B,UAAU8rC;;;QAGrDA,eAAehR,MAAMh8E,SAASq5E;MACnC7vE,IAAI9K,KAAKs9E;;;;;;;MAObiR,qBAAqB;aACZjsF,IAAI,GAAGA,IAAIwI,IAAIvI,QAAQD;MAC5BwI,IAAIxI,GAAGy8E,aAAa;;;SAGrBj0E;;MAGLujF,cAAc,AAACla,SAAUA,MAAM7yE,KAAKktF;MACpCC;EACF/kF,OAAO;;;;EAIP8kF,eAAe;EACf5Y;IACI8Y,UAAUzlF,QAAQ9C,QAAQvB;IAC1B+pF,UAAU1lF,QAAQ9C,QAAQvB;IAC1BoE,MAAMC,QAAQu0D;;EAElB6uB,MAAMzW,QAAS8G;UACL9I,WAAW0Y;;;;;;UAMXsC,gBAAgBhb,SAASkK;;;SAG1B8Q,cAAcC;aACRnS,MAAMzgD;;UAEXr1B,YAAYqM;UACZ/F,WAAWkiB;QACbW,UAAU;UACR0xD,iBAAiB7N,SAASyO;WACxBwM,WAAYt2B,GAAG2pB,OAAOqB,GAAGC,MAAMd,IAAIoM,UAAU3M,IAAKl+E,mBAAsB2qF;UAC1EG,mBAAmB9qF,cAAc;IACvC2qF,cAAcI,WAAW,CAAC7a,OAAOmN,WAAWC,QAAQG,OAAOrB;YACjDzM,WAAWO,MAAMG;MACvBkP,KAAKrP,OAAOmN,WAAWC,QAAQ;MAAeE;;MAE9CS,MAAMtO,SAASO,OAAOA,OAAOmN,WAAWC,QAAQ3N,UAAU6N,gBAAgBC,OAAOvN,MAAMiJ,cAAciD;MACrGuK,sBAAsB;QAClBhX,SAASqb,gBAAgB;YACrBrb,SAASpnE;UACT0nE,OAAOtjE,eAAegjE,SAASpnE;;cAE7B0iF,YAAY/a,MAAMyB,SAASzB,MAAMyB,MAAMuZ;YACzCD;UACAE,gBAAgBF,WAAWtb,SAASjzE,QAAQwzE;;SAEjDsN;;IAEPmN,cAAcS,aAAa,AAAClb;YAClBP,WAAWO,MAAMG;MACvBkP,KAAKrP,OAAO4a,kBAAkB,MAAM;MAAetN;MACnDmJ,sBAAsB;YACdhX,SAAS0b;UACTpb,OAAOtjE,eAAegjE,SAAS0b;;cAE7BJ,YAAY/a,MAAMyB,SAASzB,MAAMyB,MAAM2Z;YACzCL;UACAE,gBAAgBF,WAAWtb,SAASjzE,QAAQwzE;;QAEhDP,SAASqb,gBAAgB;SAC1BxN;;IAEP,iBAAiBtN;;MAEbqb,eAAerb;MACf2a,SAAS3a,OAAOP,UAAU6N;;IAE9B,oBAAoBhgF;MAChBmF,MAAM/E,QAAQ,CAACsyE,OAAO1pE;cACZf,OAAO+lF,iBAAiBtb,MAAM7yE;YAChCoI,UAAUjI,WAAWA,OAAOiI;UAC5BgmF,gBAAgBjlF;;;;IAI5B,yBAAyBA;YACf9D,SAASC,MAAM2T,IAAI9P;WACpBslB,WAAWppB,OAAOrF,SAASyuB,QAAQzuB;QACpCqhF,QAAQh8E;iBAEHopB;;;QAGLy/D,eAAez/D;;MAEnBnpB,MAAM2tB,OAAO9pB;MACbyC,KAAKqnB,OAAO9pB;;;IAGhBklF,MAAM,OAAO/Z,MAAM8Y,SAAS9Y,MAAM+Y,UAAU,EAAED,SAASC;MACnDD,WAAWkB,WAAW,AAAAlmF,QAAQwvB,QAAQw1D,SAAShlF;MAC/CilF,WAAWiB,WAAW,AAAAlmF,SAASwvB,QAAQy1D,SAASjlF;;;MAGlDigF,OAAO;MAAQD,MAAM;;;QAEnBmG,kBAAkB;UAChBC,eAAe;;UAEbD,mBAAmB;QACnBjpF,MAAMyM,IAAIw8E,iBAAiBE,cAAcnc,SAASmN;;;IAG1D+H,UAAUgH;IACV9G,UAAU8G;IACV7G,gBAAgB;MACZriF,MAAM/E,QAAQ,AAAA8E;eACFo6E,SAASsB,YAAazO;cACxBO,QAAQ4b,cAAchP;YACxBp6E,OAAOrF,SAAS6yE,MAAM7yE;;UAEtBkuF,eAAerb;;gBAETmb,KAAKnb,MAAMG,UAAUgb;UAC3BA,MAAM1E,sBAAsB0E,IAAIjN;;;QAGpCM,QAAQh8E;;;WAGT;MACHkpF,kBAAkB;WACbnT,MAAMzgD;eACA;;YAELumB,WAAWk6B,MAAMzgD;YACjB+zD,WAAWxtC,SAAS;UACtBA,SAASjgD,SAAS;;UAEdsB,MAAM;;QAEVksB,UAAU;eACHyyB;kBAED+6B,QAAQyS,eACXA,SAASvR,YAAY,QAClBuR,SAASvR,YAAY;QAC3B1uD,UAAU;eACHigE;;UAEP7b,QAAQ4b,cAAcC;YACpBjU,OAAO5H,MAAM7yE;YACboI,OAAO+lF,iBAAiB1T;aACtB2S,SAASC,SAAS3lF,OAAQ4sE;UAC7B8Y,aAAahlF,SAASwvB,QAAQw1D,SAAShlF,UACvCilF,WAAWjlF,QAAQwvB,QAAQy1D,SAASjlF;QACrCqmB,UAAUokD;eACH6b;;YAELvlF,MAAM0pE,MAAM1pE,OAAO,OAAOsxE,OAAO5H,MAAM1pE;YACvCwlF,cAAcrpF,MAAM2T,IAAI9P;;UAE1B0pE,MAAMrlE;QACNqlE,QAAQgL,WAAWhL;YACf6b,SAASvR,YAAY;;UACrBuR,SAASzN,YAAYpO;;;;;;;;MAQ7B0b,kBAAkBplF;UACdwlF;;QAEA9b,MAAMrlE,KAAKmhF,YAAYnhF;QACvBqlE,MAAMG,YAAY2b,YAAY3b;YAC1BH,MAAMsL;;UAENsN,mBAAmB5Y,OAAOA,MAAMsL;;;QAGpCtL,MAAMsK,aAAa;;QAEnBvxE,KAAKqnB,OAAO9pB;QACZyC,KAAKwgC,IAAIjjC;;QAGTyC,KAAKwgC,IAAIjjC;;YAELzB,OAAOkE,KAAKW,OAAOgC,SAAS7G,KAAK;UACjC0mF,gBAAgBxiF,KAAKe,SAAS+hB,OAAOvoB;;;;MAI7C0sE,MAAMsK,aAAa;MACnB1uD,UAAUokD;aACH6b;;;;;;MAMbE,YAAYzB;AAClB,iBAAiBnnE,SAAS5d;MAClBwqE,OAAOrvE,QAAQyiB;WACRA,QAAQzgB,KAAK,AAAC0xD,KAAMr/B,QAAQq/B,GAAG7uD;aAEjCwqE,OAAO3pE,SAAS+c;WACdA,QAAQ9hB,MAAM,KAAKhF,QAAQkJ,SAAS;aAEtC4d,QAAQtmB;WACNsmB,QAAQtmB,KAAK0I;;;SAGjB;;AAEX,qBAAqB0wE,MAAM6N;EACvBkI,sBAAsB/V,MAAM;EAAqB6N;;AAErD,uBAAuB7N,MAAM6N;EACzBkI,sBAAsB/V,MAAM;EAAwB6N;;AAExD,+BAA+B7N,MAAM94E,MAAM2mF,SAASC;;;;QAI1CG,cAAcjO,KAAKgW,UACpBhW,KAAKgW,QAAQ;;QAENrgE,UAAUk4D;WACPl4D;UACCA,QAAQk/D;;;MAGZl/D,UAAUA,QAAQpvB;;IAEtBy5E;;EAERwO,WAAWtnF,MAAM+mF,aAAaJ;;;;;;MAM1BA;QACIl4D,UAAUk4D,OAAOtnF;WACdovB,WAAWA,QAAQpvB;UAClB0tF,YAAYt+D,QAAQpvB,OAAOwzE;QAC3Bkc,sBAAsBhI,aAAa/mF,MAAM2mF,QAAQl4D;;MAErDA,UAAUA,QAAQpvB;;;;AAI9B,+BAA+By5E,MAAM94E,MAAM2mF,QAAQqI;;;QAGzCC,WAAW3H,WAAWtnF,MAAM84E,MAAMkW,eAAe;EACvDpH,YAAY;IACRhV,OAAOnwE,OAAOusF,cAAchvF,OAAOivF;KACpCtI;;AAEP,wBAAwB9T;MAChBsK,YAAYtK,MAAMsK;MAClBA,YAAY;;IACZA,aAAa;;MAEbA,YAAY;;IACZA,aAAa;;EAEjBtK,MAAMsK,YAAYA;;AAEtB,uBAAuBtK;SACZA,MAAMsK,YAAY;EAAqBtK,MAAMoO,YAAYpO;;MAG9Dqc,gBAAgB,AAAC/lF,OAAQA,IAAI,OAAO,OAAOA,QAAQ;MACnDgmF,qBAAqB,AAAChpF,SAAUysE,OAAOrvE,QAAQ4C,SAC/CA,MAAMrD,IAAIu6E,mBACTA,eAAel3E;MAChBipF,gBAAgB,CAACjmF,KAAKkmF,SAAS7S,QAAQD,QAAQ,AAACjI;MAC9CsS;IACArkF,MAAM,QAAQ4G,IAAI,+CACb,wDACA;;SAEFgmF,mBAAmBE,QAAQ/a;GACnCkI;MACG8S,uBAAuB,CAACC,UAAUnU;QAC9BoB,MAAM+S,SAASC;aACVrmF,OAAOomF;QACVL,cAAc/lF;UAEZhD,QAAQopF,SAASpmF;QACnBypE,OAAO/kE,WAAW1H;MAClBi1E,MAAMjyE,OAAOimF,cAAcjmF,KAAKhD,OAAOq2E;eAElCr2E,SAAS;;QAEV5D,MAAM,2CAA2C4G,IAAI,QAChD;;YAEHJ,aAAaomF,mBAAmBhpF;MACtCi1E,MAAMjyE,OAAO,MAAMJ;;;;MAIzB0mF,sBAAsB,CAACnd,UAAUpxB;OAC9B6rC,YAAYza,SAASO;IACtBtwE,MAAM,sDACD;;QAEHwG,aAAaomF,mBAAmBjuC;EACtCoxB,SAAS8I,MAAMzgD,UAAU,MAAM5xB;;MAE7B2mF,YAAY,CAACpd,UAAUpxB;MACrBoxB,SAASO,MAAMsK,YAAY;;UACrBn9E,OAAOkhD,SAASryC;QAClB7O;MACAsyE,SAAS8I,QAAQl6B;;MAEjB0xB,OAAOnjE,IAAIyxC,UAAU,KAAKlhD;;MAG1BsvF,qBAAqBpuC,UAAWoxB,SAAS8I;;;IAI7C9I,SAAS8I;QACLl6B;MACAuuC,oBAAoBnd,UAAUpxB;;;EAGtC0xB,OAAOnjE,IAAI6iE,SAAS8I,OAAO4I,mBAAmB;;MAE5C2L,cAAc,CAACrd,UAAUpxB,UAAU69B;SAC7BlM,OAAOuI,SAAU9I;MACrBsd,oBAAoB;MACpBC,2BAA2Bjd,OAAO9lE;MAClC+lE,MAAMsK,YAAY;;UACZn9E,OAAOkhD,SAASryC;QAClB7O;;UAEI63E;;;QAGAjF,OAAOtlE,OAAO8tE,OAAOl6B;iBAEhB69B,aAAa/+E,SAAS;;;;QAG3B4vF,oBAAoB;;;;QAKpBhd,OAAOtlE,OAAO8tE,OAAOl6B;;;;;aAKhB69B,aAAa/+E,SAAS;;iBAChBo7E,MAAMvsE;;;;MAKrB+gF,qBAAqB1uC,SAASq+B;MAC9B+P,qBAAqBpuC,UAAUk6B;;IAEnCyU,2BAA2B3uC;aAEtBA;;IAELuuC,oBAAoBnd,UAAUpxB;IAC9B2uC;MAA6Bl1D,SAAS;;;;MAGtCi1D;eACWzmF,OAAOiyE;WACT8T,cAAc/lF,WAAUA,OAAO0mF;eACzBzU,MAAMjyE;;;;;;;;;;;;;;;;;MAkBvB2mF,kCAAmCld,OAAO9rE,QAAQ;AACxD,+BAA+BsB;MACvB0nF,mBAAmB1nF;IACnB7F,KAAK,+DAA+D6F;;;;;;AAM5E,wBAAwByqE,OAAOzqD;QACrB2nE,mBAAmB7T;MACrB6T,qBAAqB;IACrBxtF,MAAM;WACCswE;;QAELP,WAAWyd,iBAAiBvc;QAC5Bwc,WAAWnd,MAAMoL,SAASpL,MAAMoL;WAC7Bj9E,IAAI,GAAGA,IAAIonB,WAAWnnB,QAAQD;SAC9BivF,KAAK9pF,OAAOqJ,KAAK6jD,YAAYuf,OAAO9lE,aAAasb,WAAWpnB;QAC7D4xE,OAAO/kE,WAAWoiF;MAClBA;QACIC,SAASD;QACTE,SAASF;;;IAGjBD,SAAStxF;MACLuxF;MACA3d;MACAnsE;MACAkJ,eAAe;MACfG;MACA6jD;;;SAGDwf;;AAEX,6BAA6BA,OAAOgM,WAAWvM,UAAUlqE;QAC/C4nF,WAAWnd,MAAMoL;QACjBmS,cAAcvR,aAAaA,UAAUZ;WAClCj9E,IAAI,GAAGA,IAAIgvF,SAAS/uF,QAAQD;UAC3BqvF,UAAUL,SAAShvF;QACrBovF;MACAC,QAAQhhF,WAAW+gF,YAAYpvF,GAAGmF;;UAEhC2yE,OAAOuX,QAAQJ,IAAI7nF;QACrB0wE;MACAjE,2BAA2BiE,MAAMxG,UAAU;OACvCO,MAAMrlE,IACN6iF,SACAxd,OACAgM;;;;AAMhB;;IAEQ7F,KAAK;IACL7F;MACImd,aAAa1d,OAAO1lE;MACpBqjF,aAAa;MACbC;MACAC;MACAC,iBAAiB9d,OAAO1lE;MACxBmoE,cAAcz2E;MACdw0E,aAAax0E;;IAEjB08B;IACAq1D;IACAvoE;IACAwoE,UAAU3qF,OAAOK,OAAO;;;IAG5BqzE,MAAM;AACV,sBAAsB/zE,QAAQ46E;SACnB,mBAAmBqQ,eAAeC,YAAY;QAC7CA,aAAa,SAASle,OAAOxpE,SAAS0nF;MACtCvuF,MAAM;MACNuuF,YAAY;;UAEVvkE,UAAUwkE;UACVC,uBAAuBljE;QACzBy7D,YAAY;UACVvQ,MAAOzsD,QAAQysD;MACjBiY,MAAMtX;MACNuX,YAAYL;MACZM,QAAQL;MACRM,YAAY;MACZC,UAAU9kE;MACV0sD;UACI9F;eACO5mD,QAAQ4mD;;UAEfA,OAAO3tE;;UAEHjD,MAAM;;;MAGd+uF,IAAIt4E,WAAWnH;YACPm/E,iBAAiBl4E,IAAIE;UACrBzW,MAAM;mBAEDyW,UAAU45D,OAAO/kE,WAAWmL,OAAOu4E;UACxCP,iBAAiB5kD,IAAIpzB;UACrBA,OAAOu4E,QAAQvY,QAAQnnE;mBAElB+gE,OAAO/kE,WAAWmL;UACvBg4E,iBAAiB5kD,IAAIpzB;UACrBA,OAAOggE,QAAQnnE;;UAGftP,MAAM,uEACD;;eAEFy2E;;MAEXwY,MAAMA;;eAEOjlE,QAAQ+O,OAAO/H,SAASi+D;YACzBjlE,QAAQ+O,OAAO58B,KAAK8yF;;;gBAGhBA,MAAMld,SAASkd,MAAM3W;cACrBtuD,QAAQouD,QAAQ;;;YAIpBp4E,KAAK,kDACAivF,MAAMppF,QAAQ,IAAIopF,MAAMppF,KAAK,IAAI;;;eAGvC4wE;;MAEXhG,UAAU5qE,MAAM4qE;;UAERye,sBAAsBrpF,MAAMmkB,QAAQ4mD;;aAEnCH;iBACMzmD,QAAQokE,WAAWvoF;;YAE1BmkB,QAAQokE,WAAWvoF;UACnB7F,MAAM,aAAa6F,KAAK;;QAE5BmkB,QAAQokE,WAAWvoF,QAAQ4qE;eACpBgG;;MAEXlyD,UAAU1e,MAAM0e;;UAER4qE,sBAAsBtpF;;aAErB0e;iBACMyF,QAAQnE,WAAWhgB;;YAE1BmkB,QAAQnE,WAAWhgB;UACnB7F,MAAM,aAAa6F,KAAK;;QAE5BmkB,QAAQnE,WAAWhgB,QAAQ0e;eACpBkyD;;MAEXlzE,MAAM6rF,eAAeC,WAAWxR;aACvBmJ;gBACK1W,QAAQwL,YAAYwS,eAAeC;;;UAGzCje,MAAMK,aAAa3mD;;;YAGfA,QAAQnrB,SAAS;cACbwE,OAAOi4E,WAAWhL,QAAQ8e,eAAevR;;;cAG7CwR,aAAapR;YACbA,QAAQ3N,OAAO8e;;YAGf/rF,OAAOitE,OAAO8e,eAAevR;;UAEjCmJ,YAAY;UACZvQ,IAAIoY,aAAaO;UACjBA,cAAcE,cAAc7Y;;YAExB8Y,gBAAgB9Y,KAAKC;;iBAElBpG,MAAMG,UAAUQ;;UAGvBjxE,MAAM,oCACD,uEACA,qEACA;;;MAGb8+E;YACQkI;UACA3jF,OAAO,MAAMozE,IAAIoY;;YAEbW,mBAAmB/Y;;iBAEhBA,IAAIoY,WAAWS;;UAGtBtvF,MAAM;;;MAGdyvF,QAAQ7oF,KAAKhD;aACLgD,OAAOojB,QAAQqkE;UACfruF,MAAM,0CAA0CoF,OAAOwB,KAAK,QACvD;;;;QAITojB,QAAQqkE,SAASznF,OAAOhD;eACjB6yE;;;WAGRA;;;IAIXiZ,cAAc;MACZC,iBAAiB,AAAClS,cAAc,OAAMtgF,KAAKsgF,UAAUmS,iBAAiBnS,UAAUoS,YAAY;MAC5FC,YAAY,AAAC14E,QAASA,KAAK24E,aAAa;;;;;;AAM9C,kCAAkCjS;SACtBkS,IAAIC,gBAAgBv7B,GAAG2pB,OAAOC,IAAK4R,WAAWnuF,aAAaR,YAAYrB,QAAQiwF,QAAQC,kBAAoBtS;QAC7GG,UAAU,CAAC3N,OAAOmN;SACfA,UAAU4S;MACXrwF,MAAM,mEACD;MACLq+E,MAAM,MAAM/N,OAAOmN;;;IAGvBiS,cAAc;IACdzO,YAAYxD,UAAU5lE,YAAYy4D,OAAO,MAAM,MAAM;IACrD+E;QACIqa,gBAAgB;;MAEhBpxF,QAAQa,OAAO;;;QAGjB8hF,cAAc,CAAC7pE,MAAMk5D,OAAOqN,iBAAiBC,gBAAgBrE,cAAciD,YAAY;UACnF8T,kBAAkBR,UAAU14E,SAASA,KAAKvb,SAAS;UACnD00F,aAAa,MAAMC,eAAep5E,MAAMk5D,OAAOqN,iBAAiBC,gBAAgBrE,cAAc+W;WAC5F7yF,MAAMgzF,KAAK7V,aAActK;UAC3BogB,UAAUt5E,KAAK24E;IACrBzf,MAAMrlE,KAAKmM;QACPu5E,WAAW;YACPlzF;WACCo5E;YACG6Z,YAAY;;UACZC,WAAWJ;;cAGPn5E,KAAKvb,SAASy0E,MAAM3xB;YACpB+wC,cAAc;YACd1vF,MAAM,6BACG,cAAczC,KAAKqM,UAAUwN,KAAKvb,MAAM,KACxC,cAAc0B,KAAKqM,UAAU0mE,MAAM3xB,UAAU;YACtDvnC,KAAKvb,OAAOy0E,MAAM3xB;;UAEtBgyC,WAAW5uF,YAAYqV;;;WAG1B0/D;YACG4Z,YAAY;QAAmBJ;UAC/BK,WAAWJ;;UAGXI,WAAW5uF,YAAYqV;;;WAG1B2/D;YACG2Z,YAAY;;UACZC,WAAWJ;;;UAIXI,WAAWv5E;;;gBAGLw5E,sBAAsBtgB,MAAM3xB,SAASjgD;mBAClCD,IAAI,GAAGA,IAAI6xE,MAAMugB,aAAapyF;gBAC/BmyF,oBACAtgB,MAAM3xB,YAAYgyC,SAASG;gBAC3BryF,MAAM6xE,MAAMugB,cAAc;cAC1BvgB,MAAMoN,SAASiT;;YAEnBA,WAAW5uF,YAAY4uF;;iBAEpBA;;;WAGV/Z;aACI0Z;UACDK,WAAWJ;;UAGXI,WAAWI,gBAAgB35E,MAAMk5D,OAAOqN,iBAAiBC,gBAAgBrE,cAAciD;;;;YAIvF5B,YAAY;;cACR8V,YAAY;UACZpgB,MAAM7yE,KAAKyG,kBACPkT,KAAKy4E,QAAQ3rF;YACjBysF,WAAWJ;;YAGXI,WAAWK,eAAe55E,MAAMk5D,OAAOqN,iBAAiBC,gBAAgBrE,cAAciD;;mBAGrF5B,YAAY;;;;;UAIjBtK,MAAMiJ,eAAeA;gBACfkE,YAAYl8E,WAAW6V;gBACvB65E,mBAAmB;YACrBhB,eAAe3f,OAAOmN,WAAW,MAAME,iBAAiBC,gBAAgB+R,eAAelS,YAAYjB;;;gBAGjG0U,YAAY5gB,MAAM7yE,KAAK0zF;cACzBD;YACAA,YAAYzlF,KAAKwlF;;YAGjBA;;;;;UAKJN,WAAWL,kBACLc,yBAAyBh6E,QACzBrV,YAAYqV;mBAEbwjE,YAAY;;cACb8V,YAAY;;YACZC,WAAWJ;;YAGXI,WAAWrgB,MAAM7yE,KAAKwgF,QAAQ7mE,MAAMk5D,OAAOqN,iBAAiBC,gBAAgBrE,cAAciD,WAAWsB,mBAAmBuT;;mBAGvHzW,YAAY;;UACjB+V,WAAWrgB,MAAM7yE,KAAKwgF,QAAQ7mE,MAAMk5D,OAAOqN,iBAAiBC,gBAAgB+R,eAAepuF,WAAW6V,QAAQmiE,cAAciD,WAAWsB,mBAAmBmD;;UAG1JjhF,KAAK,2BAA2BvC,OAAO,UAAUA,KAAK;;;QAG9DgzF,OAAO;MACPa,OAAOb,KAAK,MAAM7S,gBAAgBtN;;WAE/BqgB;;QAELK,iBAAiB,CAAC/lF,IAAIqlE,OAAOqN,iBAAiBC,gBAAgBrE,cAAciD;IAC9EA,YAAYA,eAAelM,MAAM0L;WACzBjK,OAAOmJ,WAAWN,WAAWc,QAASpL;;QAE1C4K,eAAe;;UACXQ;QACA6V,oBAAoBjhB,OAAO,MAAMqN,iBAAiB;;;UAGlD5L;aACKyK,cACAtB,YAAY;QACTA,YAAY;qBACLt0E,OAAOmrE;iBACT1B,OAAOpkE,eAAerF,QAAQypE,OAAOxlE,KAAKjE;cAC3CspF,UAAUjlF,IAAIrE,KAAK,MAAMmrE,MAAMnrE;;;mBAIlCmrE,MAAMyf;;;UAGXtB,UAAUjlF,IAAI,WAAW,MAAM8mE,MAAMyf;;;;UAIzCC;UACCA,aAAa1f,SAASA,MAAM2f;QAC7BnG,gBAAgBkG,YAAY9T,iBAAiBrN;;UAE7CoL;QACA6V,oBAAoBjhB,OAAO,MAAMqN,iBAAiB;;WAEjD8T,aAAa1f,SAASA,MAAMuZ,mBAAmB5P;QAChDiW,wBAAwB;UACpBF,cAAclG,gBAAgBkG,YAAY9T,iBAAiBrN;UAC3DoL,QAAQ6V,oBAAoBjhB,OAAO,MAAMqN,iBAAiB;WAC3DC;;;UAGHhD,YAAY;;QAEV7I,UAAUA,MAAMtxE,aAAasxE,MAAM6f;YACjCzlE,OAAOklE,gBAAgBpmF,GAAG4M,YAAYy4D,OAAOrlE,IAAI0yE,iBAAiBC,gBAAgBrE,cAAciD;YAChGiD,YAAY;eACTtzD;UACHujE,cAAc;eACTjQ;YACDz/E,MAAM,kCAAkCswE,MAAM7yE,KAAK,QAC9C;YACLgiF,YAAY;;;gBAGV5U,MAAM1+C;UACZA,OAAOA,KAAKpqB;UACZ7B,OAAO2qE;;iBAGN+P,YAAY;;YACb3vE,GAAG2mF,gBAAgBthB,MAAM3xB;UACzB+wC,cAAc;UACd1vF,MAAM,sCAAsCswE,MAAM7yE,KAAK,SAC9C,YAAYwN,GAAG2mF,YAAY,OAC3B,YAAYthB,MAAM3xB,SAAS;UACpC1zC,GAAG2mF,cAActhB,MAAM3xB;;;;WAI5B1zC,GAAGlJ;;QAERsvF,kBAAkB,CAACj6E,MAAMy6E,aAAapU,WAAWE,iBAAiBC,gBAAgBrE,cAAciD;IAClGA,YAAYA,eAAeqV,YAAY7V;UACjCr9B,WAAWkzC,YAAYlzC;UACvB0uB,IAAI1uB,SAASjgD;QACf+gF,YAAY;aACPhhF,IAAI,GAAGA,IAAI4uE,GAAG5uE;YACb6xE,QAAQkM,YACR79B,SAASlgD,KACRkgD,SAASlgD,KAAKq8E,eAAen8B,SAASlgD;UACzC2Y;QACAA,OAAO6pE,YAAY7pE,MAAMk5D,OAAOqN,iBAAiBC,gBAAgBrE,cAAciD;iBAE1ElM,MAAM7yE,SAASo5E,SAASvG,MAAM3xB;;;QAInC+wC,cAAc;aACTjQ;UACDz/E,MAAM,kCAAkCy9E,UAAUoS,QAAQ3rF,cAAc,QACnE;UACLu7E,YAAY;;;QAGhBpB,MAAM,MAAM/N,OAAOmN,WAAW,MAAME,iBAAiBC,gBAAgB+R,eAAelS,YAAYlE;;;WAGjGniE;;QAEL25E,kBAAkB,CAAC35E,MAAMk5D,OAAOqN,iBAAiBC,gBAAgBrE,cAAciD;WACzEjD,cAAcuY,wBAAyBxhB;QAC3CwhB;MACAvY,eAAeA,eACTA,aAAat4E,OAAO6wF,wBACpBA;;UAEJrU,YAAYl8E,WAAW6V;UACvB+U,OAAOklE,gBAAgBtvF,YAAYqV,OAAOk5D,OAAOmN,WAAWE,iBAAiBC,gBAAgBrE,cAAciD;QAC7GrwD,QAAQ2jE,UAAU3jE,SAASA,KAAKtwB,SAAS;aAClCkG,YAAauuE,MAAMoN,SAASvxD;;;;MAKnCujE,cAAc;;MAEdS,OAAQ7f,MAAMoN,SAAS0S,eAAe,KAAM3S,WAAWtxD;aAChDA;;;QAGTqkE,iBAAiB,CAACp5E,MAAMk5D,OAAOqN,iBAAiBC,gBAAgBrE,cAAc38B;IAChF8yC,cAAc;IACd1vF,MAAM,4CAA4CswE,MAAM7yE,OAAO,2BAA2B2Z,MAAMA,KAAK24E,aAAa;KACvG,UACDD,UAAU14E,SAASA,KAAKvb,SAAS,OAC5B,wBACA;IACfy0E,MAAMrlE,KAAK;QACP2xC;;YAEMj4C,MAAMysF,yBAAyBh6E;aAC9B;cACG+U,OAAOpqB,YAAYqV;YACrB+U,QAAQA,SAASxnB;UACjBzE,OAAOisB;;;;;;UAObA,OAAOpqB,YAAYqV;UACnBqmE,YAAYl8E,WAAW6V;IAC7BlX,OAAOkX;IACPinE,MAAM,MAAM/N,OAAOmN,WAAWtxD,MAAMwxD,iBAAiBC,gBAAgB+R,eAAelS,YAAYlE;WACzFptD;;QAELilE,2BAA2B,AAACh6E;QAC1BnP,QAAQ;WACLmP;MACHA,OAAOrV,YAAYqV;UACfA,QAAQ04E,UAAU14E;YACdA,KAAKvb,SAAS,KACdoM;YACAmP,KAAKvb,SAAS;cACVoM,UAAU;mBACHlG,YAAYqV;;YAGnBnP;;;;;WAKTmP;;UAEH6mE,SAASgD;;IAGjB8Q;IACAC;AACJ,sBAAsBjiB,UAAUtyE;MACxBsyE,SAASY,WAAWC,OAAOod,eAAeiE;IAC1CD,KAAKE,MAAM,MAAMz0F,KAAK,GAAGsyE,SAASqH,IAAI;;;AAG9C,oBAAoBrH,UAAUtyE;MACtBsyE,SAASY,WAAWC,OAAOod,eAAeiE;UACpCE,YAAY,MAAM10F,KAAK,GAAGsyE,SAASqH,IAAI;UACvCgb,SAASD,YAAY;IAC3BH,KAAKE,KAAKE;IACVJ,KAAKK,SAAS,GAAGnhB,oBAAoBnB,UAAUA,SAAStyE,MAAM,IAAIA,KAAK,GAAG00F,UAAUC;IACpFJ,KAAKM,WAAWH;IAChBH,KAAKM,WAAWF;;;AAGxB;MACQL,cAAc11F;WACP01F;;;aAGAnzF,WAAW,eAAeA,OAAOovF;IACxC+D,YAAY;IACZC,OAAOpzF,OAAOovF;;IAGd+D,YAAY;;;SAGTA;;;AAIX,yBAAyBziF;SACd+gE,OAAO/kE,WAAWgE;IAAak5E,OAAOl5E;IAASzJ,MAAMyJ,QAAQzJ;MAASyJ;;MAG3EijF,iBAAiB,AAAC9zF,OAAQA,EAAEhB,KAAK0zF;AACvC,8BAA8B1sF;MACtB4rE,OAAO/kE,WAAW7G;IAClBA;MAAW+tF,QAAQ/tF;;;SAEf+tF,QAAQC,kBAAkBC,gBAAgBC,QAAQ,KAAKnT;EAC/DoT,cAAc,MAAMC,SAASC,eAAgBruF;MACzCsuF,iBAAiB;MACjBC;MACAC,UAAU;QACRC,QAAQ;IACVD;IACAF,iBAAiB;WACVI;;QAELA,OAAO;QACLC;WACIL,mBACHK,cAAcL,iBAAiBP,SAC3B9mF,MAAM,AAAA2X;MACPA,MAAMA,eAAeiS,QAAQjS,UAAUiS,MAAMlwB,OAAOie;UAChDyvE;mBACWhf,QAAQ,CAACC,SAASsf;gBACnBC,YAAY,MAAMvf,QAAQmf;gBAC1BK,WAAW,MAAMF,OAAOhwE;UAC9ByvE,YAAYzvE,KAAKiwE,WAAWC,UAAUN,UAAU;;;cAI9C5vE;;OAGT5X,KAAK,AAACysE;UACHkb,gBAAgBL,kBAAkBA;eAC3BA;;WAEN7a;QACDl4E,MAAM,mDACD;;;UAGLk4E,SACCA,KAAKsb,cAActb,KAAKub,OAAOC,iBAAiB;QACjDxb,OAAOA,KAAK9/C;;UAEZ8/C,SAAS7H,OAAOxpE,SAASqxE,UAAU7H,OAAO/kE,WAAW4sE;kBAC3C5iD,OAAO,uCAAuC4iD,KAAK;;MAEjE8a,eAAe9a;aACRA;;;SAGZyb;IACHxC,eAAegC;IACfttF,MAAM;IACN2iF;YACUzY,WAAWsU;;UAEb2O;eACO,MAAMY,gBAAgBZ,cAAcjjB;;YAEzC8iB,UAAU,AAACxvE;QACb0vE,iBAAiB;QACjB1gB,YAAYhvD,KAAK0sD,UAAU;SAAkC2iB;;;UAG5DE,eAAe7iB,SAASyO,YACxBsG;eACMqO,OACF1nF,KAAK,AAAAysE;iBACC,MAAM0b,gBAAgB1b,MAAMnI;WAElCrkE,MAAM,AAAA2X;UACPwvE,QAAQxvE;iBACD,MAAMqvE,iBACP5W,YAAY4W;YACVvzF,OAAOkkB;eAET;;;YAGRwwE,SAASzjB,WAAWqgB,IAAI;YACxBtxF,QAAQixE,WAAWqgB;YACnBqD,UAAU1jB,WAAWqgB,MAAMkC;UAC7BA;QACA1wF,WAAW;UACP6xF,QAAQlwF,QAAQ;WACjB+uF;;UAEHnT,WAAW;QACXv9E,WAAW;eACF4xF,OAAOjwF,UAAUzE,MAAMyE;kBAClByf,UAAUiS,OAAO,kCAAkCkqD,QAAQ;YACjEqT,QAAQxvE;YACRlkB,MAAMyE,QAAQyf;;WAEnBm8D;;MAEP2T,OACK1nF,KAAK;QACNooF,OAAOjwF,QAAQ;SAEd8H,MAAM,AAAA2X;QACPwvE,QAAQxvE;QACRlkB,MAAMyE,QAAQyf;;aAEX;YACCwwE,OAAOjwF,SAASovF;iBACTY,gBAAgBZ,cAAcjjB;mBAEhC5wE,MAAMyE,SAAS8uF;iBACb5W,YAAY4W;YACfvzF,OAAOA,MAAMyE;;mBAGZ6uF,qBAAqBqB,QAAQlwF;iBAC3Bk4E,YAAY2W;;;;;;AAMvC,yBAAyBva,OAAQ5H,QAASmgB,KAAK1e,OAAOpzB;QAC5C2xB,QAAQwL,YAAY5D,MAAMnG,OAAOpzB;;EAEvC2xB,MAAMmgB,MAAMA;SACLngB;;AAGX,gCAAgCP;;IAExB+W,WAAWxQ;IACX9B,cAAc;IACduR,SAAShW,SAASgkB,MAAM,AAAAj0F,KAAKuwE,OAAOtjE,eAAegjE,SAASgkB,KAAKj0F,UAAU;IAC3EkmF,WAAWjW,SAASikB,MAAM,AAAAl0F,KAAKuwE,OAAOtjE,eAAegjE,SAASikB,KAAKl0F,UAAU;;;MAG/EinF,wBAAwB4K;MAExBL,SAAS,CAAC2C,QAAQC,WAAWtW,gBAAgBtN;MAC3CD,OAAOrvE,QAAQizF;IACfA,OAAOj2F,QAAQ,CAACm2F,GAAG11F,MAAM6yF,OAAO6C,GAAGD,cAAc7jB,OAAOrvE,QAAQkzF,aAAaA,UAAUz1F,KAAKy1F,YAAYtW,gBAAgBtN;;;MAGxH1sE;OACC0sE;;IAED1sE,QAAQ;aAEH2uF,eAAejiB;;;;aAKfA,MAAMsK,YAAY;;IACvBh3E,QAAQ0sE,MAAMG,UAAU2jB,WAAW9jB,MAAMG,UAAUQ;;IAGnDrtE,QAAQ0sE,MAAMrlE;;SAEVxM,GAAG41F,OAAOF,GAAG1D,OAAQwD;OACxBI;IACDr0F,MAAM,sEACD;;;QAGHs0F,SAASJ,aAAaA,UAAUC;QAChCI,OAAOF,MAAME,SAASlkB,OAAO9lE,YAAa8pF,MAAME,YAAaF,MAAME;QACnE7Z,aAAa2Z,MAAM3Z;;MAErB4Z,UAAU,QAAQA,WAAW7D;QACzBpgB,OAAO3pE,SAAS4tF;MAChBC,KAAKD,UAAU;UACXjkB,OAAOjlE,OAAOsvE,YAAY4Z;QAC1B5Z,WAAW4Z,UAAU;;eAGpBlkB,WAAW8B,MAAMoiB;MACtBA,OAAO1wF,QAAQ;;;MAGnBysE,OAAO3pE,SAAS+pF;UACV+D,QAAQ;MACVD,KAAK9D,OAAO7sF;UACRysE,OAAOjlE,OAAOsvE,YAAY+V;QAC1B/V,WAAW+V,OAAO7sF;;;;;;QAMtBA;MACA4wF,MAAMp2F,MAAM;MACZ2oF,sBAAsByN,OAAO5W;;MAG7B4W;;aAGCpkB,WAAW8B,MAAMue;UAChB+D,QAAQ;MACV/D,IAAI7sF,QAAQA;;QAEZA;MACA4wF,MAAMp2F,MAAM;MACZ2oF,sBAAsByN,OAAO5W;;MAG7B4W;;aAGCnkB,OAAO/kE,WAAWmlF;IACvBzf,sBAAsByf,KAAK4D,OAAO;KAAwBzwF,OAAO2wF;;IAGjEv0F,KAAK,8BAA8B4D,QAAQ,UAAUA,MAAM;;;;;;;;;;;;;;;;;;AAkBnE,wBAAwB0L;SACbmlF,mBAAmBnlF;;;;;AAK9B,iCAAiCA;SACtBmlF,mBAAmBnlF,SAASolF;;;AAGvC,4BAA4BplF,SAASqlF;;UAEvBvQ,SAAS/T,OAAO1iE;IACtBy2E,OAAOwQ,UAAU;IACjBC,gBAAgBzQ,OAAO0Q;;SAEnB3E,QAAQ4E,YAAY70F,QAAQ80F,YAAY9E,WAAW+E,eAAeC,gBAAgBC,oBAAoB/0F,eAAeg1F,mBAAmBC,YAAYC,gBAAgBlF,eAAemF,mBAAmBC,SAASC,aAAaC,gBAAgBC,oBAAoBp0F,YAAYq0F,gBAAgB7zF,aAAa8zF,iBAAiBC,YAAYC,iBAAiB1lB,OAAO3lE,MAAMrJ,WAAW20F,eAAeC,qBAAqBC,2BAA4B5mF;;;QAGjb+uE,QAAQ,CAACd,IAAIC,IAAIC,WAAWC,SAAS,MAAMC,kBAAkB,MAAMC,iBAAiB,MAAMC,QAAQ,OAAOtE,eAAe,MAAMiD,YAAY;;QAExIe,OAAO6B,gBAAgB7B,IAAIC;MAC3BE,SAASyY,gBAAgB5Y;MACzBuB,QAAQvB,IAAII,iBAAiBC,gBAAgB;MAC7CL,KAAK;;QAELC,GAAGtC,eAAe;;MAClBsB,YAAY;MACZgB,GAAGxB,kBAAkB;;WAEjBv+E,MAAMgzF,KAAK7V,aAAc4C;YACzB//E;WACCo5E;QACDuf,YAAY7Y,IAAIC,IAAIC,WAAWC;;WAE9B5G;QACDuf,mBAAmB9Y,IAAIC,IAAIC,WAAWC;;WAErC3G;YACGwG,MAAM;UACN+Y,gBAAgB9Y,IAAIC,WAAWC,QAAQG;;UAGvC0Y,gBAAgBhZ,IAAIC,IAAIC,WAAWI;;;WAGtCjH;QACD4f,gBAAgBjZ,IAAIC,IAAIC,WAAWC,QAAQC,iBAAiBC,gBAAgBC,OAAOtE,cAAciD;;;YAG7F5B,YAAY;;UACZ6b,eAAelZ,IAAIC,IAAIC,WAAWC,QAAQC,iBAAiBC,gBAAgBC,OAAOtE,cAAciD;mBAE3F5B,YAAY;;UACjB8b,iBAAiBnZ,IAAIC,IAAIC,WAAWC,QAAQC,iBAAiBC,gBAAgBC,OAAOtE,cAAciD;mBAE7F5B,YAAY;;UACjBn9E,KAAK6/E,QAAQC,IAAIC,IAAIC,WAAWC,QAAQC,iBAAiBC,gBAAgBC,OAAOtE,cAAciD,WAAWma;mBAEpG/b,YAAY;;UACjBn9E,KAAK6/E,QAAQC,IAAIC,IAAIC,WAAWC,QAAQC,iBAAiBC,gBAAgBC,OAAOtE,cAAciD,WAAWma;;UAGzG32F,KAAK,uBAAuBvC,OAAO,UAAUA,KAAK;;;;QAI1DgzF,OAAO,QAAQ9S;MACf2T,OAAOb,KAAKlT,MAAMA,GAAGkT,KAAK7S,gBAAgBJ;;;QAG5C4Y,cAAc,CAAC7Y,IAAIC,IAAIC,WAAWC;QAChCH,MAAM;MACNwX,WAAYvX,GAAGvyE,KAAKqqF,eAAe9X,GAAG7+B,WAAY8+B,WAAWC;;YAGvDzyE,KAAMuyE,GAAGvyE,KAAKsyE,GAAGtyE;UACnBuyE,GAAG7+B,aAAa4+B,GAAG5+B;QACnB82C,YAAYxqF,IAAIuyE,GAAG7+B;;;;QAIzB03C,qBAAqB,CAAC9Y,IAAIC,IAAIC,WAAWC;QACvCH,MAAM;MACNwX,WAAYvX,GAAGvyE,KAAKsqF,kBAAkB/X,GAAG7+B,YAAY,KAAM8+B,WAAWC;;;MAItEF,GAAGvyE,KAAKsyE,GAAGtyE;;;QAGbqrF,kBAAkB,CAAC9Y,IAAIC,WAAWC,QAAQG;KAC3CL,GAAGvyE,IAAIuyE,GAAGE,UAAUwY,wBAAwB1Y,GAAG7+B,UAAU8+B,WAAWC,QAAQG;;;;;QAK3E0Y,kBAAkB,CAAChZ,IAAIC,IAAIC,WAAWI;;QAEpCL,GAAG7+B,aAAa4+B,GAAG5+B;YACb++B,SAASmY,gBAAgBtY,GAAGG;;MAElCkZ,iBAAiBrZ;OAChBC,GAAGvyE,IAAIuyE,GAAGE,UAAUwY,wBAAwB1Y,GAAG7+B,UAAU8+B,WAAWC,QAAQG;;MAG7EL,GAAGvyE,KAAKsyE,GAAGtyE;MACXuyE,GAAGE,SAASH,GAAGG;;;QAGjBmZ,iBAAiB,EAAG5rF,IAAIyyE,SAAUD,WAAW17E;QAC3CoqB;WACGlhB,MAAMA,OAAOyyE;MAChBvxD,OAAO0pE,gBAAgB5qF;MACvB8pF,WAAW9pF,IAAIwyE,WAAW17E;MAC1BkJ,KAAKkhB;;IAET4oE,WAAWrX,QAAQD,WAAW17E;;QAE5B60F,mBAAmB,EAAG3rF,IAAIyyE;QACxBvxD;WACGlhB,MAAMA,OAAOyyE;MAChBvxD,OAAO0pE,gBAAgB5qF;MACvB+pF,WAAW/pF;MACXA,KAAKkhB;;IAET6oE,WAAWtX;;QAET+Y,iBAAiB,CAAClZ,IAAIC,IAAIC,WAAWC,QAAQC,iBAAiBC,gBAAgBC,OAAOtE,cAAciD;IACrGqB,QAAQA,SAASL,GAAG//E,SAAS;QACzB8/E,MAAM;MACNuZ,aAAatZ,IAAIC,WAAWC,QAAQC,iBAAiBC,gBAAgBC,OAAOtE,cAAciD;;MAG1Fua,aAAaxZ,IAAIC,IAAIG,iBAAiBC,gBAAgBC,OAAOtE,cAAciD;;;QAG7Esa,eAAe,CAACxmB,OAAOmN,WAAWC,QAAQC,iBAAiBC,gBAAgBC,OAAOtE,cAAciD;QAC9FvxE;QACAogF;WACI5tF,MAAMs0E,OAAO6I,WAAWgB,YAAYV,WAAWQ,QAASpL;;MAE5DrlE,KAAKqlE,MAAMrlE,KAAKmqF,kBAAkB9kB,MAAM7yE,MAAMogF,OAAO9L,SAASA,MAAMilB,IAAIjlB;;;UAGpE6I,YAAY;;QACZ+a,mBAAmB1qF,IAAIqlE,MAAM3xB;iBAExBi8B,YAAY;;QACjBqc,cAAc3mB,MAAM3xB,UAAU1zC,IAAI,MAAM0yE,iBAAiBC,gBAAgBC,SAASpgF,SAAS,iBAAiB87E,cAAciD,eAAelM,MAAM0L;;UAE/IN;QACA6V,oBAAoBjhB,OAAO,MAAMqN,iBAAiB;;;UAGlD5L;mBACWnrE,OAAOmrE;eACT1B,OAAOpkE,eAAerF;YACvBquF,cAAchqF,IAAIrE,KAAK,MAAMmrE,MAAMnrE,MAAMi3E,OAAOvN,MAAM3xB,UAAUg/B,iBAAiBC,gBAAgBsZ;;;YAGpG7L,YAAYtZ,MAAM2f;UACnBnG,gBAAgBF,WAAW1N,iBAAiBrN;;;;MAIpDwlB,WAAW7qF,IAAIqlE,OAAOA,MAAMgJ,SAASC,cAAcoE;;;MAGnDj6E,OAAOC,eAAesH,IAAI;QACtBrH,OAAO0sE;QACPjjE,YAAY;;MAEhB3J,OAAOC,eAAesH,IAAI;QACtBrH,OAAO+5E;QACPtwE,YAAY;;;QAGhBquE;MACA6V,oBAAoBjhB,OAAO,MAAMqN,iBAAiB;;;;UAIhDwZ,4BAA4BvZ,kBAAmBA,mBAAmBA,eAAea,kBACnF7C,eACCA,WAAW+L;QACZwP;MACAvb,WAAWoO,YAAY/+E;;IAE3B8pF,WAAW9pF,IAAIwyE,WAAWC;SACrB2N,YAAYtZ,SAASA,MAAMuZ,mBAC5B6L,2BACAzb;MACAqL,sBAAsB;QAClBsE,aAAaE,gBAAgBF,WAAW1N,iBAAiBrN;QACzD6mB,2BAA2Bvb,WAAWzrD,MAAMllB;QAC5CywE,QAAQ6V,oBAAoBjhB,OAAO,MAAMqN,iBAAiB;SAC3DC;;;QAGLkY,aAAa,CAAC7qF,IAAIqlE,OAAOgJ,SAASC,cAAcoE;QAC9CrE;MACAyc,eAAe9qF,IAAIquE;;QAEnBC;eACS96E,IAAI,GAAGA,IAAI86E,aAAa76E,QAAQD;QACrCs3F,eAAe9qF,IAAIsuE,aAAa96E;;;QAGpCk/E;UACIT,UAAUS,gBAAgBT;UAC1BA,QAAQhC,YAAY,KACpBgC,QAAQhC,YAAY;;QACpBgC,UACIhB,iBAAiBgB,QAAQv+B,aAAau+B;;UAE1C5M,UAAU4M;cACJ2U,cAAclU,gBAAgBrN;QACpCwlB,WAAW7qF,IAAI4mF,aAAaA,YAAYvY,SAASuY,YAAYtY,cAAcoE,gBAAgB7gF;;;;QAIjGm6F,gBAAgB,CAACt4C,UAAU8+B,WAAWC,QAAQC,iBAAiBC,gBAAgBC,OAAOrB,WAAWjD,cAAc70E,QAAQ;aAChHjG,IAAIiG,OAAOjG,IAAIkgD,SAASjgD,QAAQD;YAC/Bg7E,QAAS96B,SAASlgD,KAAK+9E,YACvB4a,eAAez4C,SAASlgD,MACxBq8E,eAAen8B,SAASlgD;MAC9B4/E,MAAM,MAAM5E,OAAOgE,WAAWC,QAAQC,iBAAiBC,gBAAgBC,OAAOrB,WAAWjD;;;QAG3Fwd,eAAe,CAACxZ,IAAIC,IAAIG,iBAAiBC,gBAAgBC,OAAOtE,cAAciD;UAC1EvxE,KAAMuyE,GAAGvyE,KAAKsyE,GAAGtyE;SACjBiwE,WAAWc,iBAAiBN,QAAS8B;;;IAG3CtC,aAAaqC,GAAGrC,YAAY;UACtBmc,WAAW9Z,GAAGxL,SAAS1B,OAAO9lE;UAC9B+sF,WAAW9Z,GAAGzL,SAAS1B,OAAO9lE;QAChC8gF;QACCA,YAAYiM,SAASC;MACtBhM,gBAAgBF,WAAW1N,iBAAiBH,IAAID;;QAEhD7B;MACA6V,oBAAoB/T,IAAID,IAAII,iBAAiB;;QAE7CrI;;MAEA4F,YAAY;MACZsB,YAAY;MACZR,kBAAkB;;QAElBd,YAAY;;;;;UAKRA,YAAY;;;QAEZsc,WAAWvsF,IAAIuyE,IAAI6Z,UAAUC,UAAU3Z,iBAAiBC,gBAAgBC;;;;YAKpE3C,YAAY;;cACRmc,SAASI,UAAUH,SAASG;YAC5BxC,cAAchqF,IAAI,SAAS,MAAMqsF,SAASG,OAAO5Z;;;;;YAKrD3C,YAAY;;UACZ+Z,cAAchqF,IAAI,SAASosF,SAASK,OAAOJ,SAASI,OAAO7Z;;;;;;;;YAQ3D3C,YAAY;;;gBAEN8G,gBAAgBxE,GAAGV;mBAChBr+E,IAAI,GAAGA,IAAIujF,cAActjF,QAAQD;kBAChCmI,MAAMo7E,cAAcvjF;kBACpBi7D,OAAO29B,SAASzwF;kBAChBulB,OAAOmrE,SAAS1wF;gBAClBulB,SAASutC,QACRy7B,sBAAsBA,mBAAmBlqF,IAAIrE;cAC9CquF,cAAchqF,IAAIrE,KAAK8yD,MAAMvtC,MAAM0xD,OAAON,GAAG5+B,UAAUg/B,iBAAiBC,gBAAgBsZ;;;;;;;UAOpGhc,YAAY;;YACRqC,GAAG5+B,aAAa6+B,GAAG7+B;UACnBg3C,mBAAmB1qF,IAAIuyE,GAAG7+B;;;gBAI5B69B,aAAaR,mBAAmB;;MAEtCwb,WAAWvsF,IAAIuyE,IAAI6Z,UAAUC,UAAU3Z,iBAAiBC,gBAAgBC;;UAEtE8Z,iBAAiB9Z,SAASL,GAAG//E,SAAS;QACxCu+E;MACA4b,mBAAmBra,GAAGvB,iBAAiBA,iBAAiB/wE,IAAI0yE,iBAAiBC,gBAAgB+Z,gBAAgBpe;UACzGoE,mBAAmBA,gBAAgBlgF,KAAKo4E;QACxCgiB,uBAAuBta,IAAIC;;gBAGzBhB;;MAENsb,cAAcva,IAAIC,IAAIvyE,IAAI,MAAM0yE,iBAAiBC,gBAAgB+Z,gBAAgBpe,cAAc;;SAE9F8R,YAAYiM,SAASS,mBAAmBrc;MACzCqL,sBAAsB;QAClBsE,aAAaE,gBAAgBF,WAAW1N,iBAAiBH,IAAID;QAC7D7B,QAAQ6V,oBAAoB/T,IAAID,IAAII,iBAAiB;SACtDC;;;;QAILga,qBAAqB,CAACI,aAAaC,aAAaC,mBAAmBva,iBAAiBC,gBAAgBC,OAAOtE;aACpG96E,IAAI,GAAGA,IAAIw5F,YAAYv5F,QAAQD;YAC9B05F,WAAWH,YAAYv5F;YACvB25F,WAAWH,YAAYx5F;;YAEvBg/E;;MAGN0a,SAAS16F,SAASm5E;;OAGbwI,gBAAgB+Y,UAAUC;MAE3BD,SAASvd,YAAY;MACrBud,SAASvd,YAAY;MACnBgb,eAAeuC,SAASltF;;MAGtBitF;MACR7Z,MAAM8Z,UAAUC,UAAU3a,WAAW,MAAME,iBAAiBC,gBAAgBC,OAAOtE,cAAc;;;QAGnGie,aAAa,CAACvsF,IAAIqlE,OAAO+mB,UAAUC,UAAU3Z,iBAAiBC,gBAAgBC;QAC5EwZ,aAAaC;iBACF1wF,OAAO0wF;;YAEVjnB,OAAOpkE,eAAerF;cAEpBulB,OAAOmrE,SAAS1wF;cAChB8yD,OAAO29B,SAASzwF;YAClBulB,SAASutC,QACRy7B,sBAAsBA,mBAAmBlqF,IAAIrE;UAC9CquF,cAAchqF,IAAIrE,KAAK8yD,MAAMvtC,MAAM0xD,OAAOvN,MAAM3xB,UAAUg/B,iBAAiBC,gBAAgBsZ;;;UAG/FG,aAAahnB,OAAO9lE;mBACT3D,OAAOywF;eACThnB,OAAOpkE,eAAerF,WAAUA,OAAO0wF;YACxCrC,cAAchqF,IAAIrE,KAAKywF,SAASzwF,MAAM,MAAMi3E,OAAOvN,MAAM3xB,UAAUg/B,iBAAiBC,gBAAgBsZ;;;;;;QAMlHV,kBAAkB,CAACjZ,IAAIC,IAAIC,WAAWC,QAAQC,iBAAiBC,gBAAgBC,OAAOtE,cAAciD;UAChG6b,sBAAuB7a,GAAGvyE,KAAKsyE,KAAKA,GAAGtyE,KAAKqqF,eAAe;UAC3DgD,oBAAqB9a,GAAGE,SAASH,KAAKA,GAAGG,SAAS4X,eAAe;SACjEpa,WAAWc,iBAAiBzC,cAAcuY,wBAAyBtU;QACrEtC,YAAY;MACZsB,YAAY;;;QAGZsV;MACAvY,eAAeA,eACTA,aAAat4E,OAAO6wF,wBACpBA;;QAENxc;;MAEA4F,YAAY;MACZsB,YAAY;MACZR,kBAAkB;;QAElBuB,MAAM;MACNwX,WAAWsD,qBAAqB5a,WAAWC;MAC3CqX,WAAWuD,mBAAmB7a,WAAWC;;;;MAIzCuZ,cAAczZ,GAAG7+B,UAAU8+B,WAAW6a,mBAAmB3a,iBAAiBC,gBAAgBC,OAAOtE,cAAciD;;UAG3GtB,YAAY,KACZA,YAAY;MACZc;;MAGAuB,GAAGvB;;;QAGH4b,mBAAmBra,GAAGvB,iBAAiBA,iBAAiByB,WAAWE,iBAAiBC,gBAAgBC,OAAOtE;YACvGoE,mBAAmBA,gBAAgBlgF,KAAKo4E;UACxCgiB,uBAAuBta,IAAIC;;;;;QAO/BA,GAAG52E,OAAO,QACL+2E,mBAAmBH,OAAOG,gBAAgBT;UAC3C2a,uBAAuBta,IAAIC,IAAI;;;;;;;QAQnCsa,cAAcva,IAAIC,IAAIC,WAAW6a,mBAAmB3a,iBAAiBC,gBAAgBC,OAAOtE,cAAciD;;;;QAIhHka,mBAAmB,CAACnZ,IAAIC,IAAIC,WAAWC,QAAQC,iBAAiBC,gBAAgBC,OAAOtE,cAAciD;IACvGgB,GAAGjE,eAAeA;QACdgE,MAAM;UACFC,GAAG5C,YAAY;;QACf+C,gBAAgB1D,IAAIkR,SAAS3N,IAAIC,WAAWC,QAAQG,OAAOrB;;QAG3DyT,eAAezS,IAAIC,WAAWC,QAAQC,iBAAiBC,gBAAgBC,OAAOrB;;;MAIlF+b,gBAAgBhb,IAAIC,IAAIhB;;;QAG1ByT,iBAAiB,CAACuI,cAAc/a,WAAWC,QAAQC,iBAAiBC,gBAAgBC,OAAOrB;UACvFzM,WAAYyoB,aAAa/nB,YAAYgoB,wBAAwBD,cAAc7a,iBAAiBC;QAC9F7N,SAAStyE,KAAKo4E;MACd6iB,YAAY3oB;;;MAGZkD,mBAAmBulB;MACnBG,aAAa5oB,WAAW;;;;QAGxBya,YAAYgO;MACZzoB,SAASkK,IAAI+Q,WAAW2L;;;;MAIxBgC,aAAa5oB,WAAW;;IAE5B6oB,eAAe7oB;;MAEX8oB,WAAW9oB,WAAW;;;;;;QAItBA,SAAS2Q;MACT9C,kBAAkBA,eAAe0C,YAAYvQ,UAAUwQ;;;WAGlDiY,aAAavtF;cACR0nD,cAAeod,SAASmN,UAAUpB,YAAYhF;QACpDuf,mBAAmB,MAAM1jC,aAAa8qB,WAAWC;;;;IAIzD6C,kBAAkBxQ,UAAUyoB,cAAc/a,WAAWC,QAAQE,gBAAgBC,OAAOrB;;MAEhFtJ;MACA2lB,WAAW9oB,WAAW;;;QAGxBwoB,kBAAkB,CAAChb,IAAIC,IAAIhB;UACvBzM,WAAYyN,GAAG/M,YAAY8M,GAAG9M;QAChCqoB,sBAAsBvb,IAAIC,IAAIhB;UAC1BzM,SAAS2Q,aACR3Q,SAAS8Q;;;;UAIN5N,mBAAmBuK;;QAEvBub,yBAAyBhpB,UAAUyN,IAAIhB;;UAEnCtJ;;;;;QAMJnD,SAAS5jD,OAAOqxD;;;QAGhBwb,cAAcjpB,SAAS3U;;QAEvB2U,SAAS3U;;;;MAKboiB,GAAG/M,YAAY8M,GAAG9M;MAClB+M,GAAGvyE,KAAKsyE,GAAGtyE;MACX8kE,SAASO,QAAQkN;;;QAGnB+C,oBAAoB,CAACxQ,UAAUyoB,cAAc/a,WAAWC,QAAQE,gBAAgBC,OAAOrB;;IAEzFzM,SAAS3U,SAASgV,WAAWqV,OAAO;WAC3B1V,SAASiX;YACNqE;eACIpgF,IAAI8mE,SAAUymB;eACdS,IAAIvZ,GAAG5iF,UAAWizE;;YAEtBkpB;UACA5oB,OAAOtjE,eAAeksF;;;YAGrB5N,YAAYtZ,SAASA,MAAM2f;UAC5BnG,gBAAgBF,WAAWvuF,QAAQ07F;;;;UAInCG,aAAa5oB,WAAW;;cAEtBmN,UAAWnN,SAASmN,UAAUgc,oBAAoBnpB;;UAEpD8oB,WAAW9oB,WAAW;;YAEtB9kE,MAAMg2E;;YAEF0X,aAAa5oB,WAAW;;;;UAG5BkR,YAAYuX,aAAavtF,IAAIiyE,SAASnN,UAAU6N,gBAAgB;;YAE5Dib,WAAW9oB,WAAW;;;;YAKtB4oB,aAAa5oB,WAAW;;UAE5BsO,MAAM,MAAMnB,SAASO,WAAWC,QAAQ3N,UAAU6N,gBAAgBC;;YAE9Dgb,WAAW9oB,WAAW;;UAE1ByoB,aAAavtF,KAAKiyE,QAAQjyE;;;YAG1By0E;UACAqH,sBAAsBrH,GAAG9B;;;YAGxByN,YAAYtZ,SAASA,MAAMuZ;gBACtB6N,qBAAqBX;UAC3BzR,sBAAsB;YAClBwE,gBAAgBF,WAAWvuF,QAAQq8F;aACpCvb;;;;;eAKCj1E,KAAMonE;YACVpnE,KACA6vF,aAAa5d,YAAY;;UACzBmM,sBAAsBp+E,GAAGi1E;;QAE7B7N,SAASiX,YAAY;;UAEjBhQ,uBAAuBjH;;;;QAG3ByoB,eAAe/a,YAAYC,SAAS;;;;;aAM9BvxD,MAAMitE,IAAIC,GAAGv8F,QAAQwzE,SAAUP;YACjCupB,aAAantE;YACbk/D;;UAEApY,mBAAmB9mD,QAAQ4jD,SAASO;;YAEpCnkD;UACAA,KAAKlhB,KAAKqlE,MAAMrlE;UAChB8tF,yBAAyBhpB,UAAU5jD,MAAMqwD;;UAGzCrwD,OAAOmkD;;;YAGP8oB;UACA/oB,OAAOtjE,eAAeqsF;;;YAGrB/N,YAAYl/D,KAAK4lD,SAAS5lD,KAAK4lD,MAAMwlB;UACtChM,gBAAgBF,WAAWvuF,QAAQqvB,MAAMmkD;;;;UAIzCqoB,aAAa5oB,WAAW;;cAEtBwpB,WAAWL,oBAAoBnpB;;UAEjC8oB,WAAW9oB,WAAW;;cAEpBypB,WAAWzpB,SAASmN;QAC1BnN,SAASmN,UAAUqc;;UAEfZ,aAAa5oB,WAAW;;QAE5BsO,MAAMmb,UAAUD;QAEhB3D,eAAe4D,SAASvuF;QAExBkrF,gBAAgBqD,WAAWzpB,UAAU6N,gBAAgBC;;UAEjDgb,WAAW9oB,WAAW;;QAE1B5jD,KAAKlhB,KAAKsuF,SAAStuF;YACfquF,eAAe;;;;UAIfvY,gBAAgBhR,UAAUwpB,SAAStuF;;;YAGnCouF;UACAtS,sBAAsBsS,GAAGzb;;;YAGxByN,YAAYl/D,KAAK4lD,SAAS5lD,KAAK4lD,MAAMgmB;UACtChR,sBAAsB;YAClBwE,gBAAgBF,WAAWvuF,QAAQqvB,MAAMmkD;aAC1CsN;;;UAGH1G,yBAAyBnH;;;UAGzBmD;;;OAGTumB,uBAAuB1pB;;QAExBgpB,2BAA2B,CAAChpB,UAAUwM,WAAWC;IACnDD,UAAU9L,YAAYV;UAChB0M,YAAY1M,SAASO,MAAMyB;IACjChC,SAASO,QAAQiM;IACjBxM,SAAS5jD,OAAO;IAChButE,YAAY3pB,UAAUwM,UAAUxK,OAAO0K,WAAWD;IAClD4Q,YAAYrd,UAAUwM,UAAU59B,UAAU69B;IAC1CpM,WAAWI;;;IAGX0E,iBAAiB74E,WAAW0zE,SAAS3U;IACrCgV,WAAWiB;;QAETymB,gBAAgB,CAACva,IAAIC,IAAIC,WAAWC,QAAQC,iBAAiBC,gBAAgBC,OAAOtE,cAAciD,YAAY;UAC1Gmd,KAAKpc,MAAMA,GAAG5+B;UACdi7C,gBAAgBrc,KAAKA,GAAG3C,YAAY;UACpCif,KAAKrc,GAAG7+B;WACNu8B,WAAWN,aAAc4C;;QAE7BtC,YAAY;UACRA,YAAY;;;;QAGZ4e,mBAAmBH,IAAIE,IAAIpc,WAAWC,QAAQC,iBAAiBC,gBAAgBC,OAAOtE,cAAciD;;iBAG/FtB,YAAY;;;QAEjB6e,qBAAqBJ,IAAIE,IAAIpc,WAAWC,QAAQC,iBAAiBC,gBAAgBC,OAAOtE,cAAciD;;;;;QAK1G5B,YAAY;;;UAERgf,gBAAgB;;QAChB1C,gBAAgByC,IAAIhc,iBAAiBC;;UAErCic,OAAOF;QACPhE,mBAAmBlY,WAAWoc;;;UAI9BD,gBAAgB;;;YAEZhf,YAAY;;;UAEZkf,mBAAmBH,IAAIE,IAAIpc,WAAWC,QAAQC,iBAAiBC,gBAAgBC,OAAOtE,cAAciD;;;UAIpG0a,gBAAgByC,IAAIhc,iBAAiBC,gBAAgB;;;;;YAMrDgc,gBAAgB;;UAChBjE,mBAAmBlY,WAAW;;;YAG9B7C,YAAY;;UACZqc,cAAc4C,IAAIpc,WAAWC,QAAQC,iBAAiBC,gBAAgBC,OAAOtE,cAAciD;;;;;QAKrGud,uBAAuB,CAACJ,IAAIE,IAAIpc,WAAWC,QAAQC,iBAAiBC,gBAAgBC,OAAOtE,cAAciD;IAC3Gmd,KAAKA,MAAMtpB,OAAO5lE;IAClBovF,KAAKA,MAAMxpB,OAAO5lE;UACZuvF,YAAYL,GAAGj7F;UACfu7F,YAAYJ,GAAGn7F;UACfw7F,eAAeh1F,KAAKK,IAAIy0F,WAAWC;QACrCx7F;SACCA,IAAI,GAAGA,IAAIy7F,cAAcz7F;YACpB07F,YAAaN,GAAGp7F,KAAK+9E,YACrB4a,eAAeyC,GAAGp7F,MAClBq8E,eAAe+e,GAAGp7F;MACxB4/E,MAAMsb,GAAGl7F,IAAI07F,WAAW1c,WAAW,MAAME,iBAAiBC,gBAAgBC,OAAOtE,cAAciD;;QAE/Fwd,YAAYC;;MAEZ/C,gBAAgByC,IAAIhc,iBAAiBC,gBAAgB,MAAM,OAAOsc;;;MAIlEjD,cAAc4C,IAAIpc,WAAWC,QAAQC,iBAAiBC,gBAAgBC,OAAOtE,cAAciD,WAAW0d;;;;QAIxGJ,qBAAqB,CAACH,IAAIE,IAAIpc,WAAW2c,cAAczc,iBAAiBC,gBAAgBC,OAAOtE,cAAciD;QAC3G/9E,IAAI;UACF47F,KAAKR,GAAGn7F;QACV47F,KAAKX,GAAGj7F,SAAS;;QACjB67F,KAAKF,KAAK;;;;;WAIP57F,KAAK67F,MAAM77F,KAAK87F;YACbhd,KAAKoc,GAAGl7F;YACR++E,KAAMqc,GAAGp7F,KAAK+9E,YACd4a,eAAeyC,GAAGp7F,MAClBq8E,eAAe+e,GAAGp7F;UACpB2gF,gBAAgB7B,IAAIC;QACpBa,MAAMd,IAAIC,IAAIC,WAAW,MAAME,iBAAiBC,gBAAgBC,OAAOtE,cAAciD;;;;MAKzF/9E;;;;;WAKGA,KAAK67F,MAAM77F,KAAK87F;YACbhd,KAAKoc,GAAGW;YACR9c,KAAMqc,GAAGU,MAAM/d,YACf4a,eAAeyC,GAAGU,OAClBzf,eAAe+e,GAAGU;UACpBnb,gBAAgB7B,IAAIC;QACpBa,MAAMd,IAAIC,IAAIC,WAAW,MAAME,iBAAiBC,gBAAgBC,OAAOtE,cAAciD;;;;MAKzF8d;MACAC;;;;;;;;;QASA97F,IAAI67F;UACA77F,KAAK87F;cACCxiC,UAAUwiC,KAAK;cACf7c,SAAS3lB,UAAUsiC,KAAKR,GAAG9hC,SAAS9sD,KAAKmvF;eACxC37F,KAAK87F;UACRlc,MAAM,MAAOwb,GAAGp7F,KAAK+9E,YACf4a,eAAeyC,GAAGp7F,MAClBq8E,eAAe+e,GAAGp7F,KAAMg/E,WAAWC,QAAQC,iBAAiBC,gBAAgBC,OAAOtE,cAAciD;UACvG/9E;;;;;;;;;;;;;;;;;QAWHA,IAAI87F;aACF97F,KAAK67F;QACRxb,QAAQ6a,GAAGl7F,IAAIk/E,iBAAiBC,gBAAgB;QAChDn/E;;;;;;;;;;;YAQE+7F,KAAK/7F;;YACLg8F,KAAKh8F;;;YAELi8F,uBAAuBtrF;WACxB3Q,IAAIg8F,IAAIh8F,KAAK87F,IAAI97F;cACZ07F,YAAaN,GAAGp7F,KAAK+9E,YACrB4a,eAAeyC,GAAGp7F,MAClBq8E,eAAe+e,GAAGp7F;YACpB07F,UAAUvzF,OAAO;cACb8zF,iBAAiBnkF,IAAI4jF,UAAUvzF;YAC/B5G,MAAM,sCAAsCzC,KAAKqM,UAAUuwF,UAAUvzF,OAAO;;UAEhF8zF,iBAAiBlrF,IAAI2qF,UAAUvzF,KAAKnI;;;;;UAKxCsG;UACA41F,UAAU;YACRC,cAAcL,KAAKE,KAAK;UAC1BI,QAAQ;;UAERC,mBAAmB;;;;;;YAMjBC,4BAA4Bh6F,MAAM65F;WACnCn8F,IAAI,GAAGA,IAAIm8F,aAAan8F,KACzBs8F,sBAAsBt8F,KAAK;WAC1BA,IAAI+7F,IAAI/7F,KAAK67F,IAAI77F;cACZu8F,YAAYrB,GAAGl7F;YACjBk8F,WAAWC;;UAEX9b,QAAQkc,WAAWrd,iBAAiBC,gBAAgB;;;YAGpDqd;YACAD,UAAUp0F,OAAO;UACjBq0F,WAAWP,iBAAiBhkF,IAAIskF,UAAUp0F;;;eAIrC7B,IAAI01F,IAAI11F,KAAKw1F,IAAIx1F;gBACdg2F,sBAAsBh2F,IAAI01F,QAAQ,KAClCrb,gBAAgB4b,WAAWnB,GAAG90F;cAC9Bk2F,WAAWl2F;;;;;YAKnBk2F,aAAa5+F;UACbyiF,QAAQkc,WAAWrd,iBAAiBC,gBAAgB;;UAGpDmd,sBAAsBE,WAAWR,MAAMh8F,IAAI;cACvCw8F,YAAYH;YACZA,mBAAmBG;;YAGnBJ,QAAQ;;UAEZxc,MAAM2c,WAAWnB,GAAGoB,WAAWxd,WAAW,MAAME,iBAAiBC,gBAAgBC,OAAOtE,cAAciD;UACtGme;;;;;YAKFO,6BAA6BL,QAC7BM,YAAYJ,yBACZ1qB,OAAO5lE;MACb1F,IAAIm2F,2BAA2Bx8F,SAAS;;WAEnCD,IAAIm8F,cAAc,GAAGn8F,KAAK,GAAGA;cACxB28F,YAAYX,KAAKh8F;cACjB07F,YAAYN,GAAGuB;cACf1d,SAAS0d,YAAY,IAAIf,KAAKR,GAAGuB,YAAY,GAAGnwF,KAAKmvF;YACvDW,sBAAsBt8F,OAAO;;UAE7B4/E,MAAM,MAAM8b,WAAW1c,WAAWC,QAAQC,iBAAiBC,gBAAgBC,OAAOtE,cAAciD;mBAE3Fqe;;;;cAID91F,IAAI,KAAKtG,MAAMy8F,2BAA2Bn2F;YAC1C46E,KAAKwa,WAAW1c,WAAWC,QAAQ;;YAGnC34E;;;;;;QAMd46E,OAAO,CAACrP,OAAOmN,WAAWC,QAAQ2d,UAAUzd,iBAAiB;WACvD3yE,IAAIxN,MAAMm+E,YAAYj9B,UAAUi8B,aAActK;QAClDsK,YAAY;;MACZ+E,KAAKrP,MAAMG,UAAUyM,SAASO,WAAWC,QAAQ2d;;;QAGjDzgB,YAAY;;MACZtK,MAAMkO,SAASmB,KAAKlC,WAAWC,QAAQ2d;;;QAGvCzgB,YAAY;;MACZn9E,KAAKkiF,KAAKrP,OAAOmN,WAAWC,QAAQiZ;;;QAGpCl5F,SAASm5E;MACTme,WAAW9pF,IAAIwyE,WAAWC;eACjBj/E,IAAI,GAAGA,IAAIkgD,SAASjgD,QAAQD;QACjCkhF,KAAKhhC,SAASlgD,IAAIg/E,WAAWC,QAAQ2d;;MAEzCtG,WAAWzkB,MAAMoN,QAAQD,WAAWC;;;QAGpCjgF,SAASs5E;MACT8f,eAAevmB,OAAOmN,WAAWC;;;;UAI/B4d,iBAAiBD,aAAa;IAChCzgB,YAAY;IACZgB;QACA0f;UACID,aAAa;;QACbzf,WAAWoO,YAAY/+E;QACvB8pF,WAAW9pF,IAAIwyE,WAAWC;QAC1BqJ,sBAAsB,MAAMnL,WAAWzrD,MAAMllB,KAAK2yE;;eAG1CpO,OAAOga,YAAYxJ,cAAepE;cACpC17E,SAAS,MAAM60F,WAAW9pF,IAAIwyE,WAAWC;cACzC6d,eAAe;UACjB/rB,MAAMvkE,IAAI;YACN/K;YACA8/E,cAAcA;;;YAGlBwJ;UACAA,WAAWv+E,IAAI/K,QAAQq7F;;UAGvBA;;;;MAKRxG,WAAW9pF,IAAIwyE,WAAWC;;;QAG5BoB,UAAU,CAACxO,OAAOqN,iBAAiBC,gBAAgBoD,WAAW,OAAOxE,YAAY;WAC3E/+E,MAAMs0E,OAAO0e,KAAK9xC,UAAUq9B,iBAAiBpB,WAAWM,WAAWQ,QAASpL;;QAEhFmgB,OAAO;MACPa,OAAOb,KAAK,MAAM7S,gBAAgB;;QAElChD,YAAY;;MACZ+C,gBAAgB1D,IAAIuR,WAAWlb;;;UAG7BkrB,mBAAmB5gB,YAAY;IAAmBc;QACpD2P;QACCA,YAAYtZ,SAASA,MAAM0pB;MAC5BlQ,gBAAgBF,WAAW1N,iBAAiBrN;;QAE5CsK,YAAY;;MACZ8gB,iBAAiBprB,MAAMG,WAAWmN,gBAAgBoD;;UAG9CpG,YAAY;;QACZtK,MAAMkO,SAASM,QAAQlB,gBAAgBoD;;;UAGvCwa;QACAjK,oBAAoBjhB,OAAO,MAAMqN,iBAAiB;;UAElD/C,YAAY;;QACZtK,MAAM7yE,KAAKyC,OAAOowE,OAAOqN,iBAAiBC,gBAAgBpB,WAAWma,WAAW3V;iBAE3EhF;MAEJv+E,SAASm5E,YACLsE,YAAY,KAAKA,YAAY;;QAElCgc,gBAAgBlb,iBAAiB2B,iBAAiBC,gBAAgB,OAAO;iBAEnEngF,SAASm5E,aACdsE,YAAY;MACTA,YAAY,SACdsB,aAAa5B,YAAY;QAC3Bsc,gBAAgBv4C,UAAUg/B,iBAAiBC;;UAE3CoD;QACA9gF,OAAOowE;;;SAGV+a,YAAYtZ,SAASA,MAAM2Z,qBAAqB8P;MACjDzU,sBAAsB;QAClBsE,aAAaE,gBAAgBF,WAAW1N,iBAAiBrN;QACzDkrB,oBACIjK,oBAAoBjhB,OAAO,MAAMqN,iBAAiB;SACvDC;;;QAGL19E,SAAS,AAAAowE;WACH7yE,MAAMwN,IAAIyyE,QAAQ9B,cAAetL;QACrC7yE,SAASm5E;MACT+kB,eAAe1wF,IAAIyyE;;;QAGnBjgF,SAASs5E;MACT6f,iBAAiBtmB;;;UAGfsrB,gBAAgB;MAClB5G,WAAW/pF;UACP2wE,eAAeA,WAAW+L,aAAa/L,WAAWoE;QAClDpE,WAAWoE;;;QAGf1P,MAAMsK,YAAY;IAClBgB,eACCA,WAAW+L;aACJnY,OAAOga,cAAe5N;YACxB2f,eAAe,MAAM/rB,MAAMvkE,IAAI2wF;UACjCpS;QACAA,WAAWlZ,MAAMrlE,IAAI2wF,eAAeL;;QAGpCA;;;MAIJK;;;QAGFD,iBAAiB,CAAC9wB,KAAKlmE;;;QAGrBwnB;WACG0+C,QAAQlmE;MACXwnB,OAAO0pE,gBAAgBhrB;MACvBmqB,WAAWnqB;MACXA,MAAM1+C;;IAEV6oE,WAAWrwF;;QAET+2F,mBAAmB,CAAC3rB,UAAU6N,gBAAgBoD;QAC5CjR,SAAStyE,KAAKo4E;MACdgmB,cAAc9rB;;WAEV+rB,KAAKxc,SAASlkB,QAAQ8hB,SAAS2B,MAAO9O;;QAE1C+rB;MACAzrB,OAAOtjE,eAAe+uF;;QAEtBxc;eACS7gF,IAAI,GAAGA,IAAI6gF,QAAQ5gF,QAAQD;QAChC2xE,WAAWtnD,KAAKw2D,QAAQ7gF;;;;;QAK5B28D;MACAgV,WAAWtnD,KAAKsyC;MAChB0jB,QAAQ5B,SAASnN,UAAU6N,gBAAgBoD;;;QAG3CnC;MACAkI,sBAAsBlI,IAAIjB;;IAE9BmJ,sBAAsB;MAClBhX,SAAS6P,cAAc;OACxBhC;;;;QAICA,kBACAA,eAAea,kBACdb,eAAegC,eAChB7P,SAAS2Q,aACR3Q,SAAS8Q,iBACV9Q,SAAS6Q,eAAehD,eAAeyB;MACvCzB,eAAej7E;UACXi7E,eAAej7E,SAAS;QACxBi7E,eAAe7J;;;;MAInBoD,yBAAyBpH;;;QAG3BmnB,kBAAkB,CAACv4C,UAAUg/B,iBAAiBC,gBAAgBoD,WAAW,OAAOxE,YAAY,OAAO93E,QAAQ;aACpGjG,IAAIiG,OAAOjG,IAAIkgD,SAASjgD,QAAQD;MACrCqgF,QAAQngC,SAASlgD,IAAIk/E,iBAAiBC,gBAAgBoD,UAAUxE;;;QAGlE2Z,kBAAkB,AAAA7lB;QAChBA,MAAMsK,YAAY;;aACXub,gBAAgB7lB,MAAMG,UAAUyM;;QAEvC5M,MAAMsK,YAAY;;aACXtK,MAAMkO,SAASryD;;WAEnB0pE,gBAAiBvlB,MAAMoN,UAAUpN,MAAMrlE;;QAE5C5H,SAAS,CAACitE,OAAOmN,WAAWI;QAC1BvN,SAAS;UACLmN,UAAUse;QACVjd,QAAQrB,UAAUse,QAAQ,MAAM,MAAM;;;MAI1C1d,MAAMZ,UAAUse,UAAU,MAAMzrB,OAAOmN,WAAW,MAAM,MAAM,MAAMI;;IAExExI;IACAoI,UAAUse,SAASzrB;;QAEjBqmB;IACFjiC,GAAG2pB;IACHQ,IAAIC;IACJY,GAAGC;IACHwU,GAAGj0F;IACH8vF,IAAIC;IACJ+L,IAAI/E;IACJgF,IAAInE;IACJoE,KAAKtE;IACLrqF,GAAG4oF;IACH7X,GAAGhvE;;MAEH2uE;MACAgD;MACA0T;KACC1W,SAASgD,eAAe0T,mBAAmBgC;;;IAG5CtzF;IACA46E;IACAke,WAAWC,aAAa/4F,QAAQ46E;;;AAGxC,yBAAyB1H,MAAMxG,UAAUO,OAAOgM,YAAY;EACxDhK,2BAA2BiE,MAAMxG,UAAU;GACvCO,OACAgM;;;;;;;;;;;;;AAcR,gCAAgCiB,IAAIC,IAAI6e,UAAU;QACxCC,MAAM/e,GAAG5+B;QACT5W,MAAMy1C,GAAG7+B;MACX0xB,OAAOrvE,QAAQs7F,QAAQjsB,OAAOrvE,QAAQ+mC;aAC7BtpC,IAAI,GAAGA,IAAI69F,IAAI59F,QAAQD;;;YAGtBk7F,KAAK2C,IAAI79F;UACXo7F,KAAK9xD,IAAItpC;UACTo7F,GAAGjf,YAAY;OAAoBif,GAAG7d;YAClC6d,GAAG3e,aAAa,KAAK2e,GAAG3e,cAAc;;UACtC2e,KAAK9xD,IAAItpC,KAAK24F,eAAervD,IAAItpC;UACjCo7F,GAAG5uF,KAAK0uF,GAAG1uF;;aAEVoxF,SACDxE,uBAAuB8B,IAAIE;;;;UAI/BA,GAAGp8F,SAASq5E,YAAY+iB,GAAG5uF;QAC3B4uF,GAAG5uF,KAAK0uF,GAAG1uF;;;;;;AAM3B,qBAAqBxB;QACXirD,IAAIjrD,IAAIqC;QACRszB,UAAU;MACZ3gC,GAAGsG,GAAGs0F,GAAGp2F,GAAGsJ;QACV4sD,MAAM1vD,IAAI/K;OACXD,IAAI,GAAGA,IAAI06D,KAAK16D;UACX89F,OAAO9yF,IAAIhL;QACb89F,SAAS;MACTx3F,IAAIq6B,OAAOA,OAAO1gC,SAAS;UACvB+K,IAAI1E,KAAKw3F;QACT7nC,EAAEj2D,KAAKsG;QACPq6B,OAAOjjC,KAAKsC;;;MAGhB46F,IAAI;MACJp2F,IAAIm8B,OAAO1gC,SAAS;aACb26F,IAAIp2F;QACPsJ,KAAM8sF,IAAIp2F,KAAK,IAAK;YAChBwG,IAAI21B,OAAO7yB,MAAMgwF;UACjBlD,IAAI9sF,IAAI;;UAGRtJ,IAAIsJ;;;UAGRgwF,OAAO9yF,IAAI21B,OAAOi6D;YACdA,IAAI;UACJ3kC,EAAEj2D,KAAK2gC,OAAOi6D,IAAI;;QAEtBj6D,OAAOi6D,KAAK56F;;;;EAIxB46F,IAAIj6D,OAAO1gC;EACXuE,IAAIm8B,OAAOi6D,IAAI;SACRA,MAAM;IACTj6D,OAAOi6D,KAAKp2F;IACZA,IAAIyxD,EAAEzxD;;SAEHm8B;;MAGLo9D,aAAa,AAAC/+F,QAASA,KAAKg/F;MAC5BC,qBAAqB,AAAC3qB,SAAUA,UAAUA,MAAM4qB,YAAY5qB,MAAM4qB,aAAa;MAC/EC,cAAc,AAACxY,iBAAkByY,eAAe,eAAezY,kBAAkByY;MACjFC,gBAAgB,CAAC/qB,OAAOgrB;QACpBC,iBAAiBjrB,SAASA,MAAMkrB;MAClC5sB,OAAO3pE,SAASs2F;SACXD;MACD/8F,MAAM,oEACG;aACF;;YAGDokF,SAAS2Y,OAAOC;WACjB5Y;QACDpkF,MAAM,kDAAkDg9F,eAAe,QAC9D,0EACA,qEACA;;aAEN5Y;;;SAIN4Y,mBAAmBN,mBAAmB3qB;MACvC/xE,MAAM,2BAA2Bg9F,eAAe;;WAE7CA;;;MAGTE;EACFT,cAAc;EACdnf,QAAQC,IAAIC,IAAIC,WAAWC,QAAQC,iBAAiBC,gBAAgBC,OAAOtE,cAAciD,WAAWma;WACxFqF,IAAI/E,eAAegF,IAAInE,eAAeoE,KAAKtE,oBAAoBtZ,IAAK6R,QAAQgN,eAAe9H,YAAYjF,kBAAoBuG;UAC7HgG,WAAWD,mBAAmBlf,GAAGzL;WAC/B6I,WAAWj8B,YAAa6+B;;;QAG5BlI;MACAkH,YAAY;MACZgB,GAAGxB,kBAAkB;;QAErBuB,MAAM;;YAEA5qB,cAAe6qB,GAAGvyE,KAAKmlF,cAAc;YAErCgN,aAAc5f,GAAGE,SAAS0S,cAAc;MAE9CD,OAAOx9B,aAAa8qB,WAAWC;MAC/ByS,OAAOiN,YAAY3f,WAAWC;YACxB0G,SAAU5G,GAAG4G,SAAS0Y,cAActf,GAAGzL,OAAOorB;YAC9CE,eAAgB7f,GAAG6f,eAAehI,WAAW;UAC/CjR;QACA+L,OAAOkN,cAAcjZ;;QAErBvG,QAAQA,SAAS+e,YAAYxY;kBAEvBuY;QACN38F,KAAK,qCAAqCokF,SAAS,UAAUA,OAAO;;YAElE7gF,QAAQ,CAACk6E,WAAWC;;;YAGlB9C,YAAY;;UACZqc,cAAct4C,UAAU8+B,WAAWC,QAAQC,iBAAiBC,gBAAgBC,OAAOtE,cAAciD;;;UAGrGmgB;QACAp5F,MAAMk6E,WAAW2f;iBAEZhZ;QACL7gF,MAAM6gF,QAAQiZ;;;;MAKlB7f,GAAGvyE,KAAKsyE,GAAGtyE;YACLmyF,aAAc5f,GAAGE,SAASH,GAAGG;YAC7B0G,SAAU5G,GAAG4G,SAAS7G,GAAG6G;YACzBiZ,eAAgB7f,GAAG6f,eAAe9f,GAAG8f;YACrCC,cAAcZ,mBAAmBnf,GAAGxL;YACpCwrB,mBAAmBD,cAAc7f,YAAY2G;YAC7CoZ,gBAAgBF,cAAcF,aAAaC;MACjDxf,QAAQA,SAAS+e,YAAYxY;UACzB5G,GAAGxB;;QAEH4b,mBAAmBra,GAAGvB,iBAAiBwB,GAAGxB,iBAAiBuhB,kBAAkB5f,iBAAiBC,gBAAgBC,OAAOtE;;;;QAIrHse,uBAAuBta,IAAIC,IAAI;kBAEzBhB;QACNsb,cAAcva,IAAIC,IAAI+f,kBAAkBC,eAAe7f,iBAAiBC,gBAAgBC,OAAOtE,cAAc;;UAE7GojB;aACKW;;;UAGDG,aAAajgB,IAAIC,WAAW2f,YAAYzG,WAAW;;;;aAKlDnZ,GAAGzL,SAASyL,GAAGzL,MAAMkrB,SAAS1f,GAAGxL,SAASwL,GAAGxL,MAAMkrB;gBAC9CS,aAAclgB,GAAG4G,SAAS0Y,cAActf,GAAGzL,OAAOorB;cACpDO;YACAD,aAAajgB,IAAIkgB,YAAY,MAAM/G,WAAW;;YAG9C32F,KAAK,sCAAsCokF,SAAS,UAAUA,OAAO;;mBAGpEkZ;;;UAGLG,aAAajgB,IAAI4G,QAAQiZ,cAAc1G,WAAW;;;;;EAKlEz2F,OAAOowE,OAAOqN,iBAAiBC,gBAAgBpB,YAAaqC,IAAIC,SAASR,IAAKp+E,QAAQ80F,cAAgBhU;WAC1FpG,WAAWj8B,UAAU++B,QAAQ2f,cAAcjZ,QAAQrS,SAAUzB;QACjE8T;MACA4Q,WAAWqI;;;QAGXrc,aAAa0b,mBAAmB3qB;MAChCijB,WAAWtX;UACP9C,YAAY;;iBACHn8E,IAAI,GAAGA,IAAIkgD,SAASjgD,QAAQD;UACjCqgF,QAAQngC,SAASlgD,IAAIk/E,iBAAiBC,gBAAgB,MAAMpB;;;;;EAK5EmD,MAAM8d;EACNxf,SAAS0f;;AAEb,sBAAsBrtB,OAAOmN,WAAW2c,eAAgB9b,IAAK6R,SAAUzQ,GAAGC,OAAQ0b,WAAW;;;MAErFA,aAAa;;IACblL,OAAO7f,MAAM+sB,cAAc5f,WAAW2c;;SAElCnvF,IAAIyyE,QAAQ9C,WAAWj8B,UAAUozB,SAAUzB;QAC7CstB,YAAYvC,aAAa;;MAE3BuC;IACAzN,OAAOllF,IAAIwyE,WAAW2c;;;;;OAKrBwD,aAAalB,mBAAmB3qB;;QAE7B6I,YAAY;;eACHn8E,IAAI,GAAGA,IAAIkgD,SAASjgD,QAAQD;QACjCkhF,KAAKhhC,SAASlgD,IAAIg/E,WAAW2c,cAAc;;;;;MAKnDwD;IACAzN,OAAOzS,QAAQD,WAAW2c;;;AAGlC,yBAAyBhjF,MAAMk5D,OAAOqN,iBAAiBC,gBAAgBrE,cAAciD,YAAa8B,IAAKv8E,aAAaR,YAAY47F,iBAAmB9L;QACzIjN,SAAU9T,MAAM8T,SAAS0Y,cAAcxsB,MAAMyB,OAAOorB;MACtD/Y;;;UAGMyZ,aAAazZ,OAAO0Z,QAAQ1Z,OAAOvsE;QACrCy4D,MAAMsK,YAAY;;UACd8hB,mBAAmBpsB,MAAMyB;QACzBzB,MAAMoN,SAAS2T,gBAAgBtvF,YAAYqV,OAAOk5D,OAAO/uE,WAAW6V,OAAOumE,iBAAiBC,gBAAgBrE,cAAciD;QAC1HlM,MAAM+sB,eAAeQ;;QAGrBvtB,MAAMoN,SAAS37E,YAAYqV;QAC3Bk5D,MAAM+sB,eAAehM,gBAAgBwM,YAAYvtB,OAAO8T,QAAQzG,iBAAiBC,gBAAgBrE,cAAciD;;MAEnH4H,OAAO0Z,OACHxtB,MAAM+sB,gBAAgBt7F,YAAYuuE,MAAM+sB;;;SAG7C/sB,MAAMoN,UAAU37E,YAAYuuE,MAAMoN;;;MAGvCqgB,WAAWb;MAEXc,aAAa;MACbC,aAAa;;;;AAInB,0BAA0Bp4F,MAAMq4F;SACrBC,aAAaH,YAAYn4F,MAAM,MAAMq4F,uBAAuBr4F;;MAEjEu4F,yBAAyB3K;;;;AAI/B,iCAAiChjB;MACzBJ,OAAO3pE,SAAS+pE;WACT0tB,aAAaH,YAAYvtB,WAAW,UAAUA;;;WAI7CA,aAAa2tB;;;;;;AAM7B,0BAA0Bv4F;SACfs4F,aAAaF,YAAYp4F;;;AAGpC,sBAAsBpI,MAAMoI,MAAMw4F,cAAc,MAAMH,qBAAqB;QACjEnuB,WAAW4J,4BAA4B0K;MACzCtU;UACMyK,YAAYzK,SAAStyE;;QAEvBA,SAASugG;YACHM,WAAW1S,iBAAiBpR;UAC9B8jB,aACCA,aAAaz4F,QACVy4F,aAAajuB,OAAOhkE,SAASxG,SAC7By4F,aAAajuB,OAAO3jE,WAAW2jE,OAAOhkE,SAASxG;eAC5C20E;;;UAGT11E;;IAGNivE,QAAQhE,SAAStyE,SAAS+8E,UAAU/8E,OAAOoI;IAEvCkuE,QAAQhE,SAASY,WAAWlzE,OAAOoI;SAClCf,OAAOo5F;;aAED1jB;;QAEP6jB,gBAAgBv5F;MAChB9E,MAAM,oBAAoBvC,KAAKqO,MAAM,IAAI,GAAG,IAAIjG,KAAK;;WAElDf;;IAGP9E,MAAM,SAASqwE,OAAO3jE,WAAWjP,KAAKqO,MAAM,IAAI,IAAI,MAC/C;;;AAGb,iBAAiByyF,UAAU14F;SACf04F,aACHA,SAAS14F,SACN04F,SAASluB,OAAOhkE,SAASxG,UACzB04F,SAASluB,OAAO3jE,WAAW2jE,OAAOhkE,SAASxG;;MAGjD+wE,WAAW6c,OAAO;MAClB5c,OAAO4c,OAAO;MACd3c,UAAU2c,OAAO;MACjB1c,SAAS0c,OAAO;;;;;;MAMhB5X;IACF2iB,eAAe;;;;;;;;;;;;;;;;;AAiBnB,mBAAmBC,kBAAkB;EACjC5iB,WAAW1/E,KAAMqiG,eAAeC,kBAAkB;;AAEtD;EACI5iB,WAAW7jE;EACXwmF,eAAe3iB,WAAWA,WAAWn9E,SAAS,MAAM;;;;;;IAMpDggG,cAAc;;;;;;;;;;;;;;;;;AAiBlB,0BAA0B96F;EACtB86F,eAAe96F;;;;;;;;;AASnB,qBAAqBnG,MAAMs0E,OAAOpzB,UAAUu8B,WAAW4B;QAC7CxM,QAAQwL,YAAYr+E,MAAMs0E,OAAOpzB,UAAUu8B,WAAW4B,cAAc;;EAE1ExM,MAAM0L,kBAAkBwiB,gBAAgBnuB,OAAO5lE;;EAE/C4vE;;;MAGIqkB,cAAc,KAAKF;IACnBA,aAAariG,KAAKm0E;;SAEfA;;AAEX,iBAAiB1sE;SACNA,QAAQA,MAAM+6F,gBAAgB,OAAO;;AAEhD,yBAAyBphB,IAAIC;MACrBA,GAAG5C,YAAY;EACfrF,mBAAmBh/D,IAAIinE,GAAG//E;;WAEnB;;SAEJ8/E,GAAG9/E,SAAS+/E,GAAG//E,QAAQ8/E,GAAG32E,QAAQ42E,GAAG52E;;IAE5Cg4F;;;;;;;AAOJ,4BAA4BC;EACxBD,uBAAuBC;;MAErBC,+BAA+B,IAAIn5E;SAC9Bo5E,gBAAiBH,uBAClBA,qBAAqBj5E,MAAMg0D,4BAC3Bh0D;;MAEJ87D,qBAAqB;MACrBud,eAAe,EAAGp4F,SAAUA,OAAO,OAAOA,MAAM;MAChDq4F,eAAe,EAAGxO;SACZA,OAAO,OACTpgB,OAAO3pE,SAAS+pF,QAAQrgB,WAAW8B,MAAMue,QAAQpgB,OAAO/kE,WAAWmlF;IAC7DhyF,GAAGk7E;IAA0Bwa,GAAG1D;MAClCA,MACJ;;MAEJ3U,cAAegjB;AAErB,sBAAsBrhG,MAAMs0E,QAAQ,MAAMpzB,WAAW,MAAMu8B,YAAY,GAAG4B,eAAe,MAAMoiB,cAAc;OACpGzhG,QAAQA,SAAS2gG;SACb3gG;MACDuC,MAAM,0CAA0CvC,KAAK;;IAEzDA,OAAOq5E;;MAEP4C,QAAQj8E;;;;UAIF0hG,SAAS7jB,WAAW79E,MAAMs0E,OAAO;QACnCpzB;MACAygD,kBAAkBD,QAAQxgD;;WAEvBwgD;;;MAGPnpB,iBAAiBv4E;IACjBA,OAAOA,KAAKw4E;;;MAGZlE;;QAEI3B,WAAWivB,QAAQttB,WAAU0P,qBAAqB1P;MAClDA,QAAQ1B,OAAOtlE,WAAWgnE;;SAExB0lB,OAAO6H,OAAO5H,SAAU3lB;QAC1ButB,UAAUjvB,OAAO3pE,SAAS44F;MAC1BvtB,MAAM0lB,QAAQpnB,OAAO7oE,eAAe83F;;QAEpCjvB,OAAOxpE,SAAS6wF;;;UAGZtnB,WAAWivB,QAAQ3H,WAAWrnB,OAAOrvE,QAAQ02F;QAC7CA,QAAQrnB,OAAOtlE,WAAW2sF;;MAE9B3lB,MAAM2lB,QAAQrnB,OAAO5pE,eAAeixF;;;;QAItC9c,YAAYvK,OAAO3pE,SAASjJ,QAC5B;EACA0/E,WAAW1/E,QACP;EACA++F,WAAW/+F,QACP;EACA4yE,OAAOxpE,SAASpJ,QACZ;EACA4yE,OAAO/kE,WAAW7N,QACd;EACA;MAClBm9E,YAAY;EAA8BxK,WAAWivB,QAAQ5hG;IAC7DA,OAAO2yE,WAAW+B,MAAM10E;IACxBuC,MAAM,yEACD,wEACA,oEACA,uBAAuB,uCAAuCvC;;QAEjE6yE;IACFquB,aAAa;KACZ;IAAwB;IACzBlhG;IACAs0E;IACAnrE,KAAKmrE,SAASitB,aAAajtB;IAC3B0e,KAAK1e,SAASktB,aAAaltB;IAC3BuH,SAASM;IACTL,cAAc;IACd56B,UAAU;IACV8xB,WAAW;IACX+N,UAAU;IACVE,WAAW;IACXC,YAAY;IACZjD,MAAM;IACNE,YAAY;IACZ3wE,IAAI;IACJyyE,QAAQ;IACR0G,QAAQ;IACRiZ,cAAc;IACdxM,aAAa;IACbjW;IACAM;IACA4B;IACAd,iBAAiB;IACjBrL,YAAY;;;MAGZL,MAAM1pE,QAAQ0pE,MAAM1pE;IACpB5G,MAAM,oDAAoDswE,MAAM7yE;;EAEpE2hG,kBAAkB9uB,OAAO3xB;;MAErBi8B,YAAY;;WACJ/hB,SAASigB,YAAaymB,0BAA0BjvB;IACxDA,MAAMoO,YAAY7lB;IAClByX,MAAMqO,aAAa7F;;MAEnB4lB,cAAc;GAEbQ;EAEDV;;;;EAKCtjB,YAAY,KAAKN,YAAY;;EAG9BM,cAAc;;IACdsjB,aAAariG,KAAKm0E;;SAEfA;;AAEX,oBAAoBA,OAAOkvB,YAAYC,WAAW;;;SAGtC1tB,OAAO0e,KAAKvV,WAAWv8B,YAAa2xB;QACtCovB,cAAcF,aAAaG,WAAW5tB,eAAaytB,cAAcztB;;IAEnE4sB,aAAa;KACZ;IAAwB;IACzBlhG,MAAM6yE,MAAM7yE;IACZs0E,OAAO2tB;IACP94F,KAAK84F,eAAeV,aAAaU;IACjCjP,KAAK+O,cAAcA,WAAW/O;;;IAItBgP,YAAYhP,MACNpgB,OAAOrvE,QAAQyvF,OACXA,IAAIxvF,OAAOg+F,aAAaO,gBACvB/O,KAAKwO,aAAaO,eACvBP,aAAaO,cACrB/O;IACNnX,SAAShJ,MAAMgJ;IACfC,cAAcjJ,MAAMiJ;IACpB56B,UAAUu8B,eAAe;IAAmB7K,OAAOrvE,QAAQ29C,YACrDA,SAASp+C,IAAIq/F,kBACbjhD;IACNylC,QAAQ9T,MAAM8T;IACdiZ,cAAc/sB,MAAM+sB;IACpBxM,aAAavgB,MAAMugB;IACnBjW,WAAWtK,MAAMsK;;;;;IAKjBM,WAAWskB,cAAclvB,MAAM7yE,SAASm5E,WAClCsE,eAAe;IACX;IACAA,YAAY;IAChBA;IACN4B,cAAcxM,MAAMwM;IACpBd,iBAAiB1L,MAAM0L;IACvBrL,YAAYL,MAAMK;IAClB+K,MAAMpL,MAAMoL;IACZE,YAAYtL,MAAMsL;;;;;IAKlBnL,WAAWH,MAAMG;IACjB+N,UAAUlO,MAAMkO;IAChBE,WAAWpO,MAAMoO,aAAapD,WAAWhL,MAAMoO;IAC/CC,YAAYrO,MAAMqO,cAAcrD,WAAWhL,MAAMqO;IACjD1zE,IAAIqlE,MAAMrlE;IACVyyE,QAAQpN,MAAMoN;;;;;;;AAOtB,wBAAwBpN;QACd6uB,SAAS7jB,WAAWhL;MACtBD,OAAOrvE,QAAQsvE,MAAM3xB;IACrBwgD,OAAOxgD,WAAW2xB,MAAM3xB,SAASp+C,IAAIq/F;;SAElCT;;;;;AAKX,yBAAyB1nC,OAAO,KAAKooC,OAAO;SACjC/jB,YAAYjF,MAAM,MAAMpf,MAAMooC;;;;;AAKzC,2BAA2BhnC,SAASinC;;;QAG1BxvB,QAAQwL,YAAY/E,QAAQ,MAAMle;EACxCyX,MAAMugB,cAAciP;SACbxvB;;;;;AAKX,4BAA4B7Y,OAAO;;AAGnCsoC,UAAU;SACCA,WACA9mB,aAAaI,YAAYvC,SAAS,MAAMrf,SACzCqkB,YAAYhF,SAAS,MAAMrf;;AAErC,wBAAwBgiB;MAChBA,SAAS,eAAeA,UAAU;;WAE3BqC,YAAYhF;aAEdzG,OAAOrvE,QAAQy4E;;WAEbqC,YAAYlF,UAAU,MAAM6C;oBAEvBA,UAAU;;;WAGfA,MAAMxuE,OAAO,OAAOwuE,QAAQ6B,WAAW7B;;;WAIvCqC,YAAYjF,MAAM,MAAMzxE,OAAOq0E;;;;AAI9C,wBAAwBA;SACbA,MAAMxuE,OAAO,OAAOwuE,QAAQ6B,WAAW7B;;AAElD,2BAA2BnJ,OAAO3xB;MAC1BlhD,OAAO;SACHm9E,aAActK;MAClB3xB,YAAY;IACZA,WAAW;aAEN0xB,OAAOrvE,QAAQ29C;IACpBlhD,OAAO;oBAEKkhD,aAAa;QACrBi8B,YAAY;IAAmBA,YAAY;;;YAErC5B,OAAOr6B,SAASvmB;UAClB4gD;;QAEAA,KAAKsB,MAAM1B,yBAAyB;QACpCwmB,kBAAkB9uB,OAAO0I;QACzBA,KAAKsB,MAAM1B,0BAA0B;;;;MAKzCn7E,OAAO;YACDuiG,WAAWrhD,SAASryC;WACrB0zF,eAAcve,qBAAqB9iC;QACpCA,SAASsuC,OAAOtT;iBAEXqmB,aAAa;MAAqBrmB;;;YAGnCA,yBAAyBrJ,MAAM4K,YAAY;;UAC3Cv8B,SAASryC,IAAI;UACbgkE,MAAM4K,aAAa;;UAGnBv8B,SAASryC,IAAI;;;;aAKpB+jE,OAAO/kE,WAAWqzC;IACvBA;MAAavmB,SAASumB;MAAUsuC,MAAMtT;;IACtCl8E,OAAO;;IAGPkhD,WAAWv5C,OAAOu5C;;QAEdi8B,YAAY;;MACZn9E,OAAO;MACPkhD,YAAYshD,gBAAgBthD;;MAG5BlhD,OAAO;;;EAGf6yE,MAAM3xB,WAAWA;EACjB2xB,MAAMsK,aAAan9E;;AAEvB,uBAAuBkoB;QACb1e,MAAMopE,OAAOtlE,WAAW4a,KAAK;WAC1BlnB,IAAI,GAAGA,IAAIknB,KAAKjnB,QAAQD;UACvByhG,UAAUv6E,KAAKlnB;eACVmI,OAAOs5F;UACVt5F,QAAQ;YACJK,IAAIwwF,UAAUyI,QAAQzI;UACtBxwF,IAAIwwF,QAAQpnB,OAAO7oE,gBAAgBP,IAAIwwF,OAAOyI,QAAQzI;;iBAGrD7wF,QAAQ;QACbK,IAAIywF,QAAQrnB,OAAO5pE,gBAAgBQ,IAAIywF,OAAOwI,QAAQxI;iBAEjDrnB,OAAOxlE,KAAKjE;cACXu5F,WAAWl5F,IAAIL;cACfw5F,WAAWF,QAAQt5F;YACrBu5F,aAAaC;UACbn5F,IAAIL,OAAOu5F,cACFl/F,OAAOk/F,UAAUD,QAAQt5F,QAC5Bw5F;;iBAGLx5F,QAAQ;QACbK,IAAIL,OAAOs5F,QAAQt5F;;;;SAIxBK;;AAGX,iBAAiBL,KAAKhD;OACbygF;;MAEGrkF,MAAM;;;QAINquF,WAAWhK,gBAAgBgK;;;;;;UAMzBgS,iBAAiBhc,gBAAgBvnF,UAAUunF,gBAAgBvnF,OAAOuxF;QACpEgS,mBAAmBhS;MACnBA,WAAWhK,gBAAgBgK,WAAW3qF,OAAOK,OAAOs8F;;;IAGxDhS,SAASznF,OAAOhD;;;AAGxB,gBAAgBgD,KAAK47E,cAAc8d,wBAAwB;;;QAGjDvwB,WAAWsU,mBAAmB1K;MAChC5J;;;;UAIMse,WAAWte,SAASjzE,UAAU,OAC9BizE,SAASO,MAAMK,cAAcZ,SAASO,MAAMK,WAAW0d,WACvDte,SAASjzE,OAAOuxF;QAClBA,aAAYznF,OAAOynF;;aAEZA,SAASznF;eAEXsR,UAAUxZ,SAAS;aACjB4hG,yBAAyBjwB,OAAO/kE,WAAWk3E,gBAC5CA,iBACAA;;MAGNxiF,MAAM,aAAaoF,OAAOwB,KAAK;;;IAInC5G,MAAM;;;AAId;QACU+C,QAAQW,OAAOK,OAAO;SACrB,CAACtG,MAAMmJ;QACN7D,MAAM6D;MACN5G,MAAM,EAAEvC,KAAK,aAAamJ,IAAI,0BAA0B7D,MAAM6D,KAAK;;MAGnE7D,MAAM6D,OAAOnJ;;;;IAIrB8iG,oBAAoB;AACxB,sBAAsBxwB,UAAUzgE,SAASkxF,mBAAmBC,oBAAoBC,sBAAsBvoB,UAAU;;EAG5Gp/C,QAAQF,SAAS8nE;EAEjB9kG,MAAM+kG,aAAa35E,UAAU45E,iBAAiBC,SAAShV,OAAOiV,cAActR,SAASuR,gBAAgBC,QAAQC;EAE7G9S,YAAYvoE;EAEZs7E,aAAaxT,SAASyT,cAAcxT,SAASyT,WAAWC,aAAaC,eAAeC,eAAeC,WAAWC,WAAWr+F,QAAQs+F,eAAeC,iBAAiBC;EAEjKC,UAAWxyF;QACL83E,aAAarX,SAASkB;QACtBgJ,MAAMlK,SAASkK;QACf8nB,eAAehyB,SAASY,WAAW53C;MACrCo/C,WAAW90E,UAAU0sE,SAAS1sE,WAAWgtE,OAAO3lE;IAChDqlE,SAAS1sE,SAASA;;;OAGjB80E;IACDooB,oBAAoB;IACpByB,aAAa,gBAAgB;IAA0B1yF,SAASygE,UAAUgyB;IAC1ExB,oBAAoB;;IAEpB0B,YAAYlyB,UAAUgyB,cAAcvB,cAAcC,eAAeC;;;MAGjEC;IACAuB,aAAanyB,UAAU4wB,gBAAgBH,cAAcC,eAAeC,iBAAiB;;;MAGrF3nE;IACAkpE,YAAYlyB,UAAUh3C,QAAQynE,cAAcC,eAAeC;;QAEzDyB,2BAA2BC;;WAEtB7qB,gBAAgBxH,SAASwH;QAC5BA;iBACW3wE,OAAO2wE;QACd4qB,yBAAyB;QAAqBv7F;;;;;;;;;;;;;;;;;;MAWtDs6F;QACI7wB,OAAOrvE,QAAQkgG;eACNziG,IAAI,GAAGA,IAAIyiG,cAAcxiG,QAAQD;cAChCmI,MAAMs6F,cAAcziG;QAC1Bw7E,IAAIrzE,OAAOq6F,OAAOr6F;;UAEdu7F,yBAAyB;UAAuBv7F;;;;iBAK7CA,OAAOs6F;cACR3e,MAAM2e,cAAct6F;YACtBypE,OAAOxpE,SAAS07E;UAChBtI,IAAIrzE,OAAOq6F,OAAO1e,IAAI7mB,QAAQ90D,KAAK27E,IAAInqD,SAAS;;UAGhD6hD,IAAIrzE,OAAOq6F,OAAO1e;;;UAGlB4f,yBAAyB;UAAuBv7F;;;;;MAK5Dk6F;eACWl6F,OAAOk6F;YACRuB,gBAAgBvB,QAAQl6F;UAC1BypE,OAAO/kE,WAAW+2F;;;;UAId3+F,OAAOC,eAAes2E,KAAKrzE;YACvBhD,OAAOy+F,cAAc/9C,KAAK8iC;YAC1Bh6E,cAAc;YACdC,YAAY;YACZi1F,UAAU;;;;UAIdH,yBAAyB;UAAyBv7F;;;QAItD5G,MAAM,UAAU4G,IAAI,qBAAqBy7F,cAAc,oCAClD;;;;OAIZlqB;QACGqoB,aAAa9hG;MACb8hG,aAAaxiG,QAAQ,AAAAukG,UAAUC,YAAYzyB,UAAUwyB,QAAQnb;;QAE7DwZ;;MAEA4B,YAAYzyB,UAAU6wB,aAAaxZ;;;YAG7Bqb,UAAUryB,WAAW+B,MAAMpC,SAASl0E;iBAC/B+K,OAAO67F;QACdN,yBAAyB;QAAmBv7F;;YAExCA,IAAI,OAAO,OAAOA,IAAI,OAAO;UAC7BlD,OAAOC,eAAes2E,KAAKrzE;YACvBwG,cAAc;YACdC,YAAY;YACZqJ,KAAK,MAAM+rF,QAAQ77F;YACnB4I,KAAK6gE,OAAO3lE;;;;;aAMvBk2F;IACLJ,aAAarkG,KAAKykG;;MAElBC;eACWj6F,OAAOi6F;YACRte,MAAMse,gBAAgBj6F;YACtB8P,MAAM25D,OAAO/kE,WAAWi3E,OACxBA,IAAIj+B,KAAK8iC,YAAYA,cACrB/W,OAAO/kE,WAAWi3E,IAAI7rE,OAClB6rE,IAAI7rE,IAAI4tC,KAAK8iC,YAAYA,cACzB/W,OAAO3lE;UACbgM,QAAQ25D,OAAO3lE;QACf1K,MAAM,qBAAqB4G,IAAI;;YAE7B4I,OAAO6gE,OAAO/kE,WAAWi3E,QAAQlS,OAAO/kE,WAAWi3E,IAAI/yE,OACvD+yE,IAAI/yE,IAAI80C,KAAK8iC,cACb;QACMpnF,MAAM,6CAA6C4G,IAAI;;YAG7D2F,IAAI0a;QACNvQ;QACAlH;;MAEJ9L,OAAOC,eAAes2E,KAAKrzE;QACvByG,YAAY;QACZD,cAAc;QACdsJ,KAAK,MAAMnK,EAAE3I;QACb4L,KAAK,AAAAvM,KAAMsJ,EAAE3I,QAAQX;;;QAGrBk/F,yBAAyB;QAA2Bv7F;;;;MAI5Dm6F;IACAN,cAActkG,KAAK4kG;;OAElB5oB,WAAWsoB,cAAc/hG;IAC1B+hG,cAAcziG,QAAQ,AAAA+iG;iBACPn6F,OAAOm6F;QACd2B,cAAc3B,aAAan6F,MAAMqzE,KAAKmN,YAAYxgF;;;;MAI1Do6F;IACAN,gBAAgBvkG,KAAK6kG;;OAEpB7oB,WAAWuoB,gBAAgBhiG;IAC5BgiG,gBAAgB1iG,QAAQ,AAAAgjG;YACd3S,WAAWhe,OAAO/kE,WAAW01F,kBAC7BA,eAAerlG,KAAKyrF,cACpB4Z;MACN2B,QAAQC,QAAQvU,UAAUrwF,QAAQ,AAAA4I;QAC9B6oF,QAAQ7oF,KAAKynF,SAASznF;;;;;;;MAO9BuxE;QACIiW;MACA/d,OAAOtlE,OAAOglE,SAASqe,eAClBre,SAASqe,aAAa/d,OAAOtlE,WAAWglE,SAAStyE,KAAK2wF,cAAcA;;QAEzEvoE;MACAwqD,OAAOtlE,OAAOglE,SAASlqD,eAClBkqD,SAASlqD,aAAawqD,OAAOtlE,WAAWglE,SAAStyE,KAAKooB,cAAcA;;;;OAI5EsyD;IACD6pB,aAAa,WAAW;IAAmB1yF,SAASygE,UAAUgyB;;MAE9DZ;IACAnc,cAAcmc,YAAY78C,KAAK8iC;;MAE/BuG;IACA1I,UAAU0I,QAAQrpC,KAAK8iC;;MAEvBga;IACAlc,eAAekc,aAAa98C,KAAK8iC;;MAEjCwG;IACAzI,UAAUyI,QAAQtpC,KAAK8iC;;MAEvBia;IACAwB,YAAYxB,UAAU/8C,KAAK8iC;;MAE3Bka;IACAwB,cAAcxB,YAAYh9C,KAAK8iC;;MAE/Bya;IACArc,gBAAgBqc,cAAcv9C,KAAK8iC;;MAEnCua;IACApc,gBAAgBoc,cAAcr9C,KAAK8iC;;MAEnCwa;IACAtc,kBAAkBsc,gBAAgBt9C,KAAK8iC;;MAEvCma;IACAvhG,MAAM;;MAENwhG;IACApc,gBAAgBoc,cAAcl9C,KAAK8iC;;MAEnCqa;IACAzhG,MAAM;;MAEN0hG;IACArc,YAAYqc,UAAUp9C,KAAK8iC;;MAE3B/W,OAAOrvE,QAAQ8gG;SACV3pB;UACG2pB,OAAOpjG;cACD01F,UAAUrkB,SAASqkB,YAAYrkB,SAASqkB,UAAUhkB,WAAW2yB;QACnEjB,OAAO9jG,QAAQ,AAAA4I;UACXwtF,QAAQxtF,OAAOwpE,WAAW4yB,MAAM5b,YAAYxgF;;kBAG1CmpE,SAASqkB;QACfrkB,SAASqkB,UAAU/jB,OAAO9lE;;;MAI9BvK,MAAM;;;;AAIlB,sBAAsB6F,MAAMpI,MAAM6R,SAASygE,UAAUgyB;WACxCtjG,IAAI,GAAGA,IAAIsjG,aAAarjG,QAAQD;IACrCwkG,4BAA4Bp9F,MAAMpI,MAAMskG,aAAatjG,IAAIsxE;;EAE7DkzB,4BAA4Bp9F,MAAMpI,MAAM6R,SAASygE;;AAErD,qCAAqClqE,MAAMpI,MAAM6R,SAASygE;SAC9Cl3C,SAASlQ,MAAMoQ,UAAWzpB;QAC5B4zF,WAAW5zF,QAAQzJ;MACrB8iB;IACAs6E,4BAA4Bp9F,MAAMpI,MAAMkrB,MAAMonD;;MAE9Ch3C;aACSt6B,IAAI,GAAGA,IAAIs6B,OAAOr6B,QAAQD;MAC/BwkG,4BAA4Bp9F,MAAMpI,MAAMs7B,OAAOt6B,IAAIsxE;;;MAGvDmzB;IACA5wB,2BAA2B4wB,SAAS5+C,KAAKyrB,SAASkB,QAAQlB,UAAUtyE;;;AAG5E,qBAAqBsyE,UAAUh3C,QAAQynE,cAAcC,eAAeC;WACvDjiG,IAAI,GAAGA,IAAIs6B,OAAOr6B,QAAQD;IAC/ByjG,aAAanyB,UAAUh3C,OAAOt6B,IAAI+hG,cAAcC,eAAeC,iBAAiB;;;AAGxF,qBAAqB3wB,UAAUwyB,QAAQnb;OAC9B/W,OAAO/kE,WAAWi3F;IACnBviG,MAAM,yCACD;;EAETugG,oBAAoB;QACd1kG,OAAO0mG,OAAO5mG,KAAKyrF,YAAYA;EACrCmZ,oBAAoB;MAChBlwB,OAAO7kE,UAAU3P;IACjBmE,MAAM,qEACD,mEACA;;OAEJqwE,OAAOxpE,SAAShL;IACjBmE,MAAM;aAED+vE,SAASl0E,SAASw0E,OAAO9lE;IAC9BwlE,SAASl0E,OAAOu0E,WAAW+yB,SAAStnG;;;IAIpCw0E,OAAOtlE,OAAOglE,SAASl0E,MAAMA;;;AAGrC,uBAAuBipB,KAAKm1D,KAAKmN,YAAYxgF;QACnCs/E,SAASt/E,IAAIoqB,SAAS,OACtBoyE,iBAAiBhc,YAAYxgF,OAC7B,MAAMwgF,WAAWxgF;MACnBypE,OAAO3pE,SAASoe;UACVmmD,UAAUgP,IAAIn1D;QAChBurD,OAAO/kE,WAAW2/D;MAClB6gB,MAAM5F,QAAQjb;;MAGdjrE,MAAM,0CAA0C8kB,IAAI,IAAImmD;;aAGvDoF,OAAO/kE,WAAWwZ;IACvBgnE,MAAM5F,QAAQphE,IAAIw/B,KAAK8iC;aAElB/W,OAAOxpE,SAASie;QACjBurD,OAAOrvE,QAAQ8jB;MACfA,IAAI9mB,QAAQ,AAAAm2F,KAAKuO,cAAcvO,GAAGla,KAAKmN,YAAYxgF;;YAG7CqkE,UAAUoF,OAAO/kE,WAAWwZ,IAAImmD,WAChCnmD,IAAImmD,QAAQ3mB,KAAK8iC,cACjBnN,IAAIn1D,IAAImmD;UACVoF,OAAO/kE,WAAW2/D;QAClB6gB,MAAM5F,QAAQjb,SAASnmD;;QAGvB9kB,MAAM,0CAA0C8kB,IAAImmD,QAAQ,IAAIA;;;;IAKxEjrE,MAAM,yBAAyB4G,IAAI,IAAIke;;;AAG/C,0BAA0Bm1D,KAAKopB;QACrBC,WAAWD,KAAK1hG,MAAM;SACrB;QACCkpE,MAAMoP;aACDx7E,IAAI,GAAGA,IAAI6kG,SAAS5kG,UAAUmsE,KAAKpsE;MACxCosE,MAAMA,IAAIy4B,SAAS7kG;;WAEhBosE;;;AAGf,8BAA8BkF;QACpBjrD,MAAMirD,SAAStyE;SACb8lG,UAAUxqE,QAAQF,SAAS8nE,kBAAmB77E;MAClDy+E,iBACOA;QACLxB,eAAehyB,SAASY,WAAW53C;OACpCgpE,aAAarjG,WAAWq6B,WAAW4nE,uBAC7B77E;QACLxV;EACNyyF,aAAa/jG,QAAQ,AAAA0hF,KAAK8jB,aAAal0F,SAASowE,GAAG3P;EACnDyzB,aAAal0F,SAASwV,KAAKirD;SACnBjrD,IAAIy+E,WAAWj0F;;AAE3B,sBAAsB2tF,IAAIvhC,MAAMqU;QACtB0zB,SAAS1zB,SAASY,WAAWC,OAAOsd;SAClCn1D,QAAQF,SAAS8nE,kBAAmBjlC;EAC5CilC,kBAAkB6C,aAAavG,IAAI0D,gBAAgB5wB;EACnDh3C,UACIA,OAAO/6B,QAAQ,AAAC0hF,KAAM8jB,aAAavG,IAAIvd,GAAG3P;aACnCnpE,OAAO80D;QACV+nC,UAAUpzB,OAAOjlE,OAAOq4F,QAAQ78F;MAChCq2F,GAAGr2F,OAAO68F,OAAO78F,KAAKq2F,GAAGr2F,MAAM80D,KAAK90D,MAAMmpE,SAASkB,OAAOrqE;;MAG1Dq2F,GAAGr2F,OAAO80D,KAAK90D;;;;;;;;;MAUrB88F,oBAAoB,AAACjlG;OAClBA,UACM;MACPklG,oBAAoBllG,WACbA,EAAE21F,UAAU31F,EAAE21F,UAAU31F,EAAEwyE;SAC9ByyB,kBAAkBjlG,EAAE3B;;MAEzB8mG,sBAAsBvzB,OAAOtlE,OAAOrH,OAAOK,OAAO;EACpD8/F,GAAG,AAAAplG,KAAKA;EACRqlG,KAAK,AAAArlG,KAAKA,EAAE6xE,MAAMrlE;EAClB84F,OAAO,AAAAtlG,KAAKA,EAAE5C;EACdmoG,QAAQ,AAAAvlG,KAAM2xE,WAAW6zB,gBAAgBxlG,EAAEszE;EAC3CmyB,QAAQ,AAAAzlG,KAAM2xE,WAAW6zB,gBAAgBxlG,EAAE0vE;EAC3Cg2B,QAAQ,AAAA1lG,KAAM2xE,WAAW6zB,gBAAgBxlG,EAAEo6E;EAC3CurB,OAAO,AAAA3lG,KAAM2xE,WAAW6zB,gBAAgBxlG,EAAE81F;EAC1C8P,SAAS,AAAA5lG,KAAKilG,kBAAkBjlG,EAAE3B;EAClCwnG,OAAO,AAAA7lG,KAAKilG,kBAAkBjlG,EAAEN;EAChComG,OAAO,AAAA9lG,KAAKA,EAAEk4E;EACd6tB,UAAU,AAAA/lG,KAAMgmG,qBAAqBhmG;EACrCimG,cAAc,AAAAjmG,KAAK,MAAM63E,SAAS73E,EAAE28D;EACpCupC,WAAW,AAAAlmG,KAAKmmG,SAAStgD,KAAK7lD,EAAEwyE;EAChC4zB,QAAQ,AAAApmG,KAAMqmG,cAAcxgD,KAAK7lD;;MAE/BsmG;EACFruF,KAAMpK,GAAGyjE,WAAYnpE;WACTqzE,KAAKS,YAAY7+E,MAAMk2E,OAAOizB,aAAavnG,MAAMkzE,cAAeZ;;QAEpEnpE,QAAQ;;aACD;;;QAGPA,QAAQ;aACD;;;;;;;;QAQPq+F;QACAr+F,IAAI,OAAO;YACL2G,IAAIy3F,YAAYp+F;UAClB2G,MAAMlR;gBACEkR;eACC;;mBACMmtE,WAAW9zE;eACjB;;mBACM/K,KAAK+K;eACX;;mBACMqzE,IAAIrzE;eACV;;mBACMmrE,MAAMnrE;;iBAIhB8zE,eAAerK,OAAO9lE,aAAa8lE,OAAOjlE,OAAOsvE,YAAY9zE;QAClEo+F,YAAYp+F,OAAO;eACZ8zE,WAAW9zE;iBAEb/K,SAASw0E,OAAO9lE,aAAa8lE,OAAOjlE,OAAOvP,MAAM+K;QACtDo+F,YAAYp+F,OAAO;eACZ/K,KAAK+K;;;OAKfq+F,kBAAkBl1B,SAASwH,aAAa,OACrClH,OAAOjlE,OAAO65F,iBAAiBr+F;QAC/Bo+F,YAAYp+F,OAAO;eACZmrE,MAAMnrE;iBAERqzE,QAAQ5J,OAAO9lE,aAAa8lE,OAAOjlE,OAAO6uE,KAAKrzE;QACpDo+F,YAAYp+F,OAAO;eACZqzE,IAAIrzE;iBAEN25F;QACLyE,YAAYp+F,OAAO;;;UAGrBs+F,eAAetB,oBAAoBh9F;QACrCu+F,WAAWlX;;QAEXiX;UACIt+F,QAAQ;QACRwpE,WAAWg1B,MAAMr1B,UAAU;QAAiBnpE;QAC5Cm0E;;aAEGmqB,aAAan1B;;KAIvBo1B,YAAY1nG,KAAK4nG,kBACbF,YAAYA,UAAUv+F;aAChBu+F;eAEFlrB,QAAQ5J,OAAO9lE,aAAa8lE,OAAOjlE,OAAO6uE,KAAKrzE;;MAEpDo+F,YAAYp+F,OAAO;aACZqzE,IAAIrzE;;KAIbqnF,mBAAmBtd,WAAWC,OAAOqd,kBACnC5d,OAAOjlE,OAAO6iF,kBAAkBrnF;aACzBqnF,iBAAiBrnF;eAEnB+yE,8BACHtJ,OAAO3pE,SAASE;;IAGdA,IAAIjK,QAAQ,WAAW;UACvBd,SAASw0E,OAAO9lE,cACf3D,IAAI,OAAO,OAAOA,IAAI,OAAO,QAC9BypE,OAAOjlE,OAAOvP,MAAM+K;QACpB5G,MAAM,WAAWzC,KAAKqM,UAAUhD,KAAK,mEAChC;iBAEAmpE,aAAa4J;QAClB35E,MAAM,WAAWzC,KAAKqM,UAAUhD,KAAK,iCAChC;;;;EAIjB4I,KAAMlD,GAAGyjE,WAAYnpE,KAAKhD;WACd/H,MAAM6+E,YAAYT,OAAQlK;QAC9B2K,eAAerK,OAAO9lE,aAAa8lE,OAAOjlE,OAAOsvE,YAAY9zE;MAC7D8zE,WAAW9zE,OAAOhD;eAEb/H,SAASw0E,OAAO9lE,aAAa8lE,OAAOjlE,OAAOvP,MAAM+K;MACtD/K,KAAK+K,OAAOhD;eAEPysE,OAAOjlE,OAAO2kE,SAASgC,OAAOnrE;MACnC5G,MAAM,6BAA6B4G,IAAI,yBAAyBmpE;aACzD;;QAEPnpE,IAAI,OAAO,QAAOA,IAAIkF,MAAM,MAAMikE;MAClC/vE,MAAM,wCAAwC4G,IAAI,QACzC,wDAAwDmpE;aAC1D;;WAGHnpE,OAAOmpE,SAASY,WAAWC,OAAOqd;QAClCvqF,OAAOC,eAAes2E,KAAKrzE;UACvByG,YAAY;UACZD,cAAc;UACdxJ;;;QAIJq2E,IAAIrzE,OAAOhD;;;WAGZ;;EAEX2S,KAAMjK,IAAKzQ,MAAM6+E,YAAYsqB,aAAa/qB,KAAKtJ,YAAY4G,gBAAkB3wE;QACrEq+F;WACID,YAAYp+F,SAASvK,aACxBR,SAASw0E,OAAO9lE,aAAa8lE,OAAOjlE,OAAOvP,MAAM+K,QACjD8zE,eAAerK,OAAO9lE,aAAa8lE,OAAOjlE,OAAOsvE,YAAY9zE,SAC5Dq+F,kBAAkB1tB,aAAa,OAAOlH,OAAOjlE,OAAO65F,iBAAiBr+F,QACvEypE,OAAOjlE,OAAO6uE,KAAKrzE,QACnBypE,OAAOjlE,OAAOw4F,qBAAqBh9F,QACnCypE,OAAOjlE,OAAOulE,WAAWC,OAAOqd,kBAAkBrnF;;;;EAI1Dm+F,4BAA4BnC,UAAU,AAACxe;IACnCpkF,MAAM,8EACD;WACE2iG,QAAQC,QAAQxe;;;MAGzBkhB,6CAA6Cj1B,OAAOtlE,WAAWg6F;EACjEruF,IAAI0tE,QAAQx9E;;QAEJA,QAAQ6sF,OAAO8R;;;WAGZR,4BAA4BruF,IAAI0tE,QAAQx9E,KAAKw9E;;EAExD7tE,IAAIjK,GAAG1F;UACG2P,MAAM3P,IAAI,OAAO,QAAQypE,OAAO/rE,sBAAsBsC;SACvD2P,OAAOwuF,4BAA4BxuF,IAAIjK,GAAG1F;MAC3C5G,MAAM,WAAWzC,KAAKqM,UAAUhD,KAAK;;WAElC2P;;;;;;AAMf,6BAA6Bw5D;QACnBqU;;EAEN1gF,OAAOC,eAAeygF,SAAS;IAC3Bh3E,cAAc;IACdC,YAAY;IACZqJ,KAAK,MAAMq5D;;;EAGfrsE,OAAO2F,KAAKu6F,qBAAqB5lG,QAAQ,AAAA4I;IACrClD,OAAOC,eAAeygF,QAAQx9E;MAC1BwG,cAAc;MACdC,YAAY;MACZqJ,KAAK,MAAMktF,oBAAoBh9F,KAAKmpE;;;MAGpCvgE,KAAK6gE,OAAO3lE;;;;SAIZujF,oBAAqBle,SAASY,WAAWC;EACjDltE,OAAO2F,KAAK4kF,kBAAkBjwF,QAAQ,AAAA4I;IAClClD,OAAOC,eAAeygF,QAAQx9E;MAC1BwG,cAAc;MACdC,YAAY;MACZqJ,KAAK,MAAMu3E,iBAAiBrnF;MAC5B4I,KAAK6gE,OAAO3lE;;;SAGb05E;;;AAGX,oCAAoCrU;SACxBkK,KAAK1C,eAAeA,iBAAkBxH;MAC1CwH;IACA7zE,OAAO2F,KAAKkuE,cAAcv5E,QAAQ,AAAA4I;MAC9BlD,OAAOC,eAAes2E,KAAKrzE;QACvByG,YAAY;QACZD,cAAc;QACdsJ,KAAK,MAAMq5D,SAASgC,MAAMnrE;QAC1B4I,KAAK6gE,OAAO3lE;;;;;;AAM5B,yCAAyCqlE;SAC7BkK,KAAKS,cAAe3K;EAC5BrsE,OAAO2F,KAAK+mE,WAAW+B,MAAMuI,aAAa18E,QAAQ,AAAA4I;QAC1CA,IAAI,OAAO,OAAOA,IAAI,OAAO;MAC7B5G,MAAM,0BAA0BzC,KAAKqM,UAAUhD,KAAK,uCAC/C;;;IAGTlD,OAAOC,eAAes2E,KAAKrzE;MACvByG,YAAY;MACZD,cAAc;MACdsJ,KAAK,MAAMgkE,WAAW9zE;MACtB4I,KAAK6gE,OAAO3lE;;;;MAKlB86F,kBAAkBhX;IACpBiX,QAAQ;AACZ,iCAAiCn1B,OAAOxzE,QAAQ0hF;QACtC/gF,OAAO6yE,MAAM7yE;;QAEbkzE,cAAc7zE,SAASA,OAAO6zE,aAAaL,MAAMK,eAAe60B;QAChEz1B;IACFqH,KAAKquB;IACLn1B;IACA7yE;IACAX;IACA6zE;IACAxyE,MAAM;IACNguB,MAAM;IACN+wD,SAAS;IACT9hB,QAAQ;IACR/3D,QAAQ;IACR4tE,OAAO;IACPmjB,SAAS;IACT3Z,WAAW;IACX6E,SAAS;IACT+O,UAAUvxF,SAASA,OAAOuxF,WAAW3qF,OAAOK,OAAO4sE,WAAW0d;IAC9D2W,aAAa;IACb7uB;;IAEAiY,YAAY;IACZvoE,YAAY;;IAEZ0xD,cAAcqL,sBAAsBnlF,MAAMkzE;IAC1C2G,cAAcoB,sBAAsBj7E,MAAMkzE;;IAE1CgG,MAAM;IACNsB,SAAS;;IAETyJ,eAAerR,OAAO9lE;;IAEtB0vE,KAAK5J,OAAO9lE;IACZ1O,MAAMw0E,OAAO9lE;IACbwnE,OAAO1B,OAAO9lE;IACd4jE,OAAOkC,OAAO9lE;IACdsuE,OAAOxI,OAAO9lE;IACdgqF,MAAMlkB,OAAO9lE;IACbmwE,YAAYrK,OAAO9lE;IACnBm7F,cAAc;;IAEdlnB;IACAoC,YAAYpC,WAAWA,SAASa,YAAY;IAC5CqB,UAAU;IACVG,eAAe;;;IAGfmG,WAAW;IACXpH,aAAa;IACbwL,eAAe;IACfua,IAAI;IACJp5F,GAAG;IACH0sF,IAAI;IACJvZ,GAAG;IACH0Z,IAAI;IACJC,GAAG;IACHxa,IAAI;IACJid,KAAK;IACLrQ,IAAI;IACJ9iF,GAAG;IACHqrF,KAAK;IACLD,KAAK;IACLnhB,IAAI;;;IAGJ7C,SAASkK,MAAM2rB,oBAAoB71B;;EAEvCA,SAAS5xE,OAAOrB,SAASA,OAAOqB,OAAO4xE;EACvCA,SAAS4G,OAAOA,KAAKryB,KAAK,MAAMyrB;SACzBA;;IAEPsU,kBAAkB;MAChBoE,qBAAqB,MAAMpE,mBAAmB1K;MAC9C8I,qBAAqB,AAAC1S;EACxBsU,kBAAkBtU;;MAEhB81B,4BAA6Bx1B,OAAO9rE,QAAQ;AAClD,+BAA+BsB,MAAM+qE;QAC3Bk1B,iBAAiBl1B,OAAOmd,eAAe1d,OAAO1lE;MAChDk7F,aAAahgG,SAASigG,eAAejgG;IACrC7F,KAAK,oEAAoE6F;;;AAGjF,6BAA6BkqE;SAClBA,SAASO,MAAMsK,YAAY;;IAElCkK,wBAAwB;AAC5B,wBAAwB/U,UAAUyR,QAAQ;EACtCsD,wBAAwBtD;SAChBzP,OAAOpzB,YAAaoxB,SAASO;QAC/BiR,aAAaoiB,oBAAoB5zB;EACvCg2B,UAAUh2B,UAAUgC,OAAOwP,YAAYC;EACvC2L,UAAUpd,UAAUpxB;QACdqnD,cAAczkB,aACd0kB,uBAAuBl2B,UAAUyR,SACjCnlF;EACNyoF,wBAAwB;SACjBkhB;;AAEX,gCAAgCj2B,UAAUyR;QAChChH,YAAYzK,SAAStyE;;QAEnB+8E,UAAU30E;MACVqpF,sBAAsB1U,UAAU30E,MAAMkqE,SAASY,WAAWC;;QAE1D4J,UAAU4T;YACJlwB,QAAQx6D,OAAO2F,KAAKmxE,UAAU4T;eAC3B3vF,IAAI,GAAGA,IAAIy/D,MAAMx/D,QAAQD;QAC9BywF,sBAAsBhxB,MAAMz/D,IAAIsxE,SAASY,WAAWC;;;QAGxD4J,UAAU30D;YACJq4C,QAAQx6D,OAAO2F,KAAKmxE,UAAU30D;eAC3BpnB,IAAI,GAAGA,IAAIy/D,MAAMx/D,QAAQD;QAC9B0wF,sBAAsBjxB,MAAMz/D;;;;;;EAKxCsxE,SAASi1B,cAActhG,OAAOK,OAAO;;;EAGrCgsE,SAASkB,YAAYi1B,MAAMn2B,SAASkK,KAAK8qB;;IAErCoB,2BAA2Bp2B;;;;SAGvByY,SAAUhO;MACdgO;UACMkd,eAAgB31B,SAAS21B,eAC3Bld,MAAM9pF,SAAS,IAAI0nG,mBAAmBr2B,YAAY;IACtDsU,kBAAkBtU;IAClBK,WAAWI;UACLw1B,cAAch1B,sBAAsBwX,OAAOzY,UAAU;KAAyBK,WAAW6zB,gBAAgBl0B,SAASgC,QAAS2zB;IACjIt1B,WAAWiB;IACXgT,kBAAkB;QACdhU,OAAO7kE,UAAUw6F;UACbxkB;;eAEOwkB,YACFv6F,KAAK,AAAC46F;UACPvlB,kBAAkB/Q,UAAUs2B,gBAAgB7kB;WAE3C91E,MAAM,AAAA5L;UACPuyE,YAAYvyE,GAAGiwE,UAAU;;;;;QAM7BA,SAAS2Q,WAAWslB;;;MAIxBllB,kBAAkB/Q,UAAUi2B,aAAaxkB;;;IAI7C8kB,qBAAqBv2B,UAAUyR;;;AAGvC,2BAA2BzR,UAAUi2B,aAAaxkB;MAC1CnR,OAAO/kE,WAAW06F;;QAEdj2B,SAAStyE,KAAK8oG;;;MAGdx2B,SAASy2B,YAAYR;;MAGrBj2B,SAAS1sE,SAAS2iG;;aAGjB31B,OAAOxpE,SAASm/F;QACjBtsB,QAAQssB;MACRhmG,MAAM,iDACD;;;;;MAKL+vE,SAAS02B,wBAAwBT;;IAErCj2B,SAAS2K,aAAatK,WAAW2yB,UAAUiD;;MAEvCU,gCAAgC32B;;aAG/Bi2B,gBAAgB3pG;IACrB2D,MAAM,6CAA6CgmG,gBAAgB,OAAO,gBAAgBA,YAAY;;EAE1GM,qBAAqBv2B,UAAUyR;;IAE/BmlB;;MAEEC,gBAAgB,OAAOD;;;;;AAK7B,iCAAiCE;EAC7BF,UAAUE;;AAEd,8BAA8B92B,UAAUyR;QAC9BhH,YAAYzK,SAAStyE;;MAEvB+jF;;;;;;IAMAzR,SAAS1sE,SAAU0sE,SAAS1sE,UACxBm3E,UAAUn3E,UACVgtE,OAAO3lE;cAELqlE,SAAS1sE;;QAEXsjG,WAAWnsB,UAAUnpE,aAAampE,UAAUn3E;;QAExCs1F,aAAa5oB,WAAW;;MAE5ByK,UAAUn3E,SAASsjG,QAAQnsB,UAAUnpE;QACjC88E,iBAAiBpe,SAASY,WAAWC,OAAOud;QAC5C2Y,YAAYtsB,UAAUssB;;;QAGtBjO,WAAW9oB,WAAW;;;IAG9BA,SAAS1sE,SAAUm3E,UAAUn3E,UAAUgtE,OAAO3lE;;;;QAI1CqlE,SAAS1sE,OAAO0jG;MAChBh3B,SAAS0K,gBAAgByrB,MAAMn2B,SAASkK,KAAKqrB;;;;;IAKjDjhB,kBAAkBtU;IAClBK,WAAWI;IACX0xB,aAAanyB,UAAUyK;IACvBpK,WAAWiB;IACXgT,kBAAkB;;;;;;OAIjB7J,UAAUn3E,UAAU0sE,SAAS1sE,WAAWgtE,OAAO3lE,SAAS82E;;SAEpDmlB,WAAWnsB,UAAUnpE;MACtBrR,MAAM,4CACD,+DACC;;MAGNA,MAAM;;;;MAIZgnG;EACFtwF,KAAK,CAAC0tE,QAAQx9E;;MAENm0E;;WAEGqJ,OAAOx9E;;EAElB4I,KAAK;IACDxP,MAAM;WACC;;EAEXinG,gBAAgB;IACZjnG,MAAM;WACC;;;AAGf,4BAA4B+vE;QAClB+xB,SAAS,AAAA1N;QACPrkB,SAASqkB;MACTp0F,MAAM;;IAEV+vE,SAASqkB,UAAUhkB,WAAW2yB,UAAU3O;;;;;WAKjC1wF,OAAO8G;UACN2jE;mBACW+3B,MAAMn2B,SAAS5B,OAAO64B;;UAEjCnuB;eACOzI,WAAW6zB,gBAAgBl0B,SAAS8I;;UAE3ClC;eACO,CAACr5E,UAAUqoB,SAASoqD,SAAS4G,KAAKr5E,UAAUqoB;;MAEvDm8E;;;;;;AAMZ,mCAAmCrc,QAAQ1V,WAAWsU;MAC9CtU;KACCA,SAASuP,YAAYvP,SAASuP,eAAenjF,KAAKspF;;;MAGrDyhB,aAAa;MACbC,WAAW,AAACtjG,OAAQA,IAAI6E,QAAQw+F,YAAY,AAAA36F,KAAKA,EAAEC,eAAe9D,QAAQ,SAAS;AACzF,0BAA0B8xE;SACfnK,OAAO/kE,WAAWkvE,aACnBA,UAAU4sB,eAAe5sB,UAAU30E,OACnC20E,UAAU30E;;;AAGpB,6BAA6BkqE,UAAUyK,WAAW3I,SAAS;MACnDhsE,OAAO+lF,iBAAiBpR;OACvB30E,QAAQ20E,UAAU6sB;UACbp/F,QAAQuyE,UAAU6sB,OAAOp/F,MAAM;QACjCA;MACApC,OAAOoC,MAAM;;;OAGhBpC,QAAQkqE,YAAYA,SAASjzE;;UAExBwqG,oBAAoB,AAAC/I;iBACZ33F,OAAO23F;YACVA,SAAS33F,SAAS4zE;iBACX5zE;;;;IAInBf,OACIyhG,kBAAkBv3B,SAASqe,cACvBre,SAASjzE,OAAOW,KAAK2wF,eAAekZ,kBAAkBv3B,SAASY,WAAWyd;;SAE/EvoF,OAAOshG,SAASthG,QAAQgsE,UAAU,QAAQ;;AAErD,0BAA0BjuE;SACfysE,OAAO/kE,WAAW1H,WAAU,eAAeA;;AAGtD,kBAAkB2jG;QACRh7F,IAAI6jE,WAAWnpD,SAASsgF;EAC9BpgB,0BAA0B56E,EAAEk5E;SACrBl5E;;;AAIX;;IAEQvM,MAAM,wEACD,wEACA;;SAEF;;;AAGX;;IAEQA,MAAM,uEACD,wEACA;;SAEF;;AAEX;QACUvB,IAAIgqF;OACLhqF;IACDuB,MAAM;;SAEHvB,EAAEinG,iBAAiBjnG,EAAEinG,eAAeU,mBAAmB3nG;;;AAIlE,WAAWhB,MAAM+pG,iBAAiB7oD;QACxB0uB,IAAIn1D,UAAUxZ;MAChB2uE,MAAM;QACFgD,OAAOxpE,SAAS2gG,qBAAqBn3B,OAAOrvE,QAAQwmG;;UAEhD9tB,QAAQ8tB;eACD1rB,YAAYr+E,MAAM,OAAO+pG;;;aAG7B1rB,YAAYr+E,MAAM+pG;;;aAIlB1rB,YAAYr+E,MAAM,MAAM+pG;;;QAI/Bn6B,IAAI;MACJ1uB,WAAW59C,MAAMoK,UAAUW,MAAMnQ,KAAKuc,WAAW;eAE5Cm1D,MAAM,KAAKqM,QAAQ/6B;MACxBA,YAAYA;;WAETm9B,YAAYr+E,MAAM+pG,iBAAiB7oD;;;MAI5C8oD,gBAAgBhU,QAAQ;MACxBiU,gBAAgB;;UAERztB,MAAMgnB,OAAOwG;SACdxtB;MACDj6E,MAAM,mEACD;;WAEFi6E;;;AAIf;;aAEer7E,WAAW;;;QAGhB+oG;IAAajQ,OAAO;;QACpBkQ;IAAgBlQ,OAAO;;QACvBmQ;IAAgBnQ,OAAO;;QACvBoQ;IAAiBpQ,OAAO;;;;QAGxBqQ;IACFC,OAAO76F;;WAEEkjE,OAAOxpE,SAASsG;eACV;;UAEPA,IAAI86F;gBACI,OAAON,WAAW;iBAErBv3B,WAAW8B,MAAM/kE;gBAElB,YAEC,QAAQw6F,UAAUO,WAAW/6F,OAC9B,KACAg7F,YAAYh7F,IAAIvJ,SACf;iBAGAwsE,WAAWiW,WAAWl5E;gBAEvB,YAEC,QAAQw6F,UAAU,aACnB,KACAQ,YAAYh7F,OACX,GAAGijE,WAAWg4B,WAAWj7F,QAAQ,gBAAgB,EAAE;iBAGnDijE,WAAWg4B,WAAWj7F;gBAEvB,YAEC,QAAQw6F,UAAU,aACnB,KACAQ,YAAYh7F,MACZ;;aAGD;;IAEXqlD,QAAQrlD;aACGA,OAAOA,IAAI86F;;IAEtBtoG,KAAKwN;UACGA,OAAOA,IAAI86F;gBAEP,cAEGI,eAAel7F,IAAI02F;;;;EAKtC,wBAAwB9zB;UACdu4B;QACFv4B,SAAStyE,KAAKs0E,SAAShC,SAASgC;MAChCu2B,OAAOnsG,KAAKosG,oBAAoB,SAASn4B,WAAW+B,MAAMpC,SAASgC;;QAEnEhC,SAAS2K,eAAerK,OAAO9lE;MAC/B+9F,OAAOnsG,KAAKosG,oBAAoB,SAASx4B,SAAS2K;;QAElD3K,SAASl0E,SAASw0E,OAAO9lE;MACzB+9F,OAAOnsG,KAAKosG,oBAAoB,QAAQn4B,WAAW+B,MAAMpC,SAASl0E;;UAEhEorB,WAAWuhF,YAAYz4B,UAAU;QACnC9oD;MACAqhF,OAAOnsG,KAAKosG,oBAAoB,YAAYthF;;UAE1CylE,WAAW8b,YAAYz4B,UAAU;QACnC2c;MACA4b,OAAOnsG,KAAKosG,oBAAoB,YAAY7b;;IAEhD4b,OAAOnsG,MACH,YAGI;MAEIu7F,OAAOoQ,aAAapQ,QAAQ;OAEhC,oBAEH;MAAY76C,QAAQkzB;;WAElBu4B;;EAEX,6BAA6B7qG,MAAM2mF;IAC/BA,SAAS/T,OAAOtlE,WAAWq5E;SACtB1gF,OAAO2F,KAAK+6E,QAAQ1lF;cACb;;YAGR;MACEg5F,OAAO;QAEL;MAEIA,OAAO;OAEXj6F,QAGA;MAEIi6F,OAAO;UAERh0F,OAAO2F,KAAK+6E,QAAQ7jF,IAAI,AAAAqG;cAEnB,YAEC,QAAQkhG,cAAclhG,MAAM,OAC7BuhG,YAAY/jB,OAAOx9E,MAAM;;;EAM7C,qBAAqB3D,GAAGwlG,QAAQ;eACjBxlG,MAAM;cACL,QAAQ2kG,aAAa3kG;sBAEjBA,MAAM;cACV,QAAQ4kG,aAAatqG,KAAKqM,UAAU3G;sBAEhCA,MAAM;cACV,QAAQ6kG,cAAc7kG;eAEzBotE,OAAOxpE,SAAS5D;cACb;QAAY45C,QAAQ4rD,QAAQr4B,WAAW+B,MAAMlvE,KAAKA;;;cAGlD,QAAQ4kG,aAAaziG,OAAOnC;;;EAG5C,qBAAqB8sE,UAAUtyE;UACrBirG,OAAO34B,SAAStyE;QAClB4yE,OAAO/kE,WAAWo9F;;;UAGhBC;eACK/hG,OAAOmpE,SAASkK;UACnB2uB,YAAYF,MAAM9hG,KAAKnJ;QACvBkrG,UAAU/hG,OAAOmpE,SAASkK,IAAIrzE;;;WAG/B+hG;;EAEX,qBAAqBD,MAAM9hG,KAAKnJ;UACtBs4D,OAAO2yC,KAAKjrG;QACb4yE,OAAOrvE,QAAQ+0D,SAASA,KAAK/kC,SAASpqB,QACtCypE,OAAOxpE,SAASkvD,UAASnvD,OAAOmvD;aAC1B;;QAEP2yC,KAAK7vE,WAAW+vE,YAAYF,KAAK7vE,SAASjyB,KAAKnJ;aACxC;;QAEPirG,KAAK3vE,UAAU2vE,KAAK3vE,OAAO/1B,KAAK,AAAA08E,KAAKkpB,YAAYlpB,GAAG94E,KAAKnJ;aAClD;;;EAGf,oBAAoBwF;QACZA,EAAEmjF;cACM;;QAERnjF,EAAEwiF;cACM;;YAEJ;;MAER7mF,OAAOiqG;IACPjqG,OAAOiqG,mBAAmB1sG,KAAK4rG;;IAG/BnpG,OAAOiqG,sBAAsBd;;;;;;AAOrC,oBAAoBtjG,QAAQqkG;MACpB7hG;MACAopE,OAAOrvE,QAAQyD,WAAW4rE,OAAO3pE,SAASjC;IAC1CwC,UAAUlG,MAAM0D,OAAO/F;aACdD,IAAI,GAAG4uE,IAAI5oE,OAAO/F,QAAQD,IAAI4uE,GAAG5uE;MACtCwI,IAAIxI,KAAKqqG,WAAWrkG,OAAOhG,IAAIA;;oBAGvBgG,WAAW;SAClBk1D,OAAOovC,UAAUtkG;MAClBzE,MAAM,kDAAkDyE,OAAO;;;IAGnEwC,UAAUlG,MAAM0D;aACPhG,IAAI,GAAGA,IAAIgG,QAAQhG;MACxBwI,IAAIxI,KAAKqqG,WAAWrqG,IAAI,GAAGA;;aAG1B4xE,OAAOxpE,SAASpC;QACjBA,OAAOgvF,OAAO12B;MACd91D,MAAMlG,MAAM26D,KAAKj3D,QAAQqkG;;YAGnBz/F,OAAO3F,OAAO2F,KAAK5E;MACzBwC,UAAUlG,MAAMsI,KAAK3K;eACZD,IAAI,GAAG4uE,IAAIhkE,KAAK3K,QAAQD,IAAI4uE,GAAG5uE;cAC9BmI,MAAMyC,KAAK5K;QACjBwI,IAAIxI,KAAKqqG,WAAWrkG,OAAOmC,MAAMA,KAAKnI;;;;IAK9CwI;;SAEGA;;;;;;AAOX,oBAAoBkG;QACVlG;OACDopE,OAAOxpE,SAASsG;IACjBnN,MAAM;WACCiH;;aAEAL,OAAOuG;IACdlG,IAAIopE,OAAOzjE,aAAahG,QAAQuG,IAAIvG;;SAEjCK;;;;;;AAOX,qBAAqB4xE,OAAOmwB;WACfvqG,IAAI,GAAGA,IAAIuqG,aAAatqG,QAAQD;UAC/Bu6E,OAAOgwB,aAAavqG;;QAEtB4xE,OAAOrvE,QAAQg4E;eACNj0E,IAAI,GAAGA,IAAIi0E,KAAKt6E,QAAQqG;QAC7B8zE,MAAMG,KAAKj0E,GAAGc,QAAQmzE,KAAKj0E,GAAG7I;;eAG7B88E;;MAELH,MAAMG,KAAKnzE,QAAQmzE,KAAK98E;;;SAGzB28E;;;MAILnC,UAAU;MACVuyB;EACFxQ;EACAG;EACAM;EACA9e;EACAV;EACAoB;;;;;;MAMEouB,WAAYD;AAElBzlG,QAAQ2lG,YAAY/4B,WAAW+4B;AAC/B3lG,QAAQ67F,UAAUjvB,WAAWivB;AAC7B77F,QAAQ6iF,aAAajW,WAAWiW;AAChC7iF,QAAQ4kG,aAAah4B,WAAWg4B;AAChC5kG,QAAQ0uE,QAAQ9B,WAAW8B;AAC3B1uE,QAAQ4lG,UAAUh5B,WAAWg5B;AAC7B5lG,QAAQu/F,YAAY3yB,WAAW2yB;AAC/Bv/F,QAAQ2/F,WAAW/yB,WAAW+yB;AAC9B3/F,QAAQwkD,WAAWooB,WAAWpoB;AAC9BxkD,QAAQitF,MAAMrgB,WAAWqgB;AACzBjtF,QAAQq+E,kBAAkBzR,WAAWyR;AACrCr+E,QAAQygG,kBAAkB7zB,WAAW6zB;AACrCzgG,QAAQ6lG,aAAaj5B,WAAWi5B;AAChC7lG,QAAQ2uE,QAAQ/B,WAAW+B;AAC3B3uE,QAAQw/F,QAAQ5yB,WAAW4yB;AAC3Bx/F,QAAQ8lG,SAASl5B,WAAWk5B;AAC5B9lG,QAAQ+lG,aAAan5B,WAAWm5B;AAChC/lG,QAAQgmG,QAAQp5B,WAAWo5B;AAC3BhmG,QAAQ6I,WAAWgkE,OAAOhkE;AAC1B7I,QAAQkJ,aAAa2jE,OAAO3jE;AAC5BlJ,QAAQmG,kBAAkB0mE,OAAO1mE;AACjCnG,QAAQoJ,eAAeyjE,OAAOzjE;AAC9BpJ,QAAQsmF,iBAAiBA;AACzBtmF,QAAQszE,UAAUA;AAClBtzE,QAAQozE,WAAWA;AACnBpzE,QAAQ6oF,YAAYA;AACpB7oF,QAAQuzE,SAASA;AACjBvzE,QAAQ46E,WAAWA;AACnB56E,QAAQu6F,WAAWA;AACnBv6F,QAAQqzE,OAAOA;AACfrzE,QAAQ8uE,6BAA6BA;AACrC9uE,QAAQwtE,wBAAwBA;AAChCxtE,QAAQ83E,aAAaA;AACrB93E,QAAQyjB,WAAWA;AACnBzjB,QAAQ61E,cAAcA;AACtB71E,QAAQimG,qBAAqBA;AAC7BjmG,QAAQkmG,0BAA0BA;AAClClmG,QAAQmmG,iBAAiBA;AACzBnmG,QAAQomG,cAAcA;AACtBpmG,QAAQqmG,oBAAoBA;AAC5BrmG,QAAQy8F,kBAAkBA;AAC1Bz8F,QAAQs4E,cAAcA;AACtBt4E,QAAQsmG,uBAAuBA;AAC/BtmG,QAAQmwF,kBAAkBA;AAC1BnwF,QAAQumG,aAAaA;AACrBvmG,QAAQwmG,cAAcA;AACtBxmG,QAAQilF,qBAAqBA;AAC7BjlF,QAAQolF,2BAA2BA;AACnCplF,QAAQF,IAAIA;AACZE,QAAQ6uE,cAAcA;AACtB7uE,QAAQymG,sBAAsBA;AAC9BzmG,QAAQy9F,SAASA;AACjBz9F,QAAQojG,gBAAgBA;AACxBpjG,QAAQk2E,UAAUA;AAClBl2E,QAAQm8F,aAAaA;AACrBn8F,QAAQohG,WAAWA;AACnBphG,QAAQq/F,cAAcA;AACtBr/F,QAAQwhF,gBAAgBA;AACxBxhF,QAAQ4hF,kBAAkBA;AAC1B5hF,QAAQ0hF,iBAAiBA;AACzB1hF,QAAQs/F,gBAAgBA;AACxBt/F,QAAQgiF,kBAAkBA;AAC1BhiF,QAAQyhF,YAAYA;AACpBzhF,QAAQ+hF,kBAAkBA;AAC1B/hF,QAAQ8hF,oBAAoBA;AAC5B9hF,QAAQ6hF,cAAcA;AACtB7hF,QAAQ2hF,YAAYA;AACpB3hF,QAAQy1E,YAAYA;AACpBz1E,QAAQ0mG,aAAaA;AACrB1mG,QAAQisF,UAAUA;AAClBjsF,QAAQ2mG,cAAcA;AACtB3mG,QAAQ6yE,mBAAmBA;AAC3B7yE,QAAQ4mG,0BAA0BA;AAClC5mG,QAAQ6mG,aAAaA;AACrB7mG,QAAQ8mG,aAAaA;AACrB9mG,QAAQ+mG,mBAAmBA;AAC3B/mG,QAAQgnG,mBAAmBA;AAC3BhnG,QAAQinG,0BAA0BA;AAClCjnG,QAAQylF,yBAAyBA;AACjCzlF,QAAQknG,mBAAmBA;AAC3BlnG,QAAQqxF,kBAAkBA;AAC1BrxF,QAAQ0lF,qBAAqBA;AAC7B1lF,QAAQikG,gBAAgBA;AACxBjkG,QAAQ0lG,WAAWA;AACnB1lG,QAAQmnG,aAAaA;AACrBnnG,QAAQonG,qBAAqBA;AAC7BpnG,QAAQqnG,aAAaA;AACrBrnG,QAAQkkG,gBAAgBA;AACxBlkG,QAAQklF,qBAAqBA;AAC7BllF,QAAQkzE,UAAUA;AAClBlzE,QAAQxD,OAAOA;AACfwD,QAAQsoF,QAAQA;AAChBtoF,QAAQsnG,cAAcA;AACtBtnG,QAAQw2E,UAAUA;AAClBx2E,QAAQunG,iBAAiBA;AACzBvnG,QAAQs2E,cAAcA;;;ACz+NtB;sBAE6B;EAC3B1+E,OAAOoI,UAAUC,QAAQ;;EAEzBrI,OAAOon5BIunG;IACAC,aAAa;EACfD,SAASvnG,QAAQ;MACbunG,OAAOxX,YAAYwX,SAASA,OAAO5yE;EACvC4yE,OAAO3nG,SAASI,QAAQ,sBAAsBJ;EAE9CI,QAAQ,oBAAoB20B,QAAQ4yE;EACpCA,OAAOnxB,YAAY;EACnBmxB,OAAO3D,SAAS;;AAElB4D;IACI7vG,OAAOQ;EACTovG,OAAOn1B,UAAU;EACjBz6E,OAAOQ,IAAIK,OAAO;IAChBgG,WAAW;MACTgpG;WACKx1B,oBAAoBC,aAAa,cAAcs1B;QAClDv1B,oBAAoB52E,OAAO,cAAcmsG;;OAE1C;;;kBAGQA;;;;;mBAhBiB;;EAG9B,MAAM;;;;ACVR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;mB;M,wC;iB;MDrCI,2CAAoB,MAAhB,MAAA,gBAAW;;M,sB,Q,C,M;6CACX,OAAA,OADJ;;IAUA5vG,OAAOQ;EACTR,OAAOQ,IAAIK,OAAO;IAChBw5E,oBAAoBG,SAAS,cAAcvyE;;;;;;;IAb3CqH,OAAO;kBAEI,AAAAsgG","sources":["./node_modules/@parcel/runtime-browser-hmr/lib/HMRRuntime.js","./src/index.ts","./node_modules/vue/index.js","./node_modules/vue/dist/vue.cjs.js","./node_modules/@vue/compiler-dom/index.js","./node_modules/@vue/compiler-dom/dist/compiler-dom.cjs.js","./node_modules/@vue/compiler-core/index.js","./node_modules/@vue/compiler-core/dist/compiler-core.cjs.js","./node_modules/@vue/shared/index.js","./node_modules/@vue/shared/dist/shared.cjs.js","./node_modules/source-map/source-map.js","./node_modules/source-map/lib/source-map-generator.js","./node_modules/source-map/lib/base64-vlq.js","./node_modules/source-map/lib/base64.js","./node_modules/source-map/lib/util.js","./node_modules/source-map/lib/array-set.js","./node_modules/source-map/lib/mapping-list.js","./node_modules/source-map/lib/source-map-consumer.js","./node_modules/source-map/lib/binary-search.js","./node_modules/source-map/lib/quick-sort.js","./node_modules/source-map/lib/source-node.js","./node_modules/@babel/parser/src/tokenizer/types.js","./node_modules/@babel/parser/src/util/whitespace.js","./node_modules/@babel/parser/src/util/location.js","./node_modules/@babel/parser/src/parser/base.js","./node_modules/@babel/parser/src/parser/comments.js","./node_modules/@babel/parser/src/parser/error-codes.js","./node_modules/@babel/parser/src/parser/error-message.js","./node_modules/@babel/parser/src/parser/error.js","./node_modules/@babel/parser/src/plugins/estree.js","./node_modules/@babel/parser/src/tokenizer/context.js","./node_modules/@babel/babel-helper-validator-identifier/src/identifier.ts","./node_modules/@babel/babel-helper-validator-identifier/src/keyword.ts","./node_modules/@babel/parser/src/util/identifier.js","./node_modules/@babel/parser/src/util/scopeflags.js","./node_modules/@babel/parser/src/util/scope.js","./node_modules/@babel/parser/src/plugins/flow/scope.js","./node_modules/@babel/parser/src/plugins/flow/index.js","./node_modules/@babel/parser/src/plugins/jsx/xhtml.js","./node_modules/@babel/parser/src/tokenizer/state.js","./node_modules/@babel/parser/src/plugins/jsx/index.js","./node_modules/@babel/parser/src/plugins/typescript/scope.js","./node_modules/@babel/parser/src/util/production-parameter.js","./node_modules/@babel/parser/src/plugins/typescript/index.js","./node_modules/@babel/parser/src/plugins/placeholders.js","./node_modules/@babel/parser/src/plugins/v8intrinsic.js","./node_modules/@babel/parser/src/plugin-utils.js","./node_modules/@babel/parser/src/options.js","./node_modules/@babel/parser/src/tokenizer/index.js","./node_modules/@babel/parser/src/util/class-scope.js","./node_modules/@babel/parser/src/util/expression-scope.js","./node_modules/@babel/parser/src/parser/util.js","./node_modules/@babel/parser/src/parser/node.js","./node_modules/@babel/parser/src/parser/lval.js","./node_modules/@babel/parser/src/parser/expression.js","./node_modules/@babel/parser/src/parser/statement.js","./node_modules/@babel/parser/src/parser/index.js","./node_modules/@babel/parser/src/index.js","./node_modules/estree-walker/dist/umd/estree-walker.js","./node_modules/@vue/runtime-dom/index.js","./node_modules/@vue/runtime-dom/dist/runtime-dom.cjs.js","./node_modules/@vue/runtime-core/index.js","./node_modules/@vue/runtime-core/dist/runtime-core.cjs.js","./node_modules/@vue/reactivity/index.js","./node_modules/@vue/reactivity/dist/reactivity.cjs.js","./src/App.vue","./node_modules/@parcel/transformer-js/lib/esmodule-helpers.js"],"sourcesContent":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"// @flow\n\n// ## Token types\n\n// The assignment of fine-grained, information-carrying type objects\n// allows the tokenizer to store the information it has about a\n// token in a way that is very cheap for the parser to look up.\n\n// All token type variables start with an underscore, to make them\n// easy to recognize.\n\n// The `beforeExpr` property is used to disambiguate between regular\n// expressions and divisions. It is set on all token types that can\n// be followed by an expression (thus, a slash after them would be a\n// regular expression).\n\n// The `startsExpr` property is used to determine whether an expression\n// may be the “argument” subexpression of a `yield` expression or\n// `yield` statement. It is set on all token types that may be at the\n// start of a subexpression.\n\n// `isLoop` marks a keyword as starting a loop, which is important\n// to know when parsing a label, in order to allow or disallow\n// continue jumps to that label.\n\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\n\ntype TokenOptions = {\n  keyword?: string,\n  beforeExpr?: boolean,\n  startsExpr?: boolean,\n  rightAssociative?: boolean,\n  isLoop?: boolean,\n  isAssign?: boolean,\n  prefix?: boolean,\n  postfix?: boolean,\n  binop?: ?number,\n};\n\nexport class TokenType {\n  label: string;\n  keyword: ?string;\n  beforeExpr: boolean;\n  startsExpr: boolean;\n  rightAssociative: boolean;\n  isLoop: boolean;\n  isAssign: boolean;\n  prefix: boolean;\n  postfix: boolean;\n  binop: ?number;\n  updateContext: ?(prevType: TokenType) => void;\n\n  constructor(label: string, conf: TokenOptions = {}) {\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    this.updateContext = null;\n  }\n}\n\nexport const keywords = new Map<string, TokenType>();\n\nfunction createKeyword(name: string, options: TokenOptions = {}): TokenType {\n  options.keyword = name;\n  const token = new TokenType(name, options);\n  keywords.set(name, token);\n  return token;\n}\n\nfunction createBinop(name: string, binop: number) {\n  return new TokenType(name, { beforeExpr, binop });\n}\n\nexport const types: { [name: string]: TokenType } = {\n  num: new TokenType(\"num\", { startsExpr }),\n  bigint: new TokenType(\"bigint\", { startsExpr }),\n  decimal: new TokenType(\"decimal\", { startsExpr }),\n  regexp: new TokenType(\"regexp\", { startsExpr }),\n  string: new TokenType(\"string\", { startsExpr }),\n  name: new TokenType(\"name\", { startsExpr }),\n  privateName: new TokenType(\"#name\", { startsExpr }),\n  eof: new TokenType(\"eof\"),\n\n  // Punctuation token types.\n  bracketL: new TokenType(\"[\", { beforeExpr, startsExpr }),\n  bracketHashL: new TokenType(\"#[\", { beforeExpr, startsExpr }),\n  bracketBarL: new TokenType(\"[|\", { beforeExpr, startsExpr }),\n  bracketR: new TokenType(\"]\"),\n  bracketBarR: new TokenType(\"|]\"),\n  braceL: new TokenType(\"{\", { beforeExpr, startsExpr }),\n  braceBarL: new TokenType(\"{|\", { beforeExpr, startsExpr }),\n  braceHashL: new TokenType(\"#{\", { beforeExpr, startsExpr }),\n  braceR: new TokenType(\"}\"),\n  braceBarR: new TokenType(\"|}\"),\n  parenL: new TokenType(\"(\", { beforeExpr, startsExpr }),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", { beforeExpr }),\n  semi: new TokenType(\";\", { beforeExpr }),\n  colon: new TokenType(\":\", { beforeExpr }),\n  doubleColon: new TokenType(\"::\", { beforeExpr }),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", { beforeExpr }),\n  questionDot: new TokenType(\"?.\"),\n  arrow: new TokenType(\"=>\", { beforeExpr }),\n  template: new TokenType(\"template\"),\n  ellipsis: new TokenType(\"...\", { beforeExpr }),\n  backQuote: new TokenType(\"`\", { startsExpr }),\n  dollarBraceL: new TokenType(\"${\", { beforeExpr, startsExpr }),\n  at: new TokenType(\"@\"),\n  hash: new TokenType(\"#\", { startsExpr }),\n\n  // Special hashbang token.\n  interpreterDirective: new TokenType(\"#!...\"),\n\n  // Operators. These carry several kinds of properties to help the\n  // parser use them properly (the presence of these properties is\n  // what categorizes them as operators).\n  //\n  // `binop`, when present, specifies that this operator is a binary\n  // operator, and will refer to its precedence.\n  //\n  // `prefix` and `postfix` mark the operator as a prefix or postfix\n  // unary operator.\n  //\n  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n  // binary operators with a very low precedence, that should result\n  // in AssignmentExpression nodes.\n\n  eq: new TokenType(\"=\", { beforeExpr, isAssign }),\n  assign: new TokenType(\"_=\", { beforeExpr, isAssign }),\n  incDec: new TokenType(\"++/--\", { prefix, postfix, startsExpr }),\n  bang: new TokenType(\"!\", { beforeExpr, prefix, startsExpr }),\n  tilde: new TokenType(\"~\", { beforeExpr, prefix, startsExpr }),\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", { beforeExpr, binop: 9, prefix, startsExpr }),\n  // startsExpr: required by v8intrinsic plugin\n  modulo: new TokenType(\"%\", { beforeExpr, binop: 10, startsExpr }),\n  // unset `beforeExpr` as it can be `function *`\n  star: new TokenType(\"*\", { binop: 10 }),\n  slash: createBinop(\"/\", 10),\n  exponent: new TokenType(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true,\n  }),\n\n  // Keywords\n  // Don't forget to update packages/babel-helper-validator-identifier/src/keyword.js\n  // when new keywords are added\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", { beforeExpr }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", { beforeExpr }),\n  _do: createKeyword(\"do\", { isLoop, beforeExpr }),\n  _else: createKeyword(\"else\", { beforeExpr }),\n  _finally: createKeyword(\"finally\"),\n  _for: createKeyword(\"for\", { isLoop }),\n  _function: createKeyword(\"function\", { startsExpr }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", { beforeExpr }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", { beforeExpr, prefix, startsExpr }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _while: createKeyword(\"while\", { isLoop }),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", { beforeExpr, startsExpr }),\n  _this: createKeyword(\"this\", { startsExpr }),\n  _super: createKeyword(\"super\", { startsExpr }),\n  _class: createKeyword(\"class\", { startsExpr }),\n  _extends: createKeyword(\"extends\", { beforeExpr }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", { startsExpr }),\n  _null: createKeyword(\"null\", { startsExpr }),\n  _true: createKeyword(\"true\", { startsExpr }),\n  _false: createKeyword(\"false\", { startsExpr }),\n  _in: createKeyword(\"in\", { beforeExpr, binop: 7 }),\n  _instanceof: createKeyword(\"instanceof\", { beforeExpr, binop: 7 }),\n  _typeof: createKeyword(\"typeof\", { beforeExpr, prefix, startsExpr }),\n  _void: createKeyword(\"void\", { beforeExpr, prefix, startsExpr }),\n  _delete: createKeyword(\"delete\", { beforeExpr, prefix, startsExpr }),\n};\n","// @flow\n\nimport * as charCodes from \"charcodes\";\n\n// Matches a whole line break (where CRLF is considered a single\n// line break). Used to count lines.\nexport const lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nexport const lineBreakG = new RegExp(lineBreak.source, \"g\");\n\n// https://tc39.github.io/ecma262/#sec-line-terminators\nexport function isNewLine(code: number): boolean {\n  switch (code) {\n    case charCodes.lineFeed:\n    case charCodes.carriageReturn:\n    case charCodes.lineSeparator:\n    case charCodes.paragraphSeparator:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nexport const skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\n// https://tc39.github.io/ecma262/#sec-white-space\nexport function isWhitespace(code: number): boolean {\n  switch (code) {\n    case 0x0009: // CHARACTER TABULATION\n    case 0x000b: // LINE TABULATION\n    case 0x000c: // FORM FEED\n    case charCodes.space:\n    case charCodes.nonBreakingSpace:\n    case charCodes.oghamSpaceMark:\n    case 0x2000: // EN QUAD\n    case 0x2001: // EM QUAD\n    case 0x2002: // EN SPACE\n    case 0x2003: // EM SPACE\n    case 0x2004: // THREE-PER-EM SPACE\n    case 0x2005: // FOUR-PER-EM SPACE\n    case 0x2006: // SIX-PER-EM SPACE\n    case 0x2007: // FIGURE SPACE\n    case 0x2008: // PUNCTUATION SPACE\n    case 0x2009: // THIN SPACE\n    case 0x200a: // HAIR SPACE\n    case 0x202f: // NARROW NO-BREAK SPACE\n    case 0x205f: // MEDIUM MATHEMATICAL SPACE\n    case 0x3000: // IDEOGRAPHIC SPACE\n    case 0xfeff: // ZERO WIDTH NO-BREAK SPACE\n      return true;\n\n    default:\n      return false;\n  }\n}\n","// @flow\n\nimport { lineBreakG } from \"./whitespace\";\n\nexport type Pos = {\n  start: number,\n};\n\n// These are used when `options.locations` is on, for the\n// `startLoc` and `endLoc` properties.\n\nexport class Position {\n  line: number;\n  column: number;\n\n  constructor(line: number, col: number) {\n    this.line = line;\n    this.column = col;\n  }\n}\n\nexport class SourceLocation {\n  start: Position;\n  end: Position;\n  filename: string;\n  identifierName: ?string;\n\n  constructor(start: Position, end?: Position) {\n    this.start = start;\n    // $FlowIgnore (may start as null, but initialized later)\n    this.end = end;\n  }\n}\n\n// The `getLineInfo` function is mostly useful when the\n// `locations` option is off (for performance reasons) and you\n// want to find the line/column position for a given character\n// offset. `input` should be the code string that the offset refers\n// into.\n\nexport function getLineInfo(input: string, offset: number): Position {\n  let line = 1;\n  let lineStart = 0;\n  let match;\n  lineBreakG.lastIndex = 0;\n  while ((match = lineBreakG.exec(input)) && match.index < offset) {\n    line++;\n    lineStart = lineBreakG.lastIndex;\n  }\n\n  return new Position(line, offset - lineStart);\n}\n","// @flow\n\nimport type { Options } from \"../options\";\nimport type State from \"../tokenizer/state\";\nimport type { PluginsMap } from \"./index\";\nimport type ScopeHandler from \"../util/scope\";\nimport type ExpressionScopeHandler from \"../util/expression-scope\";\nimport type ClassScopeHandler from \"../util/class-scope\";\nimport type ProductionParameterHandler from \"../util/production-parameter\";\n\nexport default class BaseParser {\n  // Properties set by constructor in index.js\n  declare options: Options;\n  declare inModule: boolean;\n  declare scope: ScopeHandler<*>;\n  declare classScope: ClassScopeHandler;\n  declare prodParam: ProductionParameterHandler;\n  declare expressionScope: ExpressionScopeHandler;\n  declare plugins: PluginsMap;\n  declare filename: ?string;\n  sawUnambiguousESM: boolean = false;\n  ambiguousScriptDifferentAst: boolean = false;\n\n  // Initialized by Tokenizer\n  declare state: State;\n  // input and length are not in state as they are constant and we do\n  // not want to ever copy them, which happens if state gets cloned\n  declare input: string;\n  declare length: number;\n\n  hasPlugin(name: string): boolean {\n    return this.plugins.has(name);\n  }\n\n  getPluginOption(plugin: string, name: string) {\n    // $FlowIssue\n    if (this.hasPlugin(plugin)) return this.plugins.get(plugin)[name];\n  }\n}\n","// @flow\n\n/**\n * Based on the comment attachment algorithm used in espree and estraverse.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * * Redistributions of source code must retain the above copyright\n *   notice, this list of conditions and the following disclaimer.\n * * Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport BaseParser from \"./base\";\nimport type { Comment, Node } from \"../types\";\n\nfunction last<T>(stack: $ReadOnlyArray<T>): T {\n  return stack[stack.length - 1];\n}\n\nexport default class CommentsParser extends BaseParser {\n  addComment(comment: Comment): void {\n    if (this.filename) comment.loc.filename = this.filename;\n    this.state.trailingComments.push(comment);\n    this.state.leadingComments.push(comment);\n  }\n\n  adjustCommentsAfterTrailingComma(\n    node: Node,\n    elements: (Node | null)[],\n    // When the current node is followed by a token which hasn't a respective AST node, we\n    // need to take all the trailing comments to prevent them from being attached to an\n    // unrelated node. e.g. in\n    //     var { x } /* cmt */ = { y }\n    // we don't want /* cmt */ to be attached to { y }.\n    // On the other hand, in\n    //     fn(x) [new line] /* cmt */ [new line] y\n    // /* cmt */ is both a trailing comment of fn(x) and a leading comment of y\n    takeAllComments?: boolean,\n  ) {\n    if (this.state.leadingComments.length === 0) {\n      return;\n    }\n\n    let lastElement = null;\n    let i = elements.length;\n    while (lastElement === null && i > 0) {\n      lastElement = elements[--i];\n    }\n    if (lastElement === null) {\n      return;\n    }\n\n    for (let j = 0; j < this.state.leadingComments.length; j++) {\n      if (\n        this.state.leadingComments[j].end < this.state.commentPreviousNode.end\n      ) {\n        this.state.leadingComments.splice(j, 1);\n        j--;\n      }\n    }\n\n    const newTrailingComments = [];\n    for (let i = 0; i < this.state.leadingComments.length; i++) {\n      const leadingComment = this.state.leadingComments[i];\n      if (leadingComment.end < node.end) {\n        newTrailingComments.push(leadingComment);\n\n        // Perf: we don't need to splice if we are going to reset the array anyway\n        if (!takeAllComments) {\n          this.state.leadingComments.splice(i, 1);\n          i--;\n        }\n      } else {\n        if (node.trailingComments === undefined) {\n          node.trailingComments = [];\n        }\n        node.trailingComments.push(leadingComment);\n      }\n    }\n    if (takeAllComments) this.state.leadingComments = [];\n\n    if (newTrailingComments.length > 0) {\n      lastElement.trailingComments = newTrailingComments;\n    } else if (lastElement.trailingComments !== undefined) {\n      lastElement.trailingComments = [];\n    }\n  }\n\n  processComment(node: Node): void {\n    if (node.type === \"Program\" && node.body.length > 0) return;\n\n    const stack = this.state.commentStack;\n\n    let firstChild, lastChild, trailingComments, i, j;\n\n    if (this.state.trailingComments.length > 0) {\n      // If the first comment in trailingComments comes after the\n      // current node, then we're good - all comments in the array will\n      // come after the node and so it's safe to add them as official\n      // trailingComments.\n      if (this.state.trailingComments[0].start >= node.end) {\n        trailingComments = this.state.trailingComments;\n        this.state.trailingComments = [];\n      } else {\n        // Otherwise, if the first comment doesn't come after the\n        // current node, that means we have a mix of leading and trailing\n        // comments in the array and that leadingComments contains the\n        // same items as trailingComments. Reset trailingComments to\n        // zero items and we'll handle this by evaluating leadingComments\n        // later.\n        this.state.trailingComments.length = 0;\n      }\n    } else if (stack.length > 0) {\n      const lastInStack = last(stack);\n      if (\n        lastInStack.trailingComments &&\n        lastInStack.trailingComments[0].start >= node.end\n      ) {\n        trailingComments = lastInStack.trailingComments;\n        delete lastInStack.trailingComments;\n      }\n    }\n\n    // Eating the stack.\n    if (stack.length > 0 && last(stack).start >= node.start) {\n      firstChild = stack.pop();\n    }\n\n    while (stack.length > 0 && last(stack).start >= node.start) {\n      lastChild = stack.pop();\n    }\n\n    if (!lastChild && firstChild) lastChild = firstChild;\n\n    // Adjust comments that follow a trailing comma on the last element in a\n    // comma separated list of nodes to be the trailing comments on the last\n    // element\n    if (firstChild) {\n      switch (node.type) {\n        case \"ObjectExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties);\n          break;\n        case \"ObjectPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties, true);\n          break;\n        case \"CallExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.arguments);\n          break;\n        case \"ArrayExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements);\n          break;\n        case \"ArrayPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements, true);\n          break;\n      }\n    } else if (\n      this.state.commentPreviousNode &&\n      ((this.state.commentPreviousNode.type === \"ImportSpecifier\" &&\n        node.type !== \"ImportSpecifier\") ||\n        (this.state.commentPreviousNode.type === \"ExportSpecifier\" &&\n          node.type !== \"ExportSpecifier\"))\n    ) {\n      this.adjustCommentsAfterTrailingComma(node, [\n        this.state.commentPreviousNode,\n      ]);\n    }\n\n    if (lastChild) {\n      if (lastChild.leadingComments) {\n        if (\n          lastChild !== node &&\n          lastChild.leadingComments.length > 0 &&\n          last(lastChild.leadingComments).end <= node.start\n        ) {\n          node.leadingComments = lastChild.leadingComments;\n          delete lastChild.leadingComments;\n        } else {\n          // A leading comment for an anonymous class had been stolen by its first ClassMethod,\n          // so this takes back the leading comment.\n          // See also: https://github.com/eslint/espree/issues/158\n          for (i = lastChild.leadingComments.length - 2; i >= 0; --i) {\n            if (lastChild.leadingComments[i].end <= node.start) {\n              node.leadingComments = lastChild.leadingComments.splice(0, i + 1);\n              break;\n            }\n          }\n        }\n      }\n    } else if (this.state.leadingComments.length > 0) {\n      if (last(this.state.leadingComments).end <= node.start) {\n        if (this.state.commentPreviousNode) {\n          for (j = 0; j < this.state.leadingComments.length; j++) {\n            if (\n              this.state.leadingComments[j].end <\n              this.state.commentPreviousNode.end\n            ) {\n              this.state.leadingComments.splice(j, 1);\n              j--;\n            }\n          }\n        }\n        if (this.state.leadingComments.length > 0) {\n          node.leadingComments = this.state.leadingComments;\n          this.state.leadingComments = [];\n        }\n      } else {\n        // https://github.com/eslint/espree/issues/2\n        //\n        // In special cases, such as return (without a value) and\n        // debugger, all comments will end up as leadingComments and\n        // will otherwise be eliminated. This step runs when the\n        // commentStack is empty and there are comments left\n        // in leadingComments.\n        //\n        // This loop figures out the stopping point between the actual\n        // leading and trailing comments by finding the location of the\n        // first comment that comes after the given node.\n        for (i = 0; i < this.state.leadingComments.length; i++) {\n          if (this.state.leadingComments[i].end > node.start) {\n            break;\n          }\n        }\n\n        // Split the array based on the location of the first comment\n        // that comes after the node. Keep in mind that this could\n        // result in an empty array, and if so, the array must be\n        // deleted.\n        const leadingComments = this.state.leadingComments.slice(0, i);\n\n        if (leadingComments.length) {\n          node.leadingComments = leadingComments;\n        }\n\n        // Similarly, trailing comments are attached later. The variable\n        // must be reset to null if there are no trailing comments.\n        trailingComments = this.state.leadingComments.slice(i);\n        if (trailingComments.length === 0) {\n          trailingComments = null;\n        }\n      }\n    }\n\n    this.state.commentPreviousNode = node;\n\n    if (trailingComments) {\n      if (\n        trailingComments.length &&\n        trailingComments[0].start >= node.start &&\n        last(trailingComments).end <= node.end\n      ) {\n        node.innerComments = trailingComments;\n      } else {\n        // TrailingComments maybe contain innerComments\n        const firstTrailingCommentIndex = trailingComments.findIndex(\n          comment => comment.end >= node.end,\n        );\n\n        if (firstTrailingCommentIndex > 0) {\n          node.innerComments = trailingComments.slice(\n            0,\n            firstTrailingCommentIndex,\n          );\n          node.trailingComments = trailingComments.slice(\n            firstTrailingCommentIndex,\n          );\n        } else {\n          node.trailingComments = trailingComments;\n        }\n      }\n    }\n\n    stack.push(node);\n  }\n}\n","// @flow\n\nexport const ErrorCodes = Object.freeze({\n  SyntaxError: \"BABEL_PARSER_SYNTAX_ERROR\",\n  SourceTypeModuleError: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\",\n});\n\nexport type ErrorCode = $Values<typeof ErrorCodes>;\n","// @flow\n\nimport { makeErrorTemplates, ErrorCodes } from \"./error\";\n\n/* eslint sort-keys: \"error\" */\n\n/**\n * @module parser/error-message\n */\n\n// The Errors key follows https://cs.chromium.org/chromium/src/v8/src/common/message-template.h unless it does not exist\nexport const ErrorMessages = makeErrorTemplates(\n  {\n    AccessorIsGenerator: \"A %0ter cannot be a generator.\",\n    ArgumentsInClass:\n      \"'arguments' is only allowed in functions and class methods.\",\n    AsyncFunctionInSingleStatementContext:\n      \"Async functions can only be declared at the top level or inside a block.\",\n    AwaitBindingIdentifier:\n      \"Can not use 'await' as identifier inside an async function.\",\n    AwaitBindingIdentifierInStaticBlock:\n      \"Can not use 'await' as identifier inside a static block.\",\n    AwaitExpressionFormalParameter:\n      \"'await' is not allowed in async function parameters.\",\n    AwaitNotInAsyncContext:\n      \"'await' is only allowed within async functions and at the top levels of modules.\",\n    AwaitNotInAsyncFunction: \"'await' is only allowed within async functions.\",\n    BadGetterArity: \"A 'get' accesor must not have any formal parameters.\",\n    BadSetterArity: \"A 'set' accesor must have exactly one formal parameter.\",\n    BadSetterRestParameter:\n      \"A 'set' accesor function argument must not be a rest parameter.\",\n    ConstructorClassField: \"Classes may not have a field named 'constructor'.\",\n    ConstructorClassPrivateField:\n      \"Classes may not have a private field named '#constructor'.\",\n    ConstructorIsAccessor: \"Class constructor may not be an accessor.\",\n    ConstructorIsAsync: \"Constructor can't be an async function.\",\n    ConstructorIsGenerator: \"Constructor can't be a generator.\",\n    DeclarationMissingInitializer: \"'%0' require an initialization value.\",\n    DecoratorBeforeExport:\n      \"Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax.\",\n    DecoratorConstructor:\n      \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n    DecoratorExportClass:\n      \"Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead.\",\n    DecoratorSemicolon: \"Decorators must not be followed by a semicolon.\",\n    DecoratorStaticBlock: \"Decorators can't be used with a static block.\",\n    DeletePrivateField: \"Deleting a private field is not allowed.\",\n    DestructureNamedImport:\n      \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n    DuplicateConstructor: \"Duplicate constructor in the same class.\",\n    DuplicateDefaultExport: \"Only one default export allowed per module.\",\n    DuplicateExport:\n      \"`%0` has already been exported. Exported identifiers must be unique.\",\n    DuplicateProto: \"Redefinition of __proto__ property.\",\n    DuplicateRegExpFlags: \"Duplicate regular expression flag.\",\n    ElementAfterRest: \"Rest element must be last element.\",\n    EscapedCharNotAnIdentifier: \"Invalid Unicode escape.\",\n    ExportBindingIsString:\n      \"A string literal cannot be used as an exported binding without `from`.\\n- Did you mean `export { '%0' as '%1' } from 'some-module'`?\",\n    ExportDefaultFromAsIdentifier:\n      \"'from' is not allowed as an identifier after 'export default'.\",\n    ForInOfLoopInitializer:\n      \"'%0' loop variable declaration may not have an initializer.\",\n    ForOfAsync: \"The left-hand side of a for-of loop may not be 'async'.\",\n    ForOfLet: \"The left-hand side of a for-of loop may not start with 'let'.\",\n    GeneratorInSingleStatementContext:\n      \"Generators can only be declared at the top level or inside a block.\",\n    IllegalBreakContinue: \"Unsyntactic %0.\",\n    IllegalLanguageModeDirective:\n      \"Illegal 'use strict' directive in function with non-simple parameter list.\",\n    IllegalReturn: \"'return' outside of function.\",\n    ImportBindingIsString:\n      'A string literal cannot be used as an imported binding.\\n- Did you mean `import { \"%0\" as foo }`?',\n    ImportCallArgumentTrailingComma:\n      \"Trailing comma is disallowed inside import(...) arguments.\",\n    ImportCallArity: \"`import()` requires exactly %0.\",\n    ImportCallNotNewExpression: \"Cannot use new with import(...).\",\n    ImportCallSpreadArgument: \"`...` is not allowed in `import()`.\",\n    InvalidBigIntLiteral: \"Invalid BigIntLiteral.\",\n    InvalidCodePoint: \"Code point out of bounds.\",\n    InvalidDecimal: \"Invalid decimal.\",\n    InvalidDigit: \"Expected number in radix %0.\",\n    InvalidEscapeSequence: \"Bad character escape sequence.\",\n    InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template.\",\n    InvalidEscapedReservedWord: \"Escape sequence in keyword %0.\",\n    InvalidIdentifier: \"Invalid identifier %0.\",\n    InvalidLhs: \"Invalid left-hand side in %0.\",\n    InvalidLhsBinding: \"Binding invalid left-hand side in %0.\",\n    InvalidNumber: \"Invalid number.\",\n    InvalidOrMissingExponent:\n      \"Floating-point numbers require a valid exponent after the 'e'.\",\n    InvalidOrUnexpectedToken: \"Unexpected character '%0'.\",\n    InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern.\",\n    InvalidPrivateFieldResolution: \"Private name #%0 is not defined.\",\n    InvalidPropertyBindingPattern: \"Binding member expression.\",\n    InvalidRecordProperty:\n      \"Only properties and spread elements are allowed in record definitions.\",\n    InvalidRestAssignmentPattern: \"Invalid rest operator's argument.\",\n    LabelRedeclaration: \"Label '%0' is already declared.\",\n    LetInLexicalBinding:\n      \"'let' is not allowed to be used as a name in 'let' or 'const' declarations.\",\n    LineTerminatorBeforeArrow: \"No line break is allowed before '=>'.\",\n    MalformedRegExpFlags: \"Invalid regular expression flag.\",\n    MissingClassName: \"A class name is required.\",\n    MissingEqInAssignment:\n      \"Only '=' operator can be used for specifying default value.\",\n    MissingSemicolon: \"Missing semicolon.\",\n    MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX.\",\n    MixingCoalesceWithLogical:\n      \"Nullish coalescing operator(??) requires parens when mixing with logical operators.\",\n    ModuleAttributeDifferentFromType:\n      \"The only accepted module attribute is `type`.\",\n    ModuleAttributeInvalidValue:\n      \"Only string literals are allowed as module attribute values.\",\n    ModuleAttributesWithDuplicateKeys:\n      'Duplicate key \"%0\" is not allowed in module attributes.',\n    ModuleExportNameHasLoneSurrogate:\n      \"An export name cannot include a lone surrogate, found '\\\\u%0'.\",\n    ModuleExportUndefined: \"Export '%0' is not defined.\",\n    MultipleDefaultsInSwitch: \"Multiple default clauses.\",\n    NewlineAfterThrow: \"Illegal newline after throw.\",\n    NoCatchOrFinally: \"Missing catch or finally clause.\",\n    NumberIdentifier: \"Identifier directly after number.\",\n    NumericSeparatorInEscapeSequence:\n      \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences.\",\n    ObsoleteAwaitStar:\n      \"'await*' has been removed from the async functions proposal. Use Promise.all() instead.\",\n    OptionalChainingNoNew:\n      \"Constructors in/after an Optional Chain are not allowed.\",\n    OptionalChainingNoTemplate:\n      \"Tagged Template Literals are not allowed in optionalChain.\",\n    OverrideOnConstructor:\n      \"'override' modifier cannot appear on a constructor declaration.\",\n    ParamDupe: \"Argument name clash.\",\n    PatternHasAccessor: \"Object pattern can't contain getter or setter.\",\n    PatternHasMethod: \"Object pattern can't contain methods.\",\n    PipelineBodyNoArrow:\n      'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized.',\n    PipelineBodySequenceExpression:\n      \"Pipeline body may not be a comma-separated sequence expression.\",\n    PipelineHeadSequenceExpression:\n      \"Pipeline head should not be a comma-separated sequence expression.\",\n    PipelineTopicUnused:\n      \"Pipeline is in topic style but does not use topic reference.\",\n    PrimaryTopicNotAllowed:\n      \"Topic reference was used in a lexical context without topic binding.\",\n    PrimaryTopicRequiresSmartPipeline:\n      \"Primary Topic Reference found but pipelineOperator not passed 'smart' for 'proposal' option.\",\n    PrivateInExpectedIn:\n      \"Private names are only allowed in property accesses (`obj.#%0`) or in `in` expressions (`#%0 in obj`).\",\n    PrivateNameRedeclaration: \"Duplicate private name #%0.\",\n    RecordExpressionBarIncorrectEndSyntaxType:\n      \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n    RecordExpressionBarIncorrectStartSyntaxType:\n      \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n    RecordExpressionHashIncorrectStartSyntaxType:\n      \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n    RecordNoProto: \"'__proto__' is not allowed in Record expressions.\",\n    RestTrailingComma: \"Unexpected trailing comma after rest element.\",\n    SloppyFunction:\n      \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement.\",\n    StaticPrototype: \"Classes may not have static property named prototype.\",\n    StrictDelete: \"Deleting local variable in strict mode.\",\n    StrictEvalArguments: \"Assigning to '%0' in strict mode.\",\n    StrictEvalArgumentsBinding: \"Binding '%0' in strict mode.\",\n    StrictFunction:\n      \"In strict mode code, functions can only be declared at top level or inside a block.\",\n    StrictNumericEscape:\n      \"The only valid numeric escape in strict mode is '\\\\0'.\",\n    StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode.\",\n    StrictWith: \"'with' in strict mode.\",\n    SuperNotAllowed:\n      \"`super()` is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n    SuperPrivateField: \"Private fields can't be accessed on super.\",\n    TrailingDecorator: \"Decorators must be attached to a class element.\",\n    TupleExpressionBarIncorrectEndSyntaxType:\n      \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n    TupleExpressionBarIncorrectStartSyntaxType:\n      \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n    TupleExpressionHashIncorrectStartSyntaxType:\n      \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n    UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder.\",\n    UnexpectedAwaitAfterPipelineBody:\n      'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal.',\n    UnexpectedDigitAfterHash: \"Unexpected digit after hash token.\",\n    UnexpectedImportExport:\n      \"'import' and 'export' may only appear at the top level.\",\n    UnexpectedKeyword: \"Unexpected keyword '%0'.\",\n    UnexpectedLeadingDecorator:\n      \"Leading decorators must be attached to a class declaration.\",\n    UnexpectedLexicalDeclaration:\n      \"Lexical declaration cannot appear in a single-statement context.\",\n    UnexpectedNewTarget:\n      \"`new.target` can only be used in functions or class properties.\",\n    UnexpectedNumericSeparator:\n      \"A numeric separator is only allowed between two digits.\",\n    UnexpectedPrivateField:\n      \"Private names can only be used as the name of a class element (i.e. class C { #p = 42; #m() {} } )\\n or a property of member expression (i.e. this.#p).\",\n    UnexpectedReservedWord: \"Unexpected reserved word '%0'.\",\n    UnexpectedSuper: \"'super' is only allowed in object methods and classes.\",\n    UnexpectedToken: \"Unexpected token '%0'.\",\n    UnexpectedTokenUnaryExponentiation:\n      \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n    UnsupportedBind: \"Binding should be performed on object property.\",\n    UnsupportedDecoratorExport:\n      \"A decorated export must export a class declaration.\",\n    UnsupportedDefaultExport:\n      \"Only expressions, functions or classes are allowed as the `default` export.\",\n    UnsupportedImport:\n      \"`import` can only be used in `import()` or `import.meta`.\",\n    UnsupportedMetaProperty: \"The only valid meta property for %0 is %0.%1.\",\n    UnsupportedParameterDecorator:\n      \"Decorators cannot be used to decorate parameters.\",\n    UnsupportedPropertyDecorator:\n      \"Decorators cannot be used to decorate object literal properties.\",\n    UnsupportedSuper:\n      \"'super' can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop]).\",\n    UnterminatedComment: \"Unterminated comment.\",\n    UnterminatedRegExp: \"Unterminated regular expression.\",\n    UnterminatedString: \"Unterminated string constant.\",\n    UnterminatedTemplate: \"Unterminated template.\",\n    VarRedeclaration: \"Identifier '%0' has already been declared.\",\n    YieldBindingIdentifier:\n      \"Can not use 'yield' as identifier inside a generator.\",\n    YieldInParameter: \"Yield expression is not allowed in formal parameters.\",\n    ZeroDigitNumericSeparator:\n      \"Numeric separator can not be used after leading 0.\",\n  },\n  /* code */ ErrorCodes.SyntaxError,\n);\n\nexport const SourceTypeModuleErrorMessages = makeErrorTemplates(\n  {\n    ImportMetaOutsideModule: `import.meta may appear only with 'sourceType: \"module\"'`,\n    ImportOutsideModule: `'import' and 'export' may appear only with 'sourceType: \"module\"'`,\n  },\n  /* code */ ErrorCodes.SourceTypeModuleError,\n);\n","// @flow\n/* eslint sort-keys: \"error\" */\nimport { getLineInfo, type Position } from \"../util/location\";\nimport CommentsParser from \"./comments\";\nimport { type ErrorCode, ErrorCodes } from \"./error-codes\";\n\n// This function is used to raise exceptions on parse errors. It\n// takes an offset integer (into the current `input`) to indicate\n// the location of the error, attaches the position to the end\n// of the error message, and then raises a `SyntaxError` with that\n// message.\n\ntype ErrorContext = {\n  pos: number,\n  loc: Position,\n  missingPlugin?: Array<string>,\n  code?: string,\n  reasonCode?: String,\n};\nexport type ParsingError = SyntaxError & ErrorContext;\n\nexport type ErrorTemplate = {\n  code: ErrorCode,\n  template: string,\n  reasonCode: string,\n};\nexport type ErrorTemplates = {\n  [key: string]: ErrorTemplate,\n};\n\nexport function makeErrorTemplates(\n  messages: {\n    [key: string]: string,\n  },\n  code: ErrorCode,\n): ErrorTemplates {\n  const templates: ErrorTemplates = {};\n  Object.keys(messages).forEach(reasonCode => {\n    templates[reasonCode] = Object.freeze({\n      code,\n      reasonCode,\n      template: messages[reasonCode],\n    });\n  });\n  return Object.freeze(templates);\n}\n\nexport { ErrorCodes };\nexport {\n  ErrorMessages as Errors,\n  SourceTypeModuleErrorMessages as SourceTypeModuleErrors,\n} from \"./error-message\";\n\nexport type raiseFunction = (number, ErrorTemplate, ...any) => void;\n\nexport default class ParserError extends CommentsParser {\n  // Forward-declaration: defined in tokenizer/index.js\n  /*::\n  +isLookahead: boolean;\n  */\n\n  getLocationForPosition(pos: number): Position {\n    let loc;\n    if (pos === this.state.start) loc = this.state.startLoc;\n    else if (pos === this.state.lastTokStart) loc = this.state.lastTokStartLoc;\n    else if (pos === this.state.end) loc = this.state.endLoc;\n    else if (pos === this.state.lastTokEnd) loc = this.state.lastTokEndLoc;\n    else loc = getLineInfo(this.input, pos);\n\n    return loc;\n  }\n\n  raise(\n    pos: number,\n    { code, reasonCode, template }: ErrorTemplate,\n    ...params: any\n  ): Error | empty {\n    return this.raiseWithData(pos, { code, reasonCode }, template, ...params);\n  }\n\n  /**\n   * Raise a parsing error on given position pos. If errorRecovery is true,\n   * it will first search current errors and overwrite the error thrown on the exact\n   * position before with the new error message. If errorRecovery is false, it\n   * fallbacks to `raise`.\n   *\n   * @param {number} pos\n   * @param {string} errorTemplate\n   * @param {...any} params\n   * @returns {(Error | empty)}\n   * @memberof ParserError\n   */\n  raiseOverwrite(\n    pos: number,\n    { code, template }: ErrorTemplate,\n    ...params: any\n  ): Error | empty {\n    const loc = this.getLocationForPosition(pos);\n    const message =\n      template.replace(/%(\\d+)/g, (_, i: number) => params[i]) +\n      ` (${loc.line}:${loc.column})`;\n    if (this.options.errorRecovery) {\n      const errors = this.state.errors;\n      for (let i = errors.length - 1; i >= 0; i--) {\n        const error = errors[i];\n        if (error.pos === pos) {\n          return Object.assign(error, { message });\n        } else if (error.pos < pos) {\n          break;\n        }\n      }\n    }\n    return this._raise({ code, loc, pos }, message);\n  }\n\n  raiseWithData(\n    pos: number,\n    data?: {\n      missingPlugin?: Array<string>,\n      code?: string,\n    },\n    errorTemplate: string,\n    ...params: any\n  ): Error | empty {\n    const loc = this.getLocationForPosition(pos);\n    const message =\n      errorTemplate.replace(/%(\\d+)/g, (_, i: number) => params[i]) +\n      ` (${loc.line}:${loc.column})`;\n    return this._raise(Object.assign(({ loc, pos }: Object), data), message);\n  }\n\n  _raise(errorContext: ErrorContext, message: string): Error | empty {\n    // $FlowIgnore\n    const err: SyntaxError & ErrorContext = new SyntaxError(message);\n    Object.assign(err, errorContext);\n    if (this.options.errorRecovery) {\n      if (!this.isLookahead) this.state.errors.push(err);\n      return err;\n    } else {\n      throw err;\n    }\n  }\n}\n","// @flow\n\nimport { TokenType } from \"../tokenizer/types\";\nimport type Parser from \"../parser\";\nimport type { ExpressionErrors } from \"../parser/util\";\nimport * as N from \"../types\";\nimport type { Position } from \"../util/location\";\nimport { Errors } from \"../parser/error\";\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    parseRegExpLiteral({ pattern, flags }): N.Node {\n      let regex = null;\n      try {\n        regex = new RegExp(pattern, flags);\n      } catch (e) {\n        // In environments that don't support these flags value will\n        // be null as the regex can't be represented natively.\n      }\n      const node = this.estreeParseLiteral<N.EstreeRegExpLiteral>(regex);\n      node.regex = { pattern, flags };\n\n      return node;\n    }\n\n    parseBigIntLiteral(value: any): N.Node {\n      // https://github.com/estree/estree/blob/master/es2020.md#bigintliteral\n      let bigInt;\n      try {\n        // $FlowIgnore\n        bigInt = BigInt(value);\n      } catch {\n        bigInt = null;\n      }\n      const node = this.estreeParseLiteral<N.EstreeBigIntLiteral>(bigInt);\n      node.bigint = String(node.value || value);\n\n      return node;\n    }\n\n    parseDecimalLiteral(value: any): N.Node {\n      // https://github.com/estree/estree/blob/master/experimental/decimal.md\n      // todo: use BigDecimal when node supports it.\n      const decimal = null;\n      const node = this.estreeParseLiteral(decimal);\n      node.decimal = String(node.value || value);\n\n      return node;\n    }\n\n    estreeParseLiteral<T: N.Node>(value: any) {\n      return this.parseLiteral<T>(value, \"Literal\");\n    }\n\n    parseStringLiteral(value: any): N.Node {\n      return this.estreeParseLiteral(value);\n    }\n\n    parseNumericLiteral(value: any): any {\n      return this.estreeParseLiteral(value);\n    }\n\n    parseNullLiteral(): N.Node {\n      return this.estreeParseLiteral(null);\n    }\n\n    parseBooleanLiteral(value: boolean): N.BooleanLiteral {\n      return this.estreeParseLiteral(value);\n    }\n\n    directiveToStmt(directive: N.Directive): N.ExpressionStatement {\n      const directiveLiteral = directive.value;\n\n      const stmt = this.startNodeAt(directive.start, directive.loc.start);\n      const expression = this.startNodeAt(\n        directiveLiteral.start,\n        directiveLiteral.loc.start,\n      );\n\n      expression.value = directiveLiteral.extra.expressionValue;\n      expression.raw = directiveLiteral.extra.raw;\n\n      stmt.expression = this.finishNodeAt(\n        expression,\n        \"Literal\",\n        directiveLiteral.end,\n        directiveLiteral.loc.end,\n      );\n      stmt.directive = directiveLiteral.extra.raw.slice(1, -1);\n\n      return this.finishNodeAt(\n        stmt,\n        \"ExpressionStatement\",\n        directive.end,\n        directive.loc.end,\n      );\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    initFunction(\n      node: N.BodilessFunctionOrMethodBase,\n      isAsync: ?boolean,\n    ): void {\n      super.initFunction(node, isAsync);\n      node.expression = false;\n    }\n\n    checkDeclaration(node: N.Pattern | N.ObjectProperty): void {\n      if (node != null && this.isObjectProperty(node)) {\n        this.checkDeclaration(((node: any): N.EstreeProperty).value);\n      } else {\n        super.checkDeclaration(node);\n      }\n    }\n\n    getObjectOrClassMethodParams(method: N.ObjectMethod | N.ClassMethod) {\n      return ((method: any): N.EstreeProperty | N.EstreeMethodDefinition).value\n        .params;\n    }\n\n    isValidDirective(stmt: N.Statement): boolean {\n      return (\n        stmt.type === \"ExpressionStatement\" &&\n        stmt.expression.type === \"Literal\" &&\n        typeof stmt.expression.value === \"string\" &&\n        !stmt.expression.extra?.parenthesized\n      );\n    }\n\n    stmtToDirective(stmt: N.Statement): N.Directive {\n      const directive = super.stmtToDirective(stmt);\n      const value = stmt.expression.value;\n\n      // Record the expression value as in estree mode we want\n      // the stmt to have the real value e.g. (\"use strict\") and\n      // not the raw value e.g. (\"use\\\\x20strict\")\n      this.addExtra(directive.value, \"expressionValue\", value);\n\n      return directive;\n    }\n\n    parseBlockBody(\n      node: N.BlockStatementLike,\n      ...args: [?boolean, boolean, TokenType, void | (boolean => void)]\n    ): void {\n      super.parseBlockBody(node, ...args);\n\n      const directiveStatements = node.directives.map(d =>\n        this.directiveToStmt(d),\n      );\n      node.body = directiveStatements.concat(node.body);\n      // $FlowIgnore - directives isn't optional in the type definition\n      delete node.directives;\n    }\n\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      this.parseMethod(\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n        \"ClassMethod\",\n        true,\n      );\n      if (method.typeParameters) {\n        // $FlowIgnore\n        method.value.typeParameters = method.typeParameters;\n        delete method.typeParameters;\n      }\n      classBody.body.push(method);\n    }\n\n    parseMaybePrivateName(...args: [boolean]): any {\n      const node = super.parseMaybePrivateName(...args);\n      if (\n        node.type === \"PrivateName\" &&\n        this.getPluginOption(\"estree\", \"classFeatures\")\n      ) {\n        return this.convertPrivateNameToPrivateIdentifier(node);\n      }\n      return node;\n    }\n\n    convertPrivateNameToPrivateIdentifier(\n      node: N.PrivateName,\n    ): N.EstreePrivateIdentifier {\n      const name = super.getPrivateNameSV(node);\n      node = (node: any);\n      delete node.id;\n      node.name = name;\n      node.type = \"PrivateIdentifier\";\n      return node;\n    }\n\n    isPrivateName(node: N.Node): boolean {\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n        return super.isPrivateName(node);\n      }\n      return node.type === \"PrivateIdentifier\";\n    }\n\n    getPrivateNameSV(node: N.Node): string {\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n        return super.getPrivateNameSV(node);\n      }\n      return node.name;\n    }\n\n    parseLiteral<T: N.Node>(value: any, type: $ElementType<T, \"type\">): T {\n      const node = super.parseLiteral<T>(value, type);\n      node.raw = node.extra.raw;\n      delete node.extra;\n\n      return node;\n    }\n\n    parseFunctionBody(\n      node: N.Function,\n      allowExpression: ?boolean,\n      isMethod?: boolean = false,\n    ): void {\n      super.parseFunctionBody(node, allowExpression, isMethod);\n      node.expression = node.body.type !== \"BlockStatement\";\n    }\n\n    parseMethod<T: N.MethodLike>(\n      node: T,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowDirectSuper: boolean,\n      type: string,\n      inClassScope: boolean = false,\n    ): T {\n      let funcNode = this.startNode();\n      funcNode.kind = node.kind; // provide kind, so super method correctly sets state\n      funcNode = super.parseMethod(\n        funcNode,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowDirectSuper,\n        type,\n        inClassScope,\n      );\n      funcNode.type = \"FunctionExpression\";\n      delete funcNode.kind;\n      // $FlowIgnore\n      node.value = funcNode;\n      if (type === \"ClassPrivateMethod\") {\n        // $FlowIgnore\n        node.computed = false;\n      }\n      type = \"MethodDefinition\";\n      return this.finishNode(node, type);\n    }\n\n    parseClassProperty(...args: [N.ClassProperty]): any {\n      const propertyNode = (super.parseClassProperty(...args): any);\n      if (this.getPluginOption(\"estree\", \"classFeatures\")) {\n        propertyNode.type = \"PropertyDefinition\";\n      }\n      return (propertyNode: N.EstreePropertyDefinition);\n    }\n\n    parseClassPrivateProperty(...args: [N.ClassPrivateProperty]): any {\n      const propertyNode = (super.parseClassPrivateProperty(...args): any);\n      if (this.getPluginOption(\"estree\", \"classFeatures\")) {\n        propertyNode.type = \"PropertyDefinition\";\n        propertyNode.computed = false;\n      }\n      return (propertyNode: N.EstreePropertyDefinition);\n    }\n\n    parseObjectMethod(\n      prop: N.ObjectMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isPattern: boolean,\n      isAccessor: boolean,\n    ): ?N.ObjectMethod {\n      const node: N.EstreeProperty = (super.parseObjectMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n      ): any);\n\n      if (node) {\n        node.type = \"Property\";\n        if (((node: any): N.ClassMethod).kind === \"method\") node.kind = \"init\";\n        node.shorthand = false;\n      }\n\n      return (node: any);\n    }\n\n    parseObjectProperty(\n      prop: N.ObjectProperty,\n      startPos: ?number,\n      startLoc: ?Position,\n      isPattern: boolean,\n      refExpressionErrors: ?ExpressionErrors,\n    ): ?N.ObjectProperty {\n      const node: N.EstreeProperty = (super.parseObjectProperty(\n        prop,\n        startPos,\n        startLoc,\n        isPattern,\n        refExpressionErrors,\n      ): any);\n\n      if (node) {\n        node.kind = \"init\";\n        node.type = \"Property\";\n      }\n\n      return (node: any);\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean = false): N.Node {\n      if (node != null && this.isObjectProperty(node)) {\n        this.toAssignable(node.value, isLHS);\n\n        return node;\n      }\n\n      return super.toAssignable(node, isLHS);\n    }\n\n    toAssignableObjectExpressionProp(prop: N.Node, ...args) {\n      if (prop.kind === \"get\" || prop.kind === \"set\") {\n        this.raise(prop.key.start, Errors.PatternHasAccessor);\n      } else if (prop.method) {\n        this.raise(prop.key.start, Errors.PatternHasMethod);\n      } else {\n        super.toAssignableObjectExpressionProp(prop, ...args);\n      }\n    }\n\n    finishCallExpression<T: N.CallExpression | N.OptionalCallExpression>(\n      node: T,\n      optional: boolean,\n    ): N.Expression {\n      super.finishCallExpression(node, optional);\n\n      if (node.callee.type === \"Import\") {\n        ((node: N.Node): N.EstreeImportExpression).type = \"ImportExpression\";\n        ((node: N.Node): N.EstreeImportExpression).source = node.arguments[0];\n        if (this.hasPlugin(\"importAssertions\")) {\n          ((node: N.Node): N.EstreeImportExpression).attributes =\n            node.arguments[1] ?? null;\n        }\n        // $FlowIgnore - arguments isn't optional in the type definition\n        delete node.arguments;\n        // $FlowIgnore - callee isn't optional in the type definition\n        delete node.callee;\n      }\n\n      return node;\n    }\n\n    toReferencedArguments(\n      node:\n        | N.CallExpression\n        | N.OptionalCallExpression\n        | N.EstreeImportExpression,\n      /* isParenthesizedExpr?: boolean, */\n    ) {\n      // ImportExpressions do not have an arguments array.\n      if (node.type === \"ImportExpression\") {\n        return;\n      }\n\n      super.toReferencedArguments(node);\n    }\n\n    parseExport(node: N.Node) {\n      super.parseExport(node);\n\n      switch (node.type) {\n        case \"ExportAllDeclaration\":\n          node.exported = null;\n          break;\n\n        case \"ExportNamedDeclaration\":\n          if (\n            node.specifiers.length === 1 &&\n            node.specifiers[0].type === \"ExportNamespaceSpecifier\"\n          ) {\n            node.type = \"ExportAllDeclaration\";\n            node.exported = node.specifiers[0].exported;\n            delete node.specifiers;\n          }\n\n          break;\n      }\n\n      return node;\n    }\n\n    parseSubscript(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls: ?boolean,\n      state: N.ParseSubscriptState,\n    ) {\n      const node = super.parseSubscript(\n        base,\n        startPos,\n        startLoc,\n        noCalls,\n        state,\n      );\n\n      if (state.optionalChainMember) {\n        // https://github.com/estree/estree/blob/master/es2020.md#chainexpression\n        if (\n          node.type === \"OptionalMemberExpression\" ||\n          node.type === \"OptionalCallExpression\"\n        ) {\n          node.type = node.type.substring(8); // strip Optional prefix\n        }\n        if (state.stop) {\n          const chain = this.startNodeAtNode(node);\n          chain.expression = node;\n          return this.finishNode(chain, \"ChainExpression\");\n        }\n      } else if (\n        node.type === \"MemberExpression\" ||\n        node.type === \"CallExpression\"\n      ) {\n        node.optional = false;\n      }\n\n      return node;\n    }\n\n    hasPropertyAsPrivateName(node: N.Node): boolean {\n      if (node.type === \"ChainExpression\") {\n        node = node.expression;\n      }\n      return super.hasPropertyAsPrivateName(node);\n    }\n\n    isOptionalChain(node: N.Node): boolean {\n      return node.type === \"ChainExpression\";\n    }\n\n    isObjectProperty(node: N.Node): boolean {\n      return node.type === \"Property\" && node.kind === \"init\" && !node.method;\n    }\n\n    isObjectMethod(node: N.Node): boolean {\n      return node.method || node.kind === \"get\" || node.kind === \"set\";\n    }\n  };\n","// @flow\n\n// The algorithm used to determine whether a regexp can appear at a\n// given point in the program is loosely based on sweet.js' approach.\n// See https://github.com/mozilla/sweet.js/wiki/design\n\nimport { types as tt } from \"./types\";\n\nexport class TokContext {\n  constructor(token: string, isExpr?: boolean, preserveSpace?: boolean) {\n    this.token = token;\n    this.isExpr = !!isExpr;\n    this.preserveSpace = !!preserveSpace;\n  }\n\n  token: string;\n  isExpr: boolean;\n  preserveSpace: boolean;\n}\n\nexport const types: {\n  [key: string]: TokContext,\n} = {\n  braceStatement: new TokContext(\"{\", false),\n  braceExpression: new TokContext(\"{\", true),\n  recordExpression: new TokContext(\"#{\", true),\n  templateQuasi: new TokContext(\"${\", false),\n  parenStatement: new TokContext(\"(\", false),\n  parenExpression: new TokContext(\"(\", true),\n  template: new TokContext(\"`\", true, true),\n  functionExpression: new TokContext(\"function\", true),\n  functionStatement: new TokContext(\"function\", false),\n};\n\n// Token-specific context update code\n// Note that we should avoid accessing `this.prodParam` in context update,\n// because it is executed immediately when last token is consumed, which may be\n// before `this.prodParam` is updated. e.g.\n// ```\n// function *g() { () => yield / 2 }\n// ```\n// When `=>` is eaten, the context update of `yield` is executed, however,\n// `this.prodParam` still has `[Yield]` production because it is not yet updated\n\ntt.parenR.updateContext = tt.braceR.updateContext = function () {\n  if (this.state.context.length === 1) {\n    this.state.exprAllowed = true;\n    return;\n  }\n\n  let out = this.state.context.pop();\n  if (out === types.braceStatement && this.curContext().token === \"function\") {\n    out = this.state.context.pop();\n  }\n\n  this.state.exprAllowed = !out.isExpr;\n};\n\ntt.name.updateContext = function (prevType) {\n  let allowed = false;\n  if (prevType !== tt.dot) {\n    if (\n      this.state.value === \"of\" &&\n      !this.state.exprAllowed &&\n      prevType !== tt._function &&\n      prevType !== tt._class\n    ) {\n      allowed = true;\n    }\n  }\n  this.state.exprAllowed = allowed;\n};\n\ntt.braceL.updateContext = function (prevType) {\n  this.state.context.push(\n    this.braceIsBlock(prevType) ? types.braceStatement : types.braceExpression,\n  );\n  this.state.exprAllowed = true;\n};\n\ntt.dollarBraceL.updateContext = function () {\n  this.state.context.push(types.templateQuasi);\n  this.state.exprAllowed = true;\n};\n\ntt.parenL.updateContext = function (prevType) {\n  const statementParens =\n    prevType === tt._if ||\n    prevType === tt._for ||\n    prevType === tt._with ||\n    prevType === tt._while;\n  this.state.context.push(\n    statementParens ? types.parenStatement : types.parenExpression,\n  );\n  this.state.exprAllowed = true;\n};\n\ntt.incDec.updateContext = function () {\n  // tokExprAllowed stays unchanged\n};\n\ntt._function.updateContext = tt._class.updateContext = function (prevType) {\n  if (\n    prevType.beforeExpr &&\n    prevType !== tt.semi &&\n    prevType !== tt._else &&\n    !(prevType === tt._return && this.hasPrecedingLineBreak()) &&\n    !(\n      (prevType === tt.colon || prevType === tt.braceL) &&\n      this.curContext() === types.b_stat\n    )\n  ) {\n    this.state.context.push(types.functionExpression);\n  } else {\n    this.state.context.push(types.functionStatement);\n  }\n\n  this.state.exprAllowed = false;\n};\n\ntt.backQuote.updateContext = function () {\n  if (this.curContext() === types.template) {\n    this.state.context.pop();\n  } else {\n    this.state.context.push(types.template);\n  }\n  this.state.exprAllowed = false;\n};\n\n// we don't need to update context for tt.braceBarL because we do not pop context for tt.braceBarR\ntt.braceHashL.updateContext = function () {\n  this.state.context.push(types.recordExpression);\n  this.state.exprAllowed = true; /* tt.braceHashL.beforeExpr */\n};\n","import * as charCodes from \"charcodes\";\n\n// ## Character categories\n\n// Big ugly regular expressions that match characters in the\n// whitespace, identifier, and identifier-start categories. These\n// are only applied when a character is found to actually have a\n// code point between 0x80 and 0xffff.\n// Generated by `scripts/generate-identifier-regex.js`.\n\n/* prettier-ignore */\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08c7\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\u9ffc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7ca\\ua7f5-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\n/* prettier-ignore */\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf\\u1ac0\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\n\nconst nonASCIIidentifierStart = new RegExp(\n  \"[\" + nonASCIIidentifierStartChars + \"]\",\n);\nconst nonASCIIidentifier = new RegExp(\n  \"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\",\n);\n\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\n\n// These are a run-length and offset-encoded representation of the\n// >0xffff code points that are a valid part of identifiers. The\n// offset starts at 0x10000, and each pair of numbers represents an\n// offset to the next range, and then a size of the range. They were\n// generated by `scripts/generate-identifier-regex.js`.\n/* prettier-ignore */\n/* prettier-ignore */\nconst astralIdentifierStartCodes = [0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,157,310,10,21,11,7,153,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,349,41,7,1,79,28,11,0,9,21,107,20,28,22,13,52,76,44,33,24,27,35,30,0,3,0,9,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,21,2,31,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,14,0,72,26,230,43,117,63,32,7,3,0,3,7,2,1,2,23,16,0,2,0,95,7,3,38,17,0,2,0,29,0,11,39,8,0,22,0,12,45,20,0,35,56,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,190,0,80,921,103,110,18,195,2749,1070,4050,582,8634,568,8,30,114,29,19,47,17,3,32,20,6,18,689,63,129,74,6,0,67,12,65,1,2,0,29,6135,9,1237,43,8,8952,286,50,2,18,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,2357,44,11,6,17,0,370,43,1301,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42717,35,4148,12,221,3,5761,15,7472,3104,541,1507,4938];\n/* prettier-ignore */\nconst astralIdentifierCodes = [509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,370,1,154,10,176,2,54,14,32,9,16,3,46,10,54,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,2,11,83,11,7,0,161,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,71,5,2,1,3,3,2,0,2,1,13,9,120,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,19306,9,135,4,60,6,26,9,1014,0,2,54,8,3,82,0,12,1,19628,1,5319,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,262,6,10,9,419,13,1495,6,110,6,6,9,4759,9,787719,239];\n\n// This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\nfunction isInAstralSet(code: number, set: readonly number[]): boolean {\n  let pos = 0x10000;\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n  return false;\n}\n\n// Test whether a given character code starts an identifier.\n\nexport function isIdentifierStart(code: number): boolean {\n  if (code < charCodes.uppercaseA) return code === charCodes.dollarSign;\n  if (code <= charCodes.uppercaseZ) return true;\n  if (code < charCodes.lowercaseA) return code === charCodes.underscore;\n  if (code <= charCodes.lowercaseZ) return true;\n  if (code <= 0xffff) {\n    return (\n      code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code))\n    );\n  }\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\n\n// Test whether a given character is part of an identifier.\n\nexport function isIdentifierChar(code: number): boolean {\n  if (code < charCodes.digit0) return code === charCodes.dollarSign;\n  if (code < charCodes.colon) return true;\n  if (code < charCodes.uppercaseA) return false;\n  if (code <= charCodes.uppercaseZ) return true;\n  if (code < charCodes.lowercaseA) return code === charCodes.underscore;\n  if (code <= charCodes.lowercaseZ) return true;\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n  return (\n    isInAstralSet(code, astralIdentifierStartCodes) ||\n    isInAstralSet(code, astralIdentifierCodes)\n  );\n}\n\n// Test whether a given string is a valid identifier name\n\nexport function isIdentifierName(name: string): boolean {\n  let isFirst = true;\n  for (let i = 0; i < name.length; i++) {\n    // The implementation is based on\n    // https://source.chromium.org/chromium/chromium/src/+/master:v8/src/builtins/builtins-string-gen.cc;l=1455;drc=221e331b49dfefadbc6fa40b0c68e6f97606d0b3;bpv=0;bpt=1\n    // We reimplement `codePointAt` because `codePointAt` is a V8 builtin which is not inlined by TurboFan (as of M91)\n    // since `name` is mostly ASCII, an inlined `charCodeAt` wins here\n    let cp = name.charCodeAt(i);\n    if ((cp & 0xfc00) === 0xd800 && i + 1 < name.length) {\n      const trail = name.charCodeAt(++i);\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n    if (isFirst) {\n      isFirst = false;\n      if (!isIdentifierStart(cp)) {\n        return false;\n      }\n    } else if (!isIdentifierChar(cp)) {\n      return false;\n    }\n  }\n  return !isFirst;\n}\n","const reservedWords = {\n  keyword: [\n    \"break\",\n    \"case\",\n    \"catch\",\n    \"continue\",\n    \"debugger\",\n    \"default\",\n    \"do\",\n    \"else\",\n    \"finally\",\n    \"for\",\n    \"function\",\n    \"if\",\n    \"return\",\n    \"switch\",\n    \"throw\",\n    \"try\",\n    \"var\",\n    \"const\",\n    \"while\",\n    \"with\",\n    \"new\",\n    \"this\",\n    \"super\",\n    \"class\",\n    \"extends\",\n    \"export\",\n    \"import\",\n    \"null\",\n    \"true\",\n    \"false\",\n    \"in\",\n    \"instanceof\",\n    \"typeof\",\n    \"void\",\n    \"delete\",\n  ],\n  strict: [\n    \"implements\",\n    \"interface\",\n    \"let\",\n    \"package\",\n    \"private\",\n    \"protected\",\n    \"public\",\n    \"static\",\n    \"yield\",\n  ],\n  strictBind: [\"eval\", \"arguments\"],\n};\nconst keywords = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\n\n/**\n * Checks if word is a reserved word in non-strict mode\n */\nexport function isReservedWord(word: string, inModule: boolean): boolean {\n  return (inModule && word === \"await\") || word === \"enum\";\n}\n\n/**\n * Checks if word is a reserved word in non-binding strict mode\n *\n * Includes non-strict reserved words\n */\nexport function isStrictReservedWord(word: string, inModule: boolean): boolean {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\n\n/**\n * Checks if word is a reserved word in binding strict mode, but it is allowed as\n * a normal identifier.\n */\nexport function isStrictBindOnlyReservedWord(word: string): boolean {\n  return reservedWordsStrictBindSet.has(word);\n}\n\n/**\n * Checks if word is a reserved word in binding strict mode\n *\n * Includes non-strict reserved words and non-binding strict reserved words\n */\nexport function isStrictBindReservedWord(\n  word: string,\n  inModule: boolean,\n): boolean {\n  return (\n    isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word)\n  );\n}\n\nexport function isKeyword(word: string): boolean {\n  return keywords.has(word);\n}\n","/* eslint max-len: 0 */\n\n// @flow\n\nimport * as charCodes from \"charcodes\";\n\nexport {\n  isIdentifierStart,\n  isIdentifierChar,\n  isReservedWord,\n  isStrictBindOnlyReservedWord,\n  isStrictBindReservedWord,\n  isStrictReservedWord,\n  isKeyword,\n} from \"@babel/helper-validator-identifier\";\n\nexport const keywordRelationalOperator = /^in(stanceof)?$/;\n\n// Test whether a current state character code and next character code is @\n\nexport function isIteratorStart(current: number, next: number): boolean {\n  return current === charCodes.atSign && next === charCodes.atSign;\n}\n","// @flow\n\n// Each scope gets a bitset that may contain these flags\n// prettier-ignore\nexport const SCOPE_OTHER        = 0b000000000,\n             SCOPE_PROGRAM      = 0b000000001,\n             SCOPE_FUNCTION     = 0b000000010,\n             SCOPE_ARROW        = 0b000000100,\n             SCOPE_SIMPLE_CATCH = 0b000001000,\n             SCOPE_SUPER        = 0b000010000,\n             SCOPE_DIRECT_SUPER = 0b000100000,\n             SCOPE_CLASS        = 0b001000000,\n             SCOPE_STATIC_BLOCK = 0b010000000,\n             SCOPE_TS_MODULE    = 0b100000000,\n             SCOPE_VAR = SCOPE_PROGRAM | SCOPE_FUNCTION | SCOPE_TS_MODULE;\n\nexport type ScopeFlags =\n  | typeof SCOPE_OTHER\n  | typeof SCOPE_PROGRAM\n  | typeof SCOPE_FUNCTION\n  | typeof SCOPE_VAR\n  | typeof SCOPE_ARROW\n  | typeof SCOPE_SIMPLE_CATCH\n  | typeof SCOPE_SUPER\n  | typeof SCOPE_DIRECT_SUPER\n  | typeof SCOPE_CLASS\n  | typeof SCOPE_STATIC_BLOCK;\n\n// These flags are meant to be _only_ used inside the Scope class (or subclasses).\n// prettier-ignore\nexport const BIND_KIND_VALUE            = 0b000000_0000_01,\n             BIND_KIND_TYPE             = 0b000000_0000_10,\n             // Used in checkLVal and declareName to determine the type of a binding\n             BIND_SCOPE_VAR             = 0b000000_0001_00, // Var-style binding\n             BIND_SCOPE_LEXICAL         = 0b000000_0010_00, // Let- or const-style binding\n             BIND_SCOPE_FUNCTION        = 0b000000_0100_00, // Function declaration\n             BIND_SCOPE_OUTSIDE         = 0b000000_1000_00, // Special case for function names as\n                                                   // bound inside the function\n             // Misc flags\n             BIND_FLAGS_NONE            = 0b000001_0000_00,\n             BIND_FLAGS_CLASS           = 0b000010_0000_00,\n             BIND_FLAGS_TS_ENUM         = 0b000100_0000_00,\n             BIND_FLAGS_TS_CONST_ENUM   = 0b001000_0000_00,\n             BIND_FLAGS_TS_EXPORT_ONLY  = 0b010000_0000_00,\n             BIND_FLAGS_FLOW_DECLARE_FN = 0b100000_0000_00;\n\n// These flags are meant to be _only_ used by Scope consumers\n// prettier-ignore\n/*                              =    is value?    |    is type?    |      scope          |    misc flags    */\nexport const BIND_CLASS         = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL  | BIND_FLAGS_CLASS  ,\n             BIND_LEXICAL       = BIND_KIND_VALUE | 0              | BIND_SCOPE_LEXICAL  | 0                 ,\n             BIND_VAR           = BIND_KIND_VALUE | 0              | BIND_SCOPE_VAR      | 0                 ,\n             BIND_FUNCTION      = BIND_KIND_VALUE | 0              | BIND_SCOPE_FUNCTION | 0                 ,\n             BIND_TS_INTERFACE  = 0               | BIND_KIND_TYPE | 0                   | BIND_FLAGS_CLASS  ,\n             BIND_TS_TYPE       = 0               | BIND_KIND_TYPE | 0                   | 0                 ,\n             BIND_TS_ENUM       = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL  | BIND_FLAGS_TS_ENUM,\n             BIND_TS_AMBIENT    = 0               | 0              | 0            | BIND_FLAGS_TS_EXPORT_ONLY,\n             // These bindings don't introduce anything in the scope. They are used for assignments and\n             // function expressions IDs.\n             BIND_NONE          = 0               | 0              | 0                   | BIND_FLAGS_NONE   ,\n             BIND_OUTSIDE       = BIND_KIND_VALUE | 0              | 0                   | BIND_FLAGS_NONE   ,\n\n             BIND_TS_CONST_ENUM = BIND_TS_ENUM | BIND_FLAGS_TS_CONST_ENUM,\n             BIND_TS_NAMESPACE  = 0               | 0              | 0            | BIND_FLAGS_TS_EXPORT_ONLY,\n\n             BIND_FLOW_DECLARE_FN = BIND_FLAGS_FLOW_DECLARE_FN;\n\nexport type BindingTypes =\n  | typeof BIND_NONE\n  | typeof BIND_OUTSIDE\n  | typeof BIND_VAR\n  | typeof BIND_LEXICAL\n  | typeof BIND_CLASS\n  | typeof BIND_FUNCTION\n  | typeof BIND_TS_INTERFACE\n  | typeof BIND_TS_TYPE\n  | typeof BIND_TS_ENUM\n  | typeof BIND_TS_AMBIENT\n  | typeof BIND_TS_NAMESPACE;\n\n// prettier-ignore\nexport const CLASS_ELEMENT_FLAG_STATIC = 0b1_00,\n             CLASS_ELEMENT_KIND_GETTER = 0b0_10,\n             CLASS_ELEMENT_KIND_SETTER = 0b0_01,\n             CLASS_ELEMENT_KIND_ACCESSOR = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_KIND_SETTER;\n\n// prettier-ignore\nexport const CLASS_ELEMENT_STATIC_GETTER   = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_FLAG_STATIC,\n             CLASS_ELEMENT_STATIC_SETTER   = CLASS_ELEMENT_KIND_SETTER | CLASS_ELEMENT_FLAG_STATIC,\n             CLASS_ELEMENT_INSTANCE_GETTER = CLASS_ELEMENT_KIND_GETTER,\n             CLASS_ELEMENT_INSTANCE_SETTER = CLASS_ELEMENT_KIND_SETTER,\n             CLASS_ELEMENT_OTHER           = 0;\n\nexport type ClassElementTypes =\n  | typeof CLASS_ELEMENT_STATIC_GETTER\n  | typeof CLASS_ELEMENT_STATIC_SETTER\n  | typeof CLASS_ELEMENT_INSTANCE_GETTER\n  | typeof CLASS_ELEMENT_INSTANCE_SETTER\n  | typeof CLASS_ELEMENT_OTHER;\n","// @flow\nimport {\n  SCOPE_ARROW,\n  SCOPE_DIRECT_SUPER,\n  SCOPE_FUNCTION,\n  SCOPE_SIMPLE_CATCH,\n  SCOPE_SUPER,\n  SCOPE_PROGRAM,\n  SCOPE_VAR,\n  SCOPE_CLASS,\n  SCOPE_STATIC_BLOCK,\n  BIND_SCOPE_FUNCTION,\n  BIND_SCOPE_VAR,\n  BIND_SCOPE_LEXICAL,\n  BIND_KIND_VALUE,\n  type ScopeFlags,\n  type BindingTypes,\n} from \"./scopeflags\";\nimport * as N from \"../types\";\nimport { Errors, type raiseFunction } from \"../parser/error\";\n\n// Start an AST node, attaching a start offset.\nexport class Scope {\n  flags: ScopeFlags;\n  // A list of var-declared names in the current lexical scope\n  var: string[] = [];\n  // A list of lexically-declared names in the current lexical scope\n  lexical: string[] = [];\n  // A list of lexically-declared FunctionDeclaration names in the current lexical scope\n  functions: string[] = [];\n\n  constructor(flags: ScopeFlags) {\n    this.flags = flags;\n  }\n}\n\n// The functions in this module keep track of declared variables in the\n// current scope in order to detect duplicate variable names.\nexport default class ScopeHandler<IScope: Scope = Scope> {\n  scopeStack: Array<IScope> = [];\n  declare raise: raiseFunction;\n  declare inModule: boolean;\n  undefinedExports: Map<string, number> = new Map();\n  undefinedPrivateNames: Map<string, number> = new Map();\n\n  constructor(raise: raiseFunction, inModule: boolean) {\n    this.raise = raise;\n    this.inModule = inModule;\n  }\n\n  get inFunction() {\n    return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0;\n  }\n  get allowSuper() {\n    return (this.currentThisScope().flags & SCOPE_SUPER) > 0;\n  }\n  get allowDirectSuper() {\n    return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0;\n  }\n  get inClass() {\n    return (this.currentThisScope().flags & SCOPE_CLASS) > 0;\n  }\n  get inStaticBlock() {\n    return (this.currentThisScope().flags & SCOPE_STATIC_BLOCK) > 0;\n  }\n  get inNonArrowFunction() {\n    return (this.currentThisScope().flags & SCOPE_FUNCTION) > 0;\n  }\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n\n  createScope(flags: ScopeFlags): Scope {\n    return new Scope(flags);\n  }\n  // This method will be overwritten by subclasses\n  /*:: +createScope: (flags: ScopeFlags) => IScope; */\n\n  enter(flags: ScopeFlags) {\n    this.scopeStack.push(this.createScope(flags));\n  }\n\n  exit() {\n    this.scopeStack.pop();\n  }\n\n  // The spec says:\n  // > At the top level of a function, or script, function declarations are\n  // > treated like var declarations rather than like lexical declarations.\n  treatFunctionsAsVarInScope(scope: IScope): boolean {\n    return !!(\n      scope.flags & SCOPE_FUNCTION ||\n      (!this.inModule && scope.flags & SCOPE_PROGRAM)\n    );\n  }\n\n  declareName(name: string, bindingType: BindingTypes, pos: number) {\n    let scope = this.currentScope();\n    if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n\n      if (bindingType & BIND_SCOPE_FUNCTION) {\n        scope.functions.push(name);\n      } else {\n        scope.lexical.push(name);\n      }\n\n      if (bindingType & BIND_SCOPE_LEXICAL) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & BIND_SCOPE_VAR) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        scope.var.push(name);\n        this.maybeExportDefined(scope, name);\n\n        if (scope.flags & SCOPE_VAR) break;\n      }\n    }\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  maybeExportDefined(scope: IScope, name: string) {\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  checkRedeclarationInScope(\n    scope: IScope,\n    name: string,\n    bindingType: BindingTypes,\n    pos: number,\n  ) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.raise(pos, Errors.VarRedeclaration, name);\n    }\n  }\n\n  isRedeclaredInScope(\n    scope: IScope,\n    name: string,\n    bindingType: BindingTypes,\n  ): boolean {\n    if (!(bindingType & BIND_KIND_VALUE)) return false;\n\n    if (bindingType & BIND_SCOPE_LEXICAL) {\n      return (\n        scope.lexical.indexOf(name) > -1 ||\n        scope.functions.indexOf(name) > -1 ||\n        scope.var.indexOf(name) > -1\n      );\n    }\n\n    if (bindingType & BIND_SCOPE_FUNCTION) {\n      return (\n        scope.lexical.indexOf(name) > -1 ||\n        (!this.treatFunctionsAsVarInScope(scope) &&\n          scope.var.indexOf(name) > -1)\n      );\n    }\n\n    return (\n      (scope.lexical.indexOf(name) > -1 &&\n        !(scope.flags & SCOPE_SIMPLE_CATCH && scope.lexical[0] === name)) ||\n      (!this.treatFunctionsAsVarInScope(scope) &&\n        scope.functions.indexOf(name) > -1)\n    );\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    if (\n      this.scopeStack[0].lexical.indexOf(id.name) === -1 &&\n      this.scopeStack[0].var.indexOf(id.name) === -1 &&\n      // In strict mode, scope.functions will always be empty.\n      // Modules are strict by default, but the `scriptMode` option\n      // can overwrite this behavior.\n      this.scopeStack[0].functions.indexOf(id.name) === -1\n    ) {\n      this.undefinedExports.set(id.name, id.start);\n    }\n  }\n\n  currentScope(): IScope {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n\n  // $FlowIgnore\n  currentVarScope(): IScope {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const scope = this.scopeStack[i];\n      if (scope.flags & SCOPE_VAR) {\n        return scope;\n      }\n    }\n  }\n\n  // Could be useful for `arguments`, `this`, `new.target`, `super()`, `super.property`, and `super[property]`.\n  // $FlowIgnore\n  currentThisScope(): IScope {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const scope = this.scopeStack[i];\n      if (\n        (scope.flags & SCOPE_VAR || scope.flags & SCOPE_CLASS) &&\n        !(scope.flags & SCOPE_ARROW)\n      ) {\n        return scope;\n      }\n    }\n  }\n}\n","// @flow\n\nimport ScopeHandler, { Scope } from \"../../util/scope\";\nimport {\n  BIND_FLAGS_FLOW_DECLARE_FN,\n  type ScopeFlags,\n  type BindingTypes,\n} from \"../../util/scopeflags\";\nimport * as N from \"../../types\";\n\n// Reference implementation: https://github.com/facebook/flow/blob/23aeb2a2ef6eb4241ce178fde5d8f17c5f747fb5/src/typing/env.ml#L536-L584\nclass FlowScope extends Scope {\n  // declare function foo(): type;\n  declareFunctions: string[] = [];\n}\n\nexport default class FlowScopeHandler extends ScopeHandler<FlowScope> {\n  createScope(flags: ScopeFlags): FlowScope {\n    return new FlowScope(flags);\n  }\n\n  declareName(name: string, bindingType: BindingTypes, pos: number) {\n    const scope = this.currentScope();\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n      this.maybeExportDefined(scope, name);\n      scope.declareFunctions.push(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n  }\n\n  isRedeclaredInScope(\n    scope: FlowScope,\n    name: string,\n    bindingType: BindingTypes,\n  ): boolean {\n    if (super.isRedeclaredInScope(...arguments)) return true;\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      return (\n        !scope.declareFunctions.includes(name) &&\n        (scope.lexical.includes(name) || scope.functions.includes(name))\n      );\n    }\n\n    return false;\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    if (this.scopeStack[0].declareFunctions.indexOf(id.name) === -1) {\n      super.checkLocalExport(id);\n    }\n  }\n}\n","// @flow\n\n/*:: declare var invariant; */\n\n// Error messages are colocated with the plugin.\n/* eslint-disable @babel/development-internal/dry-error-messages */\n\nimport type Parser from \"../../parser\";\nimport { types as tt, type TokenType } from \"../../tokenizer/types\";\nimport * as N from \"../../types\";\nimport type { Pos, Position } from \"../../util/location\";\nimport { types as tc } from \"../../tokenizer/context\";\nimport * as charCodes from \"charcodes\";\nimport { isIteratorStart, isKeyword } from \"../../util/identifier\";\nimport FlowScopeHandler from \"./scope\";\nimport {\n  type BindingTypes,\n  BIND_LEXICAL,\n  BIND_VAR,\n  BIND_FUNCTION,\n  BIND_FLOW_DECLARE_FN,\n  SCOPE_ARROW,\n  SCOPE_FUNCTION,\n  SCOPE_OTHER,\n} from \"../../util/scopeflags\";\nimport type { ExpressionErrors } from \"../../parser/util\";\nimport { Errors, makeErrorTemplates, ErrorCodes } from \"../../parser/error\";\n\nconst reservedTypes = new Set([\n  \"_\",\n  \"any\",\n  \"bool\",\n  \"boolean\",\n  \"empty\",\n  \"extends\",\n  \"false\",\n  \"interface\",\n  \"mixed\",\n  \"null\",\n  \"number\",\n  \"static\",\n  \"string\",\n  \"true\",\n  \"typeof\",\n  \"void\",\n]);\n\n/* eslint sort-keys: \"error\" */\n// The Errors key follows https://github.com/facebook/flow/blob/master/src/parser/parse_error.ml unless it does not exist\nconst FlowErrors = makeErrorTemplates(\n  {\n    AmbiguousConditionalArrow:\n      \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n    AmbiguousDeclareModuleKind:\n      \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module.\",\n    AssignReservedType: \"Cannot overwrite reserved type %0.\",\n    DeclareClassElement:\n      \"The `declare` modifier can only appear on class fields.\",\n    DeclareClassFieldInitializer:\n      \"Initializers are not allowed in fields with the `declare` modifier.\",\n    DuplicateDeclareModuleExports:\n      \"Duplicate `declare module.exports` statement.\",\n    EnumBooleanMemberNotInitialized:\n      \"Boolean enum members need to be initialized. Use either `%0 = true,` or `%0 = false,` in enum `%1`.\",\n    EnumDuplicateMemberName:\n      \"Enum member names need to be unique, but the name `%0` has already been used before in enum `%1`.\",\n    EnumInconsistentMemberValues:\n      \"Enum `%0` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.\",\n    EnumInvalidExplicitType:\n      \"Enum type `%1` is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n    EnumInvalidExplicitTypeUnknownSupplied:\n      \"Supplied enum type is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n    EnumInvalidMemberInitializerPrimaryType:\n      \"Enum `%0` has type `%2`, so the initializer of `%1` needs to be a %2 literal.\",\n    EnumInvalidMemberInitializerSymbolType:\n      \"Symbol enum members cannot be initialized. Use `%1,` in enum `%0`.\",\n    EnumInvalidMemberInitializerUnknownType:\n      \"The enum member initializer for `%1` needs to be a literal (either a boolean, number, or string) in enum `%0`.\",\n    EnumInvalidMemberName:\n      \"Enum member names cannot start with lowercase 'a' through 'z'. Instead of using `%0`, consider using `%1`, in enum `%2`.\",\n    EnumNumberMemberNotInitialized:\n      \"Number enum members need to be initialized, e.g. `%1 = 1` in enum `%0`.\",\n    EnumStringMemberInconsistentlyInitailized:\n      \"String enum members need to consistently either all use initializers, or use no initializers, in enum `%0`.\",\n    GetterMayNotHaveThisParam: \"A getter cannot have a `this` parameter.\",\n    ImportTypeShorthandOnlyInPureImport:\n      \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements.\",\n    InexactInsideExact:\n      \"Explicit inexact syntax cannot appear inside an explicit exact object type.\",\n    InexactInsideNonObject:\n      \"Explicit inexact syntax cannot appear in class or interface definitions.\",\n    InexactVariance: \"Explicit inexact syntax cannot have variance.\",\n    InvalidNonTypeImportInDeclareModule:\n      \"Imports within a `declare module` body must always be `import type` or `import typeof`.\",\n    MissingTypeParamDefault:\n      \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n    NestedDeclareModule:\n      \"`declare module` cannot be used inside another `declare module`.\",\n    NestedFlowComment:\n      \"Cannot have a flow comment inside another flow comment.\",\n    OptionalBindingPattern:\n      \"A binding pattern parameter cannot be optional in an implementation signature.\",\n    SetterMayNotHaveThisParam: \"A setter cannot have a `this` parameter.\",\n    SpreadVariance: \"Spread properties cannot have variance.\",\n    ThisParamAnnotationRequired:\n      \"A type annotation is required for the `this` parameter.\",\n    ThisParamBannedInConstructor:\n      \"Constructors cannot have a `this` parameter; constructors don't bind `this` like other functions.\",\n    ThisParamMayNotBeOptional: \"The `this` parameter cannot be optional.\",\n    ThisParamMustBeFirst:\n      \"The `this` parameter must be the first function parameter.\",\n    ThisParamNoDefault: \"The `this` parameter may not have a default value.\",\n    TypeBeforeInitializer:\n      \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n    TypeCastInPattern:\n      \"The type cast expression is expected to be wrapped with parenthesis.\",\n    UnexpectedExplicitInexactInObject:\n      \"Explicit inexact syntax must appear at the end of an inexact object.\",\n    UnexpectedReservedType: \"Unexpected reserved type %0.\",\n    UnexpectedReservedUnderscore:\n      \"`_` is only allowed as a type argument to call or new.\",\n    UnexpectedSpaceBetweenModuloChecks:\n      \"Spaces between `%` and `checks` are not allowed here.\",\n    UnexpectedSpreadType:\n      \"Spread operator cannot appear in class or interface definitions.\",\n    UnexpectedSubtractionOperand:\n      'Unexpected token, expected \"number\" or \"bigint\".',\n    UnexpectedTokenAfterTypeParameter:\n      \"Expected an arrow function after this type parameter declaration.\",\n    UnexpectedTypeParameterBeforeAsyncArrowFunction:\n      \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`.\",\n    UnsupportedDeclareExportKind:\n      \"`declare export %0` is not supported. Use `%1` instead.\",\n    UnsupportedStatementInDeclareModule:\n      \"Only declares and type imports are allowed inside declare module.\",\n    UnterminatedFlowComment: \"Unterminated flow-comment.\",\n  },\n  /* code */ ErrorCodes.SyntaxError,\n);\n/* eslint-disable sort-keys */\n\nfunction isEsModuleType(bodyElement: N.Node): boolean {\n  return (\n    bodyElement.type === \"DeclareExportAllDeclaration\" ||\n    (bodyElement.type === \"DeclareExportDeclaration\" &&\n      (!bodyElement.declaration ||\n        (bodyElement.declaration.type !== \"TypeAlias\" &&\n          bodyElement.declaration.type !== \"InterfaceDeclaration\")))\n  );\n}\n\nfunction hasTypeImportKind(node: N.Node): boolean {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\n\nfunction isMaybeDefaultImport(state: { type: TokenType, value: any }): boolean {\n  return (\n    (state.type === tt.name || !!state.type.keyword) && state.value !== \"from\"\n  );\n}\n\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\",\n};\n\n// Like Array#filter, but returns a tuple [ acceptedElements, discardedElements ]\nfunction partition<T>(\n  list: T[],\n  test: (T, number, T[]) => ?boolean,\n): [T[], T[]] {\n  const list1 = [];\n  const list2 = [];\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n  return [list1, list2];\n}\n\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\n\n// Flow enums types\ntype EnumExplicitType = null | \"boolean\" | \"number\" | \"string\" | \"symbol\";\ntype EnumContext = {|\n  enumName: string,\n  explicitType: EnumExplicitType,\n  memberName: string,\n|};\ntype EnumMemberInit =\n  | {| type: \"number\", pos: number, value: N.Node |}\n  | {| type: \"string\", pos: number, value: N.Node |}\n  | {| type: \"boolean\", pos: number, value: N.Node |}\n  | {| type: \"invalid\", pos: number |}\n  | {| type: \"none\", pos: number |};\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    // The value of the @flow/@noflow pragma. Initially undefined, transitions\n    // to \"@flow\" or \"@noflow\" if we see a pragma. Transitions to null if we are\n    // past the initial comment.\n    flowPragma: void | null | \"flow\" | \"noflow\" = undefined;\n\n    getScopeHandler(): Class<FlowScopeHandler> {\n      return FlowScopeHandler;\n    }\n\n    shouldParseTypes(): boolean {\n      return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n    }\n\n    shouldParseEnums(): boolean {\n      return !!this.getPluginOption(\"flow\", \"enums\");\n    }\n\n    finishToken(type: TokenType, val: any): void {\n      if (\n        type !== tt.string &&\n        type !== tt.semi &&\n        type !== tt.interpreterDirective\n      ) {\n        if (this.flowPragma === undefined) {\n          this.flowPragma = null;\n        }\n      }\n      return super.finishToken(type, val);\n    }\n\n    addComment(comment: N.Comment): void {\n      if (this.flowPragma === undefined) {\n        // Try to parse a flow pragma.\n        const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n        if (!matches) {\n          // do nothing\n        } else if (matches[1] === \"flow\") {\n          this.flowPragma = \"flow\";\n        } else if (matches[1] === \"noflow\") {\n          this.flowPragma = \"noflow\";\n        } else {\n          throw new Error(\"Unexpected flow pragma\");\n        }\n      }\n      return super.addComment(comment);\n    }\n\n    flowParseTypeInitialiser(tok?: TokenType): N.FlowType {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tok || tt.colon);\n\n      const type = this.flowParseType();\n      this.state.inType = oldInType;\n      return type;\n    }\n\n    flowParsePredicate(): N.FlowType {\n      const node = this.startNode();\n      const moduloPos = this.state.start;\n      this.next(); // eat `%`\n      this.expectContextual(\"checks\");\n      // Force '%' and 'checks' to be adjacent\n      if (this.state.lastTokStart > moduloPos + 1) {\n        this.raise(moduloPos, FlowErrors.UnexpectedSpaceBetweenModuloChecks);\n      }\n      if (this.eat(tt.parenL)) {\n        node.value = this.parseExpression();\n        this.expect(tt.parenR);\n        return this.finishNode(node, \"DeclaredPredicate\");\n      } else {\n        return this.finishNode(node, \"InferredPredicate\");\n      }\n    }\n\n    flowParseTypeAndPredicateInitialiser(): [?N.FlowType, ?N.FlowPredicate] {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tt.colon);\n      let type = null;\n      let predicate = null;\n      if (this.match(tt.modulo)) {\n        this.state.inType = oldInType;\n        predicate = this.flowParsePredicate();\n      } else {\n        type = this.flowParseType();\n        this.state.inType = oldInType;\n        if (this.match(tt.modulo)) {\n          predicate = this.flowParsePredicate();\n        }\n      }\n      return [type, predicate];\n    }\n\n    flowParseDeclareClass(node: N.FlowDeclareClass): N.FlowDeclareClass {\n      this.next();\n      this.flowParseInterfaceish(node, /*isClass*/ true);\n      return this.finishNode(node, \"DeclareClass\");\n    }\n\n    flowParseDeclareFunction(\n      node: N.FlowDeclareFunction,\n    ): N.FlowDeclareFunction {\n      this.next();\n\n      const id = (node.id = this.parseIdentifier());\n\n      const typeNode = this.startNode();\n      const typeContainer = this.startNode();\n\n      if (this.isRelational(\"<\")) {\n        typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        typeNode.typeParameters = null;\n      }\n\n      this.expect(tt.parenL);\n      const tmp = this.flowParseFunctionTypeParams();\n      typeNode.params = tmp.params;\n      typeNode.rest = tmp.rest;\n      typeNode.this = tmp._this;\n      this.expect(tt.parenR);\n\n      [\n        // $FlowFixMe (destructuring not supported yet)\n        typeNode.returnType,\n        // $FlowFixMe (destructuring not supported yet)\n        node.predicate,\n      ] = this.flowParseTypeAndPredicateInitialiser();\n\n      typeContainer.typeAnnotation = this.finishNode(\n        typeNode,\n        \"FunctionTypeAnnotation\",\n      );\n\n      id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n\n      this.resetEndLocation(id);\n      this.semicolon();\n\n      this.scope.declareName(node.id.name, BIND_FLOW_DECLARE_FN, node.id.start);\n\n      return this.finishNode(node, \"DeclareFunction\");\n    }\n\n    flowParseDeclare(\n      node: N.FlowDeclare,\n      insideModule?: boolean,\n    ): N.FlowDeclare {\n      if (this.match(tt._class)) {\n        return this.flowParseDeclareClass(node);\n      } else if (this.match(tt._function)) {\n        return this.flowParseDeclareFunction(node);\n      } else if (this.match(tt._var)) {\n        return this.flowParseDeclareVariable(node);\n      } else if (this.eatContextual(\"module\")) {\n        if (this.match(tt.dot)) {\n          return this.flowParseDeclareModuleExports(node);\n        } else {\n          if (insideModule) {\n            this.raise(this.state.lastTokStart, FlowErrors.NestedDeclareModule);\n          }\n          return this.flowParseDeclareModule(node);\n        }\n      } else if (this.isContextual(\"type\")) {\n        return this.flowParseDeclareTypeAlias(node);\n      } else if (this.isContextual(\"opaque\")) {\n        return this.flowParseDeclareOpaqueType(node);\n      } else if (this.isContextual(\"interface\")) {\n        return this.flowParseDeclareInterface(node);\n      } else if (this.match(tt._export)) {\n        return this.flowParseDeclareExportDeclaration(node, insideModule);\n      } else {\n        throw this.unexpected();\n      }\n    }\n\n    flowParseDeclareVariable(\n      node: N.FlowDeclareVariable,\n    ): N.FlowDeclareVariable {\n      this.next();\n      node.id = this.flowParseTypeAnnotatableIdentifier(\n        /*allowPrimitiveOverride*/ true,\n      );\n      this.scope.declareName(node.id.name, BIND_VAR, node.id.start);\n      this.semicolon();\n      return this.finishNode(node, \"DeclareVariable\");\n    }\n\n    flowParseDeclareModule(node: N.FlowDeclareModule): N.FlowDeclareModule {\n      this.scope.enter(SCOPE_OTHER);\n\n      if (this.match(tt.string)) {\n        node.id = this.parseExprAtom();\n      } else {\n        node.id = this.parseIdentifier();\n      }\n\n      const bodyNode = (node.body = this.startNode());\n      const body = (bodyNode.body = []);\n      this.expect(tt.braceL);\n      while (!this.match(tt.braceR)) {\n        let bodyNode = this.startNode();\n\n        if (this.match(tt._import)) {\n          this.next();\n          if (!this.isContextual(\"type\") && !this.match(tt._typeof)) {\n            this.raise(\n              this.state.lastTokStart,\n              FlowErrors.InvalidNonTypeImportInDeclareModule,\n            );\n          }\n          this.parseImport(bodyNode);\n        } else {\n          this.expectContextual(\n            \"declare\",\n            FlowErrors.UnsupportedStatementInDeclareModule,\n          );\n\n          bodyNode = this.flowParseDeclare(bodyNode, true);\n        }\n\n        body.push(bodyNode);\n      }\n\n      this.scope.exit();\n\n      this.expect(tt.braceR);\n\n      this.finishNode(bodyNode, \"BlockStatement\");\n\n      let kind = null;\n      let hasModuleExport = false;\n      body.forEach(bodyElement => {\n        if (isEsModuleType(bodyElement)) {\n          if (kind === \"CommonJS\") {\n            this.raise(\n              bodyElement.start,\n              FlowErrors.AmbiguousDeclareModuleKind,\n            );\n          }\n          kind = \"ES\";\n        } else if (bodyElement.type === \"DeclareModuleExports\") {\n          if (hasModuleExport) {\n            this.raise(\n              bodyElement.start,\n              FlowErrors.DuplicateDeclareModuleExports,\n            );\n          }\n          if (kind === \"ES\") {\n            this.raise(\n              bodyElement.start,\n              FlowErrors.AmbiguousDeclareModuleKind,\n            );\n          }\n          kind = \"CommonJS\";\n          hasModuleExport = true;\n        }\n      });\n\n      node.kind = kind || \"CommonJS\";\n      return this.finishNode(node, \"DeclareModule\");\n    }\n\n    flowParseDeclareExportDeclaration(\n      node: N.FlowDeclareExportDeclaration,\n      insideModule: ?boolean,\n    ): N.FlowDeclareExportDeclaration {\n      this.expect(tt._export);\n\n      if (this.eat(tt._default)) {\n        if (this.match(tt._function) || this.match(tt._class)) {\n          // declare export default class ...\n          // declare export default function ...\n          node.declaration = this.flowParseDeclare(this.startNode());\n        } else {\n          // declare export default [type];\n          node.declaration = this.flowParseType();\n          this.semicolon();\n        }\n        node.default = true;\n\n        return this.finishNode(node, \"DeclareExportDeclaration\");\n      } else {\n        if (\n          this.match(tt._const) ||\n          this.isLet() ||\n          ((this.isContextual(\"type\") || this.isContextual(\"interface\")) &&\n            !insideModule)\n        ) {\n          const label = this.state.value;\n          const suggestion = exportSuggestions[label];\n\n          throw this.raise(\n            this.state.start,\n            FlowErrors.UnsupportedDeclareExportKind,\n            label,\n            suggestion,\n          );\n        }\n\n        if (\n          this.match(tt._var) || // declare export var ...\n          this.match(tt._function) || // declare export function ...\n          this.match(tt._class) || // declare export class ...\n          this.isContextual(\"opaque\") // declare export opaque ..\n        ) {\n          node.declaration = this.flowParseDeclare(this.startNode());\n          node.default = false;\n\n          return this.finishNode(node, \"DeclareExportDeclaration\");\n        } else if (\n          this.match(tt.star) || // declare export * from ''\n          this.match(tt.braceL) || // declare export {} ...\n          this.isContextual(\"interface\") || // declare export interface ...\n          this.isContextual(\"type\") || // declare export type ...\n          this.isContextual(\"opaque\") // declare export opaque type ...\n        ) {\n          node = this.parseExport(node);\n          if (node.type === \"ExportNamedDeclaration\") {\n            // flow does not support the ExportNamedDeclaration\n            // $FlowIgnore\n            node.type = \"ExportDeclaration\";\n            // $FlowFixMe\n            node.default = false;\n            delete node.exportKind;\n          }\n\n          // $FlowIgnore\n          node.type = \"Declare\" + node.type;\n\n          return node;\n        }\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParseDeclareModuleExports(\n      node: N.FlowDeclareModuleExports,\n    ): N.FlowDeclareModuleExports {\n      this.next();\n      this.expectContextual(\"exports\");\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n      this.semicolon();\n\n      return this.finishNode(node, \"DeclareModuleExports\");\n    }\n\n    flowParseDeclareTypeAlias(\n      node: N.FlowDeclareTypeAlias,\n    ): N.FlowDeclareTypeAlias {\n      this.next();\n      this.flowParseTypeAlias(node);\n      // Don't do finishNode as we don't want to process comments twice\n      node.type = \"DeclareTypeAlias\";\n      return node;\n    }\n\n    flowParseDeclareOpaqueType(\n      node: N.FlowDeclareOpaqueType,\n    ): N.FlowDeclareOpaqueType {\n      this.next();\n      this.flowParseOpaqueType(node, true);\n      // Don't do finishNode as we don't want to process comments twice\n      node.type = \"DeclareOpaqueType\";\n      return node;\n    }\n\n    flowParseDeclareInterface(\n      node: N.FlowDeclareInterface,\n    ): N.FlowDeclareInterface {\n      this.next();\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"DeclareInterface\");\n    }\n\n    // Interfaces\n\n    flowParseInterfaceish(\n      node: N.FlowDeclare,\n      isClass?: boolean = false,\n    ): void {\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ !isClass,\n        /* declaration */ true,\n      );\n\n      this.scope.declareName(\n        node.id.name,\n        isClass ? BIND_FUNCTION : BIND_LEXICAL,\n        node.id.start,\n      );\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.extends = [];\n      node.implements = [];\n      node.mixins = [];\n\n      if (this.eat(tt._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (!isClass && this.eat(tt.comma));\n      }\n\n      if (this.isContextual(\"mixins\")) {\n        this.next();\n        do {\n          node.mixins.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      if (this.isContextual(\"implements\")) {\n        this.next();\n        do {\n          node.implements.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: isClass,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: isClass,\n        allowInexact: false,\n      });\n    }\n\n    flowParseInterfaceExtends(): N.FlowInterfaceExtends {\n      const node = this.startNode();\n\n      node.id = this.flowParseQualifiedTypeIdentifier();\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      } else {\n        node.typeParameters = null;\n      }\n\n      return this.finishNode(node, \"InterfaceExtends\");\n    }\n\n    flowParseInterface(node: N.FlowInterface): N.FlowInterface {\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"InterfaceDeclaration\");\n    }\n\n    checkNotUnderscore(word: string) {\n      if (word === \"_\") {\n        this.raise(this.state.start, FlowErrors.UnexpectedReservedUnderscore);\n      }\n    }\n\n    checkReservedType(word: string, startLoc: number, declaration?: boolean) {\n      if (!reservedTypes.has(word)) return;\n\n      this.raise(\n        startLoc,\n        declaration\n          ? FlowErrors.AssignReservedType\n          : FlowErrors.UnexpectedReservedType,\n        word,\n      );\n    }\n\n    flowParseRestrictedIdentifier(\n      liberal?: boolean,\n      declaration?: boolean,\n    ): N.Identifier {\n      this.checkReservedType(this.state.value, this.state.start, declaration);\n      return this.parseIdentifier(liberal);\n    }\n\n    // Type aliases\n\n    flowParseTypeAlias(node: N.FlowTypeAlias): N.FlowTypeAlias {\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ false,\n        /* declaration */ true,\n      );\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.right = this.flowParseTypeInitialiser(tt.eq);\n      this.semicolon();\n\n      return this.finishNode(node, \"TypeAlias\");\n    }\n\n    flowParseOpaqueType(\n      node: N.FlowOpaqueType,\n      declare: boolean,\n    ): N.FlowOpaqueType {\n      this.expectContextual(\"type\");\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ true,\n        /* declaration */ true,\n      );\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      // Parse the supertype\n      node.supertype = null;\n      if (this.match(tt.colon)) {\n        node.supertype = this.flowParseTypeInitialiser(tt.colon);\n      }\n\n      node.impltype = null;\n      if (!declare) {\n        node.impltype = this.flowParseTypeInitialiser(tt.eq);\n      }\n      this.semicolon();\n\n      return this.finishNode(node, \"OpaqueType\");\n    }\n\n    // Type annotations\n\n    flowParseTypeParameter(requireDefault?: boolean = false): N.TypeParameter {\n      const nodeStart = this.state.start;\n\n      const node = this.startNode();\n\n      const variance = this.flowParseVariance();\n\n      const ident = this.flowParseTypeAnnotatableIdentifier();\n      node.name = ident.name;\n      node.variance = variance;\n      node.bound = ident.typeAnnotation;\n\n      if (this.match(tt.eq)) {\n        this.eat(tt.eq);\n        node.default = this.flowParseType();\n      } else {\n        if (requireDefault) {\n          this.raise(nodeStart, FlowErrors.MissingTypeParamDefault);\n        }\n      }\n\n      return this.finishNode(node, \"TypeParameter\");\n    }\n\n    flowParseTypeParameterDeclaration(): N.TypeParameterDeclaration {\n      const oldInType = this.state.inType;\n      const node = this.startNode();\n      node.params = [];\n\n      this.state.inType = true;\n\n      // istanbul ignore else: this condition is already checked at all call sites\n      if (this.isRelational(\"<\") || this.match(tt.jsxTagStart)) {\n        this.next();\n      } else {\n        this.unexpected();\n      }\n\n      let defaultRequired = false;\n\n      do {\n        const typeParameter = this.flowParseTypeParameter(defaultRequired);\n\n        node.params.push(typeParameter);\n\n        if (typeParameter.default) {\n          defaultRequired = true;\n        }\n\n        if (!this.isRelational(\">\")) {\n          this.expect(tt.comma);\n        }\n      } while (!this.isRelational(\">\"));\n      this.expectRelational(\">\");\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterDeclaration\");\n    }\n\n    flowParseTypeParameterInstantiation(): N.TypeParameterInstantiation {\n      const node = this.startNode();\n      const oldInType = this.state.inType;\n      node.params = [];\n\n      this.state.inType = true;\n\n      this.expectRelational(\"<\");\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = false;\n      while (!this.isRelational(\">\")) {\n        node.params.push(this.flowParseType());\n        if (!this.isRelational(\">\")) {\n          this.expect(tt.comma);\n        }\n      }\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      this.expectRelational(\">\");\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseTypeParameterInstantiationCallOrNew(): N.TypeParameterInstantiation {\n      const node = this.startNode();\n      const oldInType = this.state.inType;\n      node.params = [];\n\n      this.state.inType = true;\n\n      this.expectRelational(\"<\");\n      while (!this.isRelational(\">\")) {\n        node.params.push(this.flowParseTypeOrImplicitInstantiation());\n        if (!this.isRelational(\">\")) {\n          this.expect(tt.comma);\n        }\n      }\n      this.expectRelational(\">\");\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseInterfaceType(): N.FlowInterfaceType {\n      const node = this.startNode();\n      this.expectContextual(\"interface\");\n\n      node.extends = [];\n      if (this.eat(tt._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: false,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: false,\n        allowInexact: false,\n      });\n\n      return this.finishNode(node, \"InterfaceTypeAnnotation\");\n    }\n\n    flowParseObjectPropertyKey(): N.Expression {\n      return this.match(tt.num) || this.match(tt.string)\n        ? this.parseExprAtom()\n        : this.parseIdentifier(true);\n    }\n\n    flowParseObjectTypeIndexer(\n      node: N.FlowObjectTypeIndexer,\n      isStatic: boolean,\n      variance: ?N.FlowVariance,\n    ): N.FlowObjectTypeIndexer {\n      node.static = isStatic;\n\n      // Note: bracketL has already been consumed\n      if (this.lookahead().type === tt.colon) {\n        node.id = this.flowParseObjectPropertyKey();\n        node.key = this.flowParseTypeInitialiser();\n      } else {\n        node.id = null;\n        node.key = this.flowParseType();\n      }\n      this.expect(tt.bracketR);\n      node.value = this.flowParseTypeInitialiser();\n      node.variance = variance;\n\n      return this.finishNode(node, \"ObjectTypeIndexer\");\n    }\n\n    flowParseObjectTypeInternalSlot(\n      node: N.FlowObjectTypeInternalSlot,\n      isStatic: boolean,\n    ): N.FlowObjectTypeInternalSlot {\n      node.static = isStatic;\n      // Note: both bracketL have already been consumed\n      node.id = this.flowParseObjectPropertyKey();\n      this.expect(tt.bracketR);\n      this.expect(tt.bracketR);\n      if (this.isRelational(\"<\") || this.match(tt.parenL)) {\n        node.method = true;\n        node.optional = false;\n        node.value = this.flowParseObjectTypeMethodish(\n          this.startNodeAt(node.start, node.loc.start),\n        );\n      } else {\n        node.method = false;\n        if (this.eat(tt.question)) {\n          node.optional = true;\n        }\n        node.value = this.flowParseTypeInitialiser();\n      }\n      return this.finishNode(node, \"ObjectTypeInternalSlot\");\n    }\n\n    flowParseObjectTypeMethodish(\n      node: N.FlowFunctionTypeAnnotation,\n    ): N.FlowFunctionTypeAnnotation {\n      node.params = [];\n      node.rest = null;\n      node.typeParameters = null;\n      node.this = null;\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      this.expect(tt.parenL);\n      if (this.match(tt._this)) {\n        node.this = this.flowParseFunctionTypeParam(/* first */ true);\n        // match Flow parser behavior\n        node.this.name = null;\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      while (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n        node.params.push(this.flowParseFunctionTypeParam(false));\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n\n      if (this.eat(tt.ellipsis)) {\n        node.rest = this.flowParseFunctionTypeParam(false);\n      }\n      this.expect(tt.parenR);\n      node.returnType = this.flowParseTypeInitialiser();\n\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n\n    flowParseObjectTypeCallProperty(\n      node: N.FlowObjectTypeCallProperty,\n      isStatic: boolean,\n    ): N.FlowObjectTypeCallProperty {\n      const valueNode = this.startNode();\n      node.static = isStatic;\n      node.value = this.flowParseObjectTypeMethodish(valueNode);\n      return this.finishNode(node, \"ObjectTypeCallProperty\");\n    }\n\n    flowParseObjectType({\n      allowStatic,\n      allowExact,\n      allowSpread,\n      allowProto,\n      allowInexact,\n    }: {\n      allowStatic: boolean,\n      allowExact: boolean,\n      allowSpread: boolean,\n      allowProto: boolean,\n      allowInexact: boolean,\n    }): N.FlowObjectTypeAnnotation {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n\n      const nodeStart = this.startNode();\n\n      nodeStart.callProperties = [];\n      nodeStart.properties = [];\n      nodeStart.indexers = [];\n      nodeStart.internalSlots = [];\n\n      let endDelim;\n      let exact;\n      let inexact = false;\n      if (allowExact && this.match(tt.braceBarL)) {\n        this.expect(tt.braceBarL);\n        endDelim = tt.braceBarR;\n        exact = true;\n      } else {\n        this.expect(tt.braceL);\n        endDelim = tt.braceR;\n        exact = false;\n      }\n\n      nodeStart.exact = exact;\n\n      while (!this.match(endDelim)) {\n        let isStatic = false;\n        let protoStart: ?number = null;\n        let inexactStart: ?number = null;\n        const node = this.startNode();\n\n        if (allowProto && this.isContextual(\"proto\")) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type !== tt.colon && lookahead.type !== tt.question) {\n            this.next();\n            protoStart = this.state.start;\n            allowStatic = false;\n          }\n        }\n\n        if (allowStatic && this.isContextual(\"static\")) {\n          const lookahead = this.lookahead();\n\n          // static is a valid identifier name\n          if (lookahead.type !== tt.colon && lookahead.type !== tt.question) {\n            this.next();\n            isStatic = true;\n          }\n        }\n\n        const variance = this.flowParseVariance();\n\n        if (this.eat(tt.bracketL)) {\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n          if (this.eat(tt.bracketL)) {\n            if (variance) {\n              this.unexpected(variance.start);\n            }\n            nodeStart.internalSlots.push(\n              this.flowParseObjectTypeInternalSlot(node, isStatic),\n            );\n          } else {\n            nodeStart.indexers.push(\n              this.flowParseObjectTypeIndexer(node, isStatic, variance),\n            );\n          }\n        } else if (this.match(tt.parenL) || this.isRelational(\"<\")) {\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n          nodeStart.callProperties.push(\n            this.flowParseObjectTypeCallProperty(node, isStatic),\n          );\n        } else {\n          let kind = \"init\";\n\n          if (this.isContextual(\"get\") || this.isContextual(\"set\")) {\n            const lookahead = this.lookahead();\n            if (\n              lookahead.type === tt.name ||\n              lookahead.type === tt.string ||\n              lookahead.type === tt.num\n            ) {\n              kind = this.state.value;\n              this.next();\n            }\n          }\n\n          const propOrInexact = this.flowParseObjectTypeProperty(\n            node,\n            isStatic,\n            protoStart,\n            variance,\n            kind,\n            allowSpread,\n            allowInexact ?? !exact,\n          );\n\n          if (propOrInexact === null) {\n            inexact = true;\n            inexactStart = this.state.lastTokStart;\n          } else {\n            nodeStart.properties.push(propOrInexact);\n          }\n        }\n\n        this.flowObjectTypeSemicolon();\n\n        if (\n          inexactStart &&\n          !this.match(tt.braceR) &&\n          !this.match(tt.braceBarR)\n        ) {\n          this.raise(\n            inexactStart,\n            FlowErrors.UnexpectedExplicitInexactInObject,\n          );\n        }\n      }\n\n      this.expect(endDelim);\n\n      /* The inexact flag should only be added on ObjectTypeAnnotations that\n       * are not the body of an interface, declare interface, or declare class.\n       * Since spreads are only allowed in object types, checking that is\n       * sufficient here.\n       */\n      if (allowSpread) {\n        nodeStart.inexact = inexact;\n      }\n\n      const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n\n      this.state.inType = oldInType;\n\n      return out;\n    }\n\n    flowParseObjectTypeProperty(\n      node: N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty,\n      isStatic: boolean,\n      protoStart: ?number,\n      variance: ?N.FlowVariance,\n      kind: string,\n      allowSpread: boolean,\n      allowInexact: boolean,\n    ): (N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty) | null {\n      if (this.eat(tt.ellipsis)) {\n        const isInexactToken =\n          this.match(tt.comma) ||\n          this.match(tt.semi) ||\n          this.match(tt.braceR) ||\n          this.match(tt.braceBarR);\n\n        if (isInexactToken) {\n          if (!allowSpread) {\n            this.raise(\n              this.state.lastTokStart,\n              FlowErrors.InexactInsideNonObject,\n            );\n          } else if (!allowInexact) {\n            this.raise(this.state.lastTokStart, FlowErrors.InexactInsideExact);\n          }\n          if (variance) {\n            this.raise(variance.start, FlowErrors.InexactVariance);\n          }\n\n          return null;\n        }\n\n        if (!allowSpread) {\n          this.raise(this.state.lastTokStart, FlowErrors.UnexpectedSpreadType);\n        }\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n        if (variance) {\n          this.raise(variance.start, FlowErrors.SpreadVariance);\n        }\n\n        node.argument = this.flowParseType();\n        return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n      } else {\n        node.key = this.flowParseObjectPropertyKey();\n        node.static = isStatic;\n        node.proto = protoStart != null;\n        node.kind = kind;\n\n        let optional = false;\n        if (this.isRelational(\"<\") || this.match(tt.parenL)) {\n          // This is a method property\n          node.method = true;\n\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n\n          node.value = this.flowParseObjectTypeMethodish(\n            this.startNodeAt(node.start, node.loc.start),\n          );\n          if (kind === \"get\" || kind === \"set\") {\n            this.flowCheckGetterSetterParams(node);\n          }\n          /** Declared classes/interfaces do not allow spread */\n          if (\n            !allowSpread &&\n            node.key.name === \"constructor\" &&\n            node.value.this\n          ) {\n            this.raise(\n              node.value.this.start,\n              FlowErrors.ThisParamBannedInConstructor,\n            );\n          }\n        } else {\n          if (kind !== \"init\") this.unexpected();\n\n          node.method = false;\n\n          if (this.eat(tt.question)) {\n            optional = true;\n          }\n          node.value = this.flowParseTypeInitialiser();\n          node.variance = variance;\n        }\n\n        node.optional = optional;\n\n        return this.finishNode(node, \"ObjectTypeProperty\");\n      }\n    }\n\n    // This is similar to checkGetterSetterParams, but as\n    // @babel/parser uses non estree properties we cannot reuse it here\n    flowCheckGetterSetterParams(\n      property: N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty,\n    ): void {\n      const paramCount = property.kind === \"get\" ? 0 : 1;\n      const start = property.start;\n      const length =\n        property.value.params.length + (property.value.rest ? 1 : 0);\n\n      if (property.value.this) {\n        this.raise(\n          property.value.this.start,\n          property.kind === \"get\"\n            ? FlowErrors.GetterMayNotHaveThisParam\n            : FlowErrors.SetterMayNotHaveThisParam,\n        );\n      }\n\n      if (length !== paramCount) {\n        if (property.kind === \"get\") {\n          this.raise(start, Errors.BadGetterArity);\n        } else {\n          this.raise(start, Errors.BadSetterArity);\n        }\n      }\n\n      if (property.kind === \"set\" && property.value.rest) {\n        this.raise(start, Errors.BadSetterRestParameter);\n      }\n    }\n\n    flowObjectTypeSemicolon(): void {\n      if (\n        !this.eat(tt.semi) &&\n        !this.eat(tt.comma) &&\n        !this.match(tt.braceR) &&\n        !this.match(tt.braceBarR)\n      ) {\n        this.unexpected();\n      }\n    }\n\n    flowParseQualifiedTypeIdentifier(\n      startPos?: number,\n      startLoc?: Position,\n      id?: N.Identifier,\n    ): N.FlowQualifiedTypeIdentifier {\n      startPos = startPos || this.state.start;\n      startLoc = startLoc || this.state.startLoc;\n      let node = id || this.flowParseRestrictedIdentifier(true);\n\n      while (this.eat(tt.dot)) {\n        const node2 = this.startNodeAt(startPos, startLoc);\n        node2.qualification = node;\n        node2.id = this.flowParseRestrictedIdentifier(true);\n        node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n      }\n\n      return node;\n    }\n\n    flowParseGenericType(\n      startPos: number,\n      startLoc: Position,\n      id: N.Identifier,\n    ): N.FlowGenericTypeAnnotation {\n      const node = this.startNodeAt(startPos, startLoc);\n\n      node.typeParameters = null;\n      node.id = this.flowParseQualifiedTypeIdentifier(startPos, startLoc, id);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      }\n\n      return this.finishNode(node, \"GenericTypeAnnotation\");\n    }\n\n    flowParseTypeofType(): N.FlowTypeofTypeAnnotation {\n      const node = this.startNode();\n      this.expect(tt._typeof);\n      node.argument = this.flowParsePrimaryType();\n      return this.finishNode(node, \"TypeofTypeAnnotation\");\n    }\n\n    flowParseTupleType(): N.FlowTupleTypeAnnotation {\n      const node = this.startNode();\n      node.types = [];\n      this.expect(tt.bracketL);\n      // We allow trailing commas\n      while (this.state.pos < this.length && !this.match(tt.bracketR)) {\n        node.types.push(this.flowParseType());\n        if (this.match(tt.bracketR)) break;\n        this.expect(tt.comma);\n      }\n      this.expect(tt.bracketR);\n      return this.finishNode(node, \"TupleTypeAnnotation\");\n    }\n\n    flowParseFunctionTypeParam(first: boolean): N.FlowFunctionTypeParam {\n      let name = null;\n      let optional = false;\n      let typeAnnotation = null;\n      const node = this.startNode();\n      const lh = this.lookahead();\n      const isThis = this.state.type === tt._this;\n\n      if (lh.type === tt.colon || lh.type === tt.question) {\n        if (isThis && !first) {\n          this.raise(node.start, FlowErrors.ThisParamMustBeFirst);\n        }\n        name = this.parseIdentifier(isThis);\n        if (this.eat(tt.question)) {\n          optional = true;\n          if (isThis) {\n            this.raise(node.start, FlowErrors.ThisParamMayNotBeOptional);\n          }\n        }\n        typeAnnotation = this.flowParseTypeInitialiser();\n      } else {\n        typeAnnotation = this.flowParseType();\n      }\n      node.name = name;\n      node.optional = optional;\n      node.typeAnnotation = typeAnnotation;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    reinterpretTypeAsFunctionTypeParam(\n      type: N.FlowType,\n    ): N.FlowFunctionTypeParam {\n      const node = this.startNodeAt(type.start, type.loc.start);\n      node.name = null;\n      node.optional = false;\n      node.typeAnnotation = type;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    flowParseFunctionTypeParams(params: N.FlowFunctionTypeParam[] = []): {\n      params: N.FlowFunctionTypeParam[],\n      rest: ?N.FlowFunctionTypeParam,\n      _this: ?N.FlowFunctionTypeParam,\n    } {\n      let rest: ?N.FlowFunctionTypeParam = null;\n      let _this: ?N.FlowFunctionTypeParam = null;\n      if (this.match(tt._this)) {\n        _this = this.flowParseFunctionTypeParam(/* first */ true);\n        // match Flow parser behavior\n        _this.name = null;\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      while (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n        params.push(this.flowParseFunctionTypeParam(false));\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      if (this.eat(tt.ellipsis)) {\n        rest = this.flowParseFunctionTypeParam(false);\n      }\n      return { params, rest, _this };\n    }\n\n    flowIdentToTypeAnnotation(\n      startPos: number,\n      startLoc: Position,\n      node: N.FlowTypeAnnotation,\n      id: N.Identifier,\n    ): N.FlowTypeAnnotation {\n      switch (id.name) {\n        case \"any\":\n          return this.finishNode(node, \"AnyTypeAnnotation\");\n\n        case \"bool\":\n        case \"boolean\":\n          return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n        case \"mixed\":\n          return this.finishNode(node, \"MixedTypeAnnotation\");\n\n        case \"empty\":\n          return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n        case \"number\":\n          return this.finishNode(node, \"NumberTypeAnnotation\");\n\n        case \"string\":\n          return this.finishNode(node, \"StringTypeAnnotation\");\n\n        case \"symbol\":\n          return this.finishNode(node, \"SymbolTypeAnnotation\");\n\n        default:\n          this.checkNotUnderscore(id.name);\n          return this.flowParseGenericType(startPos, startLoc, id);\n      }\n    }\n\n    // The parsing of types roughly parallels the parsing of expressions, and\n    // primary types are kind of like primary expressions...they're the\n    // primitives with which other types are constructed.\n    flowParsePrimaryType(): N.FlowTypeAnnotation {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const node = this.startNode();\n      let tmp;\n      let type;\n      let isGroupedType = false;\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n      switch (this.state.type) {\n        case tt.name:\n          if (this.isContextual(\"interface\")) {\n            return this.flowParseInterfaceType();\n          }\n\n          return this.flowIdentToTypeAnnotation(\n            startPos,\n            startLoc,\n            node,\n            this.parseIdentifier(),\n          );\n\n        case tt.braceL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: false,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: true,\n          });\n\n        case tt.braceBarL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: true,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: false,\n          });\n\n        case tt.bracketL:\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseTupleType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n          return type;\n\n        case tt.relational:\n          if (this.state.value === \"<\") {\n            node.typeParameters = this.flowParseTypeParameterDeclaration();\n            this.expect(tt.parenL);\n            tmp = this.flowParseFunctionTypeParams();\n            node.params = tmp.params;\n            node.rest = tmp.rest;\n            node.this = tmp._this;\n            this.expect(tt.parenR);\n\n            this.expect(tt.arrow);\n\n            node.returnType = this.flowParseType();\n\n            return this.finishNode(node, \"FunctionTypeAnnotation\");\n          }\n          break;\n\n        case tt.parenL:\n          this.next();\n\n          // Check to see if this is actually a grouped type\n          if (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n            if (this.match(tt.name) || this.match(tt._this)) {\n              const token = this.lookahead().type;\n              isGroupedType = token !== tt.question && token !== tt.colon;\n            } else {\n              isGroupedType = true;\n            }\n          }\n\n          if (isGroupedType) {\n            this.state.noAnonFunctionType = false;\n            type = this.flowParseType();\n            this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n            // A `,` or a `) =>` means this is an anonymous function type\n            if (\n              this.state.noAnonFunctionType ||\n              !(\n                this.match(tt.comma) ||\n                (this.match(tt.parenR) && this.lookahead().type === tt.arrow)\n              )\n            ) {\n              this.expect(tt.parenR);\n              return type;\n            } else {\n              // Eat a comma if there is one\n              this.eat(tt.comma);\n            }\n          }\n\n          if (type) {\n            tmp = this.flowParseFunctionTypeParams([\n              this.reinterpretTypeAsFunctionTypeParam(type),\n            ]);\n          } else {\n            tmp = this.flowParseFunctionTypeParams();\n          }\n\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n          node.this = tmp._this;\n\n          this.expect(tt.parenR);\n\n          this.expect(tt.arrow);\n\n          node.returnType = this.flowParseType();\n\n          node.typeParameters = null;\n\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n        case tt.string:\n          return this.parseLiteral<N.StringLiteralTypeAnnotation>(\n            this.state.value,\n            \"StringLiteralTypeAnnotation\",\n          );\n\n        case tt._true:\n        case tt._false:\n          node.value = this.match(tt._true);\n          this.next();\n          return this.finishNode<N.BooleanLiteralTypeAnnotation>(\n            node,\n            \"BooleanLiteralTypeAnnotation\",\n          );\n\n        case tt.plusMin:\n          if (this.state.value === \"-\") {\n            this.next();\n            if (this.match(tt.num)) {\n              return this.parseLiteralAtNode<N.NumberLiteralTypeAnnotation>(\n                -this.state.value,\n                \"NumberLiteralTypeAnnotation\",\n                node,\n              );\n            }\n\n            if (this.match(tt.bigint)) {\n              return this.parseLiteralAtNode<N.BigIntLiteralTypeAnnotation>(\n                -this.state.value,\n                \"BigIntLiteralTypeAnnotation\",\n                node,\n              );\n            }\n\n            throw this.raise(\n              this.state.start,\n              FlowErrors.UnexpectedSubtractionOperand,\n            );\n          }\n\n          throw this.unexpected();\n        case tt.num:\n          return this.parseLiteral(\n            this.state.value,\n            \"NumberLiteralTypeAnnotation\",\n          );\n\n        case tt.bigint:\n          return this.parseLiteral(\n            this.state.value,\n            \"BigIntLiteralTypeAnnotation\",\n          );\n\n        case tt._void:\n          this.next();\n          return this.finishNode(node, \"VoidTypeAnnotation\");\n\n        case tt._null:\n          this.next();\n          return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n        case tt._this:\n          this.next();\n          return this.finishNode(node, \"ThisTypeAnnotation\");\n\n        case tt.star:\n          this.next();\n          return this.finishNode(node, \"ExistsTypeAnnotation\");\n\n        default:\n          if (this.state.type.keyword === \"typeof\") {\n            return this.flowParseTypeofType();\n          } else if (this.state.type.keyword) {\n            const label = this.state.type.label;\n            this.next();\n            return super.createIdentifier(node, label);\n          }\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParsePostfixType(): N.FlowTypeAnnotation {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let type = this.flowParsePrimaryType();\n      let seenOptionalIndexedAccess = false;\n      while (\n        (this.match(tt.bracketL) || this.match(tt.questionDot)) &&\n        !this.canInsertSemicolon()\n      ) {\n        const node = this.startNodeAt(startPos, startLoc);\n        const optional = this.eat(tt.questionDot);\n        seenOptionalIndexedAccess = seenOptionalIndexedAccess || optional;\n        this.expect(tt.bracketL);\n        if (!optional && this.match(tt.bracketR)) {\n          node.elementType = type;\n          this.next(); // eat `]`\n          type = this.finishNode(node, \"ArrayTypeAnnotation\");\n        } else {\n          node.objectType = type;\n          node.indexType = this.flowParseType();\n          this.expect(tt.bracketR);\n          if (seenOptionalIndexedAccess) {\n            node.optional = optional;\n            type = this.finishNode<N.FlowOptionalIndexedAccessType>(\n              node,\n              \"OptionalIndexedAccessType\",\n            );\n          } else {\n            type = this.finishNode<N.FlowIndexedAccessType>(\n              node,\n              \"IndexedAccessType\",\n            );\n          }\n        }\n      }\n      return type;\n    }\n\n    flowParsePrefixType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      if (this.eat(tt.question)) {\n        node.typeAnnotation = this.flowParsePrefixType();\n        return this.finishNode(node, \"NullableTypeAnnotation\");\n      } else {\n        return this.flowParsePostfixType();\n      }\n    }\n\n    flowParseAnonFunctionWithoutParens(): N.FlowTypeAnnotation {\n      const param = this.flowParsePrefixType();\n      if (!this.state.noAnonFunctionType && this.eat(tt.arrow)) {\n        // TODO: This should be a type error. Passing in a SourceLocation, and it expects a Position.\n        const node = this.startNodeAt(param.start, param.loc.start);\n        node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n        node.rest = null;\n        node.this = null;\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n      }\n      return param;\n    }\n\n    flowParseIntersectionType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      this.eat(tt.bitwiseAND);\n      const type = this.flowParseAnonFunctionWithoutParens();\n      node.types = [type];\n      while (this.eat(tt.bitwiseAND)) {\n        node.types.push(this.flowParseAnonFunctionWithoutParens());\n      }\n      return node.types.length === 1\n        ? type\n        : this.finishNode(node, \"IntersectionTypeAnnotation\");\n    }\n\n    flowParseUnionType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      this.eat(tt.bitwiseOR);\n      const type = this.flowParseIntersectionType();\n      node.types = [type];\n      while (this.eat(tt.bitwiseOR)) {\n        node.types.push(this.flowParseIntersectionType());\n      }\n      return node.types.length === 1\n        ? type\n        : this.finishNode(node, \"UnionTypeAnnotation\");\n    }\n\n    flowParseType(): N.FlowTypeAnnotation {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      const type = this.flowParseUnionType();\n      this.state.inType = oldInType;\n      // Ensure that a brace after a function generic type annotation is a\n      // statement, except in arrow functions (noAnonFunctionType)\n      this.state.exprAllowed =\n        this.state.exprAllowed || this.state.noAnonFunctionType;\n      return type;\n    }\n\n    flowParseTypeOrImplicitInstantiation(): N.FlowTypeAnnotation {\n      if (this.state.type === tt.name && this.state.value === \"_\") {\n        const startPos = this.state.start;\n        const startLoc = this.state.startLoc;\n        const node = this.parseIdentifier();\n        return this.flowParseGenericType(startPos, startLoc, node);\n      } else {\n        return this.flowParseType();\n      }\n    }\n\n    flowParseTypeAnnotation(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      node.typeAnnotation = this.flowParseTypeInitialiser();\n      return this.finishNode(node, \"TypeAnnotation\");\n    }\n\n    flowParseTypeAnnotatableIdentifier(\n      allowPrimitiveOverride?: boolean,\n    ): N.Identifier {\n      const ident = allowPrimitiveOverride\n        ? this.parseIdentifier()\n        : this.flowParseRestrictedIdentifier();\n      if (this.match(tt.colon)) {\n        ident.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(ident);\n      }\n      return ident;\n    }\n\n    typeCastToParameter(node: N.Node): N.Node {\n      node.expression.typeAnnotation = node.typeAnnotation;\n\n      this.resetEndLocation(\n        node.expression,\n        node.typeAnnotation.end,\n        node.typeAnnotation.loc.end,\n      );\n\n      return node.expression;\n    }\n\n    flowParseVariance(): ?N.FlowVariance {\n      let variance = null;\n      if (this.match(tt.plusMin)) {\n        variance = this.startNode();\n        if (this.state.value === \"+\") {\n          variance.kind = \"plus\";\n        } else {\n          variance.kind = \"minus\";\n        }\n        this.next();\n        this.finishNode(variance, \"Variance\");\n      }\n      return variance;\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    parseFunctionBody(\n      node: N.Function,\n      allowExpressionBody: ?boolean,\n      isMethod?: boolean = false,\n    ): void {\n      if (allowExpressionBody) {\n        return this.forwardNoArrowParamsConversionAt(node, () =>\n          super.parseFunctionBody(node, true, isMethod),\n        );\n      }\n\n      return super.parseFunctionBody(node, false, isMethod);\n    }\n\n    parseFunctionBodyAndFinish(\n      node: N.BodilessFunctionOrMethodBase,\n      type: string,\n      isMethod?: boolean = false,\n    ): void {\n      if (this.match(tt.colon)) {\n        const typeNode = this.startNode();\n\n        [\n          // $FlowFixMe (destructuring not supported yet)\n          typeNode.typeAnnotation,\n          // $FlowFixMe (destructuring not supported yet)\n          node.predicate,\n        ] = this.flowParseTypeAndPredicateInitialiser();\n\n        node.returnType = typeNode.typeAnnotation\n          ? this.finishNode(typeNode, \"TypeAnnotation\")\n          : null;\n      }\n\n      super.parseFunctionBodyAndFinish(node, type, isMethod);\n    }\n\n    // interfaces and enums\n    parseStatement(context: ?string, topLevel?: boolean): N.Statement {\n      // strict mode handling of `interface` since it's a reserved word\n      if (\n        this.state.strict &&\n        this.match(tt.name) &&\n        this.state.value === \"interface\"\n      ) {\n        const lookahead = this.lookahead();\n        if (lookahead.type === tt.name || isKeyword(lookahead.value)) {\n          const node = this.startNode();\n          this.next();\n          return this.flowParseInterface(node);\n        }\n      } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n      const stmt = super.parseStatement(context, topLevel);\n      // We will parse a flow pragma in any comment before the first statement.\n      if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n        this.flowPragma = null;\n      }\n      return stmt;\n    }\n\n    // declares, interfaces and type aliases\n    parseExpressionStatement(\n      node: N.ExpressionStatement,\n      expr: N.Expression,\n    ): N.ExpressionStatement {\n      if (expr.type === \"Identifier\") {\n        if (expr.name === \"declare\") {\n          if (\n            this.match(tt._class) ||\n            this.match(tt.name) ||\n            this.match(tt._function) ||\n            this.match(tt._var) ||\n            this.match(tt._export)\n          ) {\n            return this.flowParseDeclare(node);\n          }\n        } else if (this.match(tt.name)) {\n          if (expr.name === \"interface\") {\n            return this.flowParseInterface(node);\n          } else if (expr.name === \"type\") {\n            return this.flowParseTypeAlias(node);\n          } else if (expr.name === \"opaque\") {\n            return this.flowParseOpaqueType(node, false);\n          }\n        }\n      }\n\n      return super.parseExpressionStatement(node, expr);\n    }\n\n    // export type\n    shouldParseExportDeclaration(): boolean {\n      return (\n        this.isContextual(\"type\") ||\n        this.isContextual(\"interface\") ||\n        this.isContextual(\"opaque\") ||\n        (this.shouldParseEnums() && this.isContextual(\"enum\")) ||\n        super.shouldParseExportDeclaration()\n      );\n    }\n\n    isExportDefaultSpecifier(): boolean {\n      if (\n        this.match(tt.name) &&\n        (this.state.value === \"type\" ||\n          this.state.value === \"interface\" ||\n          this.state.value === \"opaque\" ||\n          (this.shouldParseEnums() && this.state.value === \"enum\"))\n      ) {\n        return false;\n      }\n\n      return super.isExportDefaultSpecifier();\n    }\n\n    parseExportDefaultExpression(): N.Expression | N.Declaration {\n      if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n      return super.parseExportDefaultExpression();\n    }\n\n    parseConditional(\n      expr: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      refNeedsArrowPos?: ?Pos,\n    ): N.Expression {\n      if (!this.match(tt.question)) return expr;\n\n      // only use the expensive \"tryParse\" method if there is a question mark\n      // and if we come from inside parens\n      if (refNeedsArrowPos) {\n        const result = this.tryParse(() =>\n          super.parseConditional(expr, startPos, startLoc),\n        );\n\n        if (!result.node) {\n          // $FlowIgnore\n          refNeedsArrowPos.start = result.error.pos || this.state.start;\n          return expr;\n        }\n\n        if (result.error) this.state = result.failState;\n        return result.node;\n      }\n\n      this.expect(tt.question);\n      const state = this.state.clone();\n      const originalNoArrowAt = this.state.noArrowAt;\n      const node = this.startNodeAt(startPos, startLoc);\n      let { consequent, failed } = this.tryParseConditionalConsequent();\n      let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n\n      if (failed || invalid.length > 0) {\n        const noArrowAt = [...originalNoArrowAt];\n\n        if (invalid.length > 0) {\n          this.state = state;\n          this.state.noArrowAt = noArrowAt;\n\n          for (let i = 0; i < invalid.length; i++) {\n            noArrowAt.push(invalid[i].start);\n          }\n\n          ({ consequent, failed } = this.tryParseConditionalConsequent());\n          [valid, invalid] = this.getArrowLikeExpressions(consequent);\n        }\n\n        if (failed && valid.length > 1) {\n          // if there are two or more possible correct ways of parsing, throw an\n          // error.\n          // e.g.   Source: a ? (b): c => (d): e => f\n          //      Result 1: a ? b : (c => ((d): e => f))\n          //      Result 2: a ? ((b): c => d) : (e => f)\n          this.raise(state.start, FlowErrors.AmbiguousConditionalArrow);\n        }\n\n        if (failed && valid.length === 1) {\n          this.state = state;\n          this.state.noArrowAt = noArrowAt.concat(valid[0].start);\n          ({ consequent, failed } = this.tryParseConditionalConsequent());\n        }\n      }\n\n      this.getArrowLikeExpressions(consequent, true);\n\n      this.state.noArrowAt = originalNoArrowAt;\n      this.expect(tt.colon);\n\n      node.test = expr;\n      node.consequent = consequent;\n      node.alternate = this.forwardNoArrowParamsConversionAt(node, () =>\n        this.parseMaybeAssign(undefined, undefined, undefined),\n      );\n\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    tryParseConditionalConsequent(): {\n      consequent: N.Expression,\n      failed: boolean,\n    } {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n\n      const consequent = this.parseMaybeAssignAllowIn();\n      const failed = !this.match(tt.colon);\n\n      this.state.noArrowParamsConversionAt.pop();\n\n      return { consequent, failed };\n    }\n\n    // Given an expression, walks through out its arrow functions whose body is\n    // an expression and through out conditional expressions. It returns every\n    // function which has been parsed with a return type but could have been\n    // parenthesized expressions.\n    // These functions are separated into two arrays: one containing the ones\n    // whose parameters can be converted to assignable lists, one containing the\n    // others.\n    getArrowLikeExpressions(\n      node: N.Expression,\n      disallowInvalid?: boolean,\n    ): [N.ArrowFunctionExpression[], N.ArrowFunctionExpression[]] {\n      const stack = [node];\n      const arrows: N.ArrowFunctionExpression[] = [];\n\n      while (stack.length !== 0) {\n        const node = stack.pop();\n        if (node.type === \"ArrowFunctionExpression\") {\n          if (node.typeParameters || !node.returnType) {\n            // This is an arrow expression without ambiguity, so check its parameters\n            this.finishArrowValidation(node);\n          } else {\n            arrows.push(node);\n          }\n          stack.push(node.body);\n        } else if (node.type === \"ConditionalExpression\") {\n          stack.push(node.consequent);\n          stack.push(node.alternate);\n        }\n      }\n\n      if (disallowInvalid) {\n        arrows.forEach(node => this.finishArrowValidation(node));\n        return [arrows, []];\n      }\n\n      return partition(arrows, node =>\n        node.params.every(param => this.isAssignable(param, true)),\n      );\n    }\n\n    finishArrowValidation(node: N.ArrowFunctionExpression) {\n      this.toAssignableList(\n        // node.params is Expression[] instead of $ReadOnlyArray<Pattern> because it\n        // has not been converted yet.\n        ((node.params: any): N.Expression[]),\n        node.extra?.trailingComma,\n        /* isLHS */ false,\n      );\n      // Enter scope, as checkParams defines bindings\n      this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n      // Use super's method to force the parameters to be checked\n      super.checkParams(node, false, true);\n      this.scope.exit();\n    }\n\n    forwardNoArrowParamsConversionAt<T>(node: N.Node, parse: () => T): T {\n      let result: T;\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        this.state.noArrowParamsConversionAt.push(this.state.start);\n        result = parse();\n        this.state.noArrowParamsConversionAt.pop();\n      } else {\n        result = parse();\n      }\n\n      return result;\n    }\n\n    parseParenItem(\n      node: N.Expression,\n      startPos: number,\n      startLoc: Position,\n    ): N.Expression {\n      node = super.parseParenItem(node, startPos, startLoc);\n      if (this.eat(tt.question)) {\n        node.optional = true;\n        // Include questionmark in location of node\n        // Don't use this.finishNode() as otherwise we might process comments twice and\n        // include already consumed parens\n        this.resetEndLocation(node);\n      }\n\n      if (this.match(tt.colon)) {\n        const typeCastNode = this.startNodeAt(startPos, startLoc);\n        typeCastNode.expression = node;\n        typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n\n        return this.finishNode(typeCastNode, \"TypeCastExpression\");\n      }\n\n      return node;\n    }\n\n    assertModuleNodeAllowed(node: N.Node) {\n      if (\n        (node.type === \"ImportDeclaration\" &&\n          (node.importKind === \"type\" || node.importKind === \"typeof\")) ||\n        (node.type === \"ExportNamedDeclaration\" &&\n          node.exportKind === \"type\") ||\n        (node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\")\n      ) {\n        // Allow Flowtype imports and exports in all conditions because\n        // Flow itself does not care about 'sourceType'.\n        return;\n      }\n\n      super.assertModuleNodeAllowed(node);\n    }\n\n    parseExport(node: N.Node): N.AnyExport {\n      const decl = super.parseExport(node);\n      if (\n        decl.type === \"ExportNamedDeclaration\" ||\n        decl.type === \"ExportAllDeclaration\"\n      ) {\n        decl.exportKind = decl.exportKind || \"value\";\n      }\n      return decl;\n    }\n\n    parseExportDeclaration(node: N.ExportNamedDeclaration): ?N.Declaration {\n      if (this.isContextual(\"type\")) {\n        node.exportKind = \"type\";\n\n        const declarationNode = this.startNode();\n        this.next();\n\n        if (this.match(tt.braceL)) {\n          // export type { foo, bar };\n          node.specifiers = this.parseExportSpecifiers();\n          this.parseExportFrom(node);\n          return null;\n        } else {\n          // export type Foo = Bar;\n          return this.flowParseTypeAlias(declarationNode);\n        }\n      } else if (this.isContextual(\"opaque\")) {\n        node.exportKind = \"type\";\n\n        const declarationNode = this.startNode();\n        this.next();\n        // export opaque type Foo = Bar;\n        return this.flowParseOpaqueType(declarationNode, false);\n      } else if (this.isContextual(\"interface\")) {\n        node.exportKind = \"type\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseInterface(declarationNode);\n      } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        node.exportKind = \"value\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(declarationNode);\n      } else {\n        return super.parseExportDeclaration(node);\n      }\n    }\n\n    eatExportStar(node: N.Node): boolean {\n      if (super.eatExportStar(...arguments)) return true;\n\n      if (this.isContextual(\"type\") && this.lookahead().type === tt.star) {\n        node.exportKind = \"type\";\n        this.next();\n        this.next();\n        return true;\n      }\n\n      return false;\n    }\n\n    maybeParseExportNamespaceSpecifier(node: N.Node): boolean {\n      const pos = this.state.start;\n      const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n      if (hasNamespace && node.exportKind === \"type\") {\n        this.unexpected(pos);\n      }\n      return hasNamespace;\n    }\n\n    parseClassId(node: N.Class, isStatement: boolean, optionalId: ?boolean) {\n      super.parseClassId(node, isStatement, optionalId);\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n    }\n\n    parseClassMember(\n      classBody: N.ClassBody,\n      member: any,\n      state: N.ParseClassMemberState,\n    ): void {\n      const pos = this.state.start;\n      if (this.isContextual(\"declare\")) {\n        if (this.parseClassMemberFromModifier(classBody, member)) {\n          // 'declare' is a class element name\n          return;\n        }\n\n        member.declare = true;\n      }\n\n      super.parseClassMember(classBody, member, state);\n\n      if (member.declare) {\n        if (\n          member.type !== \"ClassProperty\" &&\n          member.type !== \"ClassPrivateProperty\" &&\n          member.type !== \"PropertyDefinition\" // Used by estree plugin\n        ) {\n          this.raise(pos, FlowErrors.DeclareClassElement);\n        } else if (member.value) {\n          this.raise(\n            member.value.start,\n            FlowErrors.DeclareClassFieldInitializer,\n          );\n        }\n      }\n    }\n\n    isIterator(word: string): boolean {\n      return word === \"iterator\" || word === \"asyncIterator\";\n    }\n\n    readIterator(): void {\n      const word = super.readWord1();\n      const fullWord = \"@@\" + word;\n\n      // Allow @@iterator and @@asyncIterator as a identifier only inside type\n      if (!this.isIterator(word) || !this.state.inType) {\n        this.raise(this.state.pos, Errors.InvalidIdentifier, fullWord);\n      }\n\n      this.finishToken(tt.name, fullWord);\n    }\n\n    // ensure that inside flow types, we bypass the jsx parser plugin\n    getTokenFromCode(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (code === charCodes.leftCurlyBrace && next === charCodes.verticalBar) {\n        return this.finishOp(tt.braceBarL, 2);\n      } else if (\n        this.state.inType &&\n        (code === charCodes.greaterThan || code === charCodes.lessThan)\n      ) {\n        return this.finishOp(tt.relational, 1);\n      } else if (this.state.inType && code === charCodes.questionMark) {\n        if (next === charCodes.dot) {\n          return this.finishOp(tt.questionDot, 2);\n        }\n        // allow double nullable types in Flow: ??string\n        return this.finishOp(tt.question, 1);\n      } else if (isIteratorStart(code, next)) {\n        this.state.pos += 2; // eat \"@@\"\n        return this.readIterator();\n      } else {\n        return super.getTokenFromCode(code);\n      }\n    }\n\n    isAssignable(node: N.Node, isBinding?: boolean): boolean {\n      switch (node.type) {\n        case \"Identifier\":\n        case \"ObjectPattern\":\n        case \"ArrayPattern\":\n        case \"AssignmentPattern\":\n          return true;\n\n        case \"ObjectExpression\": {\n          const last = node.properties.length - 1;\n          return node.properties.every((prop, i) => {\n            return (\n              prop.type !== \"ObjectMethod\" &&\n              (i === last || prop.type === \"SpreadElement\") &&\n              this.isAssignable(prop)\n            );\n          });\n        }\n\n        case \"ObjectProperty\":\n          return this.isAssignable(node.value);\n\n        case \"SpreadElement\":\n          return this.isAssignable(node.argument);\n\n        case \"ArrayExpression\":\n          return node.elements.every(element => this.isAssignable(element));\n\n        case \"AssignmentExpression\":\n          return node.operator === \"=\";\n\n        case \"ParenthesizedExpression\":\n        case \"TypeCastExpression\":\n          return this.isAssignable(node.expression);\n\n        case \"MemberExpression\":\n        case \"OptionalMemberExpression\":\n          return !isBinding;\n\n        default:\n          return false;\n      }\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean = false): N.Node {\n      if (node.type === \"TypeCastExpression\") {\n        return super.toAssignable(this.typeCastToParameter(node), isLHS);\n      } else {\n        return super.toAssignable(node, isLHS);\n      }\n    }\n\n    // turn type casts that we found in function parameter head into type annotated params\n    toAssignableList(\n      exprList: N.Expression[],\n      trailingCommaPos?: ?number,\n      isLHS: boolean,\n    ): $ReadOnlyArray<N.Pattern> {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (expr?.type === \"TypeCastExpression\") {\n          exprList[i] = this.typeCastToParameter(expr);\n        }\n      }\n      return super.toAssignableList(exprList, trailingCommaPos, isLHS);\n    }\n\n    // this is a list of nodes, from something like a call expression, we need to filter the\n    // type casts that we've found that are illegal in this context\n    toReferencedList(\n      exprList: $ReadOnlyArray<?N.Expression>,\n      isParenthesizedExpr?: boolean,\n    ): $ReadOnlyArray<?N.Expression> {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (\n          expr &&\n          expr.type === \"TypeCastExpression\" &&\n          !expr.extra?.parenthesized &&\n          (exprList.length > 1 || !isParenthesizedExpr)\n        ) {\n          this.raise(expr.typeAnnotation.start, FlowErrors.TypeCastInPattern);\n        }\n      }\n\n      return exprList;\n    }\n\n    parseArrayLike(\n      close: TokenType,\n      canBePattern: boolean,\n      isTuple: boolean,\n      refExpressionErrors: ?ExpressionErrors,\n    ): N.ArrayExpression | N.TupleExpression {\n      const node = super.parseArrayLike(\n        close,\n        canBePattern,\n        isTuple,\n        refExpressionErrors,\n      );\n\n      // This could be an array pattern:\n      //   ([a: string, b: string]) => {}\n      // In this case, we don't have to call toReferencedList. We will\n      // call it, if needed, when we are sure that it is a parenthesized\n      // expression by calling toReferencedListDeep.\n      if (canBePattern && !this.state.maybeInArrowParameters) {\n        this.toReferencedList(node.elements);\n      }\n\n      return node;\n    }\n\n    checkLVal(\n      expr: N.Expression,\n      ...args:\n        | [string, BindingTypes | void]\n        | [\n            string,\n            BindingTypes | void,\n            ?Set<string>,\n            boolean | void,\n            boolean | void,\n          ]\n    ): void {\n      if (expr.type !== \"TypeCastExpression\") {\n        return super.checkLVal(expr, ...args);\n      }\n    }\n\n    // parse class property type annotations\n    parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n      if (this.match(tt.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n      return super.parseClassProperty(node);\n    }\n\n    parseClassPrivateProperty(\n      node: N.ClassPrivateProperty,\n    ): N.ClassPrivateProperty {\n      if (this.match(tt.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n      return super.parseClassPrivateProperty(node);\n    }\n\n    // determine whether or not we're currently in the position where a class method would appear\n    isClassMethod(): boolean {\n      return this.isRelational(\"<\") || super.isClassMethod();\n    }\n\n    // determine whether or not we're currently in the position where a class property would appear\n    isClassProperty(): boolean {\n      return this.match(tt.colon) || super.isClassProperty();\n    }\n\n    isNonstaticConstructor(method: N.ClassMethod | N.ClassProperty): boolean {\n      return !this.match(tt.colon) && super.isNonstaticConstructor(method);\n    }\n\n    // parse type parameters for class methods\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      if ((method: $FlowFixMe).variance) {\n        this.unexpected((method: $FlowFixMe).variance.start);\n      }\n      delete (method: $FlowFixMe).variance;\n      if (this.isRelational(\"<\")) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassMethod(\n        classBody,\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n      );\n\n      if (method.params && isConstructor) {\n        const params = method.params;\n        if (params.length > 0 && this.isThisParam(params[0])) {\n          this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n        }\n        // estree support\n      } else if (\n        // $FlowFixMe flow does not know about the face that estree can replace ClassMethod with MethodDefinition\n        method.type === \"MethodDefinition\" &&\n        isConstructor &&\n        method.value.params\n      ) {\n        const params = method.value.params;\n        if (params.length > 0 && this.isThisParam(params[0])) {\n          this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n        }\n      }\n    }\n\n    pushClassPrivateMethod(\n      classBody: N.ClassBody,\n      method: N.ClassPrivateMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n    ): void {\n      if ((method: $FlowFixMe).variance) {\n        this.unexpected((method: $FlowFixMe).variance.start);\n      }\n      delete (method: $FlowFixMe).variance;\n      if (this.isRelational(\"<\")) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n    }\n\n    // parse a the super class type parameters and implements\n    parseClassSuper(node: N.Class): void {\n      super.parseClassSuper(node);\n      if (node.superClass && this.isRelational(\"<\")) {\n        node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n      }\n      if (this.isContextual(\"implements\")) {\n        this.next();\n        const implemented: N.FlowClassImplements[] = (node.implements = []);\n        do {\n          const node = this.startNode();\n          node.id = this.flowParseRestrictedIdentifier(/*liberal*/ true);\n          if (this.isRelational(\"<\")) {\n            node.typeParameters = this.flowParseTypeParameterInstantiation();\n          } else {\n            node.typeParameters = null;\n          }\n          implemented.push(this.finishNode(node, \"ClassImplements\"));\n        } while (this.eat(tt.comma));\n      }\n    }\n\n    checkGetterSetterParams(method: N.ObjectMethod | N.ClassMethod): void {\n      super.checkGetterSetterParams(method);\n      const params = this.getObjectOrClassMethodParams(method);\n      if (params.length > 0) {\n        const param = params[0];\n        if (this.isThisParam(param) && method.kind === \"get\") {\n          this.raise(param.start, FlowErrors.GetterMayNotHaveThisParam);\n        } else if (this.isThisParam(param)) {\n          this.raise(param.start, FlowErrors.SetterMayNotHaveThisParam);\n        }\n      }\n    }\n\n    parsePropertyName(\n      node: N.ObjectOrClassMember | N.ClassMember | N.TsNamedTypeElementBase,\n      isPrivateNameAllowed: boolean,\n    ): N.Identifier {\n      const variance = this.flowParseVariance();\n      const key = super.parsePropertyName(node, isPrivateNameAllowed);\n      // $FlowIgnore (\"variance\" not defined on TsNamedTypeElementBase)\n      node.variance = variance;\n      return key;\n    }\n\n    // parse type parameters for object method shorthand\n    parseObjPropValue(\n      prop: N.ObjectMember,\n      startPos: ?number,\n      startLoc: ?Position,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isPattern: boolean,\n      isAccessor: boolean,\n      refExpressionErrors: ?ExpressionErrors,\n    ): void {\n      if ((prop: $FlowFixMe).variance) {\n        this.unexpected((prop: $FlowFixMe).variance.start);\n      }\n      delete (prop: $FlowFixMe).variance;\n\n      let typeParameters;\n\n      // method shorthand\n      if (this.isRelational(\"<\") && !isAccessor) {\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        if (!this.match(tt.parenL)) this.unexpected();\n      }\n\n      super.parseObjPropValue(\n        prop,\n        startPos,\n        startLoc,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n        refExpressionErrors,\n      );\n\n      // add typeParameters if we found them\n      if (typeParameters) {\n        (prop.value || prop).typeParameters = typeParameters;\n      }\n    }\n\n    parseAssignableListItemTypes(param: N.Pattern): N.Pattern {\n      if (this.eat(tt.question)) {\n        if (param.type !== \"Identifier\") {\n          this.raise(param.start, FlowErrors.OptionalBindingPattern);\n        }\n        if (this.isThisParam(param)) {\n          this.raise(param.start, FlowErrors.ThisParamMayNotBeOptional);\n        }\n\n        ((param: any): N.Identifier).optional = true;\n      }\n      if (this.match(tt.colon)) {\n        param.typeAnnotation = this.flowParseTypeAnnotation();\n      } else if (this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.ThisParamAnnotationRequired);\n      }\n\n      if (this.match(tt.eq) && this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.ThisParamNoDefault);\n      }\n\n      this.resetEndLocation(param);\n      return param;\n    }\n\n    parseMaybeDefault(\n      startPos?: ?number,\n      startLoc?: ?Position,\n      left?: ?N.Pattern,\n    ): N.Pattern {\n      const node = super.parseMaybeDefault(startPos, startLoc, left);\n\n      if (\n        node.type === \"AssignmentPattern\" &&\n        node.typeAnnotation &&\n        node.right.start < node.typeAnnotation.start\n      ) {\n        this.raise(node.typeAnnotation.start, FlowErrors.TypeBeforeInitializer);\n      }\n\n      return node;\n    }\n\n    shouldParseDefaultImport(node: N.ImportDeclaration): boolean {\n      if (!hasTypeImportKind(node)) {\n        return super.shouldParseDefaultImport(node);\n      }\n\n      return isMaybeDefaultImport(this.state);\n    }\n\n    parseImportSpecifierLocal(\n      node: N.ImportDeclaration,\n      specifier: N.Node,\n      type: string,\n      contextDescription: string,\n    ): void {\n      specifier.local = hasTypeImportKind(node)\n        ? this.flowParseRestrictedIdentifier(\n            /* liberal */ true,\n            /* declaration */ true,\n          )\n        : this.parseIdentifier();\n\n      this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n      node.specifiers.push(this.finishNode(specifier, type));\n    }\n\n    // parse typeof and type imports\n    maybeParseDefaultImportSpecifier(node: N.ImportDeclaration): boolean {\n      node.importKind = \"value\";\n\n      let kind = null;\n      if (this.match(tt._typeof)) {\n        kind = \"typeof\";\n      } else if (this.isContextual(\"type\")) {\n        kind = \"type\";\n      }\n      if (kind) {\n        const lh = this.lookahead();\n\n        // import type * is not allowed\n        if (kind === \"type\" && lh.type === tt.star) {\n          this.unexpected(lh.start);\n        }\n\n        if (\n          isMaybeDefaultImport(lh) ||\n          lh.type === tt.braceL ||\n          lh.type === tt.star\n        ) {\n          this.next();\n          node.importKind = kind;\n        }\n      }\n\n      return super.maybeParseDefaultImportSpecifier(node);\n    }\n\n    // parse import-type/typeof shorthand\n    parseImportSpecifier(node: N.ImportDeclaration): void {\n      const specifier = this.startNode();\n      const firstIdentIsString = this.match(tt.string);\n      const firstIdent = this.parseModuleExportName();\n\n      let specifierTypeKind = null;\n      if (firstIdent.type === \"Identifier\") {\n        if (firstIdent.name === \"type\") {\n          specifierTypeKind = \"type\";\n        } else if (firstIdent.name === \"typeof\") {\n          specifierTypeKind = \"typeof\";\n        }\n      }\n\n      let isBinding = false;\n      if (this.isContextual(\"as\") && !this.isLookaheadContextual(\"as\")) {\n        const as_ident = this.parseIdentifier(true);\n        if (\n          specifierTypeKind !== null &&\n          !this.match(tt.name) &&\n          !this.state.type.keyword\n        ) {\n          // `import {type as ,` or `import {type as }`\n          specifier.imported = as_ident;\n          specifier.importKind = specifierTypeKind;\n          specifier.local = as_ident.__clone();\n        } else {\n          // `import {type as foo`\n          specifier.imported = firstIdent;\n          specifier.importKind = null;\n          specifier.local = this.parseIdentifier();\n        }\n      } else if (\n        specifierTypeKind !== null &&\n        (this.match(tt.name) || this.state.type.keyword)\n      ) {\n        // `import {type foo`\n        specifier.imported = this.parseIdentifier(true);\n        specifier.importKind = specifierTypeKind;\n        if (this.eatContextual(\"as\")) {\n          specifier.local = this.parseIdentifier();\n        } else {\n          isBinding = true;\n          specifier.local = specifier.imported.__clone();\n        }\n      } else {\n        if (firstIdentIsString) {\n          /*:: invariant(firstIdent instanceof N.StringLiteral) */\n          throw this.raise(\n            specifier.start,\n            Errors.ImportBindingIsString,\n            firstIdent.value,\n          );\n        }\n        /*:: invariant(firstIdent instanceof N.Node) */\n        isBinding = true;\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n        specifier.local = specifier.imported.__clone();\n      }\n\n      const nodeIsTypeImport = hasTypeImportKind(node);\n      const specifierIsTypeImport = hasTypeImportKind(specifier);\n\n      if (nodeIsTypeImport && specifierIsTypeImport) {\n        this.raise(\n          specifier.start,\n          FlowErrors.ImportTypeShorthandOnlyInPureImport,\n        );\n      }\n\n      if (nodeIsTypeImport || specifierIsTypeImport) {\n        this.checkReservedType(\n          specifier.local.name,\n          specifier.local.start,\n          /* declaration */ true,\n        );\n      }\n\n      if (isBinding && !nodeIsTypeImport && !specifierIsTypeImport) {\n        this.checkReservedWord(\n          specifier.local.name,\n          specifier.start,\n          true,\n          true,\n        );\n      }\n\n      this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n      node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n    }\n\n    parseBindingAtom(): N.Pattern {\n      switch (this.state.type) {\n        case tt._this:\n          // \"this\" may be the name of a parameter, so allow it.\n          return this.parseIdentifier(/* liberal */ true);\n        default:\n          return super.parseBindingAtom();\n      }\n    }\n\n    // parse function type parameters - function foo<T>() {}\n    parseFunctionParams(node: N.Function, allowModifiers?: boolean): void {\n      // $FlowFixMe\n      const kind = node.kind;\n      if (kind !== \"get\" && kind !== \"set\" && this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n      super.parseFunctionParams(node, allowModifiers);\n    }\n\n    // parse flow type annotations on variable declarator heads - let foo: string = bar\n    parseVarId(\n      decl: N.VariableDeclarator,\n      kind: \"var\" | \"let\" | \"const\",\n    ): void {\n      super.parseVarId(decl, kind);\n      if (this.match(tt.colon)) {\n        decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(decl.id); // set end position to end of type\n      }\n    }\n\n    // parse the return type of an async arrow function - let foo = (async (): number => {});\n    parseAsyncArrowFromCallExpression(\n      node: N.ArrowFunctionExpression,\n      call: N.CallExpression,\n    ): N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        node.returnType = this.flowParseTypeAnnotation();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      }\n\n      return super.parseAsyncArrowFromCallExpression(node, call);\n    }\n\n    // todo description\n    shouldParseAsyncArrow(): boolean {\n      return this.match(tt.colon) || super.shouldParseAsyncArrow();\n    }\n\n    // We need to support type parameter declarations for arrow functions. This\n    // is tricky. There are three situations we need to handle\n    //\n    // 1. This is either JSX or an arrow function. We'll try JSX first. If that\n    //    fails, we'll try an arrow function. If that fails, we'll throw the JSX\n    //    error.\n    // 2. This is an arrow function. We'll parse the type parameter declaration,\n    //    parse the rest, make sure the rest is an arrow function, and go from\n    //    there\n    // 3. This is neither. Just call the super method\n    parseMaybeAssign(\n      refExpressionErrors?: ?ExpressionErrors,\n      afterLeftParse?: Function,\n      refNeedsArrowPos?: ?Pos,\n    ): N.Expression {\n      let state = null;\n\n      let jsx;\n\n      if (\n        this.hasPlugin(\"jsx\") &&\n        (this.match(tt.jsxTagStart) || this.isRelational(\"<\"))\n      ) {\n        state = this.state.clone();\n\n        jsx = this.tryParse(\n          () =>\n            super.parseMaybeAssign(\n              refExpressionErrors,\n              afterLeftParse,\n              refNeedsArrowPos,\n            ),\n          state,\n        );\n        /*:: invariant(!jsx.aborted) */\n\n        if (!jsx.error) return jsx.node;\n\n        // Remove `tc.j_expr` and `tc.j_oTag` from context added\n        // by parsing `jsxTagStart` to stop the JSX plugin from\n        // messing with the tokens\n        const { context } = this.state;\n        if (context[context.length - 1] === tc.j_oTag) {\n          context.length -= 2;\n        } else if (context[context.length - 1] === tc.j_expr) {\n          context.length -= 1;\n        }\n      }\n\n      if (jsx?.error || this.isRelational(\"<\")) {\n        state = state || this.state.clone();\n\n        let typeParameters;\n\n        const arrow = this.tryParse(abort => {\n          typeParameters = this.flowParseTypeParameterDeclaration();\n\n          const arrowExpression = this.forwardNoArrowParamsConversionAt(\n            typeParameters,\n            () => {\n              const result = super.parseMaybeAssign(\n                refExpressionErrors,\n                afterLeftParse,\n                refNeedsArrowPos,\n              );\n\n              this.resetStartLocationFromNode(result, typeParameters);\n\n              return result;\n            },\n          );\n\n          // <T>(() => {}: any);\n          if (\n            arrowExpression.type !== \"ArrowFunctionExpression\" &&\n            arrowExpression.extra?.parenthesized\n          ) {\n            abort();\n          }\n\n          // The above can return a TypeCastExpression when the arrow\n          // expression is not wrapped in parens. See also `this.parseParenItem`.\n          const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\n          expr.typeParameters = typeParameters;\n          this.resetStartLocationFromNode(expr, typeParameters);\n\n          return arrowExpression;\n        }, state);\n\n        let arrowExpression: ?(\n          | N.ArrowFunctionExpression\n          | N.TypeCastExpression\n        ) = null;\n\n        if (\n          arrow.node &&\n          this.maybeUnwrapTypeCastExpression(arrow.node).type ===\n            \"ArrowFunctionExpression\"\n        ) {\n          if (!arrow.error && !arrow.aborted) {\n            // <T> async () => {}\n            if (arrow.node.async) {\n              /*:: invariant(typeParameters) */\n              this.raise(\n                typeParameters.start,\n                FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction,\n              );\n            }\n\n            return arrow.node;\n          }\n\n          arrowExpression = arrow.node;\n        }\n\n        // If we are here, both JSX and Flow parsing attempts failed.\n        // Give the precedence to the JSX error, except if JSX had an\n        // unrecoverable error while Flow didn't.\n        // If the error is recoverable, we can only re-report it if there is\n        // a node we can return.\n\n        if (jsx?.node) {\n          /*:: invariant(jsx.failState) */\n          this.state = jsx.failState;\n          return jsx.node;\n        }\n\n        if (arrowExpression) {\n          /*:: invariant(arrow.failState) */\n          this.state = arrow.failState;\n          return arrowExpression;\n        }\n\n        if (jsx?.thrown) throw jsx.error;\n        if (arrow.thrown) throw arrow.error;\n\n        /*:: invariant(typeParameters) */\n        throw this.raise(\n          typeParameters.start,\n          FlowErrors.UnexpectedTokenAfterTypeParameter,\n        );\n      }\n\n      return super.parseMaybeAssign(\n        refExpressionErrors,\n        afterLeftParse,\n        refNeedsArrowPos,\n      );\n    }\n\n    // handle return types for arrow functions\n    parseArrow(node: N.ArrowFunctionExpression): ?N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        const result = this.tryParse(() => {\n          const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n          this.state.noAnonFunctionType = true;\n\n          const typeNode = this.startNode();\n\n          [\n            // $FlowFixMe (destructuring not supported yet)\n            typeNode.typeAnnotation,\n            // $FlowFixMe (destructuring not supported yet)\n            node.predicate,\n          ] = this.flowParseTypeAndPredicateInitialiser();\n\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n          if (this.canInsertSemicolon()) this.unexpected();\n          if (!this.match(tt.arrow)) this.unexpected();\n\n          return typeNode;\n        });\n\n        if (result.thrown) return null;\n        /*:: invariant(result.node) */\n\n        if (result.error) this.state = result.failState;\n\n        // assign after it is clear it is an arrow\n        node.returnType = result.node.typeAnnotation\n          ? this.finishNode(result.node, \"TypeAnnotation\")\n          : null;\n      }\n\n      return super.parseArrow(node);\n    }\n\n    shouldParseArrow(): boolean {\n      return this.match(tt.colon) || super.shouldParseArrow();\n    }\n\n    setArrowFunctionParameters(\n      node: N.ArrowFunctionExpression,\n      params: N.Expression[],\n    ): void {\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        node.params = params;\n      } else {\n        super.setArrowFunctionParameters(node, params);\n      }\n    }\n\n    checkParams(\n      node: N.Function,\n      allowDuplicates: boolean,\n      isArrowFunction: ?boolean,\n    ): void {\n      if (\n        isArrowFunction &&\n        this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1\n      ) {\n        return;\n      }\n\n      // ensure the `this` param is first, if it exists\n      for (let i = 0; i < node.params.length; i++) {\n        if (this.isThisParam(node.params[i]) && i > 0) {\n          this.raise(node.params[i].start, FlowErrors.ThisParamMustBeFirst);\n        }\n      }\n\n      return super.checkParams(...arguments);\n    }\n\n    parseParenAndDistinguishExpression(canBeArrow: boolean): N.Expression {\n      return super.parseParenAndDistinguishExpression(\n        canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1,\n      );\n    }\n\n    parseSubscripts(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls?: ?boolean,\n    ): N.Expression {\n      if (\n        base.type === \"Identifier\" &&\n        base.name === \"async\" &&\n        this.state.noArrowAt.indexOf(startPos) !== -1\n      ) {\n        this.next();\n\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n        base = this.finishNode(node, \"CallExpression\");\n      } else if (\n        base.type === \"Identifier\" &&\n        base.name === \"async\" &&\n        this.isRelational(\"<\")\n      ) {\n        const state = this.state.clone();\n        const arrow = this.tryParse(\n          abort =>\n            this.parseAsyncArrowWithTypeParameters(startPos, startLoc) ||\n            abort(),\n          state,\n        );\n\n        if (!arrow.error && !arrow.aborted) return arrow.node;\n\n        const result = this.tryParse(\n          () => super.parseSubscripts(base, startPos, startLoc, noCalls),\n          state,\n        );\n\n        if (result.node && !result.error) return result.node;\n\n        if (arrow.node) {\n          this.state = arrow.failState;\n          return arrow.node;\n        }\n\n        if (result.node) {\n          this.state = result.failState;\n          return result.node;\n        }\n\n        throw arrow.error || result.error;\n      }\n\n      return super.parseSubscripts(base, startPos, startLoc, noCalls);\n    }\n\n    parseSubscript(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls: ?boolean,\n      subscriptState: N.ParseSubscriptState,\n    ): N.Expression {\n      if (this.match(tt.questionDot) && this.isLookaheadToken_lt()) {\n        subscriptState.optionalChainMember = true;\n        if (noCalls) {\n          subscriptState.stop = true;\n          return base;\n        }\n        this.next();\n        const node: N.OptionalCallExpression = this.startNodeAt(\n          startPos,\n          startLoc,\n        );\n        node.callee = base;\n        node.typeArguments = this.flowParseTypeParameterInstantiation();\n        this.expect(tt.parenL);\n        // $FlowFixMe\n        node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n        node.optional = true;\n        return this.finishCallExpression(node, /* optional */ true);\n      } else if (\n        !noCalls &&\n        this.shouldParseTypes() &&\n        this.isRelational(\"<\")\n      ) {\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n\n        const result = this.tryParse(() => {\n          node.typeArguments =\n            this.flowParseTypeParameterInstantiationCallOrNew();\n          this.expect(tt.parenL);\n          node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n          if (subscriptState.optionalChainMember) node.optional = false;\n          return this.finishCallExpression(\n            node,\n            subscriptState.optionalChainMember,\n          );\n        });\n\n        if (result.node) {\n          if (result.error) this.state = result.failState;\n          return result.node;\n        }\n      }\n\n      return super.parseSubscript(\n        base,\n        startPos,\n        startLoc,\n        noCalls,\n        subscriptState,\n      );\n    }\n\n    parseNewArguments(node: N.NewExpression): void {\n      let targs = null;\n      if (this.shouldParseTypes() && this.isRelational(\"<\")) {\n        targs = this.tryParse(() =>\n          this.flowParseTypeParameterInstantiationCallOrNew(),\n        ).node;\n      }\n      node.typeArguments = targs;\n\n      super.parseNewArguments(node);\n    }\n\n    parseAsyncArrowWithTypeParameters(\n      startPos: number,\n      startLoc: Position,\n    ): ?N.ArrowFunctionExpression {\n      const node = this.startNodeAt(startPos, startLoc);\n      this.parseFunctionParams(node);\n      if (!this.parseArrow(node)) return;\n      return this.parseArrowExpression(\n        node,\n        /* params */ undefined,\n        /* isAsync */ true,\n      );\n    }\n\n    readToken_mult_modulo(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (\n        code === charCodes.asterisk &&\n        next === charCodes.slash &&\n        this.state.hasFlowComment\n      ) {\n        this.state.hasFlowComment = false;\n        this.state.pos += 2;\n        this.nextToken();\n        return;\n      }\n\n      super.readToken_mult_modulo(code);\n    }\n\n    readToken_pipe_amp(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (\n        code === charCodes.verticalBar &&\n        next === charCodes.rightCurlyBrace\n      ) {\n        // '|}'\n        this.finishOp(tt.braceBarR, 2);\n        return;\n      }\n\n      super.readToken_pipe_amp(code);\n    }\n\n    parseTopLevel(file: N.File, program: N.Program): N.File {\n      const fileNode = super.parseTopLevel(file, program);\n      if (this.state.hasFlowComment) {\n        this.raise(this.state.pos, FlowErrors.UnterminatedFlowComment);\n      }\n      return fileNode;\n    }\n\n    skipBlockComment(): void {\n      if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n        if (this.state.hasFlowComment) {\n          this.unexpected(null, FlowErrors.NestedFlowComment);\n        }\n        this.hasFlowCommentCompletion();\n        this.state.pos += this.skipFlowComment();\n        this.state.hasFlowComment = true;\n        return;\n      }\n\n      if (this.state.hasFlowComment) {\n        const end = this.input.indexOf(\"*-/\", (this.state.pos += 2));\n        if (end === -1) {\n          throw this.raise(this.state.pos - 2, Errors.UnterminatedComment);\n        }\n        this.state.pos = end + 3;\n        return;\n      }\n\n      super.skipBlockComment();\n    }\n\n    skipFlowComment(): number | boolean {\n      const { pos } = this.state;\n      let shiftToFirstNonWhiteSpace = 2;\n      while (\n        [charCodes.space, charCodes.tab].includes(\n          this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace),\n        )\n      ) {\n        shiftToFirstNonWhiteSpace++;\n      }\n\n      const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n      const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n\n      if (ch2 === charCodes.colon && ch3 === charCodes.colon) {\n        return shiftToFirstNonWhiteSpace + 2; // check for /*::\n      }\n      if (\n        this.input.slice(\n          shiftToFirstNonWhiteSpace + pos,\n          shiftToFirstNonWhiteSpace + pos + 12,\n        ) === \"flow-include\"\n      ) {\n        return shiftToFirstNonWhiteSpace + 12; // check for /*flow-include\n      }\n      if (ch2 === charCodes.colon && ch3 !== charCodes.colon) {\n        return shiftToFirstNonWhiteSpace; // check for /*:, advance up to :\n      }\n      return false;\n    }\n\n    hasFlowCommentCompletion(): void {\n      const end = this.input.indexOf(\"*/\", this.state.pos);\n      if (end === -1) {\n        throw this.raise(this.state.pos, Errors.UnterminatedComment);\n      }\n    }\n\n    // Flow enum parsing\n\n    flowEnumErrorBooleanMemberNotInitialized(\n      pos: number,\n      { enumName, memberName }: { enumName: string, memberName: string },\n    ): void {\n      this.raise(\n        pos,\n        FlowErrors.EnumBooleanMemberNotInitialized,\n        memberName,\n        enumName,\n      );\n    }\n\n    flowEnumErrorInvalidMemberName(\n      pos: number,\n      { enumName, memberName }: { enumName: string, memberName: string },\n    ): void {\n      const suggestion = memberName[0].toUpperCase() + memberName.slice(1);\n      this.raise(\n        pos,\n        FlowErrors.EnumInvalidMemberName,\n        memberName,\n        suggestion,\n        enumName,\n      );\n    }\n\n    flowEnumErrorDuplicateMemberName(\n      pos: number,\n      { enumName, memberName }: { enumName: string, memberName: string },\n    ): void {\n      this.raise(pos, FlowErrors.EnumDuplicateMemberName, memberName, enumName);\n    }\n\n    flowEnumErrorInconsistentMemberValues(\n      pos: number,\n      { enumName }: { enumName: string },\n    ): void {\n      this.raise(pos, FlowErrors.EnumInconsistentMemberValues, enumName);\n    }\n\n    flowEnumErrorInvalidExplicitType(\n      pos: number,\n      {\n        enumName,\n        suppliedType,\n      }: { enumName: string, suppliedType: null | string },\n    ) {\n      return this.raise(\n        pos,\n        suppliedType === null\n          ? FlowErrors.EnumInvalidExplicitTypeUnknownSupplied\n          : FlowErrors.EnumInvalidExplicitType,\n        enumName,\n        suppliedType,\n      );\n    }\n\n    flowEnumErrorInvalidMemberInitializer(\n      pos: number,\n      { enumName, explicitType, memberName }: EnumContext,\n    ) {\n      let message = null;\n      switch (explicitType) {\n        case \"boolean\":\n        case \"number\":\n        case \"string\":\n          message = FlowErrors.EnumInvalidMemberInitializerPrimaryType;\n          break;\n        case \"symbol\":\n          message = FlowErrors.EnumInvalidMemberInitializerSymbolType;\n          break;\n        default:\n          // null\n          message = FlowErrors.EnumInvalidMemberInitializerUnknownType;\n      }\n      return this.raise(pos, message, enumName, memberName, explicitType);\n    }\n\n    flowEnumErrorNumberMemberNotInitialized(\n      pos: number,\n      { enumName, memberName }: { enumName: string, memberName: string },\n    ): void {\n      this.raise(\n        pos,\n        FlowErrors.EnumNumberMemberNotInitialized,\n        enumName,\n        memberName,\n      );\n    }\n\n    flowEnumErrorStringMemberInconsistentlyInitailized(\n      pos: number,\n      { enumName }: { enumName: string },\n    ): void {\n      this.raise(\n        pos,\n        FlowErrors.EnumStringMemberInconsistentlyInitailized,\n        enumName,\n      );\n    }\n\n    flowEnumMemberInit(): EnumMemberInit {\n      const startPos = this.state.start;\n      const endOfInit = () => this.match(tt.comma) || this.match(tt.braceR);\n      switch (this.state.type) {\n        case tt.num: {\n          const literal = this.parseNumericLiteral(this.state.value);\n          if (endOfInit()) {\n            return { type: \"number\", pos: literal.start, value: literal };\n          }\n          return { type: \"invalid\", pos: startPos };\n        }\n        case tt.string: {\n          const literal = this.parseStringLiteral(this.state.value);\n          if (endOfInit()) {\n            return { type: \"string\", pos: literal.start, value: literal };\n          }\n          return { type: \"invalid\", pos: startPos };\n        }\n        case tt._true:\n        case tt._false: {\n          const literal = this.parseBooleanLiteral(this.match(tt._true));\n          if (endOfInit()) {\n            return {\n              type: \"boolean\",\n              pos: literal.start,\n              value: literal,\n            };\n          }\n          return { type: \"invalid\", pos: startPos };\n        }\n        default:\n          return { type: \"invalid\", pos: startPos };\n      }\n    }\n\n    flowEnumMemberRaw(): { id: N.Node, init: EnumMemberInit } {\n      const pos = this.state.start;\n      const id = this.parseIdentifier(true);\n      const init = this.eat(tt.eq)\n        ? this.flowEnumMemberInit()\n        : { type: \"none\", pos };\n      return { id, init };\n    }\n\n    flowEnumCheckExplicitTypeMismatch(\n      pos: number,\n      context: EnumContext,\n      expectedType: EnumExplicitType,\n    ): void {\n      const { explicitType } = context;\n      if (explicitType === null) {\n        return;\n      }\n      if (explicitType !== expectedType) {\n        this.flowEnumErrorInvalidMemberInitializer(pos, context);\n      }\n    }\n\n    flowEnumMembers({\n      enumName,\n      explicitType,\n    }: {\n      enumName: string,\n      explicitType: EnumExplicitType,\n    }): {|\n      members: {|\n        booleanMembers: Array<N.Node>,\n        numberMembers: Array<N.Node>,\n        stringMembers: Array<N.Node>,\n        defaultedMembers: Array<N.Node>,\n      |},\n      hasUnknownMembers: boolean,\n    |} {\n      const seenNames = new Set();\n      const members = {\n        booleanMembers: [],\n        numberMembers: [],\n        stringMembers: [],\n        defaultedMembers: [],\n      };\n      let hasUnknownMembers = false;\n      while (!this.match(tt.braceR)) {\n        if (this.eat(tt.ellipsis)) {\n          hasUnknownMembers = true;\n          break;\n        }\n        const memberNode = this.startNode();\n        const { id, init } = this.flowEnumMemberRaw();\n        const memberName = id.name;\n        if (memberName === \"\") {\n          continue;\n        }\n        if (/^[a-z]/.test(memberName)) {\n          this.flowEnumErrorInvalidMemberName(id.start, {\n            enumName,\n            memberName,\n          });\n        }\n        if (seenNames.has(memberName)) {\n          this.flowEnumErrorDuplicateMemberName(id.start, {\n            enumName,\n            memberName,\n          });\n        }\n        seenNames.add(memberName);\n        const context = { enumName, explicitType, memberName };\n        memberNode.id = id;\n        switch (init.type) {\n          case \"boolean\": {\n            this.flowEnumCheckExplicitTypeMismatch(\n              init.pos,\n              context,\n              \"boolean\",\n            );\n            memberNode.init = init.value;\n            members.booleanMembers.push(\n              this.finishNode(memberNode, \"EnumBooleanMember\"),\n            );\n            break;\n          }\n          case \"number\": {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"number\");\n            memberNode.init = init.value;\n            members.numberMembers.push(\n              this.finishNode(memberNode, \"EnumNumberMember\"),\n            );\n            break;\n          }\n          case \"string\": {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"string\");\n            memberNode.init = init.value;\n            members.stringMembers.push(\n              this.finishNode(memberNode, \"EnumStringMember\"),\n            );\n            break;\n          }\n          case \"invalid\": {\n            throw this.flowEnumErrorInvalidMemberInitializer(init.pos, context);\n          }\n          case \"none\": {\n            switch (explicitType) {\n              case \"boolean\":\n                this.flowEnumErrorBooleanMemberNotInitialized(\n                  init.pos,\n                  context,\n                );\n                break;\n              case \"number\":\n                this.flowEnumErrorNumberMemberNotInitialized(init.pos, context);\n                break;\n              default:\n                members.defaultedMembers.push(\n                  this.finishNode(memberNode, \"EnumDefaultedMember\"),\n                );\n            }\n          }\n        }\n\n        if (!this.match(tt.braceR)) {\n          this.expect(tt.comma);\n        }\n      }\n      return { members, hasUnknownMembers };\n    }\n\n    flowEnumStringMembers(\n      initializedMembers: Array<N.Node>,\n      defaultedMembers: Array<N.Node>,\n      { enumName }: { enumName: string },\n    ): Array<N.Node> {\n      if (initializedMembers.length === 0) {\n        return defaultedMembers;\n      } else if (defaultedMembers.length === 0) {\n        return initializedMembers;\n      } else if (defaultedMembers.length > initializedMembers.length) {\n        for (const member of initializedMembers) {\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(\n            member.start,\n            { enumName },\n          );\n        }\n        return defaultedMembers;\n      } else {\n        for (const member of defaultedMembers) {\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(\n            member.start,\n            { enumName },\n          );\n        }\n        return initializedMembers;\n      }\n    }\n\n    flowEnumParseExplicitType({\n      enumName,\n    }: {\n      enumName: string,\n    }): EnumExplicitType {\n      if (this.eatContextual(\"of\")) {\n        if (!this.match(tt.name)) {\n          throw this.flowEnumErrorInvalidExplicitType(this.state.start, {\n            enumName,\n            suppliedType: null,\n          });\n        }\n\n        const { value } = this.state;\n        this.next();\n\n        if (\n          value !== \"boolean\" &&\n          value !== \"number\" &&\n          value !== \"string\" &&\n          value !== \"symbol\"\n        ) {\n          this.flowEnumErrorInvalidExplicitType(this.state.start, {\n            enumName,\n            suppliedType: value,\n          });\n        }\n\n        return value;\n      }\n      return null;\n    }\n\n    flowEnumBody(node: N.Node, { enumName, nameLoc }): N.Node {\n      const explicitType = this.flowEnumParseExplicitType({ enumName });\n      this.expect(tt.braceL);\n      const { members, hasUnknownMembers } = this.flowEnumMembers({\n        enumName,\n        explicitType,\n      });\n      node.hasUnknownMembers = hasUnknownMembers;\n\n      switch (explicitType) {\n        case \"boolean\":\n          node.explicitType = true;\n          node.members = members.booleanMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumBooleanBody\");\n        case \"number\":\n          node.explicitType = true;\n          node.members = members.numberMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumNumberBody\");\n        case \"string\":\n          node.explicitType = true;\n          node.members = this.flowEnumStringMembers(\n            members.stringMembers,\n            members.defaultedMembers,\n            { enumName },\n          );\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumStringBody\");\n        case \"symbol\":\n          node.members = members.defaultedMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumSymbolBody\");\n        default: {\n          // `explicitType` is `null`\n          const empty = () => {\n            node.members = [];\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          };\n          node.explicitType = false;\n\n          const boolsLen = members.booleanMembers.length;\n          const numsLen = members.numberMembers.length;\n          const strsLen = members.stringMembers.length;\n          const defaultedLen = members.defaultedMembers.length;\n\n          if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n            return empty();\n          } else if (!boolsLen && !numsLen) {\n            node.members = this.flowEnumStringMembers(\n              members.stringMembers,\n              members.defaultedMembers,\n              { enumName },\n            );\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorBooleanMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name,\n              });\n            }\n            node.members = members.booleanMembers;\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumBooleanBody\");\n          } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorNumberMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name,\n              });\n            }\n            node.members = members.numberMembers;\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumNumberBody\");\n          } else {\n            this.flowEnumErrorInconsistentMemberValues(nameLoc, { enumName });\n            return empty();\n          }\n        }\n      }\n    }\n\n    flowParseEnumDeclaration(node: N.Node): N.Node {\n      const id = this.parseIdentifier();\n      node.id = id;\n      node.body = this.flowEnumBody(this.startNode(), {\n        enumName: id.name,\n        nameLoc: id.start,\n      });\n      return this.finishNode(node, \"EnumDeclaration\");\n    }\n\n    updateContext(prevType: TokenType): void {\n      if (\n        this.match(tt.name) &&\n        this.state.value === \"of\" &&\n        prevType === tt.name &&\n        this.input.slice(this.state.lastTokStart, this.state.lastTokEnd) ===\n          \"interface\"\n      ) {\n        this.state.exprAllowed = false;\n      } else {\n        super.updateContext(prevType);\n      }\n    }\n\n    // check if the next token is a tt.relation(\"<\")\n    isLookaheadToken_lt(): boolean {\n      const next = this.nextTokenStart();\n      if (this.input.charCodeAt(next) === charCodes.lessThan) {\n        const afterNext = this.input.charCodeAt(next + 1);\n        return (\n          afterNext !== charCodes.lessThan && afterNext !== charCodes.equalsTo\n        );\n      }\n      return false;\n    }\n\n    maybeUnwrapTypeCastExpression(node: N.Node) {\n      return node.type === \"TypeCastExpression\" ? node.expression : node;\n    }\n  };\n","// @flow\n\nconst entities: { [name: string]: string } = {\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\",\n};\nexport default entities;\n","// @flow\n\nimport type { Options } from \"../options\";\nimport * as N from \"../types\";\nimport { Position } from \"../util/location\";\n\nimport { types as ct, type TokContext } from \"./context\";\nimport { types as tt, type TokenType } from \"./types\";\nimport type { ParsingError, ErrorTemplate } from \"../parser/error\";\n\ntype TopicContextState = {\n  // When a topic binding has been currently established,\n  // then this is 1. Otherwise, it is 0. This is forwards compatible\n  // with a future plugin for multiple lexical topics.\n  maxNumOfResolvableTopics: number,\n\n  // When a topic binding has been currently established, and if that binding\n  // has been used as a topic reference `#`, then this is 0. Otherwise, it is\n  // `null`. This is forwards compatible with a future plugin for multiple\n  // lexical topics.\n  maxTopicIndex: null | 0,\n};\n\nexport default class State {\n  strict: boolean;\n  curLine: number;\n\n  // And, if locations are used, the {line, column} object\n  // corresponding to those offsets\n  startLoc: Position;\n  endLoc: Position;\n\n  init(options: Options): void {\n    this.strict =\n      options.strictMode === false ? false : options.sourceType === \"module\";\n\n    this.curLine = options.startLine;\n    this.startLoc = this.endLoc = this.curPosition();\n  }\n\n  errors: ParsingError[] = [];\n\n  // Used to signify the start of a potential arrow function\n  potentialArrowAt: number = -1;\n\n  // Used to signify the start of an expression which looks like a\n  // typed arrow function, but it isn't\n  // e.g. a ? (b) : c => d\n  //          ^\n  noArrowAt: number[] = [];\n\n  // Used to signify the start of an expression whose params, if it looks like\n  // an arrow function, shouldn't be converted to assignable nodes.\n  // This is used to defer the validation of typed arrow functions inside\n  // conditional expressions.\n  // e.g. a ? (b) : c => d\n  //          ^\n  noArrowParamsConversionAt: number[] = [];\n\n  // Flags to track\n  maybeInArrowParameters: boolean = false;\n  inPipeline: boolean = false;\n  inType: boolean = false;\n  noAnonFunctionType: boolean = false;\n  inPropertyName: boolean = false;\n  hasFlowComment: boolean = false;\n  isAmbientContext: boolean = false;\n  inAbstractClass: boolean = false;\n\n  // For the smartPipelines plugin:\n  topicContext: TopicContextState = {\n    maxNumOfResolvableTopics: 0,\n    maxTopicIndex: null,\n  };\n\n  // For the F# plugin\n  soloAwait: boolean = false;\n  inFSharpPipelineDirectBody: boolean = false;\n\n  // Labels in scope.\n  labels: Array<{\n    kind: ?(\"loop\" | \"switch\"),\n    name?: ?string,\n    statementStart?: number,\n  }> = [];\n\n  // Leading decorators. Last element of the stack represents the decorators in current context.\n  // Supports nesting of decorators, e.g. @foo(@bar class inner {}) class outer {}\n  // where @foo belongs to the outer class and @bar to the inner\n  decoratorStack: Array<Array<N.Decorator>> = [[]];\n\n  // Comment store.\n  comments: Array<N.Comment> = [];\n\n  // Comment attachment store\n  trailingComments: Array<N.Comment> = [];\n  leadingComments: Array<N.Comment> = [];\n  commentStack: Array<{\n    start: number,\n    leadingComments: ?Array<N.Comment>,\n    trailingComments: ?Array<N.Comment>,\n    type: string,\n  }> = [];\n  // $FlowIgnore this is initialized when the parser starts.\n  commentPreviousNode: N.Node = null;\n\n  // The current position of the tokenizer in the input.\n  pos: number = 0;\n  lineStart: number = 0;\n\n  // Properties of the current token:\n  // Its type\n  type: TokenType = tt.eof;\n\n  // For tokens that include more information than their type, the value\n  value: any = null;\n\n  // Its start and end offset\n  start: number = 0;\n  end: number = 0;\n\n  // Position information for the previous token\n  // $FlowIgnore this is initialized when generating the second token.\n  lastTokEndLoc: Position = null;\n  // $FlowIgnore this is initialized when generating the second token.\n  lastTokStartLoc: Position = null;\n  lastTokStart: number = 0;\n  lastTokEnd: number = 0;\n\n  // The context stack is used to superficially track syntactic\n  // context to predict whether a regular expression is allowed in a\n  // given position.\n  context: Array<TokContext> = [ct.braceStatement];\n  exprAllowed: boolean = true;\n\n  // Used to signal to callers of `readWord1` whether the word\n  // contained any escape sequences. This is needed because words with\n  // escape sequences must not be interpreted as keywords.\n  containsEsc: boolean = false;\n\n  // This property is used to track the following errors\n  // - StrictNumericEscape\n  // - StrictOctalLiteral\n  //\n  // in a literal that occurs prior to/immediately after a \"use strict\" directive.\n\n  // todo(JLHwung): set strictErrors to null and avoid recording string errors\n  // after a non-directive is parsed\n  strictErrors: Map<number, ErrorTemplate> = new Map();\n\n  // Names of exports store. `default` is stored as a name for both\n  // `export default foo;` and `export { foo as default };`.\n  exportedIdentifiers: Array<string> = [];\n\n  // Tokens length in token store\n  tokensLength: number = 0;\n\n  curPosition(): Position {\n    return new Position(this.curLine, this.pos - this.lineStart);\n  }\n\n  clone(skipArrays?: boolean): State {\n    const state = new State();\n    const keys = Object.keys(this);\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      // $FlowIgnore\n      let val = this[key];\n\n      if (!skipArrays && Array.isArray(val)) {\n        val = val.slice();\n      }\n\n      // $FlowIgnore\n      state[key] = val;\n    }\n\n    return state;\n  }\n}\n\nexport type LookaheadState = {\n  pos: number,\n  value: any,\n  type: TokenType,\n  start: number,\n  end: number,\n  /* Used only in readSlashToken */\n  exprAllowed: boolean,\n  inType: boolean,\n};\n","// @flow\n\n// Error messages are colocated with the plugin.\n/* eslint-disable @babel/development-internal/dry-error-messages */\n\nimport * as charCodes from \"charcodes\";\n\nimport XHTMLEntities from \"./xhtml\";\nimport type Parser from \"../../parser\";\nimport type { ExpressionErrors } from \"../../parser/util\";\nimport { TokenType, types as tt } from \"../../tokenizer/types\";\nimport { TokContext, types as tc } from \"../../tokenizer/context\";\nimport * as N from \"../../types\";\nimport { isIdentifierChar, isIdentifierStart } from \"../../util/identifier\";\nimport type { Position } from \"../../util/location\";\nimport { isNewLine } from \"../../util/whitespace\";\nimport { Errors, makeErrorTemplates, ErrorCodes } from \"../../parser/error\";\nimport type { LookaheadState } from \"../../tokenizer/state\";\nimport State from \"../../tokenizer/state\";\n\ntype JSXLookaheadState = LookaheadState & { inPropertyName: boolean };\n\nconst HEX_NUMBER = /^[\\da-fA-F]+$/;\nconst DECIMAL_NUMBER = /^\\d+$/;\n\n/* eslint sort-keys: \"error\" */\nconst JsxErrors = makeErrorTemplates(\n  {\n    AttributeIsEmpty:\n      \"JSX attributes must only be assigned a non-empty expression.\",\n    MissingClosingTagElement:\n      \"Expected corresponding JSX closing tag for <%0>.\",\n    MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>.\",\n    UnexpectedSequenceExpression:\n      \"Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?\",\n    UnsupportedJsxValue:\n      \"JSX value should be either an expression or a quoted JSX text.\",\n    UnterminatedJsxContent: \"Unterminated JSX contents.\",\n    UnwrappedAdjacentJSXElements:\n      \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\",\n  },\n  /* code */ ErrorCodes.SyntaxError,\n);\n/* eslint-disable sort-keys */\n\n// Be aware that this file is always executed and not only when the plugin is enabled.\n// Therefore this contexts and tokens do always exist.\ntc.j_oTag = new TokContext(\"<tag\", false);\ntc.j_cTag = new TokContext(\"</tag\", false);\ntc.j_expr = new TokContext(\"<tag>...</tag>\", true, true);\n\ntt.jsxName = new TokenType(\"jsxName\");\ntt.jsxText = new TokenType(\"jsxText\", { beforeExpr: true });\ntt.jsxTagStart = new TokenType(\"jsxTagStart\", { startsExpr: true });\ntt.jsxTagEnd = new TokenType(\"jsxTagEnd\");\n\ntt.jsxTagStart.updateContext = function () {\n  this.state.context.push(tc.j_expr); // treat as beginning of JSX expression\n  this.state.context.push(tc.j_oTag); // start opening tag context\n  this.state.exprAllowed = false;\n};\n\ntt.jsxTagEnd.updateContext = function (prevType) {\n  const out = this.state.context.pop();\n  if ((out === tc.j_oTag && prevType === tt.slash) || out === tc.j_cTag) {\n    this.state.context.pop();\n    this.state.exprAllowed = this.curContext() === tc.j_expr;\n  } else {\n    this.state.exprAllowed = true;\n  }\n};\n\nfunction isFragment(object: ?N.JSXElement): boolean {\n  return object\n    ? object.type === \"JSXOpeningFragment\" ||\n        object.type === \"JSXClosingFragment\"\n    : false;\n}\n\n// Transforms JSX element name to string.\n\nfunction getQualifiedJSXName(\n  object: N.JSXIdentifier | N.JSXNamespacedName | N.JSXMemberExpression,\n): string {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n\n  if (object.type === \"JSXMemberExpression\") {\n    return (\n      getQualifiedJSXName(object.object) +\n      \".\" +\n      getQualifiedJSXName(object.property)\n    );\n  }\n\n  // istanbul ignore next\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    // Reads inline JSX contents token.\n\n    jsxReadToken(): void {\n      let out = \"\";\n      let chunkStart = this.state.pos;\n      for (;;) {\n        if (this.state.pos >= this.length) {\n          throw this.raise(this.state.start, JsxErrors.UnterminatedJsxContent);\n        }\n\n        const ch = this.input.charCodeAt(this.state.pos);\n\n        switch (ch) {\n          case charCodes.lessThan:\n          case charCodes.leftCurlyBrace:\n            if (this.state.pos === this.state.start) {\n              if (ch === charCodes.lessThan && this.state.exprAllowed) {\n                ++this.state.pos;\n                return this.finishToken(tt.jsxTagStart);\n              }\n              return super.getTokenFromCode(ch);\n            }\n            out += this.input.slice(chunkStart, this.state.pos);\n            return this.finishToken(tt.jsxText, out);\n\n          case charCodes.ampersand:\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadEntity();\n            chunkStart = this.state.pos;\n            break;\n\n          case charCodes.greaterThan:\n          case charCodes.rightCurlyBrace:\n            if (process.env.BABEL_8_BREAKING) {\n              const htmlEntity =\n                ch === charCodes.rightCurlyBrace ? \"&rbrace;\" : \"&gt;\";\n              const char = this.input[this.state.pos];\n              this.raise(this.state.pos, {\n                code: ErrorCodes.SyntaxError,\n                reasonCode: \"UnexpectedToken\",\n                template: `Unexpected token \\`${char}\\`. Did you mean \\`${htmlEntity}\\` or \\`{'${char}'}\\`?`,\n              });\n            }\n          /* falls through */\n\n          default:\n            if (isNewLine(ch)) {\n              out += this.input.slice(chunkStart, this.state.pos);\n              out += this.jsxReadNewLine(true);\n              chunkStart = this.state.pos;\n            } else {\n              ++this.state.pos;\n            }\n        }\n      }\n    }\n\n    jsxReadNewLine(normalizeCRLF: boolean): string {\n      const ch = this.input.charCodeAt(this.state.pos);\n      let out;\n      ++this.state.pos;\n      if (\n        ch === charCodes.carriageReturn &&\n        this.input.charCodeAt(this.state.pos) === charCodes.lineFeed\n      ) {\n        ++this.state.pos;\n        out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n      } else {\n        out = String.fromCharCode(ch);\n      }\n      ++this.state.curLine;\n      this.state.lineStart = this.state.pos;\n\n      return out;\n    }\n\n    jsxReadString(quote: number): void {\n      let out = \"\";\n      let chunkStart = ++this.state.pos;\n      for (;;) {\n        if (this.state.pos >= this.length) {\n          throw this.raise(this.state.start, Errors.UnterminatedString);\n        }\n\n        const ch = this.input.charCodeAt(this.state.pos);\n        if (ch === quote) break;\n        if (ch === charCodes.ampersand) {\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n        } else if (isNewLine(ch)) {\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadNewLine(false);\n          chunkStart = this.state.pos;\n        } else {\n          ++this.state.pos;\n        }\n      }\n      out += this.input.slice(chunkStart, this.state.pos++);\n      return this.finishToken(tt.string, out);\n    }\n\n    jsxReadEntity(): string {\n      let str = \"\";\n      let count = 0;\n      let entity;\n      let ch = this.input[this.state.pos];\n\n      const startPos = ++this.state.pos;\n      while (this.state.pos < this.length && count++ < 10) {\n        ch = this.input[this.state.pos++];\n        if (ch === \";\") {\n          if (str[0] === \"#\") {\n            if (str[1] === \"x\") {\n              str = str.substr(2);\n              if (HEX_NUMBER.test(str)) {\n                entity = String.fromCodePoint(parseInt(str, 16));\n              }\n            } else {\n              str = str.substr(1);\n              if (DECIMAL_NUMBER.test(str)) {\n                entity = String.fromCodePoint(parseInt(str, 10));\n              }\n            }\n          } else {\n            entity = XHTMLEntities[str];\n          }\n          break;\n        }\n        str += ch;\n      }\n      if (!entity) {\n        this.state.pos = startPos;\n        return \"&\";\n      }\n      return entity;\n    }\n\n    // Read a JSX identifier (valid tag or attribute name).\n    //\n    // Optimized version since JSX identifiers can\"t contain\n    // escape characters and so can be read as single slice.\n    // Also assumes that first character was already checked\n    // by isIdentifierStart in readToken.\n\n    jsxReadWord(): void {\n      let ch;\n      const start = this.state.pos;\n      do {\n        ch = this.input.charCodeAt(++this.state.pos);\n      } while (isIdentifierChar(ch) || ch === charCodes.dash);\n      return this.finishToken(\n        tt.jsxName,\n        this.input.slice(start, this.state.pos),\n      );\n    }\n\n    // Parse next token as JSX identifier\n\n    jsxParseIdentifier(): N.JSXIdentifier {\n      const node = this.startNode();\n      if (this.match(tt.jsxName)) {\n        node.name = this.state.value;\n      } else if (this.state.type.keyword) {\n        node.name = this.state.type.keyword;\n      } else {\n        this.unexpected();\n      }\n      this.next();\n      return this.finishNode(node, \"JSXIdentifier\");\n    }\n\n    // Parse namespaced identifier.\n\n    jsxParseNamespacedName(): N.JSXNamespacedName {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const name = this.jsxParseIdentifier();\n      if (!this.eat(tt.colon)) return name;\n\n      const node = this.startNodeAt(startPos, startLoc);\n      node.namespace = name;\n      node.name = this.jsxParseIdentifier();\n      return this.finishNode(node, \"JSXNamespacedName\");\n    }\n\n    // Parses element name in any form - namespaced, member\n    // or single identifier.\n\n    jsxParseElementName():\n      | N.JSXIdentifier\n      | N.JSXNamespacedName\n      | N.JSXMemberExpression {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let node = this.jsxParseNamespacedName();\n      if (node.type === \"JSXNamespacedName\") {\n        return node;\n      }\n      while (this.eat(tt.dot)) {\n        const newNode = this.startNodeAt(startPos, startLoc);\n        newNode.object = node;\n        newNode.property = this.jsxParseIdentifier();\n        node = this.finishNode(newNode, \"JSXMemberExpression\");\n      }\n      return node;\n    }\n\n    // Parses any type of JSX attribute value.\n\n    jsxParseAttributeValue(): N.Expression {\n      let node;\n      switch (this.state.type) {\n        case tt.braceL:\n          node = this.startNode();\n          this.next();\n          node = this.jsxParseExpressionContainer(node);\n          if (node.expression.type === \"JSXEmptyExpression\") {\n            this.raise(node.start, JsxErrors.AttributeIsEmpty);\n          }\n          return node;\n\n        case tt.jsxTagStart:\n        case tt.string:\n          return this.parseExprAtom();\n\n        default:\n          throw this.raise(this.state.start, JsxErrors.UnsupportedJsxValue);\n      }\n    }\n\n    // JSXEmptyExpression is unique type since it doesn't actually parse anything,\n    // and so it should start at the end of last read token (left brace) and finish\n    // at the beginning of the next one (right brace).\n\n    jsxParseEmptyExpression(): N.JSXEmptyExpression {\n      const node = this.startNodeAt(\n        this.state.lastTokEnd,\n        this.state.lastTokEndLoc,\n      );\n      return this.finishNodeAt(\n        node,\n        \"JSXEmptyExpression\",\n        this.state.start,\n        this.state.startLoc,\n      );\n    }\n\n    // Parse JSX spread child\n\n    jsxParseSpreadChild(node: N.JSXSpreadChild): N.JSXSpreadChild {\n      this.next(); // ellipsis\n      node.expression = this.parseExpression();\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"JSXSpreadChild\");\n    }\n\n    // Parses JSX expression enclosed into curly brackets.\n\n    jsxParseExpressionContainer(\n      node: N.JSXExpressionContainer,\n    ): N.JSXExpressionContainer {\n      if (this.match(tt.braceR)) {\n        node.expression = this.jsxParseEmptyExpression();\n      } else {\n        const expression = this.parseExpression();\n\n        if (process.env.BABEL_8_BREAKING) {\n          if (\n            expression.type === \"SequenceExpression\" &&\n            !expression.extra?.parenthesized\n          ) {\n            this.raise(\n              expression.expressions[1].start,\n              JsxErrors.UnexpectedSequenceExpression,\n            );\n          }\n        }\n\n        node.expression = expression;\n      }\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"JSXExpressionContainer\");\n    }\n\n    // Parses following JSX attribute name-value pair.\n\n    jsxParseAttribute(): N.JSXAttribute {\n      const node = this.startNode();\n      if (this.eat(tt.braceL)) {\n        this.expect(tt.ellipsis);\n        node.argument = this.parseMaybeAssignAllowIn();\n        this.expect(tt.braceR);\n        return this.finishNode(node, \"JSXSpreadAttribute\");\n      }\n      node.name = this.jsxParseNamespacedName();\n      node.value = this.eat(tt.eq) ? this.jsxParseAttributeValue() : null;\n      return this.finishNode(node, \"JSXAttribute\");\n    }\n\n    // Parses JSX opening tag starting after \"<\".\n\n    jsxParseOpeningElementAt(\n      startPos: number,\n      startLoc: Position,\n    ): N.JSXOpeningElement {\n      const node = this.startNodeAt(startPos, startLoc);\n      if (this.match(tt.jsxTagEnd)) {\n        this.expect(tt.jsxTagEnd);\n        return this.finishNode(node, \"JSXOpeningFragment\");\n      }\n      node.name = this.jsxParseElementName();\n      return this.jsxParseOpeningElementAfterName(node);\n    }\n\n    jsxParseOpeningElementAfterName(\n      node: N.JSXOpeningElement,\n    ): N.JSXOpeningElement {\n      const attributes: N.JSXAttribute[] = [];\n      while (!this.match(tt.slash) && !this.match(tt.jsxTagEnd)) {\n        attributes.push(this.jsxParseAttribute());\n      }\n      node.attributes = attributes;\n      node.selfClosing = this.eat(tt.slash);\n      this.expect(tt.jsxTagEnd);\n      return this.finishNode(node, \"JSXOpeningElement\");\n    }\n\n    // Parses JSX closing tag starting after \"</\".\n\n    jsxParseClosingElementAt(\n      startPos: number,\n      startLoc: Position,\n    ): N.JSXClosingElement {\n      const node = this.startNodeAt(startPos, startLoc);\n      if (this.match(tt.jsxTagEnd)) {\n        this.expect(tt.jsxTagEnd);\n        return this.finishNode(node, \"JSXClosingFragment\");\n      }\n      node.name = this.jsxParseElementName();\n      this.expect(tt.jsxTagEnd);\n      return this.finishNode(node, \"JSXClosingElement\");\n    }\n\n    // Parses entire JSX element, including it\"s opening tag\n    // (starting after \"<\"), attributes, contents and closing tag.\n\n    jsxParseElementAt(startPos: number, startLoc: Position): N.JSXElement {\n      const node = this.startNodeAt(startPos, startLoc);\n      const children = [];\n      const openingElement = this.jsxParseOpeningElementAt(startPos, startLoc);\n      let closingElement = null;\n\n      if (!openingElement.selfClosing) {\n        contents: for (;;) {\n          switch (this.state.type) {\n            case tt.jsxTagStart:\n              startPos = this.state.start;\n              startLoc = this.state.startLoc;\n              this.next();\n              if (this.eat(tt.slash)) {\n                closingElement = this.jsxParseClosingElementAt(\n                  startPos,\n                  startLoc,\n                );\n                break contents;\n              }\n              children.push(this.jsxParseElementAt(startPos, startLoc));\n              break;\n\n            case tt.jsxText:\n              children.push(this.parseExprAtom());\n              break;\n\n            case tt.braceL: {\n              const node = this.startNode();\n              this.next();\n              if (this.match(tt.ellipsis)) {\n                children.push(this.jsxParseSpreadChild(node));\n              } else {\n                children.push(this.jsxParseExpressionContainer(node));\n              }\n\n              break;\n            }\n            // istanbul ignore next - should never happen\n            default:\n              throw this.unexpected();\n          }\n        }\n\n        if (isFragment(openingElement) && !isFragment(closingElement)) {\n          this.raise(\n            // $FlowIgnore\n            closingElement.start,\n            JsxErrors.MissingClosingTagFragment,\n          );\n        } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n          this.raise(\n            // $FlowIgnore\n            closingElement.start,\n            JsxErrors.MissingClosingTagElement,\n            getQualifiedJSXName(openingElement.name),\n          );\n        } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n          if (\n            // $FlowIgnore\n            getQualifiedJSXName(closingElement.name) !==\n            getQualifiedJSXName(openingElement.name)\n          ) {\n            this.raise(\n              // $FlowIgnore\n              closingElement.start,\n              JsxErrors.MissingClosingTagElement,\n              getQualifiedJSXName(openingElement.name),\n            );\n          }\n        }\n      }\n\n      if (isFragment(openingElement)) {\n        node.openingFragment = openingElement;\n        node.closingFragment = closingElement;\n      } else {\n        node.openingElement = openingElement;\n        node.closingElement = closingElement;\n      }\n      node.children = children;\n      if (this.isRelational(\"<\")) {\n        throw this.raise(\n          this.state.start,\n          JsxErrors.UnwrappedAdjacentJSXElements,\n        );\n      }\n\n      return isFragment(openingElement)\n        ? this.finishNode(node, \"JSXFragment\")\n        : this.finishNode(node, \"JSXElement\");\n    }\n\n    // Parses entire JSX element from current position.\n\n    jsxParseElement(): N.JSXElement {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      this.next();\n      return this.jsxParseElementAt(startPos, startLoc);\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    parseExprAtom(refExpressionErrors: ?ExpressionErrors): N.Expression {\n      if (this.match(tt.jsxText)) {\n        return this.parseLiteral(this.state.value, \"JSXText\");\n      } else if (this.match(tt.jsxTagStart)) {\n        return this.jsxParseElement();\n      } else if (\n        this.isRelational(\"<\") &&\n        this.input.charCodeAt(this.state.pos) !== charCodes.exclamationMark\n      ) {\n        // In case we encounter an lt token here it will always be the start of\n        // jsx as the lt sign is not allowed in places that expect an expression\n        this.finishToken(tt.jsxTagStart);\n        return this.jsxParseElement();\n      } else {\n        return super.parseExprAtom(refExpressionErrors);\n      }\n    }\n\n    createLookaheadState(state: State): JSXLookaheadState {\n      const lookaheadState = ((super.createLookaheadState(\n        state,\n      ): any): JSXLookaheadState);\n      lookaheadState.inPropertyName = state.inPropertyName;\n      return lookaheadState;\n    }\n\n    getTokenFromCode(code: number): void {\n      if (this.state.inPropertyName) return super.getTokenFromCode(code);\n\n      const context = this.curContext();\n\n      if (context === tc.j_expr) {\n        return this.jsxReadToken();\n      }\n\n      if (context === tc.j_oTag || context === tc.j_cTag) {\n        if (isIdentifierStart(code)) {\n          return this.jsxReadWord();\n        }\n\n        if (code === charCodes.greaterThan) {\n          ++this.state.pos;\n          return this.finishToken(tt.jsxTagEnd);\n        }\n\n        if (\n          (code === charCodes.quotationMark || code === charCodes.apostrophe) &&\n          context === tc.j_oTag\n        ) {\n          return this.jsxReadString(code);\n        }\n      }\n\n      if (\n        code === charCodes.lessThan &&\n        this.state.exprAllowed &&\n        this.input.charCodeAt(this.state.pos + 1) !== charCodes.exclamationMark\n      ) {\n        ++this.state.pos;\n        return this.finishToken(tt.jsxTagStart);\n      }\n\n      return super.getTokenFromCode(code);\n    }\n\n    updateContext(prevType: TokenType): void {\n      if (this.match(tt.braceL)) {\n        const curContext = this.curContext();\n        if (curContext === tc.j_oTag) {\n          this.state.context.push(tc.braceExpression);\n        } else if (curContext === tc.j_expr) {\n          this.state.context.push(tc.templateQuasi);\n        } else {\n          super.updateContext(prevType);\n        }\n        this.state.exprAllowed = true;\n      } else if (this.match(tt.slash) && prevType === tt.jsxTagStart) {\n        this.state.context.length -= 2; // do not consider JSX expr -> JSX open tag -> ... anymore\n        this.state.context.push(tc.j_cTag); // reconsider as closing tag context\n        this.state.exprAllowed = false;\n      } else {\n        return super.updateContext(prevType);\n      }\n    }\n  };\n","// @flow\n\nimport ScopeHandler, { Scope } from \"../../util/scope\";\nimport {\n  BIND_KIND_TYPE,\n  BIND_FLAGS_TS_ENUM,\n  BIND_FLAGS_TS_CONST_ENUM,\n  BIND_FLAGS_TS_EXPORT_ONLY,\n  BIND_KIND_VALUE,\n  BIND_FLAGS_CLASS,\n  type ScopeFlags,\n  type BindingTypes,\n} from \"../../util/scopeflags\";\nimport * as N from \"../../types\";\n\nclass TypeScriptScope extends Scope {\n  types: string[] = [];\n\n  // enums (which are also in .types)\n  enums: string[] = [];\n\n  // const enums (which are also in .enums and .types)\n  constEnums: string[] = [];\n\n  // classes (which are also in .lexical) and interface (which are also in .types)\n  classes: string[] = [];\n\n  // namespaces and ambient functions (or classes) are too difficult to track,\n  // especially without type analysis.\n  // We need to track them anyway, to avoid \"X is not defined\" errors\n  // when exporting them.\n  exportOnlyBindings: string[] = [];\n}\n\n// See https://github.com/babel/babel/pull/9766#discussion_r268920730 for an\n// explanation of how typescript handles scope.\n\nexport default class TypeScriptScopeHandler extends ScopeHandler<TypeScriptScope> {\n  createScope(flags: ScopeFlags): TypeScriptScope {\n    return new TypeScriptScope(flags);\n  }\n\n  declareName(name: string, bindingType: BindingTypes, pos: number) {\n    const scope = this.currentScope();\n    if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {\n      this.maybeExportDefined(scope, name);\n      scope.exportOnlyBindings.push(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n\n    if (bindingType & BIND_KIND_TYPE) {\n      if (!(bindingType & BIND_KIND_VALUE)) {\n        // \"Value\" bindings have already been registered by the superclass.\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        this.maybeExportDefined(scope, name);\n      }\n      scope.types.push(name);\n    }\n    if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.push(name);\n    if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.push(name);\n    if (bindingType & BIND_FLAGS_CLASS) scope.classes.push(name);\n  }\n\n  isRedeclaredInScope(\n    scope: TypeScriptScope,\n    name: string,\n    bindingType: BindingTypes,\n  ): boolean {\n    if (scope.enums.indexOf(name) > -1) {\n      if (bindingType & BIND_FLAGS_TS_ENUM) {\n        // Enums can be merged with other enums if they are both\n        //  const or both non-const.\n        const isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);\n        const wasConst = scope.constEnums.indexOf(name) > -1;\n        return isConst !== wasConst;\n      }\n      return true;\n    }\n    if (bindingType & BIND_FLAGS_CLASS && scope.classes.indexOf(name) > -1) {\n      if (scope.lexical.indexOf(name) > -1) {\n        // Classes can be merged with interfaces\n        return !!(bindingType & BIND_KIND_VALUE);\n      } else {\n        // Interface can be merged with other classes or interfaces\n        return false;\n      }\n    }\n    if (bindingType & BIND_KIND_TYPE && scope.types.indexOf(name) > -1) {\n      return true;\n    }\n\n    return super.isRedeclaredInScope(...arguments);\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    if (\n      this.scopeStack[0].types.indexOf(id.name) === -1 &&\n      this.scopeStack[0].exportOnlyBindings.indexOf(id.name) === -1\n    ) {\n      super.checkLocalExport(id);\n    }\n  }\n}\n","// @flow\nexport const PARAM = 0b0000, // Initial Parameter flags\n  PARAM_YIELD = 0b0001, // track [Yield] production parameter\n  PARAM_AWAIT = 0b0010, // track [Await] production parameter\n  PARAM_RETURN = 0b0100, // track [Return] production parameter\n  PARAM_IN = 0b1000; // track [In] production parameter\n\n// ProductionParameterHandler is a stack fashioned production parameter tracker\n// https://tc39.es/ecma262/#sec-grammar-notation\n// The tracked parameters are defined above.\n//\n// Whenever [+Await]/[+Yield] appears in the right-hand sides of a production,\n// we must enter a new tracking stack. For example when parsing\n//\n// AsyncFunctionDeclaration [Yield, Await]:\n//   async [no LineTerminator here] function BindingIdentifier[?Yield, ?Await]\n//     ( FormalParameters[~Yield, +Await] ) { AsyncFunctionBody }\n//\n// we must follow such process:\n//\n// 1. parse async keyword\n// 2. parse function keyword\n// 3. parse bindingIdentifier <= inherit current parameters: [?Await]\n// 4. enter new stack with (PARAM_AWAIT)\n// 5. parse formal parameters <= must have [Await] parameter [+Await]\n// 6. parse function body\n// 7. exit current stack\n\nexport type ParamKind =\n  | typeof PARAM\n  | typeof PARAM_AWAIT\n  | typeof PARAM_IN\n  | typeof PARAM_RETURN\n  | typeof PARAM_YIELD;\n\nexport default class ProductionParameterHandler {\n  stacks: Array<ParamKind> = [];\n  enter(flags: ParamKind) {\n    this.stacks.push(flags);\n  }\n\n  exit() {\n    this.stacks.pop();\n  }\n\n  currentFlags(): ParamKind {\n    return this.stacks[this.stacks.length - 1];\n  }\n\n  get hasAwait(): boolean {\n    return (this.currentFlags() & PARAM_AWAIT) > 0;\n  }\n\n  get hasYield(): boolean {\n    return (this.currentFlags() & PARAM_YIELD) > 0;\n  }\n\n  get hasReturn(): boolean {\n    return (this.currentFlags() & PARAM_RETURN) > 0;\n  }\n\n  get hasIn(): boolean {\n    return (this.currentFlags() & PARAM_IN) > 0;\n  }\n}\n\nexport function functionFlags(\n  isAsync: boolean,\n  isGenerator: boolean,\n): ParamKind {\n  return (isAsync ? PARAM_AWAIT : 0) | (isGenerator ? PARAM_YIELD : 0);\n}\n","// @flow\n\n/*:: declare var invariant; */\n\n// Error messages are colocated with the plugin.\n/* eslint-disable @babel/development-internal/dry-error-messages */\n\nimport type { TokenType } from \"../../tokenizer/types\";\nimport type State from \"../../tokenizer/state\";\nimport { types as tt } from \"../../tokenizer/types\";\nimport { types as ct } from \"../../tokenizer/context\";\nimport * as N from \"../../types\";\nimport type { Pos, Position } from \"../../util/location\";\nimport type Parser from \"../../parser\";\nimport {\n  type BindingTypes,\n  SCOPE_TS_MODULE,\n  SCOPE_OTHER,\n  BIND_TS_ENUM,\n  BIND_TS_CONST_ENUM,\n  BIND_TS_TYPE,\n  BIND_TS_INTERFACE,\n  BIND_TS_AMBIENT,\n  BIND_TS_NAMESPACE,\n  BIND_CLASS,\n  BIND_LEXICAL,\n} from \"../../util/scopeflags\";\nimport TypeScriptScopeHandler from \"./scope\";\nimport * as charCodes from \"charcodes\";\nimport type { ExpressionErrors } from \"../../parser/util\";\nimport { PARAM } from \"../../util/production-parameter\";\nimport {\n  Errors,\n  makeErrorTemplates,\n  type ErrorTemplate,\n  ErrorCodes,\n} from \"../../parser/error\";\n\ntype TsModifier =\n  | \"readonly\"\n  | \"abstract\"\n  | \"declare\"\n  | \"static\"\n  | \"override\"\n  | N.Accessibility;\n\nfunction nonNull<T>(x: ?T): T {\n  if (x == null) {\n    // $FlowIgnore\n    throw new Error(`Unexpected ${x} value.`);\n  }\n  return x;\n}\n\nfunction assert(x: boolean): void {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\n\ntype ParsingContext =\n  | \"EnumMembers\"\n  | \"HeritageClauseElement\"\n  | \"TupleElementTypes\"\n  | \"TypeMembers\"\n  | \"TypeParametersOrArguments\";\n\n/* eslint sort-keys: \"error\" */\nconst TSErrors = makeErrorTemplates(\n  {\n    AbstractMethodHasImplementation:\n      \"Method '%0' cannot have an implementation because it is marked abstract.\",\n    AccesorCannotDeclareThisParameter:\n      \"'get' and 'set' accessors cannot declare 'this' parameters.\",\n    AccesorCannotHaveTypeParameters: \"An accessor cannot have type parameters.\",\n    ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier.\",\n    ClassMethodHasReadonly:\n      \"Class methods cannot have the 'readonly' modifier.\",\n    ConstructorHasTypeParameters:\n      \"Type parameters cannot appear on a constructor declaration.\",\n    DeclareAccessor: \"'declare' is not allowed in %0ters.\",\n    DeclareClassFieldHasInitializer:\n      \"Initializers are not allowed in ambient contexts.\",\n    DeclareFunctionHasImplementation:\n      \"An implementation cannot be declared in ambient contexts.\",\n    DuplicateAccessibilityModifier: \"Accessibility modifier already seen.\",\n    DuplicateModifier: \"Duplicate modifier: '%0'.\",\n    EmptyHeritageClauseType: \"'%0' list cannot be empty.\",\n    EmptyTypeArguments: \"Type argument list cannot be empty.\",\n    EmptyTypeParameters: \"Type parameter list cannot be empty.\",\n    ExpectedAmbientAfterExportDeclare:\n      \"'export declare' must be followed by an ambient declaration.\",\n    ImportAliasHasImportType: \"An import alias can not use 'import type'.\",\n    IncompatibleModifiers: \"'%0' modifier cannot be used with '%1' modifier.\",\n    IndexSignatureHasAbstract:\n      \"Index signatures cannot have the 'abstract' modifier.\",\n    IndexSignatureHasAccessibility:\n      \"Index signatures cannot have an accessibility modifier ('%0').\",\n    IndexSignatureHasDeclare:\n      \"Index signatures cannot have the 'declare' modifier.\",\n    IndexSignatureHasOverride:\n      \"'override' modifier cannot appear on an index signature.\",\n    IndexSignatureHasStatic:\n      \"Index signatures cannot have the 'static' modifier.\",\n    InvalidModifierOnTypeMember:\n      \"'%0' modifier cannot appear on a type member.\",\n    InvalidModifiersOrder: \"'%0' modifier must precede '%1' modifier.\",\n    InvalidTupleMemberLabel:\n      \"Tuple members must be labeled with a simple identifier.\",\n    MixedLabeledAndUnlabeledElements:\n      \"Tuple members must all have names or all not have names.\",\n    NonAbstractClassHasAbstractMethod:\n      \"Abstract methods can only appear within an abstract class.\",\n    NonClassMethodPropertyHasAbstractModifer:\n      \"'abstract' modifier can only appear on a class, method, or property declaration.\",\n    OptionalTypeBeforeRequired:\n      \"A required element cannot follow an optional element.\",\n    OverrideNotInSubClass:\n      \"This member cannot have an 'override' modifier because its containing class does not extend another class.\",\n    PatternIsOptional:\n      \"A binding pattern parameter cannot be optional in an implementation signature.\",\n    PrivateElementHasAbstract:\n      \"Private elements cannot have the 'abstract' modifier.\",\n    PrivateElementHasAccessibility:\n      \"Private elements cannot have an accessibility modifier ('%0').\",\n    ReadonlyForMethodSignature:\n      \"'readonly' modifier can only appear on a property declaration or index signature.\",\n    SetAccesorCannotHaveOptionalParameter:\n      \"A 'set' accessor cannot have an optional parameter.\",\n    SetAccesorCannotHaveRestParameter:\n      \"A 'set' accessor cannot have rest parameter.\",\n    SetAccesorCannotHaveReturnType:\n      \"A 'set' accessor cannot have a return type annotation.\",\n    StaticBlockCannotHaveModifier:\n      \"Static class blocks cannot have any modifier.\",\n    TypeAnnotationAfterAssign:\n      \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n    TypeImportCannotSpecifyDefaultAndNamed:\n      \"A type-only import can specify a default import or named bindings, but not both.\",\n    UnexpectedParameterModifier:\n      \"A parameter property is only allowed in a constructor implementation.\",\n    UnexpectedReadonly:\n      \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n    UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n    UnexpectedTypeCastInParameter:\n      \"Unexpected type cast in parameter position.\",\n    UnsupportedImportTypeArgument:\n      \"Argument in a type import must be a string literal.\",\n    UnsupportedParameterPropertyKind:\n      \"A parameter property may not be declared using a binding pattern.\",\n    UnsupportedSignatureParameterKind:\n      \"Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got %0.\",\n  },\n  /* code */ ErrorCodes.SyntaxError,\n);\n/* eslint-disable sort-keys */\n\n// Doesn't handle \"void\" or \"null\" because those are keywords, not identifiers.\n// It also doesn't handle \"intrinsic\", since usually it's not a keyword.\nfunction keywordTypeFromName(\n  value: string,\n): N.TsKeywordTypeType | typeof undefined {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n    case \"never\":\n      return \"TSNeverKeyword\";\n    case \"number\":\n      return \"TSNumberKeyword\";\n    case \"object\":\n      return \"TSObjectKeyword\";\n    case \"string\":\n      return \"TSStringKeyword\";\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n    default:\n      return undefined;\n  }\n}\n\nfunction tsIsAccessModifier(modifier: string): boolean %checks {\n  return (\n    modifier === \"private\" || modifier === \"public\" || modifier === \"protected\"\n  );\n}\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    getScopeHandler(): Class<TypeScriptScopeHandler> {\n      return TypeScriptScopeHandler;\n    }\n\n    tsIsIdentifier(): boolean {\n      // TODO: actually a bit more complex in TypeScript, but shouldn't matter.\n      // See https://github.com/Microsoft/TypeScript/issues/15008\n      return this.match(tt.name);\n    }\n\n    tsTokenCanFollowModifier() {\n      return (\n        (this.match(tt.bracketL) ||\n          this.match(tt.braceL) ||\n          this.match(tt.star) ||\n          this.match(tt.ellipsis) ||\n          this.match(tt.privateName) ||\n          this.isLiteralPropertyName()) &&\n        !this.hasPrecedingLineBreak()\n      );\n    }\n\n    tsNextTokenCanFollowModifier() {\n      // Note: TypeScript's implementation is much more complicated because\n      // more things are considered modifiers there.\n      // This implementation only handles modifiers not handled by @babel/parser itself. And \"static\".\n      // TODO: Would be nice to avoid lookahead. Want a hasLineBreakUpNext() method...\n      this.next();\n      return this.tsTokenCanFollowModifier();\n    }\n\n    /** Parses a modifier matching one the given modifier names. */\n    tsParseModifier<T: TsModifier>(allowedModifiers: T[]): ?T {\n      if (!this.match(tt.name)) {\n        return undefined;\n      }\n\n      const modifier = this.state.value;\n      if (\n        allowedModifiers.indexOf(modifier) !== -1 &&\n        this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))\n      ) {\n        return modifier;\n      }\n      return undefined;\n    }\n\n    /** Parses a list of modifiers, in any order.\n     *  If you need a specific order, you must call this function multiple times:\n     *    this.tsParseModifiers(node, [\"public\"]);\n     *    this.tsParseModifiers(node, [\"abstract\", \"readonly\"]);\n     */\n    tsParseModifiers(\n      modified: {\n        [key: TsModifier]: ?true,\n        accessibility?: N.Accessibility,\n      },\n      allowedModifiers: TsModifier[],\n      disallowedModifiers?: TsModifier[],\n      errorTemplate?: ErrorTemplate,\n    ): void {\n      const enforceOrder = (pos, modifier, before, after) => {\n        if (modifier === before && modified[after]) {\n          this.raise(pos, TSErrors.InvalidModifiersOrder, before, after);\n        }\n      };\n      const incompatible = (pos, modifier, mod1, mod2) => {\n        if (\n          (modified[mod1] && modifier === mod2) ||\n          (modified[mod2] && modifier === mod1)\n        ) {\n          this.raise(pos, TSErrors.IncompatibleModifiers, mod1, mod2);\n        }\n      };\n\n      for (;;) {\n        const startPos = this.state.start;\n        const modifier: ?TsModifier = this.tsParseModifier(\n          allowedModifiers.concat(disallowedModifiers ?? []),\n        );\n\n        if (!modifier) break;\n\n        if (tsIsAccessModifier(modifier)) {\n          if (modified.accessibility) {\n            this.raise(startPos, TSErrors.DuplicateAccessibilityModifier);\n          } else {\n            enforceOrder(startPos, modifier, modifier, \"override\");\n            enforceOrder(startPos, modifier, modifier, \"static\");\n\n            modified.accessibility = modifier;\n          }\n        } else {\n          if (Object.hasOwnProperty.call(modified, modifier)) {\n            this.raise(startPos, TSErrors.DuplicateModifier, modifier);\n          } else {\n            enforceOrder(startPos, modifier, \"static\", \"readonly\");\n            enforceOrder(startPos, modifier, \"static\", \"override\");\n            enforceOrder(startPos, modifier, \"override\", \"readonly\");\n            enforceOrder(startPos, modifier, \"abstract\", \"override\");\n\n            incompatible(startPos, modifier, \"declare\", \"override\");\n            incompatible(startPos, modifier, \"static\", \"abstract\");\n          }\n          modified[modifier] = true;\n        }\n\n        if (disallowedModifiers?.includes(modifier)) {\n          this.raise(\n            startPos,\n            // $FlowIgnore\n            errorTemplate,\n            modifier,\n          );\n        }\n      }\n    }\n\n    tsIsListTerminator(kind: ParsingContext): boolean {\n      switch (kind) {\n        case \"EnumMembers\":\n        case \"TypeMembers\":\n          return this.match(tt.braceR);\n        case \"HeritageClauseElement\":\n          return this.match(tt.braceL);\n        case \"TupleElementTypes\":\n          return this.match(tt.bracketR);\n        case \"TypeParametersOrArguments\":\n          return this.isRelational(\">\");\n      }\n\n      throw new Error(\"Unreachable\");\n    }\n\n    tsParseList<T: N.Node>(kind: ParsingContext, parseElement: () => T): T[] {\n      const result: T[] = [];\n      while (!this.tsIsListTerminator(kind)) {\n        // Skipping \"parseListElement\" from the TS source since that's just for error handling.\n        result.push(parseElement());\n      }\n      return result;\n    }\n\n    tsParseDelimitedList<T: N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T,\n    ): T[] {\n      return nonNull(\n        this.tsParseDelimitedListWorker(\n          kind,\n          parseElement,\n          /* expectSuccess */ true,\n        ),\n      );\n    }\n\n    /**\n     * If !expectSuccess, returns undefined instead of failing to parse.\n     * If expectSuccess, parseElement should always return a defined value.\n     */\n    tsParseDelimitedListWorker<T: N.Node>(\n      kind: ParsingContext,\n      parseElement: () => ?T,\n      expectSuccess: boolean,\n    ): ?(T[]) {\n      const result = [];\n\n      for (;;) {\n        if (this.tsIsListTerminator(kind)) {\n          break;\n        }\n\n        const element = parseElement();\n        if (element == null) {\n          return undefined;\n        }\n        result.push(element);\n\n        if (this.eat(tt.comma)) {\n          continue;\n        }\n\n        if (this.tsIsListTerminator(kind)) {\n          break;\n        }\n\n        if (expectSuccess) {\n          // This will fail with an error about a missing comma\n          this.expect(tt.comma);\n        }\n        return undefined;\n      }\n\n      return result;\n    }\n\n    tsParseBracketedList<T: N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T,\n      bracket: boolean,\n      skipFirstToken: boolean,\n    ): T[] {\n      if (!skipFirstToken) {\n        if (bracket) {\n          this.expect(tt.bracketL);\n        } else {\n          this.expectRelational(\"<\");\n        }\n      }\n\n      const result = this.tsParseDelimitedList(kind, parseElement);\n\n      if (bracket) {\n        this.expect(tt.bracketR);\n      } else {\n        this.expectRelational(\">\");\n      }\n\n      return result;\n    }\n\n    tsParseImportType(): N.TsImportType {\n      const node: N.TsImportType = this.startNode();\n      this.expect(tt._import);\n      this.expect(tt.parenL);\n      if (!this.match(tt.string)) {\n        this.raise(this.state.start, TSErrors.UnsupportedImportTypeArgument);\n      }\n\n      // For compatibility to estree we cannot call parseLiteral directly here\n      node.argument = this.parseExprAtom();\n      this.expect(tt.parenR);\n\n      if (this.eat(tt.dot)) {\n        node.qualifier = this.tsParseEntityName(/* allowReservedWords */ true);\n      }\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSImportType\");\n    }\n\n    tsParseEntityName(allowReservedWords: boolean): N.TsEntityName {\n      let entity: N.TsEntityName = this.parseIdentifier();\n      while (this.eat(tt.dot)) {\n        const node: N.TsQualifiedName = this.startNodeAtNode(entity);\n        node.left = entity;\n        node.right = this.parseIdentifier(allowReservedWords);\n        entity = this.finishNode(node, \"TSQualifiedName\");\n      }\n      return entity;\n    }\n\n    tsParseTypeReference(): N.TsTypeReference {\n      const node: N.TsTypeReference = this.startNode();\n      node.typeName = this.tsParseEntityName(/* allowReservedWords */ false);\n      if (!this.hasPrecedingLineBreak() && this.isRelational(\"<\")) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSTypeReference\");\n    }\n\n    tsParseThisTypePredicate(lhs: N.TsThisType): N.TsTypePredicate {\n      this.next();\n      const node: N.TsTypePredicate = this.startNodeAtNode(lhs);\n      node.parameterName = lhs;\n      node.typeAnnotation = this.tsParseTypeAnnotation(/* eatColon */ false);\n      node.asserts = false;\n      return this.finishNode(node, \"TSTypePredicate\");\n    }\n\n    tsParseThisTypeNode(): N.TsThisType {\n      const node: N.TsThisType = this.startNode();\n      this.next();\n      return this.finishNode(node, \"TSThisType\");\n    }\n\n    tsParseTypeQuery(): N.TsTypeQuery {\n      const node: N.TsTypeQuery = this.startNode();\n      this.expect(tt._typeof);\n      if (this.match(tt._import)) {\n        node.exprName = this.tsParseImportType();\n      } else {\n        node.exprName = this.tsParseEntityName(/* allowReservedWords */ true);\n      }\n      return this.finishNode(node, \"TSTypeQuery\");\n    }\n\n    tsParseTypeParameter(): N.TsTypeParameter {\n      const node: N.TsTypeParameter = this.startNode();\n      node.name = this.parseIdentifierName(node.start);\n      node.constraint = this.tsEatThenParseType(tt._extends);\n      node.default = this.tsEatThenParseType(tt.eq);\n      return this.finishNode(node, \"TSTypeParameter\");\n    }\n\n    tsTryParseTypeParameters(): ?N.TsTypeParameterDeclaration {\n      if (this.isRelational(\"<\")) {\n        return this.tsParseTypeParameters();\n      }\n    }\n\n    tsParseTypeParameters() {\n      const node: N.TsTypeParameterDeclaration = this.startNode();\n\n      if (this.isRelational(\"<\") || this.match(tt.jsxTagStart)) {\n        this.next();\n      } else {\n        this.unexpected();\n      }\n\n      node.params = this.tsParseBracketedList(\n        \"TypeParametersOrArguments\",\n        this.tsParseTypeParameter.bind(this),\n        /* bracket */ false,\n        /* skipFirstToken */ true,\n      );\n      if (node.params.length === 0) {\n        this.raise(node.start, TSErrors.EmptyTypeParameters);\n      }\n      return this.finishNode(node, \"TSTypeParameterDeclaration\");\n    }\n\n    tsTryNextParseConstantContext(): ?N.TsTypeReference {\n      if (this.lookahead().type === tt._const) {\n        this.next();\n        return this.tsParseTypeReference();\n      }\n      return null;\n    }\n\n    // Note: In TypeScript implementation we must provide `yieldContext` and `awaitContext`,\n    // but here it's always false, because this is only used for types.\n    tsFillSignature(\n      returnToken: TokenType,\n      signature: N.TsSignatureDeclaration,\n    ): void {\n      // Arrow fns *must* have return token (`=>`). Normal functions can omit it.\n      const returnTokenRequired = returnToken === tt.arrow;\n      signature.typeParameters = this.tsTryParseTypeParameters();\n      this.expect(tt.parenL);\n      signature.parameters = this.tsParseBindingListForSignature();\n      if (returnTokenRequired) {\n        signature.typeAnnotation =\n          this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n      } else if (this.match(returnToken)) {\n        signature.typeAnnotation =\n          this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n      }\n    }\n\n    tsParseBindingListForSignature(): $ReadOnlyArray<\n      N.Identifier | N.RestElement | N.ObjectPattern | N.ArrayPattern,\n    > {\n      return this.parseBindingList(tt.parenR, charCodes.rightParenthesis).map(\n        pattern => {\n          if (\n            pattern.type !== \"Identifier\" &&\n            pattern.type !== \"RestElement\" &&\n            pattern.type !== \"ObjectPattern\" &&\n            pattern.type !== \"ArrayPattern\"\n          ) {\n            this.raise(\n              pattern.start,\n              TSErrors.UnsupportedSignatureParameterKind,\n              pattern.type,\n            );\n          }\n          return (pattern: any);\n        },\n      );\n    }\n\n    tsParseTypeMemberSemicolon(): void {\n      if (!this.eat(tt.comma) && !this.isLineTerminator()) {\n        this.expect(tt.semi);\n      }\n    }\n\n    tsParseSignatureMember(\n      kind: \"TSCallSignatureDeclaration\" | \"TSConstructSignatureDeclaration\",\n      node: N.TsCallSignatureDeclaration | N.TsConstructSignatureDeclaration,\n    ): N.TsCallSignatureDeclaration | N.TsConstructSignatureDeclaration {\n      this.tsFillSignature(tt.colon, node);\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(node, kind);\n    }\n\n    tsIsUnambiguouslyIndexSignature() {\n      this.next(); // Skip '{'\n      return this.eat(tt.name) && this.match(tt.colon);\n    }\n\n    tsTryParseIndexSignature(node: N.Node): ?N.TsIndexSignature {\n      if (\n        !(\n          this.match(tt.bracketL) &&\n          this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this))\n        )\n      ) {\n        return undefined;\n      }\n\n      this.expect(tt.bracketL);\n      const id = this.parseIdentifier();\n      id.typeAnnotation = this.tsParseTypeAnnotation();\n      this.resetEndLocation(id); // set end position to end of type\n\n      this.expect(tt.bracketR);\n      node.parameters = [id];\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) node.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(node, \"TSIndexSignature\");\n    }\n\n    tsParsePropertyOrMethodSignature(\n      node: N.TsPropertySignature | N.TsMethodSignature,\n      readonly: boolean,\n    ): N.TsPropertySignature | N.TsMethodSignature {\n      if (this.eat(tt.question)) node.optional = true;\n      const nodeAny: any = node;\n\n      if (this.match(tt.parenL) || this.isRelational(\"<\")) {\n        if (readonly) {\n          this.raise(node.start, TSErrors.ReadonlyForMethodSignature);\n        }\n        const method: N.TsMethodSignature = nodeAny;\n        if (method.kind && this.isRelational(\"<\")) {\n          this.raise(this.state.pos, TSErrors.AccesorCannotHaveTypeParameters);\n        }\n        this.tsFillSignature(tt.colon, method);\n        this.tsParseTypeMemberSemicolon();\n        if (method.kind === \"get\") {\n          if (method.parameters.length > 0) {\n            this.raise(this.state.pos, Errors.BadGetterArity);\n            if (this.isThisParam(method.parameters[0])) {\n              this.raise(\n                this.state.pos,\n                TSErrors.AccesorCannotDeclareThisParameter,\n              );\n            }\n          }\n        } else if (method.kind === \"set\") {\n          if (method.parameters.length !== 1) {\n            this.raise(this.state.pos, Errors.BadSetterArity);\n          } else {\n            const firstParameter = method.parameters[0];\n            if (this.isThisParam(firstParameter)) {\n              this.raise(\n                this.state.pos,\n                TSErrors.AccesorCannotDeclareThisParameter,\n              );\n            }\n            if (\n              firstParameter.type === \"Identifier\" &&\n              firstParameter.optional\n            ) {\n              this.raise(\n                this.state.pos,\n                TSErrors.SetAccesorCannotHaveOptionalParameter,\n              );\n            }\n            if (firstParameter.type === \"RestElement\") {\n              this.raise(\n                this.state.pos,\n                TSErrors.SetAccesorCannotHaveRestParameter,\n              );\n            }\n          }\n          if (method.typeAnnotation) {\n            this.raise(\n              method.typeAnnotation.start,\n              TSErrors.SetAccesorCannotHaveReturnType,\n            );\n          }\n        } else {\n          method.kind = \"method\";\n        }\n        return this.finishNode(method, \"TSMethodSignature\");\n      } else {\n        const property: N.TsPropertySignature = nodeAny;\n        if (readonly) property.readonly = true;\n        const type = this.tsTryParseTypeAnnotation();\n        if (type) property.typeAnnotation = type;\n        this.tsParseTypeMemberSemicolon();\n        return this.finishNode(property, \"TSPropertySignature\");\n      }\n    }\n\n    tsParseTypeMember(): N.TsTypeElement {\n      const node: any = this.startNode();\n\n      if (this.match(tt.parenL) || this.isRelational(\"<\")) {\n        return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n      }\n\n      if (this.match(tt._new)) {\n        const id: N.Identifier = this.startNode();\n        this.next();\n        if (this.match(tt.parenL) || this.isRelational(\"<\")) {\n          return this.tsParseSignatureMember(\n            \"TSConstructSignatureDeclaration\",\n            node,\n          );\n        } else {\n          node.key = this.createIdentifier(id, \"new\");\n          return this.tsParsePropertyOrMethodSignature(node, false);\n        }\n      }\n\n      this.tsParseModifiers(\n        node,\n        [\"readonly\"],\n        [\n          \"declare\",\n          \"abstract\",\n          \"private\",\n          \"protected\",\n          \"public\",\n          \"static\",\n          \"override\",\n        ],\n        TSErrors.InvalidModifierOnTypeMember,\n      );\n\n      const idx = this.tsTryParseIndexSignature(node);\n      if (idx) {\n        return idx;\n      }\n\n      this.parsePropertyName(node, /* isPrivateNameAllowed */ false);\n      if (\n        !node.computed &&\n        node.key.type === \"Identifier\" &&\n        (node.key.name === \"get\" || node.key.name === \"set\") &&\n        this.tsTokenCanFollowModifier()\n      ) {\n        node.kind = node.key.name;\n        this.parsePropertyName(node, /* isPrivateNameAllowed */ false);\n      }\n      return this.tsParsePropertyOrMethodSignature(node, !!node.readonly);\n    }\n\n    tsParseTypeLiteral(): N.TsTypeLiteral {\n      const node: N.TsTypeLiteral = this.startNode();\n      node.members = this.tsParseObjectTypeMembers();\n      return this.finishNode(node, \"TSTypeLiteral\");\n    }\n\n    tsParseObjectTypeMembers(): $ReadOnlyArray<N.TsTypeElement> {\n      this.expect(tt.braceL);\n      const members = this.tsParseList(\n        \"TypeMembers\",\n        this.tsParseTypeMember.bind(this),\n      );\n      this.expect(tt.braceR);\n      return members;\n    }\n\n    tsIsStartOfMappedType(): boolean {\n      this.next();\n      if (this.eat(tt.plusMin)) {\n        return this.isContextual(\"readonly\");\n      }\n      if (this.isContextual(\"readonly\")) {\n        this.next();\n      }\n      if (!this.match(tt.bracketL)) {\n        return false;\n      }\n      this.next();\n      if (!this.tsIsIdentifier()) {\n        return false;\n      }\n      this.next();\n      return this.match(tt._in);\n    }\n\n    tsParseMappedTypeParameter(): N.TsTypeParameter {\n      const node: N.TsTypeParameter = this.startNode();\n      node.name = this.parseIdentifierName(node.start);\n      node.constraint = this.tsExpectThenParseType(tt._in);\n      return this.finishNode(node, \"TSTypeParameter\");\n    }\n\n    tsParseMappedType(): N.TsMappedType {\n      const node: N.TsMappedType = this.startNode();\n\n      this.expect(tt.braceL);\n\n      if (this.match(tt.plusMin)) {\n        node.readonly = this.state.value;\n        this.next();\n        this.expectContextual(\"readonly\");\n      } else if (this.eatContextual(\"readonly\")) {\n        node.readonly = true;\n      }\n\n      this.expect(tt.bracketL);\n      node.typeParameter = this.tsParseMappedTypeParameter();\n      node.nameType = this.eatContextual(\"as\") ? this.tsParseType() : null;\n\n      this.expect(tt.bracketR);\n\n      if (this.match(tt.plusMin)) {\n        node.optional = this.state.value;\n        this.next();\n        this.expect(tt.question);\n      } else if (this.eat(tt.question)) {\n        node.optional = true;\n      }\n\n      node.typeAnnotation = this.tsTryParseType();\n      this.semicolon();\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"TSMappedType\");\n    }\n\n    tsParseTupleType(): N.TsTupleType {\n      const node: N.TsTupleType = this.startNode();\n      node.elementTypes = this.tsParseBracketedList(\n        \"TupleElementTypes\",\n        this.tsParseTupleElementType.bind(this),\n        /* bracket */ true,\n        /* skipFirstToken */ false,\n      );\n\n      // Validate the elementTypes to ensure that no mandatory elements\n      // follow optional elements\n      let seenOptionalElement = false;\n      let labeledElements = null;\n      node.elementTypes.forEach(elementNode => {\n        let { type } = elementNode;\n\n        if (\n          seenOptionalElement &&\n          type !== \"TSRestType\" &&\n          type !== \"TSOptionalType\" &&\n          !(type === \"TSNamedTupleMember\" && elementNode.optional)\n        ) {\n          this.raise(elementNode.start, TSErrors.OptionalTypeBeforeRequired);\n        }\n\n        // Flow doesn't support ||=\n        seenOptionalElement =\n          seenOptionalElement ||\n          (type === \"TSNamedTupleMember\" && elementNode.optional) ||\n          type === \"TSOptionalType\";\n\n        // When checking labels, check the argument of the spread operator\n        if (type === \"TSRestType\") {\n          elementNode = elementNode.typeAnnotation;\n          type = elementNode.type;\n        }\n\n        const isLabeled = type === \"TSNamedTupleMember\";\n        // Flow doesn't support ??=\n        labeledElements = labeledElements ?? isLabeled;\n        if (labeledElements !== isLabeled) {\n          this.raise(\n            elementNode.start,\n            TSErrors.MixedLabeledAndUnlabeledElements,\n          );\n        }\n      });\n\n      return this.finishNode(node, \"TSTupleType\");\n    }\n\n    tsParseTupleElementType(): N.TsType | N.TsNamedTupleMember {\n      // parses `...TsType[]`\n\n      const { start: startPos, startLoc } = this.state;\n\n      const rest = this.eat(tt.ellipsis);\n      let type = this.tsParseType();\n      const optional = this.eat(tt.question);\n      const labeled = this.eat(tt.colon);\n\n      if (labeled) {\n        const labeledNode: N.TsNamedTupleMember = this.startNodeAtNode(type);\n        labeledNode.optional = optional;\n\n        if (\n          type.type === \"TSTypeReference\" &&\n          !type.typeParameters &&\n          type.typeName.type === \"Identifier\"\n        ) {\n          labeledNode.label = (type.typeName: N.Identifier);\n        } else {\n          this.raise(type.start, TSErrors.InvalidTupleMemberLabel);\n          // This produces an invalid AST, but at least we don't drop\n          // nodes representing the invalid source.\n          // $FlowIgnore\n          labeledNode.label = type;\n        }\n\n        labeledNode.elementType = this.tsParseType();\n        type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n      } else if (optional) {\n        const optionalTypeNode: N.TsOptionalType = this.startNodeAtNode(type);\n        optionalTypeNode.typeAnnotation = type;\n        type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n      }\n\n      if (rest) {\n        const restNode: N.TsRestType = this.startNodeAt(startPos, startLoc);\n        restNode.typeAnnotation = type;\n        type = this.finishNode(restNode, \"TSRestType\");\n      }\n\n      return type;\n    }\n\n    tsParseParenthesizedType(): N.TsParenthesizedType {\n      const node = this.startNode();\n      this.expect(tt.parenL);\n      node.typeAnnotation = this.tsParseType();\n      this.expect(tt.parenR);\n      return this.finishNode(node, \"TSParenthesizedType\");\n    }\n\n    tsParseFunctionOrConstructorType(\n      type: \"TSFunctionType\" | \"TSConstructorType\",\n      abstract?: boolean,\n    ): N.TsFunctionOrConstructorType {\n      const node: N.TsFunctionOrConstructorType = this.startNode();\n      if (type === \"TSConstructorType\") {\n        // $FlowIgnore\n        node.abstract = !!abstract;\n        if (abstract) this.next();\n        this.next(); // eat `new`\n      }\n      this.tsFillSignature(tt.arrow, node);\n      return this.finishNode(node, type);\n    }\n\n    tsParseLiteralTypeNode(): N.TsLiteralType {\n      const node: N.TsLiteralType = this.startNode();\n      node.literal = (() => {\n        switch (this.state.type) {\n          case tt.num:\n          case tt.bigint:\n          case tt.string:\n          case tt._true:\n          case tt._false:\n            // For compatibility to estree we cannot call parseLiteral directly here\n            return this.parseExprAtom();\n          default:\n            throw this.unexpected();\n        }\n      })();\n      return this.finishNode(node, \"TSLiteralType\");\n    }\n\n    tsParseTemplateLiteralType(): N.TsType {\n      const node: N.TsLiteralType = this.startNode();\n      node.literal = this.parseTemplate(false);\n      return this.finishNode(node, \"TSLiteralType\");\n    }\n\n    parseTemplateSubstitution(): N.TsType {\n      if (this.state.inType) return this.tsParseType();\n      return super.parseTemplateSubstitution();\n    }\n\n    tsParseThisTypeOrThisTypePredicate(): N.TsThisType | N.TsTypePredicate {\n      const thisKeyword = this.tsParseThisTypeNode();\n      if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n        return this.tsParseThisTypePredicate(thisKeyword);\n      } else {\n        return thisKeyword;\n      }\n    }\n\n    tsParseNonArrayType(): N.TsType {\n      switch (this.state.type) {\n        case tt.name:\n        case tt._void:\n        case tt._null: {\n          const type = this.match(tt._void)\n            ? \"TSVoidKeyword\"\n            : this.match(tt._null)\n            ? \"TSNullKeyword\"\n            : keywordTypeFromName(this.state.value);\n          if (\n            type !== undefined &&\n            this.lookaheadCharCode() !== charCodes.dot\n          ) {\n            const node: N.TsKeywordType = this.startNode();\n            this.next();\n            return this.finishNode(node, type);\n          }\n          return this.tsParseTypeReference();\n        }\n        case tt.string:\n        case tt.num:\n        case tt.bigint:\n        case tt._true:\n        case tt._false:\n          return this.tsParseLiteralTypeNode();\n        case tt.plusMin:\n          if (this.state.value === \"-\") {\n            const node: N.TsLiteralType = this.startNode();\n            const nextToken = this.lookahead();\n            if (nextToken.type !== tt.num && nextToken.type !== tt.bigint) {\n              throw this.unexpected();\n            }\n            node.literal = this.parseMaybeUnary();\n            return this.finishNode(node, \"TSLiteralType\");\n          }\n          break;\n        case tt._this:\n          return this.tsParseThisTypeOrThisTypePredicate();\n        case tt._typeof:\n          return this.tsParseTypeQuery();\n        case tt._import:\n          return this.tsParseImportType();\n        case tt.braceL:\n          return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this))\n            ? this.tsParseMappedType()\n            : this.tsParseTypeLiteral();\n        case tt.bracketL:\n          return this.tsParseTupleType();\n        case tt.parenL:\n          if (process.env.BABEL_8_BREAKING) {\n            if (!this.options.createParenthesizedExpressions) {\n              const startPos = this.state.start;\n              this.next();\n              const type = this.tsParseType();\n              this.expect(tt.parenR);\n              this.addExtra(type, \"parenthesized\", true);\n              this.addExtra(type, \"parenStart\", startPos);\n              return type;\n            }\n          }\n\n          return this.tsParseParenthesizedType();\n        case tt.backQuote:\n          return this.tsParseTemplateLiteralType();\n      }\n\n      throw this.unexpected();\n    }\n\n    tsParseArrayTypeOrHigher(): N.TsType {\n      let type = this.tsParseNonArrayType();\n      while (!this.hasPrecedingLineBreak() && this.eat(tt.bracketL)) {\n        if (this.match(tt.bracketR)) {\n          const node: N.TsArrayType = this.startNodeAtNode(type);\n          node.elementType = type;\n          this.expect(tt.bracketR);\n          type = this.finishNode(node, \"TSArrayType\");\n        } else {\n          const node: N.TsIndexedAccessType = this.startNodeAtNode(type);\n          node.objectType = type;\n          node.indexType = this.tsParseType();\n          this.expect(tt.bracketR);\n          type = this.finishNode(node, \"TSIndexedAccessType\");\n        }\n      }\n      return type;\n    }\n\n    tsParseTypeOperator(\n      operator: \"keyof\" | \"unique\" | \"readonly\",\n    ): N.TsTypeOperator {\n      const node: N.TsTypeOperator = this.startNode();\n      this.expectContextual(operator);\n      node.operator = operator;\n      node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n\n      if (operator === \"readonly\") {\n        this.tsCheckTypeAnnotationForReadOnly(node);\n      }\n\n      return this.finishNode(node, \"TSTypeOperator\");\n    }\n\n    tsCheckTypeAnnotationForReadOnly(node: N.Node) {\n      switch (node.typeAnnotation.type) {\n        case \"TSTupleType\":\n        case \"TSArrayType\":\n          return;\n        default:\n          this.raise(node.start, TSErrors.UnexpectedReadonly);\n      }\n    }\n\n    tsParseInferType(): N.TsInferType {\n      const node = this.startNode();\n      this.expectContextual(\"infer\");\n      const typeParameter = this.startNode();\n      typeParameter.name = this.parseIdentifierName(typeParameter.start);\n      node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n      return this.finishNode(node, \"TSInferType\");\n    }\n\n    tsParseTypeOperatorOrHigher(): N.TsType {\n      const operator = [\"keyof\", \"unique\", \"readonly\"].find(kw =>\n        this.isContextual(kw),\n      );\n      return operator\n        ? this.tsParseTypeOperator(operator)\n        : this.isContextual(\"infer\")\n        ? this.tsParseInferType()\n        : this.tsParseArrayTypeOrHigher();\n    }\n\n    tsParseUnionOrIntersectionType(\n      kind: \"TSUnionType\" | \"TSIntersectionType\",\n      parseConstituentType: () => N.TsType,\n      operator: TokenType,\n    ): N.TsType {\n      const node: N.TsUnionType | N.TsIntersectionType = this.startNode();\n      const hasLeadingOperator = this.eat(operator);\n      const types = [];\n      do {\n        types.push(parseConstituentType());\n      } while (this.eat(operator));\n      if (types.length === 1 && !hasLeadingOperator) {\n        return types[0];\n      }\n      node.types = types;\n      return this.finishNode(node, kind);\n    }\n\n    tsParseIntersectionTypeOrHigher(): N.TsType {\n      return this.tsParseUnionOrIntersectionType(\n        \"TSIntersectionType\",\n        this.tsParseTypeOperatorOrHigher.bind(this),\n        tt.bitwiseAND,\n      );\n    }\n\n    tsParseUnionTypeOrHigher() {\n      return this.tsParseUnionOrIntersectionType(\n        \"TSUnionType\",\n        this.tsParseIntersectionTypeOrHigher.bind(this),\n        tt.bitwiseOR,\n      );\n    }\n\n    tsIsStartOfFunctionType() {\n      if (this.isRelational(\"<\")) {\n        return true;\n      }\n      return (\n        this.match(tt.parenL) &&\n        this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this))\n      );\n    }\n\n    tsSkipParameterStart(): boolean {\n      if (this.match(tt.name) || this.match(tt._this)) {\n        this.next();\n        return true;\n      }\n\n      if (this.match(tt.braceL)) {\n        let braceStackCounter = 1;\n        this.next();\n\n        while (braceStackCounter > 0) {\n          if (this.match(tt.braceL)) {\n            ++braceStackCounter;\n          } else if (this.match(tt.braceR)) {\n            --braceStackCounter;\n          }\n          this.next();\n        }\n        return true;\n      }\n\n      if (this.match(tt.bracketL)) {\n        let braceStackCounter = 1;\n        this.next();\n\n        while (braceStackCounter > 0) {\n          if (this.match(tt.bracketL)) {\n            ++braceStackCounter;\n          } else if (this.match(tt.bracketR)) {\n            --braceStackCounter;\n          }\n          this.next();\n        }\n        return true;\n      }\n\n      return false;\n    }\n\n    tsIsUnambiguouslyStartOfFunctionType(): boolean {\n      this.next();\n      if (this.match(tt.parenR) || this.match(tt.ellipsis)) {\n        // ( )\n        // ( ...\n        return true;\n      }\n      if (this.tsSkipParameterStart()) {\n        if (\n          this.match(tt.colon) ||\n          this.match(tt.comma) ||\n          this.match(tt.question) ||\n          this.match(tt.eq)\n        ) {\n          // ( xxx :\n          // ( xxx ,\n          // ( xxx ?\n          // ( xxx =\n          return true;\n        }\n        if (this.match(tt.parenR)) {\n          this.next();\n          if (this.match(tt.arrow)) {\n            // ( xxx ) =>\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n\n    tsParseTypeOrTypePredicateAnnotation(\n      returnToken: TokenType,\n    ): N.TsTypeAnnotation {\n      return this.tsInType(() => {\n        const t: N.TsTypeAnnotation = this.startNode();\n        this.expect(returnToken);\n\n        const node = this.startNode<N.TsTypePredicate>();\n\n        const asserts = !!this.tsTryParse(\n          this.tsParseTypePredicateAsserts.bind(this),\n        );\n\n        if (asserts && this.match(tt._this)) {\n          // When asserts is false, thisKeyword is handled by tsParseNonArrayType\n          // : asserts this is type\n          let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n          // if it turns out to be a `TSThisType`, wrap it with `TSTypePredicate`\n          // : asserts this\n          if (thisTypePredicate.type === \"TSThisType\") {\n            node.parameterName = (thisTypePredicate: N.TsThisType);\n            node.asserts = true;\n            (node: N.TsTypePredicate).typeAnnotation = null;\n            thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n          } else {\n            this.resetStartLocationFromNode(thisTypePredicate, node);\n            (thisTypePredicate: N.TsTypePredicate).asserts = true;\n          }\n          t.typeAnnotation = thisTypePredicate;\n          return this.finishNode(t, \"TSTypeAnnotation\");\n        }\n\n        const typePredicateVariable =\n          this.tsIsIdentifier() &&\n          this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n\n        if (!typePredicateVariable) {\n          if (!asserts) {\n            // : type\n            return this.tsParseTypeAnnotation(/* eatColon */ false, t);\n          }\n\n          // : asserts foo\n          node.parameterName = this.parseIdentifier();\n          node.asserts = asserts;\n          (node: N.TsTypePredicate).typeAnnotation = null;\n          t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n          return this.finishNode(t, \"TSTypeAnnotation\");\n        }\n\n        // : asserts foo is type\n        const type = this.tsParseTypeAnnotation(/* eatColon */ false);\n        node.parameterName = typePredicateVariable;\n        node.typeAnnotation = type;\n        node.asserts = asserts;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      });\n    }\n\n    tsTryParseTypeOrTypePredicateAnnotation(): ?N.TsTypeAnnotation {\n      return this.match(tt.colon)\n        ? this.tsParseTypeOrTypePredicateAnnotation(tt.colon)\n        : undefined;\n    }\n\n    tsTryParseTypeAnnotation(): ?N.TsTypeAnnotation {\n      return this.match(tt.colon) ? this.tsParseTypeAnnotation() : undefined;\n    }\n\n    tsTryParseType(): ?N.TsType {\n      return this.tsEatThenParseType(tt.colon);\n    }\n\n    tsParseTypePredicatePrefix(): ?N.Identifier {\n      const id = this.parseIdentifier();\n      if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n        this.next();\n        return id;\n      }\n    }\n\n    tsParseTypePredicateAsserts(): boolean {\n      if (\n        !this.match(tt.name) ||\n        this.state.value !== \"asserts\" ||\n        this.hasPrecedingLineBreak()\n      ) {\n        return false;\n      }\n      const containsEsc = this.state.containsEsc;\n      this.next();\n      if (!this.match(tt.name) && !this.match(tt._this)) {\n        return false;\n      }\n\n      if (containsEsc) {\n        this.raise(\n          this.state.lastTokStart,\n          Errors.InvalidEscapedReservedWord,\n          \"asserts\",\n        );\n      }\n\n      return true;\n    }\n\n    tsParseTypeAnnotation(\n      eatColon = true,\n      t: N.TsTypeAnnotation = this.startNode(),\n    ): N.TsTypeAnnotation {\n      this.tsInType(() => {\n        if (eatColon) this.expect(tt.colon);\n        t.typeAnnotation = this.tsParseType();\n      });\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    }\n\n    /** Be sure to be in a type context before calling this, using `tsInType`. */\n    tsParseType(): N.TsType {\n      // Need to set `state.inType` so that we don't parse JSX in a type context.\n      assert(this.state.inType);\n      const type = this.tsParseNonConditionalType();\n      if (this.hasPrecedingLineBreak() || !this.eat(tt._extends)) {\n        return type;\n      }\n      const node: N.TsConditionalType = this.startNodeAtNode(type);\n      node.checkType = type;\n      node.extendsType = this.tsParseNonConditionalType();\n      this.expect(tt.question);\n      node.trueType = this.tsParseType();\n      this.expect(tt.colon);\n      node.falseType = this.tsParseType();\n      return this.finishNode(node, \"TSConditionalType\");\n    }\n\n    isAbstractConstructorSignature(): boolean {\n      return this.isContextual(\"abstract\") && this.lookahead().type === tt._new;\n    }\n\n    tsParseNonConditionalType(): N.TsType {\n      if (this.tsIsStartOfFunctionType()) {\n        return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n      }\n      if (this.match(tt._new)) {\n        // As in `new () => Date`\n        return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n      } else if (this.isAbstractConstructorSignature()) {\n        // As in `abstract new () => Date`\n        return this.tsParseFunctionOrConstructorType(\n          \"TSConstructorType\",\n          /* abstract */ true,\n        );\n      }\n      return this.tsParseUnionTypeOrHigher();\n    }\n\n    tsParseTypeAssertion(): N.TsTypeAssertion {\n      const node: N.TsTypeAssertion = this.startNode();\n      const _const = this.tsTryNextParseConstantContext();\n      node.typeAnnotation = _const || this.tsNextThenParseType();\n      this.expectRelational(\">\");\n      node.expression = this.parseMaybeUnary();\n      return this.finishNode(node, \"TSTypeAssertion\");\n    }\n\n    tsParseHeritageClause(\n      descriptor: string,\n    ): $ReadOnlyArray<N.TsExpressionWithTypeArguments> {\n      const originalStart = this.state.start;\n\n      const delimitedList = this.tsParseDelimitedList(\n        \"HeritageClauseElement\",\n        this.tsParseExpressionWithTypeArguments.bind(this),\n      );\n\n      if (!delimitedList.length) {\n        this.raise(originalStart, TSErrors.EmptyHeritageClauseType, descriptor);\n      }\n\n      return delimitedList;\n    }\n\n    tsParseExpressionWithTypeArguments(): N.TsExpressionWithTypeArguments {\n      const node: N.TsExpressionWithTypeArguments = this.startNode();\n      // Note: TS uses parseLeftHandSideExpressionOrHigher,\n      // then has grammar errors later if it's not an EntityName.\n      node.expression = this.tsParseEntityName(/* allowReservedWords */ false);\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n\n      return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n    }\n\n    tsParseInterfaceDeclaration(\n      node: N.TsInterfaceDeclaration,\n    ): N.TsInterfaceDeclaration {\n      node.id = this.parseIdentifier();\n      this.checkLVal(\n        node.id,\n        \"typescript interface declaration\",\n        BIND_TS_INTERFACE,\n      );\n      node.typeParameters = this.tsTryParseTypeParameters();\n      if (this.eat(tt._extends)) {\n        node.extends = this.tsParseHeritageClause(\"extends\");\n      }\n      const body: N.TSInterfaceBody = this.startNode();\n      body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n      node.body = this.finishNode(body, \"TSInterfaceBody\");\n      return this.finishNode(node, \"TSInterfaceDeclaration\");\n    }\n\n    tsParseTypeAliasDeclaration(\n      node: N.TsTypeAliasDeclaration,\n    ): N.TsTypeAliasDeclaration {\n      node.id = this.parseIdentifier();\n      this.checkLVal(node.id, \"typescript type alias\", BIND_TS_TYPE);\n\n      node.typeParameters = this.tsTryParseTypeParameters();\n      node.typeAnnotation = this.tsInType(() => {\n        this.expect(tt.eq);\n\n        if (\n          this.isContextual(\"intrinsic\") &&\n          this.lookahead().type !== tt.dot\n        ) {\n          const node: N.TsKeywordType = this.startNode();\n          this.next();\n          return this.finishNode(node, \"TSIntrinsicKeyword\");\n        }\n\n        return this.tsParseType();\n      });\n\n      this.semicolon();\n      return this.finishNode(node, \"TSTypeAliasDeclaration\");\n    }\n\n    tsInNoContext<T>(cb: () => T): T {\n      const oldContext = this.state.context;\n      this.state.context = [oldContext[0]];\n      try {\n        return cb();\n      } finally {\n        this.state.context = oldContext;\n      }\n    }\n\n    /**\n     * Runs `cb` in a type context.\n     * This should be called one token *before* the first type token,\n     * so that the call to `next()` is run in type context.\n     */\n    tsInType<T>(cb: () => T): T {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      try {\n        return cb();\n      } finally {\n        this.state.inType = oldInType;\n      }\n    }\n\n    tsEatThenParseType(token: TokenType): N.TsType | typeof undefined {\n      return !this.match(token) ? undefined : this.tsNextThenParseType();\n    }\n\n    tsExpectThenParseType(token: TokenType): N.TsType {\n      return this.tsDoThenParseType(() => this.expect(token));\n    }\n\n    tsNextThenParseType(): N.TsType {\n      return this.tsDoThenParseType(() => this.next());\n    }\n\n    tsDoThenParseType(cb: () => void): N.TsType {\n      return this.tsInType(() => {\n        cb();\n        return this.tsParseType();\n      });\n    }\n\n    tsParseEnumMember(): N.TsEnumMember {\n      const node: N.TsEnumMember = this.startNode();\n      // Computed property names are grammar errors in an enum, so accept just string literal or identifier.\n      node.id = this.match(tt.string)\n        ? this.parseExprAtom()\n        : this.parseIdentifier(/* liberal */ true);\n      if (this.eat(tt.eq)) {\n        node.initializer = this.parseMaybeAssignAllowIn();\n      }\n      return this.finishNode(node, \"TSEnumMember\");\n    }\n\n    tsParseEnumDeclaration(\n      node: N.TsEnumDeclaration,\n      isConst: boolean,\n    ): N.TsEnumDeclaration {\n      if (isConst) node.const = true;\n      node.id = this.parseIdentifier();\n      this.checkLVal(\n        node.id,\n        \"typescript enum declaration\",\n        isConst ? BIND_TS_CONST_ENUM : BIND_TS_ENUM,\n      );\n\n      this.expect(tt.braceL);\n      node.members = this.tsParseDelimitedList(\n        \"EnumMembers\",\n        this.tsParseEnumMember.bind(this),\n      );\n      this.expect(tt.braceR);\n      return this.finishNode(node, \"TSEnumDeclaration\");\n    }\n\n    tsParseModuleBlock(): N.TsModuleBlock {\n      const node: N.TsModuleBlock = this.startNode();\n      this.scope.enter(SCOPE_OTHER);\n\n      this.expect(tt.braceL);\n      // Inside of a module block is considered \"top-level\", meaning it can have imports and exports.\n      this.parseBlockOrModuleBlockBody(\n        (node.body = []),\n        /* directives */ undefined,\n        /* topLevel */ true,\n        /* end */ tt.braceR,\n      );\n      this.scope.exit();\n      return this.finishNode(node, \"TSModuleBlock\");\n    }\n\n    tsParseModuleOrNamespaceDeclaration(\n      node: N.TsModuleDeclaration,\n      nested?: boolean = false,\n    ): N.TsModuleDeclaration {\n      node.id = this.parseIdentifier();\n\n      if (!nested) {\n        this.checkLVal(\n          node.id,\n          \"module or namespace declaration\",\n          BIND_TS_NAMESPACE,\n        );\n      }\n\n      if (this.eat(tt.dot)) {\n        const inner = this.startNode();\n        this.tsParseModuleOrNamespaceDeclaration(inner, true);\n        node.body = inner;\n      } else {\n        this.scope.enter(SCOPE_TS_MODULE);\n        this.prodParam.enter(PARAM);\n        node.body = this.tsParseModuleBlock();\n        this.prodParam.exit();\n        this.scope.exit();\n      }\n      return this.finishNode(node, \"TSModuleDeclaration\");\n    }\n\n    tsParseAmbientExternalModuleDeclaration(\n      node: N.TsModuleDeclaration,\n    ): N.TsModuleDeclaration {\n      if (this.isContextual(\"global\")) {\n        node.global = true;\n        node.id = this.parseIdentifier();\n      } else if (this.match(tt.string)) {\n        node.id = this.parseExprAtom();\n      } else {\n        this.unexpected();\n      }\n      if (this.match(tt.braceL)) {\n        this.scope.enter(SCOPE_TS_MODULE);\n        this.prodParam.enter(PARAM);\n        node.body = this.tsParseModuleBlock();\n        this.prodParam.exit();\n        this.scope.exit();\n      } else {\n        this.semicolon();\n      }\n\n      return this.finishNode(node, \"TSModuleDeclaration\");\n    }\n\n    tsParseImportEqualsDeclaration(\n      node: N.TsImportEqualsDeclaration,\n      isExport?: boolean,\n    ): N.TsImportEqualsDeclaration {\n      node.isExport = isExport || false;\n      node.id = this.parseIdentifier();\n      this.checkLVal(node.id, \"import equals declaration\", BIND_LEXICAL);\n      this.expect(tt.eq);\n      const moduleReference = this.tsParseModuleReference();\n      if (\n        node.importKind === \"type\" &&\n        moduleReference.type !== \"TSExternalModuleReference\"\n      ) {\n        this.raise(moduleReference.start, TSErrors.ImportAliasHasImportType);\n      }\n      node.moduleReference = moduleReference;\n      this.semicolon();\n      return this.finishNode(node, \"TSImportEqualsDeclaration\");\n    }\n\n    tsIsExternalModuleReference(): boolean {\n      return (\n        this.isContextual(\"require\") &&\n        this.lookaheadCharCode() === charCodes.leftParenthesis\n      );\n    }\n\n    tsParseModuleReference(): N.TsModuleReference {\n      return this.tsIsExternalModuleReference()\n        ? this.tsParseExternalModuleReference()\n        : this.tsParseEntityName(/* allowReservedWords */ false);\n    }\n\n    tsParseExternalModuleReference(): N.TsExternalModuleReference {\n      const node: N.TsExternalModuleReference = this.startNode();\n      this.expectContextual(\"require\");\n      this.expect(tt.parenL);\n      if (!this.match(tt.string)) {\n        throw this.unexpected();\n      }\n      // For compatibility to estree we cannot call parseLiteral directly here\n      node.expression = this.parseExprAtom();\n      this.expect(tt.parenR);\n      return this.finishNode(node, \"TSExternalModuleReference\");\n    }\n\n    // Utilities\n\n    tsLookAhead<T>(f: () => T): T {\n      const state = this.state.clone();\n      const res = f();\n      this.state = state;\n      return res;\n    }\n\n    tsTryParseAndCatch<T: ?N.NodeBase>(f: () => T): ?T {\n      const result = this.tryParse(abort => f() || abort());\n\n      if (result.aborted || !result.node) return undefined;\n      if (result.error) this.state = result.failState;\n      return result.node;\n    }\n\n    tsTryParse<T>(f: () => ?T): ?T {\n      const state = this.state.clone();\n      const result = f();\n      if (result !== undefined && result !== false) {\n        return result;\n      } else {\n        this.state = state;\n        return undefined;\n      }\n    }\n\n    tsTryParseDeclare(nany: any): ?N.Declaration {\n      if (this.isLineTerminator()) {\n        return;\n      }\n      let starttype = this.state.type;\n      let kind;\n\n      if (this.isContextual(\"let\")) {\n        starttype = tt._var;\n        kind = \"let\";\n      }\n\n      return this.tsInAmbientContext(() => {\n        switch (starttype) {\n          case tt._function:\n            nany.declare = true;\n            return this.parseFunctionStatement(\n              nany,\n              /* async */ false,\n              /* declarationPosition */ true,\n            );\n          case tt._class:\n            // While this is also set by tsParseExpressionStatement, we need to set it\n            // before parsing the class declaration to now how to register it in the scope.\n            nany.declare = true;\n            return this.parseClass(\n              nany,\n              /* isStatement */ true,\n              /* optionalId */ false,\n            );\n          case tt._const:\n            if (this.match(tt._const) && this.isLookaheadContextual(\"enum\")) {\n              // `const enum = 0;` not allowed because \"enum\" is a strict mode reserved word.\n              this.expect(tt._const);\n              this.expectContextual(\"enum\");\n              return this.tsParseEnumDeclaration(nany, /* isConst */ true);\n            }\n          // falls through\n          case tt._var:\n            kind = kind || this.state.value;\n            return this.parseVarStatement(nany, kind);\n          case tt.name: {\n            const value = this.state.value;\n            if (value === \"global\") {\n              return this.tsParseAmbientExternalModuleDeclaration(nany);\n            } else {\n              return this.tsParseDeclaration(nany, value, /* next */ true);\n            }\n          }\n        }\n      });\n    }\n\n    // Note: this won't be called unless the keyword is allowed in `shouldParseExportDeclaration`.\n    tsTryParseExportDeclaration(): ?N.Declaration {\n      return this.tsParseDeclaration(\n        this.startNode(),\n        this.state.value,\n        /* next */ true,\n      );\n    }\n\n    tsParseExpressionStatement(node: any, expr: N.Identifier): ?N.Declaration {\n      switch (expr.name) {\n        case \"declare\": {\n          const declaration = this.tsTryParseDeclare(node);\n          if (declaration) {\n            declaration.declare = true;\n            return declaration;\n          }\n          break;\n        }\n        case \"global\":\n          // `global { }` (with no `declare`) may appear inside an ambient module declaration.\n          // Would like to use tsParseAmbientExternalModuleDeclaration here, but already ran past \"global\".\n          if (this.match(tt.braceL)) {\n            this.scope.enter(SCOPE_TS_MODULE);\n            this.prodParam.enter(PARAM);\n            const mod: N.TsModuleDeclaration = node;\n            mod.global = true;\n            mod.id = expr;\n            mod.body = this.tsParseModuleBlock();\n            this.scope.exit();\n            this.prodParam.exit();\n            return this.finishNode(mod, \"TSModuleDeclaration\");\n          }\n          break;\n\n        default:\n          return this.tsParseDeclaration(node, expr.name, /* next */ false);\n      }\n    }\n\n    // Common to tsTryParseDeclare, tsTryParseExportDeclaration, and tsParseExpressionStatement.\n    tsParseDeclaration(\n      node: any,\n      value: string,\n      next: boolean,\n    ): ?N.Declaration {\n      // no declaration apart from enum can be followed by a line break.\n      switch (value) {\n        case \"abstract\":\n          if (\n            this.tsCheckLineTerminator(next) &&\n            (this.match(tt._class) || this.match(tt.name))\n          ) {\n            return this.tsParseAbstractDeclaration(node);\n          }\n          break;\n\n        case \"enum\":\n          if (next || this.match(tt.name)) {\n            if (next) this.next();\n            return this.tsParseEnumDeclaration(node, /* isConst */ false);\n          }\n          break;\n\n        case \"interface\":\n          if (this.tsCheckLineTerminator(next) && this.match(tt.name)) {\n            return this.tsParseInterfaceDeclaration(node);\n          }\n          break;\n\n        case \"module\":\n          if (this.tsCheckLineTerminator(next)) {\n            if (this.match(tt.string)) {\n              return this.tsParseAmbientExternalModuleDeclaration(node);\n            } else if (this.match(tt.name)) {\n              return this.tsParseModuleOrNamespaceDeclaration(node);\n            }\n          }\n          break;\n\n        case \"namespace\":\n          if (this.tsCheckLineTerminator(next) && this.match(tt.name)) {\n            return this.tsParseModuleOrNamespaceDeclaration(node);\n          }\n          break;\n\n        case \"type\":\n          if (this.tsCheckLineTerminator(next) && this.match(tt.name)) {\n            return this.tsParseTypeAliasDeclaration(node);\n          }\n          break;\n      }\n    }\n\n    tsCheckLineTerminator(next: boolean) {\n      if (next) {\n        if (this.hasFollowingLineBreak()) return false;\n        this.next();\n        return true;\n      }\n      return !this.isLineTerminator();\n    }\n\n    tsTryParseGenericAsyncArrowFunction(\n      startPos: number,\n      startLoc: Position,\n    ): ?N.ArrowFunctionExpression {\n      if (!this.isRelational(\"<\")) {\n        return undefined;\n      }\n\n      const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n      this.state.maybeInArrowParameters = true;\n\n      const res: ?N.ArrowFunctionExpression = this.tsTryParseAndCatch(() => {\n        const node: N.ArrowFunctionExpression = this.startNodeAt(\n          startPos,\n          startLoc,\n        );\n        node.typeParameters = this.tsParseTypeParameters();\n        // Don't use overloaded parseFunctionParams which would look for \"<\" again.\n        super.parseFunctionParams(node);\n        node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n        this.expect(tt.arrow);\n        return node;\n      });\n\n      this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n      if (!res) {\n        return undefined;\n      }\n\n      return this.parseArrowExpression(\n        res,\n        /* params are already set */ null,\n        /* async */ true,\n      );\n    }\n\n    tsParseTypeArguments(): N.TsTypeParameterInstantiation {\n      const node = this.startNode();\n      node.params = this.tsInType(() =>\n        // Temporarily remove a JSX parsing context, which makes us scan different tokens.\n        this.tsInNoContext(() => {\n          this.expectRelational(\"<\");\n          return this.tsParseDelimitedList(\n            \"TypeParametersOrArguments\",\n            this.tsParseType.bind(this),\n          );\n        }),\n      );\n      if (node.params.length === 0) {\n        this.raise(node.start, TSErrors.EmptyTypeArguments);\n      }\n      // This reads the next token after the `>` too, so do this in the enclosing context.\n      // But be sure not to parse a regex in the jsx expression `<C<number> />`, so set exprAllowed = false\n      this.state.exprAllowed = false;\n      this.expectRelational(\">\");\n      return this.finishNode(node, \"TSTypeParameterInstantiation\");\n    }\n\n    tsIsDeclarationStart(): boolean {\n      if (this.match(tt.name)) {\n        switch (this.state.value) {\n          case \"abstract\":\n          case \"declare\":\n          case \"enum\":\n          case \"interface\":\n          case \"module\":\n          case \"namespace\":\n          case \"type\":\n            return true;\n        }\n      }\n\n      return false;\n    }\n\n    // ======================================================\n    // OVERRIDES\n    // ======================================================\n\n    isExportDefaultSpecifier(): boolean {\n      if (this.tsIsDeclarationStart()) return false;\n      return super.isExportDefaultSpecifier();\n    }\n\n    parseAssignableListItem(\n      allowModifiers: ?boolean,\n      decorators: N.Decorator[],\n    ): N.Pattern | N.TSParameterProperty {\n      // Store original location/position to include modifiers in range\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n\n      let accessibility: ?N.Accessibility;\n      let readonly = false;\n      if (allowModifiers !== undefined) {\n        accessibility = this.parseAccessModifier();\n        readonly = !!this.tsParseModifier([\"readonly\"]);\n        if (allowModifiers === false && (accessibility || readonly)) {\n          this.raise(startPos, TSErrors.UnexpectedParameterModifier);\n        }\n      }\n\n      const left = this.parseMaybeDefault();\n      this.parseAssignableListItemTypes(left);\n      const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n      if (accessibility || readonly) {\n        const pp: N.TSParameterProperty = this.startNodeAt(startPos, startLoc);\n        if (decorators.length) {\n          pp.decorators = decorators;\n        }\n        if (accessibility) pp.accessibility = accessibility;\n        if (readonly) pp.readonly = readonly;\n        if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n          this.raise(pp.start, TSErrors.UnsupportedParameterPropertyKind);\n        }\n        pp.parameter = ((elt: any): N.Identifier | N.AssignmentPattern);\n        return this.finishNode(pp, \"TSParameterProperty\");\n      }\n\n      if (decorators.length) {\n        left.decorators = decorators;\n      }\n\n      return elt;\n    }\n\n    parseFunctionBodyAndFinish(\n      node: N.BodilessFunctionOrMethodBase,\n      type: string,\n      isMethod?: boolean = false,\n    ): void {\n      if (this.match(tt.colon)) {\n        node.returnType = this.tsParseTypeOrTypePredicateAnnotation(tt.colon);\n      }\n\n      const bodilessType =\n        type === \"FunctionDeclaration\"\n          ? \"TSDeclareFunction\"\n          : type === \"ClassMethod\"\n          ? \"TSDeclareMethod\"\n          : undefined;\n      if (bodilessType && !this.match(tt.braceL) && this.isLineTerminator()) {\n        this.finishNode(node, bodilessType);\n        return;\n      }\n      if (bodilessType === \"TSDeclareFunction\" && this.state.isAmbientContext) {\n        this.raise(node.start, TSErrors.DeclareFunctionHasImplementation);\n        if (\n          // $FlowIgnore\n          node.declare\n        ) {\n          super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);\n          return;\n        }\n      }\n\n      super.parseFunctionBodyAndFinish(node, type, isMethod);\n    }\n\n    registerFunctionStatementId(node: N.Function): void {\n      if (!node.body && node.id) {\n        // Function ids are validated after parsing their body.\n        // For bodyless function, we need to do it here.\n        this.checkLVal(node.id, \"function name\", BIND_TS_AMBIENT);\n      } else {\n        super.registerFunctionStatementId(...arguments);\n      }\n    }\n\n    tsCheckForInvalidTypeCasts(items: $ReadOnlyArray<?N.Expression>) {\n      items.forEach(node => {\n        if (node?.type === \"TSTypeCastExpression\") {\n          this.raise(\n            node.typeAnnotation.start,\n            TSErrors.UnexpectedTypeAnnotation,\n          );\n        }\n      });\n    }\n\n    toReferencedList(\n      exprList: $ReadOnlyArray<?N.Expression>,\n      isInParens?: boolean, // eslint-disable-line no-unused-vars\n    ): $ReadOnlyArray<?N.Expression> {\n      // Handles invalid scenarios like: `f(a:b)`, `(a:b);`, and `(a:b,c:d)`.\n      //\n      // Note that `f<T>(a:b)` goes through a different path and is handled\n      // in `parseSubscript` directly.\n      this.tsCheckForInvalidTypeCasts(exprList);\n      return exprList;\n    }\n\n    parseArrayLike(...args): N.ArrayExpression | N.TupleExpression {\n      const node = super.parseArrayLike(...args);\n\n      if (node.type === \"ArrayExpression\") {\n        this.tsCheckForInvalidTypeCasts(node.elements);\n      }\n\n      return node;\n    }\n\n    parseSubscript(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls: ?boolean,\n      state: N.ParseSubscriptState,\n    ): N.Expression {\n      if (!this.hasPrecedingLineBreak() && this.match(tt.bang)) {\n        this.state.exprAllowed = false;\n        this.next();\n\n        const nonNullExpression: N.TsNonNullExpression = this.startNodeAt(\n          startPos,\n          startLoc,\n        );\n        nonNullExpression.expression = base;\n        return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n      }\n\n      if (this.isRelational(\"<\")) {\n        // tsTryParseAndCatch is expensive, so avoid if not necessary.\n        // There are number of things we are going to \"maybe\" parse, like type arguments on\n        // tagged template expressions. If any of them fail, walk it back and continue.\n        const result = this.tsTryParseAndCatch(() => {\n          if (!noCalls && this.atPossibleAsyncArrow(base)) {\n            // Almost certainly this is a generic async function `async <T>() => ...\n            // But it might be a call with a type argument `async<T>();`\n            const asyncArrowFn = this.tsTryParseGenericAsyncArrowFunction(\n              startPos,\n              startLoc,\n            );\n            if (asyncArrowFn) {\n              return asyncArrowFn;\n            }\n          }\n\n          const node: N.CallExpression = this.startNodeAt(startPos, startLoc);\n          node.callee = base;\n\n          const typeArguments = this.tsParseTypeArguments();\n\n          if (typeArguments) {\n            if (!noCalls && this.eat(tt.parenL)) {\n              // possibleAsync always false here, because we would have handled it above.\n              // $FlowIgnore (won't be any undefined arguments)\n              node.arguments = this.parseCallExpressionArguments(\n                tt.parenR,\n                /* possibleAsync */ false,\n              );\n\n              // Handles invalid case: `f<T>(a:b)`\n              this.tsCheckForInvalidTypeCasts(node.arguments);\n\n              node.typeParameters = typeArguments;\n              if (state.optionalChainMember) {\n                // $FlowIgnore\n                node.optional = false;\n              }\n              return this.finishCallExpression(node, state.optionalChainMember);\n            } else if (this.match(tt.backQuote)) {\n              const result = this.parseTaggedTemplateExpression(\n                base,\n                startPos,\n                startLoc,\n                state,\n              );\n              result.typeParameters = typeArguments;\n              return result;\n            }\n          }\n\n          this.unexpected();\n        });\n\n        if (result) return result;\n      }\n\n      return super.parseSubscript(base, startPos, startLoc, noCalls, state);\n    }\n\n    parseNewArguments(node: N.NewExpression): void {\n      if (this.isRelational(\"<\")) {\n        // tsTryParseAndCatch is expensive, so avoid if not necessary.\n        // 99% certain this is `new C<T>();`. But may be `new C < T;`, which is also legal.\n        const typeParameters = this.tsTryParseAndCatch(() => {\n          const args = this.tsParseTypeArguments();\n          if (!this.match(tt.parenL)) this.unexpected();\n          return args;\n        });\n        if (typeParameters) {\n          node.typeParameters = typeParameters;\n        }\n      }\n\n      super.parseNewArguments(node);\n    }\n\n    parseExprOp(\n      left: N.Expression,\n      leftStartPos: number,\n      leftStartLoc: Position,\n      minPrec: number,\n    ) {\n      if (\n        nonNull(tt._in.binop) > minPrec &&\n        !this.hasPrecedingLineBreak() &&\n        this.isContextual(\"as\")\n      ) {\n        const node: N.TsAsExpression = this.startNodeAt(\n          leftStartPos,\n          leftStartLoc,\n        );\n        node.expression = left;\n        const _const = this.tsTryNextParseConstantContext();\n        if (_const) {\n          node.typeAnnotation = _const;\n        } else {\n          node.typeAnnotation = this.tsNextThenParseType();\n        }\n        this.finishNode(node, \"TSAsExpression\");\n        // rescan `<`, `>` because they were scanned when this.state.inType was true\n        this.reScan_lt_gt();\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n      }\n\n      return super.parseExprOp(left, leftStartPos, leftStartLoc, minPrec);\n    }\n\n    checkReservedWord(\n      word: string, // eslint-disable-line no-unused-vars\n      startLoc: number, // eslint-disable-line no-unused-vars\n      checkKeywords: boolean, // eslint-disable-line no-unused-vars\n      // eslint-disable-next-line no-unused-vars\n      isBinding: boolean,\n    ): void {\n      // Don't bother checking for TypeScript code.\n      // Strict mode words may be allowed as in `declare namespace N { const static: number; }`.\n      // And we have a type checker anyway, so don't bother having the parser do it.\n    }\n\n    /*\n    Don't bother doing this check in TypeScript code because:\n    1. We may have a nested export statement with the same name:\n      export const x = 0;\n      export namespace N {\n        export const x = 1;\n      }\n    2. We have a type checker to warn us about this sort of thing.\n    */\n    checkDuplicateExports() {}\n\n    parseImport(node: N.Node): N.AnyImport {\n      node.importKind = \"value\";\n      if (this.match(tt.name) || this.match(tt.star) || this.match(tt.braceL)) {\n        let ahead = this.lookahead();\n\n        if (\n          this.isContextual(\"type\") &&\n          // import type, { a } from \"b\";\n          ahead.type !== tt.comma &&\n          // import type from \"a\";\n          !(ahead.type === tt.name && ahead.value === \"from\") &&\n          // import type = require(\"a\");\n          ahead.type !== tt.eq\n        ) {\n          node.importKind = \"type\";\n          this.next();\n          ahead = this.lookahead();\n        }\n\n        if (this.match(tt.name) && ahead.type === tt.eq) {\n          return this.tsParseImportEqualsDeclaration(node);\n        }\n      }\n\n      const importNode = super.parseImport(node);\n      /*:: invariant(importNode.type !== \"TSImportEqualsDeclaration\") */\n\n      // `import type` can only be used on imports with named imports or with a\n      // default import - but not both\n      if (\n        importNode.importKind === \"type\" &&\n        importNode.specifiers.length > 1 &&\n        importNode.specifiers[0].type === \"ImportDefaultSpecifier\"\n      ) {\n        this.raise(\n          importNode.start,\n          TSErrors.TypeImportCannotSpecifyDefaultAndNamed,\n        );\n      }\n\n      return importNode;\n    }\n\n    parseExport(node: N.Node): N.AnyExport {\n      if (this.match(tt._import)) {\n        // `export import A = B;`\n        this.next(); // eat `tt._import`\n        if (\n          this.isContextual(\"type\") &&\n          this.lookaheadCharCode() !== charCodes.equalsTo\n        ) {\n          node.importKind = \"type\";\n          this.next(); // eat \"type\"\n        } else {\n          node.importKind = \"value\";\n        }\n        return this.tsParseImportEqualsDeclaration(node, /* isExport */ true);\n      } else if (this.eat(tt.eq)) {\n        // `export = x;`\n        const assign: N.TsExportAssignment = node;\n        assign.expression = this.parseExpression();\n        this.semicolon();\n        return this.finishNode(assign, \"TSExportAssignment\");\n      } else if (this.eatContextual(\"as\")) {\n        // `export as namespace A;`\n        const decl: N.TsNamespaceExportDeclaration = node;\n        // See `parseNamespaceExportDeclaration` in TypeScript's own parser\n        this.expectContextual(\"namespace\");\n        decl.id = this.parseIdentifier();\n        this.semicolon();\n        return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n      } else {\n        if (this.isContextual(\"type\") && this.lookahead().type === tt.braceL) {\n          this.next();\n          node.exportKind = \"type\";\n        } else {\n          node.exportKind = \"value\";\n        }\n\n        return super.parseExport(node);\n      }\n    }\n\n    isAbstractClass(): boolean {\n      return (\n        this.isContextual(\"abstract\") && this.lookahead().type === tt._class\n      );\n    }\n\n    parseExportDefaultExpression(): N.Expression | N.Declaration {\n      if (this.isAbstractClass()) {\n        const cls = this.startNode();\n        this.next(); // Skip \"abstract\"\n        cls.abstract = true;\n        this.parseClass(cls, true, true);\n        return cls;\n      }\n\n      // export default interface allowed in:\n      // https://github.com/Microsoft/TypeScript/pull/16040\n      if (this.state.value === \"interface\") {\n        const result = this.tsParseDeclaration(\n          this.startNode(),\n          this.state.value,\n          true,\n        );\n\n        if (result) return result;\n      }\n\n      return super.parseExportDefaultExpression();\n    }\n\n    parseStatementContent(context: ?string, topLevel: ?boolean): N.Statement {\n      if (this.state.type === tt._const) {\n        const ahead = this.lookahead();\n        if (ahead.type === tt.name && ahead.value === \"enum\") {\n          const node: N.TsEnumDeclaration = this.startNode();\n          this.expect(tt._const);\n          this.expectContextual(\"enum\");\n          return this.tsParseEnumDeclaration(node, /* isConst */ true);\n        }\n      }\n      return super.parseStatementContent(context, topLevel);\n    }\n\n    parseAccessModifier(): ?N.Accessibility {\n      return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n    }\n\n    tsHasSomeModifiers(member: any, modifiers: TsModifier[]): boolean {\n      return modifiers.some(modifier => {\n        if (tsIsAccessModifier(modifier)) {\n          return member.accessibility === modifier;\n        }\n        return !!member[modifier];\n      });\n    }\n\n    parseClassMember(\n      classBody: N.ClassBody,\n      member: any,\n      state: N.ParseClassMemberState,\n    ): void {\n      const invalidModifersForStaticBlocks = [\n        \"declare\",\n        \"private\",\n        \"public\",\n        \"protected\",\n        \"override\",\n        \"abstract\",\n        \"readonly\",\n      ];\n      this.tsParseModifiers(\n        member,\n        invalidModifersForStaticBlocks.concat([\"static\"]),\n      );\n\n      const callParseClassMemberWithIsStatic = () => {\n        const isStatic = !!member.static;\n        if (isStatic && this.eat(tt.braceL)) {\n          if (this.tsHasSomeModifiers(member, invalidModifersForStaticBlocks)) {\n            this.raise(this.state.pos, TSErrors.StaticBlockCannotHaveModifier);\n          }\n          this.parseClassStaticBlock(classBody, ((member: any): N.StaticBlock));\n        } else {\n          this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n        }\n      };\n      if (member.declare) {\n        this.tsInAmbientContext(callParseClassMemberWithIsStatic);\n      } else {\n        callParseClassMemberWithIsStatic();\n      }\n    }\n\n    parseClassMemberWithIsStatic(\n      classBody: N.ClassBody,\n      member: N.ClassMember | N.TsIndexSignature,\n      state: N.ParseClassMemberState,\n      isStatic: boolean,\n    ): void {\n      const idx = this.tsTryParseIndexSignature(member);\n      if (idx) {\n        classBody.body.push(idx);\n\n        if ((member: any).abstract) {\n          this.raise(member.start, TSErrors.IndexSignatureHasAbstract);\n        }\n        if ((member: any).accessibility) {\n          this.raise(\n            member.start,\n            TSErrors.IndexSignatureHasAccessibility,\n            (member: any).accessibility,\n          );\n        }\n        if ((member: any).declare) {\n          this.raise(member.start, TSErrors.IndexSignatureHasDeclare);\n        }\n        if ((member: any).override) {\n          this.raise(member.start, TSErrors.IndexSignatureHasOverride);\n        }\n\n        return;\n      }\n\n      if (!this.state.inAbstractClass && (member: any).abstract) {\n        this.raise(member.start, TSErrors.NonAbstractClassHasAbstractMethod);\n      }\n\n      if ((member: any).override) {\n        if (!state.hadSuperClass) {\n          this.raise(member.start, TSErrors.OverrideNotInSubClass);\n        }\n      }\n\n      /*:: invariant(member.type !== \"TSIndexSignature\") */\n\n      super.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n    }\n\n    parsePostMemberNameModifiers(\n      methodOrProp: N.ClassMethod | N.ClassProperty | N.ClassPrivateProperty,\n    ): void {\n      const optional = this.eat(tt.question);\n      if (optional) methodOrProp.optional = true;\n\n      if ((methodOrProp: any).readonly && this.match(tt.parenL)) {\n        this.raise(methodOrProp.start, TSErrors.ClassMethodHasReadonly);\n      }\n\n      if ((methodOrProp: any).declare && this.match(tt.parenL)) {\n        this.raise(methodOrProp.start, TSErrors.ClassMethodHasDeclare);\n      }\n    }\n\n    // Note: The reason we do this in `parseExpressionStatement` and not `parseStatement`\n    // is that e.g. `type()` is valid JS, so we must try parsing that first.\n    // If it's really a type, we will parse `type` as the statement, and can correct it here\n    // by parsing the rest.\n    parseExpressionStatement(\n      node: N.ExpressionStatement,\n      expr: N.Expression,\n    ): N.Statement {\n      const decl =\n        expr.type === \"Identifier\"\n          ? this.tsParseExpressionStatement(node, expr)\n          : undefined;\n      return decl || super.parseExpressionStatement(node, expr);\n    }\n\n    // export type\n    // Should be true for anything parsed by `tsTryParseExportDeclaration`.\n    shouldParseExportDeclaration(): boolean {\n      if (this.tsIsDeclarationStart()) return true;\n      return super.shouldParseExportDeclaration();\n    }\n\n    // An apparent conditional expression could actually be an optional parameter in an arrow function.\n    parseConditional(\n      expr: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      refNeedsArrowPos?: ?Pos,\n    ): N.Expression {\n      // only do the expensive clone if there is a question mark\n      // and if we come from inside parens\n      if (!refNeedsArrowPos || !this.match(tt.question)) {\n        return super.parseConditional(\n          expr,\n          startPos,\n          startLoc,\n          refNeedsArrowPos,\n        );\n      }\n\n      const result = this.tryParse(() =>\n        super.parseConditional(expr, startPos, startLoc),\n      );\n\n      if (!result.node) {\n        // $FlowIgnore\n        refNeedsArrowPos.start = result.error.pos || this.state.start;\n        return expr;\n      }\n      if (result.error) this.state = result.failState;\n      return result.node;\n    }\n\n    // Note: These \"type casts\" are *not* valid TS expressions.\n    // But we parse them here and change them when completing the arrow function.\n    parseParenItem(\n      node: N.Expression,\n      startPos: number,\n      startLoc: Position,\n    ): N.Expression {\n      node = super.parseParenItem(node, startPos, startLoc);\n      if (this.eat(tt.question)) {\n        node.optional = true;\n        // Include questionmark in location of node\n        // Don't use this.finishNode() as otherwise we might process comments twice and\n        // include already consumed parens\n        this.resetEndLocation(node);\n      }\n\n      if (this.match(tt.colon)) {\n        const typeCastNode: N.TsTypeCastExpression = this.startNodeAt(\n          startPos,\n          startLoc,\n        );\n        typeCastNode.expression = node;\n        typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n\n        return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n      }\n\n      return node;\n    }\n\n    parseExportDeclaration(node: N.ExportNamedDeclaration): ?N.Declaration {\n      // Store original location/position\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n\n      // \"export declare\" is equivalent to just \"export\".\n      const isDeclare = this.eatContextual(\"declare\");\n\n      if (\n        isDeclare &&\n        (this.isContextual(\"declare\") || !this.shouldParseExportDeclaration())\n      ) {\n        throw this.raise(\n          this.state.start,\n          TSErrors.ExpectedAmbientAfterExportDeclare,\n        );\n      }\n\n      let declaration: ?N.Declaration;\n\n      if (this.match(tt.name)) {\n        declaration = this.tsTryParseExportDeclaration();\n      }\n      if (!declaration) {\n        declaration = super.parseExportDeclaration(node);\n      }\n      if (\n        declaration &&\n        (declaration.type === \"TSInterfaceDeclaration\" ||\n          declaration.type === \"TSTypeAliasDeclaration\" ||\n          isDeclare)\n      ) {\n        node.exportKind = \"type\";\n      }\n\n      if (declaration && isDeclare) {\n        // Reset location to include `declare` in range\n        this.resetStartLocation(declaration, startPos, startLoc);\n\n        declaration.declare = true;\n      }\n\n      return declaration;\n    }\n\n    parseClassId(\n      node: N.Class,\n      isStatement: boolean,\n      optionalId: ?boolean,\n    ): void {\n      if ((!isStatement || optionalId) && this.isContextual(\"implements\")) {\n        return;\n      }\n\n      super.parseClassId(\n        node,\n        isStatement,\n        optionalId,\n        (node: any).declare ? BIND_TS_AMBIENT : BIND_CLASS,\n      );\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) node.typeParameters = typeParameters;\n    }\n\n    parseClassPropertyAnnotation(\n      node: N.ClassProperty | N.ClassPrivateProperty,\n    ): void {\n      if (!node.optional && this.eat(tt.bang)) {\n        node.definite = true;\n      }\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) node.typeAnnotation = type;\n    }\n\n    parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n      this.parseClassPropertyAnnotation(node);\n\n      if (this.state.isAmbientContext && this.match(tt.eq)) {\n        this.raise(this.state.start, TSErrors.DeclareClassFieldHasInitializer);\n      }\n\n      return super.parseClassProperty(node);\n    }\n\n    parseClassPrivateProperty(\n      node: N.ClassPrivateProperty,\n    ): N.ClassPrivateProperty {\n      // $FlowIgnore\n      if (node.abstract) {\n        this.raise(node.start, TSErrors.PrivateElementHasAbstract);\n      }\n\n      // $FlowIgnore\n      if (node.accessibility) {\n        this.raise(\n          node.start,\n          TSErrors.PrivateElementHasAccessibility,\n          node.accessibility,\n        );\n      }\n\n      this.parseClassPropertyAnnotation(node);\n      return super.parseClassPrivateProperty(node);\n    }\n\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters && isConstructor) {\n        this.raise(typeParameters.start, TSErrors.ConstructorHasTypeParameters);\n      }\n\n      // $FlowIgnore\n      if (method.declare && (method.kind === \"get\" || method.kind === \"set\")) {\n        this.raise(method.start, TSErrors.DeclareAccessor, method.kind);\n      }\n      if (typeParameters) method.typeParameters = typeParameters;\n      super.pushClassMethod(\n        classBody,\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n      );\n    }\n\n    pushClassPrivateMethod(\n      classBody: N.ClassBody,\n      method: N.ClassPrivateMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n    ): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) method.typeParameters = typeParameters;\n      super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n    }\n\n    parseClassSuper(node: N.Class): void {\n      super.parseClassSuper(node);\n      if (node.superClass && this.isRelational(\"<\")) {\n        node.superTypeParameters = this.tsParseTypeArguments();\n      }\n      if (this.eatContextual(\"implements\")) {\n        node.implements = this.tsParseHeritageClause(\"implements\");\n      }\n    }\n\n    parseObjPropValue(prop: N.ObjectMember, ...args): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) prop.typeParameters = typeParameters;\n\n      super.parseObjPropValue(prop, ...args);\n    }\n\n    parseFunctionParams(node: N.Function, allowModifiers?: boolean): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) node.typeParameters = typeParameters;\n      super.parseFunctionParams(node, allowModifiers);\n    }\n\n    // `let x: number;`\n    parseVarId(\n      decl: N.VariableDeclarator,\n      kind: \"var\" | \"let\" | \"const\",\n    ): void {\n      super.parseVarId(decl, kind);\n      if (decl.id.type === \"Identifier\" && this.eat(tt.bang)) {\n        decl.definite = true;\n      }\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) {\n        decl.id.typeAnnotation = type;\n        this.resetEndLocation(decl.id); // set end position to end of type\n      }\n    }\n\n    // parse the return type of an async arrow function - let foo = (async (): number => {});\n    parseAsyncArrowFromCallExpression(\n      node: N.ArrowFunctionExpression,\n      call: N.CallExpression,\n    ): N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        node.returnType = this.tsParseTypeAnnotation();\n      }\n      return super.parseAsyncArrowFromCallExpression(node, call);\n    }\n\n    parseMaybeAssign(...args): N.Expression {\n      // Note: When the JSX plugin is on, type assertions (`<T> x`) aren't valid syntax.\n\n      let state: ?State;\n      let jsx;\n      let typeCast;\n\n      if (\n        this.hasPlugin(\"jsx\") &&\n        (this.match(tt.jsxTagStart) || this.isRelational(\"<\"))\n      ) {\n        // Prefer to parse JSX if possible. But may be an arrow fn.\n        state = this.state.clone();\n\n        jsx = this.tryParse(() => super.parseMaybeAssign(...args), state);\n        /*:: invariant(!jsx.aborted) */\n\n        if (!jsx.error) return jsx.node;\n\n        // Remove `tc.j_expr` and `tc.j_oTag` from context added\n        // by parsing `jsxTagStart` to stop the JSX plugin from\n        // messing with the tokens\n        const { context } = this.state;\n        if (context[context.length - 1] === ct.j_oTag) {\n          context.length -= 2;\n        } else if (context[context.length - 1] === ct.j_expr) {\n          context.length -= 1;\n        }\n      }\n\n      if (!jsx?.error && !this.isRelational(\"<\")) {\n        return super.parseMaybeAssign(...args);\n      }\n\n      // Either way, we're looking at a '<': tt.jsxTagStart or relational.\n\n      let typeParameters: N.TsTypeParameterDeclaration;\n      state = state || this.state.clone();\n\n      const arrow = this.tryParse(abort => {\n        // This is similar to TypeScript's `tryParseParenthesizedArrowFunctionExpression`.\n        typeParameters = this.tsParseTypeParameters();\n        const expr = super.parseMaybeAssign(...args);\n\n        if (\n          expr.type !== \"ArrowFunctionExpression\" ||\n          expr.extra?.parenthesized\n        ) {\n          abort();\n        }\n\n        // Correct TypeScript code should have at least 1 type parameter, but don't crash on bad code.\n        if (typeParameters?.params.length !== 0) {\n          this.resetStartLocationFromNode(expr, typeParameters);\n        }\n        expr.typeParameters = typeParameters;\n        return expr;\n      }, state);\n\n      if (!arrow.error && !arrow.aborted) return arrow.node;\n\n      if (!jsx) {\n        // Try parsing a type cast instead of an arrow function.\n        // This will never happen outside of JSX.\n        // (Because in JSX the '<' should be a jsxTagStart and not a relational.\n        assert(!this.hasPlugin(\"jsx\"));\n\n        // This will start with a type assertion (via parseMaybeUnary).\n        // But don't directly call `this.tsParseTypeAssertion` because we want to handle any binary after it.\n        typeCast = this.tryParse(() => super.parseMaybeAssign(...args), state);\n        /*:: invariant(!typeCast.aborted) */\n        if (!typeCast.error) return typeCast.node;\n      }\n\n      if (jsx?.node) {\n        /*:: invariant(jsx.failState) */\n        this.state = jsx.failState;\n        return jsx.node;\n      }\n\n      if (arrow.node) {\n        /*:: invariant(arrow.failState) */\n        this.state = arrow.failState;\n        return arrow.node;\n      }\n\n      if (typeCast?.node) {\n        /*:: invariant(typeCast.failState) */\n        this.state = typeCast.failState;\n        return typeCast.node;\n      }\n\n      if (jsx?.thrown) throw jsx.error;\n      if (arrow.thrown) throw arrow.error;\n      if (typeCast?.thrown) throw typeCast.error;\n\n      throw jsx?.error || arrow.error || typeCast?.error;\n    }\n\n    // Handle type assertions\n    parseMaybeUnary(refExpressionErrors?: ?ExpressionErrors): N.Expression {\n      if (!this.hasPlugin(\"jsx\") && this.isRelational(\"<\")) {\n        return this.tsParseTypeAssertion();\n      } else {\n        return super.parseMaybeUnary(refExpressionErrors);\n      }\n    }\n\n    parseArrow(node: N.ArrowFunctionExpression): ?N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        // This is different from how the TS parser does it.\n        // TS uses lookahead. The Babel Parser parses it as a parenthesized expression and converts.\n\n        const result = this.tryParse(abort => {\n          const returnType = this.tsParseTypeOrTypePredicateAnnotation(\n            tt.colon,\n          );\n          if (this.canInsertSemicolon() || !this.match(tt.arrow)) abort();\n          return returnType;\n        });\n\n        if (result.aborted) return;\n\n        if (!result.thrown) {\n          if (result.error) this.state = result.failState;\n          node.returnType = result.node;\n        }\n      }\n\n      return super.parseArrow(node);\n    }\n\n    // Allow type annotations inside of a parameter list.\n    parseAssignableListItemTypes(param: N.Pattern) {\n      if (this.eat(tt.question)) {\n        if (\n          param.type !== \"Identifier\" &&\n          !this.state.isAmbientContext &&\n          !this.state.inType\n        ) {\n          this.raise(param.start, TSErrors.PatternIsOptional);\n        }\n\n        ((param: any): N.Identifier).optional = true;\n      }\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) param.typeAnnotation = type;\n      this.resetEndLocation(param);\n\n      return param;\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean = false): N.Node {\n      switch (node.type) {\n        case \"TSTypeCastExpression\":\n          return super.toAssignable(this.typeCastToParameter(node), isLHS);\n        case \"TSParameterProperty\":\n          return super.toAssignable(node, isLHS);\n        case \"ParenthesizedExpression\":\n          return this.toAssignableParenthesizedExpression(node, isLHS);\n        case \"TSAsExpression\":\n        case \"TSNonNullExpression\":\n        case \"TSTypeAssertion\":\n          node.expression = this.toAssignable(node.expression, isLHS);\n          return node;\n        default:\n          return super.toAssignable(node, isLHS);\n      }\n    }\n\n    toAssignableParenthesizedExpression(node: N.Node, isLHS: boolean) {\n      switch (node.expression.type) {\n        case \"TSAsExpression\":\n        case \"TSNonNullExpression\":\n        case \"TSTypeAssertion\":\n        case \"ParenthesizedExpression\":\n          node.expression = this.toAssignable(node.expression, isLHS);\n          return node;\n        default:\n          return super.toAssignable(node, isLHS);\n      }\n    }\n\n    checkLVal(\n      expr: N.Expression,\n      contextDescription: string,\n      ...args:\n        | [BindingTypes | void]\n        | [BindingTypes | void, ?Set<string>, boolean | void, boolean | void]\n    ): void {\n      switch (expr.type) {\n        case \"TSTypeCastExpression\":\n          // Allow \"typecasts\" to appear on the left of assignment expressions,\n          // because it may be in an arrow function.\n          // e.g. `const f = (foo: number = 0) => foo;`\n          return;\n        case \"TSParameterProperty\":\n          this.checkLVal(expr.parameter, \"parameter property\", ...args);\n          return;\n        case \"TSAsExpression\":\n        case \"TSTypeAssertion\":\n          if (\n            /*bindingType*/ !args[0] &&\n            contextDescription !== \"parenthesized expression\" &&\n            !expr.extra?.parenthesized\n          ) {\n            this.raise(expr.start, Errors.InvalidLhs, contextDescription);\n            break;\n          }\n          this.checkLVal(expr.expression, \"parenthesized expression\", ...args);\n          return;\n        case \"TSNonNullExpression\":\n          this.checkLVal(expr.expression, contextDescription, ...args);\n          return;\n        default:\n          super.checkLVal(expr, contextDescription, ...args);\n          return;\n      }\n    }\n\n    parseBindingAtom(): N.Pattern {\n      switch (this.state.type) {\n        case tt._this:\n          // \"this\" may be the name of a parameter, so allow it.\n          return this.parseIdentifier(/* liberal */ true);\n        default:\n          return super.parseBindingAtom();\n      }\n    }\n\n    parseMaybeDecoratorArguments(expr: N.Expression): N.Expression {\n      if (this.isRelational(\"<\")) {\n        const typeArguments = this.tsParseTypeArguments();\n\n        if (this.match(tt.parenL)) {\n          const call = super.parseMaybeDecoratorArguments(expr);\n          call.typeParameters = typeArguments;\n          return call;\n        }\n\n        this.unexpected(this.state.start, tt.parenL);\n      }\n\n      return super.parseMaybeDecoratorArguments(expr);\n    }\n\n    checkCommaAfterRest(close) {\n      if (\n        this.state.isAmbientContext &&\n        this.match(tt.comma) &&\n        this.lookaheadCharCode() === close\n      ) {\n        this.next();\n      } else {\n        super.checkCommaAfterRest(close);\n      }\n    }\n\n    // === === === === === === === === === === === === === === === ===\n    // Note: All below methods are duplicates of something in flow.js.\n    // Not sure what the best way to combine these is.\n    // === === === === === === === === === === === === === === === ===\n\n    isClassMethod(): boolean {\n      return this.isRelational(\"<\") || super.isClassMethod();\n    }\n\n    isClassProperty(): boolean {\n      return (\n        this.match(tt.bang) || this.match(tt.colon) || super.isClassProperty()\n      );\n    }\n\n    parseMaybeDefault(...args): N.Pattern {\n      const node = super.parseMaybeDefault(...args);\n\n      if (\n        node.type === \"AssignmentPattern\" &&\n        node.typeAnnotation &&\n        node.right.start < node.typeAnnotation.start\n      ) {\n        this.raise(\n          node.typeAnnotation.start,\n          TSErrors.TypeAnnotationAfterAssign,\n        );\n      }\n\n      return node;\n    }\n\n    // ensure that inside types, we bypass the jsx parser plugin\n    getTokenFromCode(code: number): void {\n      if (\n        this.state.inType &&\n        (code === charCodes.greaterThan || code === charCodes.lessThan)\n      ) {\n        return this.finishOp(tt.relational, 1);\n      } else {\n        return super.getTokenFromCode(code);\n      }\n    }\n\n    // used after we have finished parsing types\n    reScan_lt_gt() {\n      if (this.match(tt.relational)) {\n        const code = this.input.charCodeAt(this.state.start);\n        if (code === charCodes.lessThan || code === charCodes.greaterThan) {\n          this.state.pos -= 1;\n          this.readToken_lt_gt(code);\n        }\n      }\n    }\n\n    toAssignableList(exprList: N.Expression[]): $ReadOnlyArray<N.Pattern> {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (!expr) continue;\n        switch (expr.type) {\n          case \"TSTypeCastExpression\":\n            exprList[i] = this.typeCastToParameter(expr);\n            break;\n          case \"TSAsExpression\":\n          case \"TSTypeAssertion\":\n            if (!this.state.maybeInArrowParameters) {\n              exprList[i] = this.typeCastToParameter(expr);\n            } else {\n              this.raise(expr.start, TSErrors.UnexpectedTypeCastInParameter);\n            }\n            break;\n        }\n      }\n      return super.toAssignableList(...arguments);\n    }\n\n    typeCastToParameter(node: N.TsTypeCastExpression): N.Node {\n      node.expression.typeAnnotation = node.typeAnnotation;\n\n      this.resetEndLocation(\n        node.expression,\n        node.typeAnnotation.end,\n        node.typeAnnotation.loc.end,\n      );\n\n      return node.expression;\n    }\n\n    shouldParseArrow() {\n      return this.match(tt.colon) || super.shouldParseArrow();\n    }\n\n    shouldParseAsyncArrow(): boolean {\n      return this.match(tt.colon) || super.shouldParseAsyncArrow();\n    }\n\n    canHaveLeadingDecorator() {\n      // Avoid unnecessary lookahead in checking for abstract class unless needed!\n      return super.canHaveLeadingDecorator() || this.isAbstractClass();\n    }\n\n    jsxParseOpeningElementAfterName(\n      node: N.JSXOpeningElement,\n    ): N.JSXOpeningElement {\n      if (this.isRelational(\"<\")) {\n        const typeArguments = this.tsTryParseAndCatch(() =>\n          this.tsParseTypeArguments(),\n        );\n        if (typeArguments) node.typeParameters = typeArguments;\n      }\n      return super.jsxParseOpeningElementAfterName(node);\n    }\n\n    getGetterSetterExpectedParamCount(\n      method: N.ObjectMethod | N.ClassMethod,\n    ): number {\n      const baseCount = super.getGetterSetterExpectedParamCount(method);\n      const params = this.getObjectOrClassMethodParams(method);\n      const firstParam = params[0];\n      const hasContextParam = firstParam && this.isThisParam(firstParam);\n\n      return hasContextParam ? baseCount + 1 : baseCount;\n    }\n\n    parseCatchClauseParam(): N.Pattern {\n      const param = super.parseCatchClauseParam();\n      const type = this.tsTryParseTypeAnnotation();\n\n      if (type) {\n        param.typeAnnotation = type;\n        this.resetEndLocation(param);\n      }\n\n      return param;\n    }\n\n    tsInAmbientContext<T>(cb: () => T): T {\n      const oldIsAmbientContext = this.state.isAmbientContext;\n      this.state.isAmbientContext = true;\n      try {\n        return cb();\n      } finally {\n        this.state.isAmbientContext = oldIsAmbientContext;\n      }\n    }\n\n    parseClass<T: N.Class>(node: T, ...args: any[]): T {\n      const oldInAbstractClass = this.state.inAbstractClass;\n      this.state.inAbstractClass = !!(node: any).abstract;\n      try {\n        return super.parseClass(node, ...args);\n      } finally {\n        this.state.inAbstractClass = oldInAbstractClass;\n      }\n    }\n\n    tsParseAbstractDeclaration(\n      node: any,\n    ): N.ClassDeclaration | N.TsInterfaceDeclaration | typeof undefined {\n      if (this.match(tt._class)) {\n        node.abstract = true;\n        return this.parseClass<N.ClassDeclaration>(\n          (node: N.ClassDeclaration),\n          /* isStatement */ true,\n          /* optionalId */ false,\n        );\n      } else if (this.isContextual(\"interface\")) {\n        // for invalid abstract interface\n\n        // To avoid\n        //   abstract interface\n        //   Foo {}\n        if (!this.hasFollowingLineBreak()) {\n          node.abstract = true;\n          this.raise(\n            node.start,\n            TSErrors.NonClassMethodPropertyHasAbstractModifer,\n          );\n          this.next();\n          return this.tsParseInterfaceDeclaration(\n            (node: N.TsInterfaceDeclaration),\n          );\n        }\n      } else {\n        this.unexpected(null, tt._class);\n      }\n    }\n\n    parseMethod(...args: any[]) {\n      const method = super.parseMethod(...args);\n      if (method.abstract) {\n        const hasBody = this.hasPlugin(\"estree\")\n          ? !!method.value.body\n          : !!method.body;\n        if (hasBody) {\n          const { key } = method;\n          this.raise(\n            method.start,\n            TSErrors.AbstractMethodHasImplementation,\n            key.type === \"Identifier\"\n              ? key.name\n              : `[${this.input.slice(key.start, key.end)}]`,\n          );\n        }\n      }\n      return method;\n    }\n\n    shouldParseAsAmbientContext(): boolean {\n      return !!this.getPluginOption(\"typescript\", \"dts\");\n    }\n\n    parse() {\n      if (this.shouldParseAsAmbientContext()) {\n        this.state.isAmbientContext = true;\n      }\n      return super.parse();\n    }\n\n    getExpression() {\n      if (this.shouldParseAsAmbientContext()) {\n        this.state.isAmbientContext = true;\n      }\n      return super.getExpression();\n    }\n  };\n","// @flow\n\nimport * as charCodes from \"charcodes\";\n\nimport { types as tt, TokenType } from \"../tokenizer/types\";\nimport type Parser from \"../parser\";\nimport * as N from \"../types\";\nimport { makeErrorTemplates, ErrorCodes } from \"../parser/error\";\n\ntt.placeholder = new TokenType(\"%%\", { startsExpr: true });\n\nexport type PlaceholderTypes =\n  | \"Identifier\"\n  | \"StringLiteral\"\n  | \"Expression\"\n  | \"Statement\"\n  | \"Declaration\"\n  | \"BlockStatement\"\n  | \"ClassBody\"\n  | \"Pattern\";\n\n// $PropertyType doesn't support enums. Use a fake \"switch\" (GetPlaceholderNode)\n//type MaybePlaceholder<T: PlaceholderTypes> = $PropertyType<N, T> | N.Placeholder<T>;\n\ntype _Switch<Value, Cases, Index> = $Call<\n  (\n    $ElementType<$ElementType<Cases, Index>, 0>,\n  ) => $ElementType<$ElementType<Cases, Index>, 1>,\n  Value,\n>;\ntype $Switch<Value, Cases> = _Switch<Value, Cases, *>;\n\ntype NodeOf<T: PlaceholderTypes> = $Switch<\n  T,\n  [\n    [\"Identifier\", N.Identifier],\n    [\"StringLiteral\", N.StringLiteral],\n    [\"Expression\", N.Expression],\n    [\"Statement\", N.Statement],\n    [\"Declaration\", N.Declaration],\n    [\"BlockStatement\", N.BlockStatement],\n    [\"ClassBody\", N.ClassBody],\n    [\"Pattern\", N.Pattern],\n  ],\n>;\n\n// Placeholder<T> breaks everything, because its type is incompatible with\n// the substituted nodes.\ntype MaybePlaceholder<T: PlaceholderTypes> = NodeOf<T>; // | Placeholder<T>\n\nconst PlaceHolderErrors = makeErrorTemplates(\n  {\n    ClassNameIsRequired: \"A class name is required.\",\n  },\n  /* code */ ErrorCodes.SyntaxError,\n);\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    parsePlaceholder<T: PlaceholderTypes>(\n      expectedNode: T,\n    ): /*?N.Placeholder<T>*/ ?MaybePlaceholder<T> {\n      if (this.match(tt.placeholder)) {\n        const node = this.startNode();\n        this.next();\n        this.assertNoSpace(\"Unexpected space in placeholder.\");\n\n        // We can't use this.parseIdentifier because\n        // we don't want nested placeholders.\n        node.name = super.parseIdentifier(/* liberal */ true);\n\n        this.assertNoSpace(\"Unexpected space in placeholder.\");\n        this.expect(tt.placeholder);\n        return this.finishPlaceholder(node, expectedNode);\n      }\n    }\n\n    finishPlaceholder<T: PlaceholderTypes>(\n      node: N.Node,\n      expectedNode: T,\n    ): /*N.Placeholder<T>*/ MaybePlaceholder<T> {\n      const isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n      node.expectedNode = expectedNode;\n\n      return isFinished ? node : this.finishNode(node, \"Placeholder\");\n    }\n\n    /* ============================================================ *\n     * tokenizer/index.js                                           *\n     * ============================================================ */\n\n    getTokenFromCode(code: number) {\n      if (\n        code === charCodes.percentSign &&\n        this.input.charCodeAt(this.state.pos + 1) === charCodes.percentSign\n      ) {\n        return this.finishOp(tt.placeholder, 2);\n      }\n\n      return super.getTokenFromCode(...arguments);\n    }\n\n    /* ============================================================ *\n     * parser/expression.js                                         *\n     * ============================================================ */\n\n    parseExprAtom(): MaybePlaceholder<\"Expression\"> {\n      return (\n        this.parsePlaceholder(\"Expression\") || super.parseExprAtom(...arguments)\n      );\n    }\n\n    parseIdentifier(): MaybePlaceholder<\"Identifier\"> {\n      // NOTE: This function only handles identifiers outside of\n      // expressions and binding patterns, since they are already\n      // handled by the parseExprAtom and parseBindingAtom functions.\n      // This is needed, for example, to parse \"class %%NAME%% {}\".\n      return (\n        this.parsePlaceholder(\"Identifier\") ||\n        super.parseIdentifier(...arguments)\n      );\n    }\n\n    checkReservedWord(word: string): void {\n      // Sometimes we call #checkReservedWord(node.name), expecting\n      // that node is an Identifier. If it is a Placeholder, name\n      // will be undefined.\n      if (word !== undefined) super.checkReservedWord(...arguments);\n    }\n\n    /* ============================================================ *\n     * parser/lval.js                                               *\n     * ============================================================ */\n\n    parseBindingAtom(): MaybePlaceholder<\"Pattern\"> {\n      return (\n        this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom(...arguments)\n      );\n    }\n\n    checkLVal(expr: N.Expression): void {\n      if (expr.type !== \"Placeholder\") super.checkLVal(...arguments);\n    }\n\n    toAssignable(node: N.Node): N.Node {\n      if (\n        node &&\n        node.type === \"Placeholder\" &&\n        node.expectedNode === \"Expression\"\n      ) {\n        node.expectedNode = \"Pattern\";\n        return node;\n      }\n      return super.toAssignable(...arguments);\n    }\n\n    /* ============================================================ *\n     * parser/statement.js                                          *\n     * ============================================================ */\n\n    isLet(context: ?string): boolean {\n      if (super.isLet(context)) {\n        return true;\n      }\n\n      // Replicate the original checks that lead to looking ahead for an\n      // identifier.\n      if (!this.isContextual(\"let\")) {\n        return false;\n      }\n      if (context) return false;\n\n      // Accept \"let %%\" as the start of \"let %%placeholder%%\", as though the\n      // placeholder were an identifier.\n      const nextToken = this.lookahead();\n      if (nextToken.type === tt.placeholder) {\n        return true;\n      }\n\n      return false;\n    }\n\n    verifyBreakContinue(node: N.BreakStatement | N.ContinueStatement) {\n      if (node.label && node.label.type === \"Placeholder\") return;\n      super.verifyBreakContinue(...arguments);\n    }\n\n    parseExpressionStatement(\n      node: MaybePlaceholder<\"Statement\">,\n      expr: N.Expression,\n    ): MaybePlaceholder<\"Statement\"> {\n      if (\n        expr.type !== \"Placeholder\" ||\n        (expr.extra && expr.extra.parenthesized)\n      ) {\n        return super.parseExpressionStatement(...arguments);\n      }\n\n      if (this.match(tt.colon)) {\n        const stmt: N.LabeledStatement = node;\n        stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n        this.next();\n        stmt.body = this.parseStatement(\"label\");\n        return this.finishNode(stmt, \"LabeledStatement\");\n      }\n\n      this.semicolon();\n\n      node.name = expr.name;\n      return this.finishPlaceholder(node, \"Statement\");\n    }\n\n    parseBlock(): MaybePlaceholder<\"BlockStatement\"> {\n      return (\n        this.parsePlaceholder(\"BlockStatement\") ||\n        super.parseBlock(...arguments)\n      );\n    }\n\n    parseFunctionId(): ?MaybePlaceholder<\"Identifier\"> {\n      return (\n        this.parsePlaceholder(\"Identifier\") ||\n        super.parseFunctionId(...arguments)\n      );\n    }\n\n    parseClass<T: N.Class>(\n      node: T,\n      isStatement: /* T === ClassDeclaration */ boolean,\n      optionalId?: boolean,\n    ): T {\n      const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n\n      this.next();\n      this.takeDecorators(node);\n      const oldStrict = this.state.strict;\n\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (placeholder) {\n        if (\n          this.match(tt._extends) ||\n          this.match(tt.placeholder) ||\n          this.match(tt.braceL)\n        ) {\n          node.id = placeholder;\n        } else if (optionalId || !isStatement) {\n          node.id = null;\n          node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n          return this.finishNode(node, type);\n        } else {\n          this.unexpected(null, PlaceHolderErrors.ClassNameIsRequired);\n        }\n      } else {\n        this.parseClassId(node, isStatement, optionalId);\n      }\n\n      this.parseClassSuper(node);\n      node.body =\n        this.parsePlaceholder(\"ClassBody\") ||\n        this.parseClassBody(!!node.superClass, oldStrict);\n      return this.finishNode(node, type);\n    }\n\n    parseExport(node: N.Node): N.Node {\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (!placeholder) return super.parseExport(...arguments);\n\n      if (!this.isContextual(\"from\") && !this.match(tt.comma)) {\n        // export %%DECL%%;\n        node.specifiers = [];\n        node.source = null;\n        node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n        return this.finishNode(node, \"ExportNamedDeclaration\");\n      }\n\n      // export %%NAME%% from \"foo\";\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = placeholder;\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n\n      return super.parseExport(node);\n    }\n\n    isExportDefaultSpecifier(): boolean {\n      if (this.match(tt._default)) {\n        const next = this.nextTokenStart();\n        if (this.isUnparsedContextual(next, \"from\")) {\n          if (\n            this.input.startsWith(\n              tt.placeholder.label,\n              this.nextTokenStartSince(next + 4),\n            )\n          ) {\n            return true;\n          }\n        }\n      }\n      return super.isExportDefaultSpecifier();\n    }\n\n    maybeParseExportDefaultSpecifier(node: N.Node): boolean {\n      if (node.specifiers && node.specifiers.length > 0) {\n        // \"export %%NAME%%\" has already been parsed by #parseExport.\n        return true;\n      }\n      return super.maybeParseExportDefaultSpecifier(...arguments);\n    }\n\n    checkExport(node: N.ExportNamedDeclaration): void {\n      const { specifiers } = node;\n      if (specifiers?.length) {\n        node.specifiers = specifiers.filter(\n          node => node.exported.type === \"Placeholder\",\n        );\n      }\n      super.checkExport(node);\n      node.specifiers = specifiers;\n    }\n\n    parseImport(\n      node: N.Node,\n    ): N.ImportDeclaration | N.TsImportEqualsDeclaration {\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (!placeholder) return super.parseImport(...arguments);\n\n      node.specifiers = [];\n\n      if (!this.isContextual(\"from\") && !this.match(tt.comma)) {\n        // import %%STRING%%;\n        node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n        this.semicolon();\n        return this.finishNode(node, \"ImportDeclaration\");\n      }\n\n      // import %%DEFAULT%% ...\n      const specifier = this.startNodeAtNode(placeholder);\n      specifier.local = placeholder;\n      this.finishNode(specifier, \"ImportDefaultSpecifier\");\n      node.specifiers.push(specifier);\n\n      if (this.eat(tt.comma)) {\n        // import %%DEFAULT%%, * as ...\n        const hasStarImport = this.maybeParseStarImportSpecifier(node);\n\n        // import %%DEFAULT%%, { ...\n        if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n      }\n\n      this.expectContextual(\"from\");\n      node.source = this.parseImportSource();\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n\n    parseImportSource(): MaybePlaceholder<\"StringLiteral\"> {\n      // import ... from %%STRING%%;\n\n      return (\n        this.parsePlaceholder(\"StringLiteral\") ||\n        super.parseImportSource(...arguments)\n      );\n    }\n  };\n","import type Parser from \"../parser\";\nimport { types as tt } from \"../tokenizer/types\";\nimport * as N from \"../types\";\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    parseV8Intrinsic(): N.Expression {\n      if (this.match(tt.modulo)) {\n        const v8IntrinsicStart = this.state.start;\n        // let the `loc` of Identifier starts from `%`\n        const node = this.startNode();\n        this.eat(tt.modulo);\n        if (this.match(tt.name)) {\n          const name = this.parseIdentifierName(this.state.start);\n          const identifier = this.createIdentifier(node, name);\n          identifier.type = \"V8IntrinsicIdentifier\";\n          if (this.match(tt.parenL)) {\n            return identifier;\n          }\n        }\n        this.unexpected(v8IntrinsicStart);\n      }\n    }\n\n    /* ============================================================ *\n     * parser/expression.js                                         *\n     * ============================================================ */\n\n    parseExprAtom(): N.Expression {\n      return this.parseV8Intrinsic() || super.parseExprAtom(...arguments);\n    }\n  };\n","// @flow\n\nimport type Parser from \"./parser\";\n\nexport type Plugin = string | [string, Object];\n\nexport type PluginList = $ReadOnlyArray<Plugin>;\n\nexport type MixinPlugin = (superClass: Class<Parser>) => Class<Parser>;\n\nexport function hasPlugin(plugins: PluginList, name: string): boolean {\n  return plugins.some(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n}\n\nexport function getPluginOption(\n  plugins: PluginList,\n  name: string,\n  option: string,\n) {\n  const plugin = plugins.find(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n\n  if (plugin && Array.isArray(plugin)) {\n    return plugin[1][option];\n  }\n\n  return null;\n}\n\nconst PIPELINE_PROPOSALS = [\"minimal\", \"smart\", \"fsharp\"];\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\n\nexport function validatePlugins(plugins: PluginList) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\n        \"Cannot use the decorators and decorators-legacy plugin together\",\n      );\n    }\n\n    const decoratorsBeforeExport = getPluginOption(\n      plugins,\n      \"decorators\",\n      \"decoratorsBeforeExport\",\n    );\n    if (decoratorsBeforeExport == null) {\n      throw new Error(\n        \"The 'decorators' plugin requires a 'decoratorsBeforeExport' option,\" +\n          \" whose value must be a boolean. If you are migrating from\" +\n          \" Babylon/Babel 6 or want to use the old decorators proposal, you\" +\n          \" should use the 'decorators-legacy' plugin instead of 'decorators'.\",\n      );\n    } else if (typeof decoratorsBeforeExport !== \"boolean\") {\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n\n  if (\n    hasPlugin(plugins, \"pipelineOperator\") &&\n    !PIPELINE_PROPOSALS.includes(\n      getPluginOption(plugins, \"pipelineOperator\", \"proposal\"),\n    )\n  ) {\n    throw new Error(\n      \"'pipelineOperator' requires 'proposal' option whose value should be one of: \" +\n        PIPELINE_PROPOSALS.map(p => `'${p}'`).join(\", \"),\n    );\n  }\n\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    if (process.env.BABEL_8_BREAKING) {\n      throw new Error(\n        \"`moduleAttributes` has been removed in Babel 8, please use `importAssertions` parser plugin, or `@babel/plugin-syntax-import-assertions`.\",\n      );\n    } else {\n      if (hasPlugin(plugins, \"importAssertions\")) {\n        throw new Error(\n          \"Cannot combine importAssertions and moduleAttributes plugins.\",\n        );\n      }\n      const moduleAttributesVerionPluginOption = getPluginOption(\n        plugins,\n        \"moduleAttributes\",\n        \"version\",\n      );\n      if (moduleAttributesVerionPluginOption !== \"may-2020\") {\n        throw new Error(\n          \"The 'moduleAttributes' plugin requires a 'version' option,\" +\n            \" representing the last proposal update. Currently, the\" +\n            \" only supported value is 'may-2020'.\",\n        );\n      }\n    }\n  }\n\n  if (\n    hasPlugin(plugins, \"recordAndTuple\") &&\n    !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(\n      getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"),\n    )\n  ) {\n    throw new Error(\n      \"'recordAndTuple' requires 'syntaxType' option whose value should be one of: \" +\n        RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"),\n    );\n  }\n\n  if (\n    hasPlugin(plugins, \"asyncDoExpressions\") &&\n    !hasPlugin(plugins, \"doExpressions\")\n  ) {\n    const error = new Error(\n      \"'asyncDoExpressions' requires 'doExpressions', please add 'doExpressions' to parser plugins.\",\n    );\n    // $FlowIgnore\n    error.missingPlugins = \"doExpressions\"; // so @babel/core can provide better error message\n    throw error;\n  }\n}\n\n// These plugins are defined using a mixin which extends the parser class.\n\nimport estree from \"./plugins/estree\";\nimport flow from \"./plugins/flow\";\nimport jsx from \"./plugins/jsx\";\nimport typescript from \"./plugins/typescript\";\nimport placeholders from \"./plugins/placeholders\";\nimport v8intrinsic from \"./plugins/v8intrinsic\";\n\n// NOTE: order is important. estree must come first; placeholders must come last.\nexport const mixinPlugins: { [name: string]: MixinPlugin } = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders,\n};\n\nexport const mixinPluginNames: $ReadOnlyArray<string> =\n  Object.keys(mixinPlugins);\n","// @flow\n\nimport type { PluginList } from \"./plugin-utils\";\n\n// A second optional argument can be given to further configure\n// the parser process. These options are recognized:\n\nexport type SourceType = \"script\" | \"module\" | \"unambiguous\";\n\nexport type Options = {\n  sourceType: SourceType,\n  sourceFilename?: string,\n  startLine: number,\n  allowAwaitOutsideFunction: boolean,\n  allowReturnOutsideFunction: boolean,\n  allowImportExportEverywhere: boolean,\n  allowSuperOutsideMethod: boolean,\n  allowUndeclaredExports: boolean,\n  plugins: PluginList,\n  strictMode: ?boolean,\n  ranges: boolean,\n  tokens: boolean,\n  createParenthesizedExpressions: boolean,\n  errorRecovery: boolean,\n};\n\nexport const defaultOptions: Options = {\n  // Source type (\"script\" or \"module\") for different semantics\n  sourceType: \"script\",\n  // Source filename.\n  sourceFilename: undefined,\n  // Line from which to start counting source. Useful for\n  // integration with other tools.\n  startLine: 1,\n  // When enabled, await at the top level is not considered an\n  // error.\n  allowAwaitOutsideFunction: false,\n  // When enabled, a return at the top level is not considered an\n  // error.\n  allowReturnOutsideFunction: false,\n  // When enabled, import/export statements are not constrained to\n  // appearing at the top of the program.\n  allowImportExportEverywhere: false,\n  // TODO\n  allowSuperOutsideMethod: false,\n  // When enabled, export statements can reference undeclared variables.\n  allowUndeclaredExports: false,\n  // An array of plugins to enable\n  plugins: [],\n  // TODO\n  strictMode: null,\n  // Nodes have their start and end characters offsets recorded in\n  // `start` and `end` properties (directly on the node, rather than\n  // the `loc` object, which holds line/column data. To also add a\n  // [semi-standardized][range] `range` property holding a `[start,\n  // end]` array with the same numbers, set the `ranges` option to\n  // `true`.\n  //\n  // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n  ranges: false,\n  // Adds all parsed tokens to a `tokens` property on the `File` node\n  tokens: false,\n  // Whether to create ParenthesizedExpression AST nodes (if false\n  // the parser sets extra.parenthesized on the expression nodes instead).\n  createParenthesizedExpressions: false,\n  // When enabled, errors are attached to the AST instead of being directly thrown.\n  // Some errors will still throw, because @babel/parser can't always recover.\n  errorRecovery: false,\n};\n\n// Interpret and default an options object\n\nexport function getOptions(opts: ?Options): Options {\n  const options: any = {};\n  for (const key of Object.keys(defaultOptions)) {\n    options[key] = opts && opts[key] != null ? opts[key] : defaultOptions[key];\n  }\n  return options;\n}\n","// @flow\n\n/*:: declare var invariant; */\n\nimport type { Options } from \"../options\";\nimport * as N from \"../types\";\nimport type { Position } from \"../util/location\";\nimport * as charCodes from \"charcodes\";\nimport { isIdentifierStart, isIdentifierChar } from \"../util/identifier\";\nimport { types as tt, keywords as keywordTypes, type TokenType } from \"./types\";\nimport { type TokContext, types as ct } from \"./context\";\nimport ParserErrors, { Errors, type ErrorTemplate } from \"../parser/error\";\nimport { SourceLocation } from \"../util/location\";\nimport {\n  lineBreak,\n  lineBreakG,\n  isNewLine,\n  isWhitespace,\n  skipWhiteSpace,\n} from \"../util/whitespace\";\nimport State from \"./state\";\nimport type { LookaheadState } from \"./state\";\n\nconst VALID_REGEX_FLAGS = new Set([\"g\", \"m\", \"s\", \"i\", \"y\", \"u\"]);\n\n// The following character codes are forbidden from being\n// an immediate sibling of NumericLiteralSeparator _\n\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: [\n    charCodes.dot,\n    charCodes.uppercaseB,\n    charCodes.uppercaseE,\n    charCodes.uppercaseO,\n    charCodes.underscore, // multiple separators are not allowed\n    charCodes.lowercaseB,\n    charCodes.lowercaseE,\n    charCodes.lowercaseO,\n  ],\n  hex: [\n    charCodes.dot,\n    charCodes.uppercaseX,\n    charCodes.underscore, // multiple separators are not allowed\n    charCodes.lowercaseX,\n  ],\n};\n\nconst allowedNumericSeparatorSiblings = {};\nallowedNumericSeparatorSiblings.bin = [\n  // 0 - 1\n  charCodes.digit0,\n  charCodes.digit1,\n];\nallowedNumericSeparatorSiblings.oct = [\n  // 0 - 7\n  ...allowedNumericSeparatorSiblings.bin,\n\n  charCodes.digit2,\n  charCodes.digit3,\n  charCodes.digit4,\n  charCodes.digit5,\n  charCodes.digit6,\n  charCodes.digit7,\n];\nallowedNumericSeparatorSiblings.dec = [\n  // 0 - 9\n  ...allowedNumericSeparatorSiblings.oct,\n\n  charCodes.digit8,\n  charCodes.digit9,\n];\n\nallowedNumericSeparatorSiblings.hex = [\n  // 0 - 9, A - F, a - f,\n  ...allowedNumericSeparatorSiblings.dec,\n\n  charCodes.uppercaseA,\n  charCodes.uppercaseB,\n  charCodes.uppercaseC,\n  charCodes.uppercaseD,\n  charCodes.uppercaseE,\n  charCodes.uppercaseF,\n\n  charCodes.lowercaseA,\n  charCodes.lowercaseB,\n  charCodes.lowercaseC,\n  charCodes.lowercaseD,\n  charCodes.lowercaseE,\n  charCodes.lowercaseF,\n];\n\n// Object type used to represent tokens. Note that normally, tokens\n// simply exist as properties on the parser object. This is only\n// used for the onToken callback and the external tokenizer.\n\nexport class Token {\n  constructor(state: State) {\n    this.type = state.type;\n    this.value = state.value;\n    this.start = state.start;\n    this.end = state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n\n  declare type: TokenType;\n  declare value: any;\n  declare start: number;\n  declare end: number;\n  declare loc: SourceLocation;\n}\n\n// ## Tokenizer\n\nexport default class Tokenizer extends ParserErrors {\n  // Forward-declarations\n  // parser/util.js\n  /*::\n  +hasPrecedingLineBreak: () => boolean;\n  +unexpected: (pos?: ?number, messageOrType?: ErrorTemplate | TokenType) => empty;\n  +expectPlugin: (name: string, pos?: ?number) => true;\n  */\n\n  isLookahead: boolean;\n\n  // Token store.\n  tokens: Array<Token | N.Comment> = [];\n\n  constructor(options: Options, input: string) {\n    super();\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.isLookahead = false;\n  }\n\n  pushToken(token: Token | N.Comment) {\n    // Pop out invalid tokens trapped by try-catch parsing.\n    // Those parsing branches are mainly created by typescript and flow plugins.\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n\n  // Move to the next token\n\n  next(): void {\n    this.checkKeywordEscapes();\n    if (this.options.tokens) {\n      this.pushToken(new Token(this.state));\n    }\n\n    this.state.lastTokEnd = this.state.end;\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n\n  // TODO\n\n  eat(type: TokenType): boolean {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  // TODO\n\n  match(type: TokenType): boolean {\n    return this.state.type === type;\n  }\n\n  /**\n   * Create a LookaheadState from current parser state\n   *\n   * @param {State} state\n   * @returns {LookaheadState}\n   * @memberof Tokenizer\n   */\n  createLookaheadState(state: State): LookaheadState {\n    return {\n      pos: state.pos,\n      value: null,\n      type: state.type,\n      start: state.start,\n      end: state.end,\n      lastTokEnd: state.end,\n      context: [this.curContext()],\n      exprAllowed: state.exprAllowed,\n      inType: state.inType,\n    };\n  }\n\n  /**\n   * lookahead peeks the next token, skipping changes to token context and\n   * comment stack. For performance it returns a limited LookaheadState\n   * instead of full parser state.\n   *\n   * The { column, line } Loc info is not included in lookahead since such usage\n   * is rare. Although it may return other location properties e.g. `curLine` and\n   * `lineStart`, these properties are not listed in the LookaheadState interface\n   * and thus the returned value is _NOT_ reliable.\n   *\n   * The tokenizer should make best efforts to avoid using any parser state\n   * other than those defined in LookaheadState\n   *\n   * @returns {LookaheadState}\n   * @memberof Tokenizer\n   */\n  lookahead(): LookaheadState {\n    const old = this.state;\n    // For performance we use a simpified tokenizer state structure\n    // $FlowIgnore\n    this.state = this.createLookaheadState(old);\n\n    this.isLookahead = true;\n    this.nextToken();\n    this.isLookahead = false;\n\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n\n  nextTokenStart(): number {\n    return this.nextTokenStartSince(this.state.pos);\n  }\n\n  nextTokenStartSince(pos: number): number {\n    skipWhiteSpace.lastIndex = pos;\n    const skip = skipWhiteSpace.exec(this.input);\n    // $FlowIgnore: The skipWhiteSpace ensures to match any string\n    return pos + skip[0].length;\n  }\n\n  lookaheadCharCode(): number {\n    return this.input.charCodeAt(this.nextTokenStart());\n  }\n\n  codePointAtPos(pos: number): number {\n    // The implementation is based on\n    // https://source.chromium.org/chromium/chromium/src/+/master:v8/src/builtins/builtins-string-gen.cc;l=1455;drc=221e331b49dfefadbc6fa40b0c68e6f97606d0b3;bpv=0;bpt=1\n    // We reimplement `codePointAt` because `codePointAt` is a V8 builtin which is not inlined by TurboFan (as of M91)\n    // since `input` is mostly ASCII, an inlined `charCodeAt` wins here\n    let cp = this.input.charCodeAt(pos);\n    if ((cp & 0xfc00) === 0xd800 && ++pos < this.input.length) {\n      const trail = this.input.charCodeAt(pos);\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n    return cp;\n  }\n\n  // Toggle strict mode. Re-reads the next number or string to please\n  // pedantic tests (`\"use strict\"; 010;` should fail).\n\n  setStrict(strict: boolean): void {\n    this.state.strict = strict;\n    if (strict) {\n      // Throw an error for any string decimal escape found before/immediately\n      // after a \"use strict\" directive. Strict mode will be set at parse\n      // time for any literals that occur after the next node of the strict\n      // directive.\n      this.state.strictErrors.forEach((message, pos) =>\n        /* eslint-disable @babel/development-internal/dry-error-messages */\n        this.raise(pos, message),\n      );\n      this.state.strictErrors.clear();\n    }\n  }\n\n  curContext(): TokContext {\n    return this.state.context[this.state.context.length - 1];\n  }\n\n  // Read a single token, updating the parser object's token-related\n  // properties.\n\n  nextToken(): void {\n    const curContext = this.curContext();\n    if (!curContext.preserveSpace) this.skipSpace();\n    this.state.start = this.state.pos;\n    if (!this.isLookahead) this.state.startLoc = this.state.curPosition();\n    if (this.state.pos >= this.length) {\n      this.finishToken(tt.eof);\n      return;\n    }\n\n    if (curContext === ct.template) {\n      this.readTmplToken();\n    } else {\n      this.getTokenFromCode(this.codePointAtPos(this.state.pos));\n    }\n  }\n\n  pushComment(\n    block: boolean,\n    text: string,\n    start: number,\n    end: number,\n    startLoc: Position,\n    endLoc: Position,\n  ): void {\n    const comment = {\n      type: block ? \"CommentBlock\" : \"CommentLine\",\n      value: text,\n      start: start,\n      end: end,\n      loc: new SourceLocation(startLoc, endLoc),\n    };\n\n    if (this.options.tokens) this.pushToken(comment);\n    this.state.comments.push(comment);\n    this.addComment(comment);\n  }\n\n  skipBlockComment(): void {\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(\"*/\", this.state.pos + 2);\n    if (end === -1) throw this.raise(start, Errors.UnterminatedComment);\n\n    this.state.pos = end + 2;\n    lineBreakG.lastIndex = start;\n    let match;\n    while (\n      (match = lineBreakG.exec(this.input)) &&\n      match.index < this.state.pos\n    ) {\n      ++this.state.curLine;\n      this.state.lineStart = match.index + match[0].length;\n    }\n\n    // If we are doing a lookahead right now we need to advance the position (above code)\n    // but we do not want to push the comment to the state.\n    if (this.isLookahead) return;\n    /*:: invariant(startLoc) */\n\n    this.pushComment(\n      true,\n      this.input.slice(start + 2, end),\n      start,\n      this.state.pos,\n      startLoc,\n      this.state.curPosition(),\n    );\n  }\n\n  skipLineComment(startSkip: number): void {\n    const start = this.state.pos;\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt((this.state.pos += startSkip));\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n\n    // If we are doing a lookahead right now we need to advance the position (above code)\n    // but we do not want to push the comment to the state.\n    if (this.isLookahead) return;\n    /*:: invariant(startLoc) */\n\n    this.pushComment(\n      false,\n      this.input.slice(start + startSkip, this.state.pos),\n      start,\n      this.state.pos,\n      startLoc,\n      this.state.curPosition(),\n    );\n  }\n\n  // Called at the start of the parse and after every token. Skips\n  // whitespace and comments, and.\n\n  skipSpace(): void {\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n      switch (ch) {\n        case charCodes.space:\n        case charCodes.nonBreakingSpace:\n        case charCodes.tab:\n          ++this.state.pos;\n          break;\n        case charCodes.carriageReturn:\n          if (\n            this.input.charCodeAt(this.state.pos + 1) === charCodes.lineFeed\n          ) {\n            ++this.state.pos;\n          }\n        // fall through\n        case charCodes.lineFeed:\n        case charCodes.lineSeparator:\n        case charCodes.paragraphSeparator:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n\n        case charCodes.slash:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case charCodes.asterisk:\n              this.skipBlockComment();\n              break;\n\n            case charCodes.slash:\n              this.skipLineComment(2);\n              break;\n\n            default:\n              break loop;\n          }\n          break;\n\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else {\n            break loop;\n          }\n      }\n    }\n  }\n\n  // Called at the end of every token. Sets `end`, `val`, and\n  // maintains `context` and `exprAllowed`, and skips the space after\n  // the token, so that the next one's `start` will point at the\n  // right position.\n\n  finishToken(type: TokenType, val: any): void {\n    this.state.end = this.state.pos;\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n\n    if (!this.isLookahead) {\n      this.state.endLoc = this.state.curPosition();\n      this.updateContext(prevType);\n    }\n  }\n\n  // ### Token reading\n\n  // This is the function that is called to fetch the next token. It\n  // is somewhat obscure, because it works in character codes rather\n  // than characters, and because operator parsing has been inlined\n  // into it.\n  //\n  // All in the name of speed.\n\n  // number sign is \"#\"\n  readToken_numberSign(): void {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n\n    const nextPos = this.state.pos + 1;\n    const next = this.codePointAtPos(nextPos);\n    if (next >= charCodes.digit0 && next <= charCodes.digit9) {\n      throw this.raise(this.state.pos, Errors.UnexpectedDigitAfterHash);\n    }\n\n    if (\n      next === charCodes.leftCurlyBrace ||\n      (next === charCodes.leftSquareBracket && this.hasPlugin(\"recordAndTuple\"))\n    ) {\n      // When we see `#{`, it is likely to be a hash record.\n      // However we don't yell at `#[` since users may intend to use \"computed private fields\",\n      // which is not allowed in the spec. Throwing expecting recordAndTuple is\n      // misleading\n      this.expectPlugin(\"recordAndTuple\");\n      if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"hash\") {\n        throw this.raise(\n          this.state.pos,\n          next === charCodes.leftCurlyBrace\n            ? Errors.RecordExpressionHashIncorrectStartSyntaxType\n            : Errors.TupleExpressionHashIncorrectStartSyntaxType,\n        );\n      }\n\n      if (next === charCodes.leftCurlyBrace) {\n        // #{\n        this.finishToken(tt.braceHashL);\n      } else {\n        // #[\n        this.finishToken(tt.bracketHashL);\n      }\n      this.state.pos += 2;\n    } else if (isIdentifierStart(next)) {\n      ++this.state.pos;\n      this.finishToken(tt.privateName, this.readWord1(next));\n    } else if (next === charCodes.backslash) {\n      ++this.state.pos;\n      this.finishToken(tt.privateName, this.readWord1());\n    } else {\n      this.finishOp(tt.hash, 1);\n    }\n  }\n\n  readToken_dot(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next >= charCodes.digit0 && next <= charCodes.digit9) {\n      this.readNumber(true);\n      return;\n    }\n\n    if (\n      next === charCodes.dot &&\n      this.input.charCodeAt(this.state.pos + 2) === charCodes.dot\n    ) {\n      this.state.pos += 3;\n      this.finishToken(tt.ellipsis);\n    } else {\n      ++this.state.pos;\n      this.finishToken(tt.dot);\n    }\n  }\n\n  readToken_slash(): void {\n    // '/'\n    if (this.state.exprAllowed && !this.state.inType) {\n      ++this.state.pos;\n      this.readRegexp();\n      return;\n    }\n\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n    } else {\n      this.finishOp(tt.slash, 1);\n    }\n  }\n\n  readToken_interpreter(): boolean {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== charCodes.exclamationMark) return false;\n\n    const start = this.state.pos;\n    this.state.pos += 1;\n\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n\n    const value = this.input.slice(start + 2, this.state.pos);\n\n    this.finishToken(tt.interpreterDirective, value);\n\n    return true;\n  }\n\n  readToken_mult_modulo(code: number): void {\n    // '%*'\n    let type = code === charCodes.asterisk ? tt.star : tt.modulo;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n    const exprAllowed = this.state.exprAllowed;\n\n    // Exponentiation operator **\n    if (code === charCodes.asterisk && next === charCodes.asterisk) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = tt.exponent;\n    }\n\n    if (next === charCodes.equalsTo && !exprAllowed) {\n      width++;\n      type = tt.assign;\n    }\n\n    this.finishOp(type, width);\n  }\n\n  readToken_pipe_amp(code: number): void {\n    // '||' '&&' '||=' '&&='\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === charCodes.equalsTo) {\n        this.finishOp(tt.assign, 3);\n      } else {\n        this.finishOp(\n          code === charCodes.verticalBar ? tt.logicalOR : tt.logicalAND,\n          2,\n        );\n      }\n      return;\n    }\n\n    if (code === charCodes.verticalBar) {\n      // '|>'\n      if (next === charCodes.greaterThan) {\n        this.finishOp(tt.pipeline, 2);\n        return;\n      }\n      // '|}'\n      if (\n        this.hasPlugin(\"recordAndTuple\") &&\n        next === charCodes.rightCurlyBrace\n      ) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(\n            this.state.pos,\n            Errors.RecordExpressionBarIncorrectEndSyntaxType,\n          );\n        }\n\n        this.finishOp(tt.braceBarR, 2);\n        return;\n      }\n\n      // '|]'\n      if (\n        this.hasPlugin(\"recordAndTuple\") &&\n        next === charCodes.rightSquareBracket\n      ) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(\n            this.state.pos,\n            Errors.TupleExpressionBarIncorrectEndSyntaxType,\n          );\n        }\n\n        this.finishOp(tt.bracketBarR, 2);\n        return;\n      }\n    }\n\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n      return;\n    }\n\n    this.finishOp(\n      code === charCodes.verticalBar ? tt.bitwiseOR : tt.bitwiseAND,\n      1,\n    );\n  }\n\n  readToken_caret(): void {\n    // '^'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n    } else {\n      this.finishOp(tt.bitwiseXOR, 1);\n    }\n  }\n\n  readToken_plus_min(code: number): void {\n    // '+-'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (\n        next === charCodes.dash &&\n        !this.inModule &&\n        this.input.charCodeAt(this.state.pos + 2) === charCodes.greaterThan &&\n        (this.state.lastTokEnd === 0 || this.hasPrecedingLineBreak())\n      ) {\n        // A `-->` line comment\n        this.skipLineComment(3);\n        this.skipSpace();\n        this.nextToken();\n        return;\n      }\n      this.finishOp(tt.incDec, 2);\n      return;\n    }\n\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n    } else {\n      this.finishOp(tt.plusMin, 1);\n    }\n  }\n\n  readToken_lt_gt(code: number): void {\n    // '<>'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    let size = 1;\n\n    if (next === code) {\n      size =\n        code === charCodes.greaterThan &&\n        this.input.charCodeAt(this.state.pos + 2) === charCodes.greaterThan\n          ? 3\n          : 2;\n      if (this.input.charCodeAt(this.state.pos + size) === charCodes.equalsTo) {\n        this.finishOp(tt.assign, size + 1);\n        return;\n      }\n      this.finishOp(tt.bitShift, size);\n      return;\n    }\n\n    if (\n      next === charCodes.exclamationMark &&\n      code === charCodes.lessThan &&\n      !this.inModule &&\n      this.input.charCodeAt(this.state.pos + 2) === charCodes.dash &&\n      this.input.charCodeAt(this.state.pos + 3) === charCodes.dash\n    ) {\n      // `<!--`, an XML-style comment that should be interpreted as a line comment\n      this.skipLineComment(4);\n      this.skipSpace();\n      this.nextToken();\n      return;\n    }\n\n    if (next === charCodes.equalsTo) {\n      // <= | >=\n      size = 2;\n    }\n\n    this.finishOp(tt.relational, size);\n  }\n\n  readToken_eq_excl(code: number): void {\n    // '=!'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === charCodes.equalsTo) {\n      this.finishOp(\n        tt.equality,\n        this.input.charCodeAt(this.state.pos + 2) === charCodes.equalsTo\n          ? 3\n          : 2,\n      );\n      return;\n    }\n    if (code === charCodes.equalsTo && next === charCodes.greaterThan) {\n      // '=>'\n      this.state.pos += 2;\n      this.finishToken(tt.arrow);\n      return;\n    }\n    this.finishOp(code === charCodes.equalsTo ? tt.eq : tt.bang, 1);\n  }\n\n  readToken_question(): void {\n    // '?'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n    if (next === charCodes.questionMark) {\n      if (next2 === charCodes.equalsTo) {\n        // '??='\n        this.finishOp(tt.assign, 3);\n      } else {\n        // '??'\n        this.finishOp(tt.nullishCoalescing, 2);\n      }\n    } else if (\n      next === charCodes.dot &&\n      !(next2 >= charCodes.digit0 && next2 <= charCodes.digit9)\n    ) {\n      // '.' not followed by a number\n      this.state.pos += 2;\n      this.finishToken(tt.questionDot);\n    } else {\n      ++this.state.pos;\n      this.finishToken(tt.question);\n    }\n  }\n\n  getTokenFromCode(code: number): void {\n    switch (code) {\n      // The interpretation of a dot depends on whether it is followed\n      // by a digit or another two dots.\n\n      case charCodes.dot:\n        this.readToken_dot();\n        return;\n\n      // Punctuation tokens.\n      case charCodes.leftParenthesis:\n        ++this.state.pos;\n        this.finishToken(tt.parenL);\n        return;\n      case charCodes.rightParenthesis:\n        ++this.state.pos;\n        this.finishToken(tt.parenR);\n        return;\n      case charCodes.semicolon:\n        ++this.state.pos;\n        this.finishToken(tt.semi);\n        return;\n      case charCodes.comma:\n        ++this.state.pos;\n        this.finishToken(tt.comma);\n        return;\n      case charCodes.leftSquareBracket:\n        if (\n          this.hasPlugin(\"recordAndTuple\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.verticalBar\n        ) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(\n              this.state.pos,\n              Errors.TupleExpressionBarIncorrectStartSyntaxType,\n            );\n          }\n\n          // [|\n          this.finishToken(tt.bracketBarL);\n          this.state.pos += 2;\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.bracketL);\n        }\n        return;\n      case charCodes.rightSquareBracket:\n        ++this.state.pos;\n        this.finishToken(tt.bracketR);\n        return;\n      case charCodes.leftCurlyBrace:\n        if (\n          this.hasPlugin(\"recordAndTuple\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.verticalBar\n        ) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(\n              this.state.pos,\n              Errors.RecordExpressionBarIncorrectStartSyntaxType,\n            );\n          }\n\n          // {|\n          this.finishToken(tt.braceBarL);\n          this.state.pos += 2;\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.braceL);\n        }\n        return;\n      case charCodes.rightCurlyBrace:\n        ++this.state.pos;\n        this.finishToken(tt.braceR);\n        return;\n\n      case charCodes.colon:\n        if (\n          this.hasPlugin(\"functionBind\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.colon\n        ) {\n          this.finishOp(tt.doubleColon, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.colon);\n        }\n        return;\n\n      case charCodes.questionMark:\n        this.readToken_question();\n        return;\n\n      case charCodes.graveAccent:\n        ++this.state.pos;\n        this.finishToken(tt.backQuote);\n        return;\n\n      case charCodes.digit0: {\n        const next = this.input.charCodeAt(this.state.pos + 1);\n        // '0x', '0X' - hex number\n        if (next === charCodes.lowercaseX || next === charCodes.uppercaseX) {\n          this.readRadixNumber(16);\n          return;\n        }\n        // '0o', '0O' - octal number\n        if (next === charCodes.lowercaseO || next === charCodes.uppercaseO) {\n          this.readRadixNumber(8);\n          return;\n        }\n        // '0b', '0B' - binary number\n        if (next === charCodes.lowercaseB || next === charCodes.uppercaseB) {\n          this.readRadixNumber(2);\n          return;\n        }\n      }\n      // Anything else beginning with a digit is an integer, octal\n      // number, or float. (fall through)\n      case charCodes.digit1:\n      case charCodes.digit2:\n      case charCodes.digit3:\n      case charCodes.digit4:\n      case charCodes.digit5:\n      case charCodes.digit6:\n      case charCodes.digit7:\n      case charCodes.digit8:\n      case charCodes.digit9:\n        this.readNumber(false);\n        return;\n\n      // Quotes produce strings.\n      case charCodes.quotationMark:\n      case charCodes.apostrophe:\n        this.readString(code);\n        return;\n\n      // Operators are parsed inline in tiny state machines. '=' (charCodes.equalsTo) is\n      // often referred to. `finishOp` simply skips the amount of\n      // characters it is given as second argument, and returns a token\n      // of the type given by its first argument.\n\n      case charCodes.slash:\n        this.readToken_slash();\n        return;\n\n      case charCodes.percentSign:\n      case charCodes.asterisk:\n        this.readToken_mult_modulo(code);\n        return;\n\n      case charCodes.verticalBar:\n      case charCodes.ampersand:\n        this.readToken_pipe_amp(code);\n        return;\n\n      case charCodes.caret:\n        this.readToken_caret();\n        return;\n\n      case charCodes.plusSign:\n      case charCodes.dash:\n        this.readToken_plus_min(code);\n        return;\n\n      case charCodes.lessThan:\n      case charCodes.greaterThan:\n        this.readToken_lt_gt(code);\n        return;\n\n      case charCodes.equalsTo:\n      case charCodes.exclamationMark:\n        this.readToken_eq_excl(code);\n        return;\n\n      case charCodes.tilde:\n        this.finishOp(tt.tilde, 1);\n        return;\n\n      case charCodes.atSign:\n        ++this.state.pos;\n        this.finishToken(tt.at);\n        return;\n\n      case charCodes.numberSign:\n        this.readToken_numberSign();\n        return;\n\n      case charCodes.backslash:\n        this.readWord();\n        return;\n\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord(code);\n          return;\n        }\n    }\n\n    throw this.raise(\n      this.state.pos,\n      Errors.InvalidOrUnexpectedToken,\n      String.fromCodePoint(code),\n    );\n  }\n\n  finishOp(type: TokenType, size: number): void {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n\n  readRegexp(): void {\n    const start = this.state.pos;\n    let escaped, inClass;\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(start, Errors.UnterminatedRegExp);\n      }\n      const ch = this.input.charAt(this.state.pos);\n      if (lineBreak.test(ch)) {\n        throw this.raise(start, Errors.UnterminatedRegExp);\n      }\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === \"[\") {\n          inClass = true;\n        } else if (ch === \"]\" && inClass) {\n          inClass = false;\n        } else if (ch === \"/\" && !inClass) {\n          break;\n        }\n        escaped = ch === \"\\\\\";\n      }\n      ++this.state.pos;\n    }\n    const content = this.input.slice(start, this.state.pos);\n    ++this.state.pos;\n\n    let mods = \"\";\n\n    while (this.state.pos < this.length) {\n      const char = this.input[this.state.pos];\n      const charCode = this.codePointAtPos(this.state.pos);\n\n      if (VALID_REGEX_FLAGS.has(char)) {\n        if (mods.indexOf(char) > -1) {\n          this.raise(this.state.pos + 1, Errors.DuplicateRegExpFlags);\n        }\n      } else if (\n        isIdentifierChar(charCode) ||\n        charCode === charCodes.backslash\n      ) {\n        this.raise(this.state.pos + 1, Errors.MalformedRegExpFlags);\n      } else {\n        break;\n      }\n\n      ++this.state.pos;\n      mods += char;\n    }\n\n    this.finishToken(tt.regexp, {\n      pattern: content,\n      flags: mods,\n    });\n  }\n\n  // Read an integer in the given radix. Return null if zero digits\n  // were read, the integer value otherwise. When `len` is given, this\n  // will return `null` unless the integer has exactly `len` digits.\n  // When `forceLen` is `true`, it means that we already know that in case\n  // of a malformed number we have to skip `len` characters anyway, instead\n  // of bailing out early. For example, in \"\\u{123Z}\" we want to read up to }\n  // anyway, while in \"\\u00Z\" we will stop at Z instead of consuming four\n  // characters (and thus the closing quote).\n\n  readInt(\n    radix: number,\n    len?: number,\n    forceLen?: boolean,\n    allowNumSeparator: boolean = true,\n  ): number | null {\n    const start = this.state.pos;\n    const forbiddenSiblings =\n      radix === 16\n        ? forbiddenNumericSeparatorSiblings.hex\n        : forbiddenNumericSeparatorSiblings.decBinOct;\n    const allowedSiblings =\n      radix === 16\n        ? allowedNumericSeparatorSiblings.hex\n        : radix === 10\n        ? allowedNumericSeparatorSiblings.dec\n        : radix === 8\n        ? allowedNumericSeparatorSiblings.oct\n        : allowedNumericSeparatorSiblings.bin;\n\n    let invalid = false;\n    let total = 0;\n\n    for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n      const code = this.input.charCodeAt(this.state.pos);\n      let val;\n\n      if (code === charCodes.underscore) {\n        const prev = this.input.charCodeAt(this.state.pos - 1);\n        const next = this.input.charCodeAt(this.state.pos + 1);\n        if (allowedSiblings.indexOf(next) === -1) {\n          this.raise(this.state.pos, Errors.UnexpectedNumericSeparator);\n        } else if (\n          forbiddenSiblings.indexOf(prev) > -1 ||\n          forbiddenSiblings.indexOf(next) > -1 ||\n          Number.isNaN(next)\n        ) {\n          this.raise(this.state.pos, Errors.UnexpectedNumericSeparator);\n        }\n\n        if (!allowNumSeparator) {\n          this.raise(this.state.pos, Errors.NumericSeparatorInEscapeSequence);\n        }\n\n        // Ignore this _ character\n        ++this.state.pos;\n        continue;\n      }\n\n      if (code >= charCodes.lowercaseA) {\n        val = code - charCodes.lowercaseA + charCodes.lineFeed;\n      } else if (code >= charCodes.uppercaseA) {\n        val = code - charCodes.uppercaseA + charCodes.lineFeed;\n      } else if (charCodes.isDigit(code)) {\n        val = code - charCodes.digit0; // 0-9\n      } else {\n        val = Infinity;\n      }\n      if (val >= radix) {\n        // If we are in \"errorRecovery\" mode and we found a digit which is too big,\n        // don't break the loop.\n\n        if (this.options.errorRecovery && val <= 9) {\n          val = 0;\n          this.raise(this.state.start + i + 2, Errors.InvalidDigit, radix);\n        } else if (forceLen) {\n          val = 0;\n          invalid = true;\n        } else {\n          break;\n        }\n      }\n      ++this.state.pos;\n      total = total * radix + val;\n    }\n    if (\n      this.state.pos === start ||\n      (len != null && this.state.pos - start !== len) ||\n      invalid\n    ) {\n      return null;\n    }\n\n    return total;\n  }\n\n  readRadixNumber(radix: number): void {\n    const start = this.state.pos;\n    let isBigInt = false;\n\n    this.state.pos += 2; // 0x\n    const val = this.readInt(radix);\n    if (val == null) {\n      this.raise(this.state.start + 2, Errors.InvalidDigit, radix);\n    }\n    const next = this.input.charCodeAt(this.state.pos);\n\n    if (next === charCodes.lowercaseN) {\n      ++this.state.pos;\n      isBigInt = true;\n    } else if (next === charCodes.lowercaseM) {\n      throw this.raise(start, Errors.InvalidDecimal);\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(this.state.pos, Errors.NumberIdentifier);\n    }\n\n    if (isBigInt) {\n      const str = this.input.slice(start, this.state.pos).replace(/[_n]/g, \"\");\n      this.finishToken(tt.bigint, str);\n      return;\n    }\n\n    this.finishToken(tt.num, val);\n  }\n\n  // Read an integer, octal integer, or floating-point number.\n\n  readNumber(startsWithDot: boolean): void {\n    const start = this.state.pos;\n    let isFloat = false;\n    let isBigInt = false;\n    let isDecimal = false;\n    let hasExponent = false;\n    let isOctal = false;\n\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(start, Errors.InvalidNumber);\n    }\n    const hasLeadingZero =\n      this.state.pos - start >= 2 &&\n      this.input.charCodeAt(start) === charCodes.digit0;\n\n    if (hasLeadingZero) {\n      const integer = this.input.slice(start, this.state.pos);\n      this.recordStrictModeErrors(start, Errors.StrictOctalLiteral);\n      if (!this.state.strict) {\n        // disallow numeric separators in non octal decimals and legacy octal likes\n        const underscorePos = integer.indexOf(\"_\");\n        if (underscorePos > 0) {\n          this.raise(underscorePos + start, Errors.ZeroDigitNumericSeparator);\n        }\n      }\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\n    }\n\n    let next = this.input.charCodeAt(this.state.pos);\n    if (next === charCodes.dot && !isOctal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (\n      (next === charCodes.uppercaseE || next === charCodes.lowercaseE) &&\n      !isOctal\n    ) {\n      next = this.input.charCodeAt(++this.state.pos);\n      if (next === charCodes.plusSign || next === charCodes.dash) {\n        ++this.state.pos;\n      }\n      if (this.readInt(10) === null) {\n        this.raise(start, Errors.InvalidOrMissingExponent);\n      }\n      isFloat = true;\n      hasExponent = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (next === charCodes.lowercaseN) {\n      // disallow floats, legacy octal syntax and non octal decimals\n      // new style octal (\"0o\") is handled in this.readRadixNumber\n      if (isFloat || hasLeadingZero) {\n        this.raise(start, Errors.InvalidBigIntLiteral);\n      }\n      ++this.state.pos;\n      isBigInt = true;\n    }\n\n    if (next === charCodes.lowercaseM) {\n      this.expectPlugin(\"decimal\", this.state.pos);\n      if (hasExponent || hasLeadingZero) {\n        this.raise(start, Errors.InvalidDecimal);\n      }\n      ++this.state.pos;\n      isDecimal = true;\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(this.state.pos, Errors.NumberIdentifier);\n    }\n\n    // remove \"_\" for numeric literal separator, and trailing `m` or `n`\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n\n    if (isBigInt) {\n      this.finishToken(tt.bigint, str);\n      return;\n    }\n\n    if (isDecimal) {\n      this.finishToken(tt.decimal, str);\n      return;\n    }\n\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(tt.num, val);\n  }\n\n  // Read a string value, interpreting backslash-escapes.\n\n  readCodePoint(throwOnInvalid: boolean): number | null {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let code;\n\n    if (ch === charCodes.leftCurlyBrace) {\n      const codePos = ++this.state.pos;\n      code = this.readHexChar(\n        this.input.indexOf(\"}\", this.state.pos) - this.state.pos,\n        true,\n        throwOnInvalid,\n      );\n      ++this.state.pos;\n      if (code !== null && code > 0x10ffff) {\n        if (throwOnInvalid) {\n          this.raise(codePos, Errors.InvalidCodePoint);\n        } else {\n          return null;\n        }\n      }\n    } else {\n      code = this.readHexChar(4, false, throwOnInvalid);\n    }\n    return code;\n  }\n\n  readString(quote: number): void {\n    let out = \"\",\n      chunkStart = ++this.state.pos;\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, Errors.UnterminatedString);\n      }\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n      if (ch === charCodes.backslash) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        // $FlowFixMe\n        out += this.readEscapedChar(false);\n        chunkStart = this.state.pos;\n      } else if (\n        ch === charCodes.lineSeparator ||\n        ch === charCodes.paragraphSeparator\n      ) {\n        ++this.state.pos;\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        throw this.raise(this.state.start, Errors.UnterminatedString);\n      } else {\n        ++this.state.pos;\n      }\n    }\n    out += this.input.slice(chunkStart, this.state.pos++);\n    this.finishToken(tt.string, out);\n  }\n\n  // Reads template string tokens.\n\n  readTmplToken(): void {\n    let out = \"\",\n      chunkStart = this.state.pos,\n      containsInvalid = false;\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, Errors.UnterminatedTemplate);\n      }\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (\n        ch === charCodes.graveAccent ||\n        (ch === charCodes.dollarSign &&\n          this.input.charCodeAt(this.state.pos + 1) ===\n            charCodes.leftCurlyBrace)\n      ) {\n        if (this.state.pos === this.state.start && this.match(tt.template)) {\n          if (ch === charCodes.dollarSign) {\n            this.state.pos += 2;\n            this.finishToken(tt.dollarBraceL);\n            return;\n          } else {\n            ++this.state.pos;\n            this.finishToken(tt.backQuote);\n            return;\n          }\n        }\n        out += this.input.slice(chunkStart, this.state.pos);\n        this.finishToken(tt.template, containsInvalid ? null : out);\n        return;\n      }\n      if (ch === charCodes.backslash) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        const escaped = this.readEscapedChar(true);\n        if (escaped === null) {\n          containsInvalid = true;\n        } else {\n          out += escaped;\n        }\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        ++this.state.pos;\n        switch (ch) {\n          case charCodes.carriageReturn:\n            if (this.input.charCodeAt(this.state.pos) === charCodes.lineFeed) {\n              ++this.state.pos;\n            }\n          // fall through\n          case charCodes.lineFeed:\n            out += \"\\n\";\n            break;\n          default:\n            out += String.fromCharCode(ch);\n            break;\n        }\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n  }\n\n  recordStrictModeErrors(pos: number, message: ErrorTemplate) {\n    if (this.state.strict && !this.state.strictErrors.has(pos)) {\n      this.raise(pos, message);\n    } else {\n      this.state.strictErrors.set(pos, message);\n    }\n  }\n\n  // Used to read escaped characters\n  readEscapedChar(inTemplate: boolean): string | null {\n    const throwOnInvalid = !inTemplate;\n    const ch = this.input.charCodeAt(++this.state.pos);\n    ++this.state.pos;\n    switch (ch) {\n      case charCodes.lowercaseN:\n        return \"\\n\";\n      case charCodes.lowercaseR:\n        return \"\\r\";\n      case charCodes.lowercaseX: {\n        const code = this.readHexChar(2, false, throwOnInvalid);\n        return code === null ? null : String.fromCharCode(code);\n      }\n      case charCodes.lowercaseU: {\n        const code = this.readCodePoint(throwOnInvalid);\n        return code === null ? null : String.fromCodePoint(code);\n      }\n      case charCodes.lowercaseT:\n        return \"\\t\";\n      case charCodes.lowercaseB:\n        return \"\\b\";\n      case charCodes.lowercaseV:\n        return \"\\u000b\";\n      case charCodes.lowercaseF:\n        return \"\\f\";\n      case charCodes.carriageReturn:\n        if (this.input.charCodeAt(this.state.pos) === charCodes.lineFeed) {\n          ++this.state.pos;\n        }\n      // fall through\n      case charCodes.lineFeed:\n        this.state.lineStart = this.state.pos;\n        ++this.state.curLine;\n      // fall through\n      case charCodes.lineSeparator:\n      case charCodes.paragraphSeparator:\n        return \"\";\n      case charCodes.digit8:\n      case charCodes.digit9:\n        if (inTemplate) {\n          return null;\n        } else {\n          this.recordStrictModeErrors(\n            this.state.pos - 1,\n            Errors.StrictNumericEscape,\n          );\n        }\n      // fall through\n      default:\n        if (ch >= charCodes.digit0 && ch <= charCodes.digit7) {\n          const codePos = this.state.pos - 1;\n          const match = this.input\n            .substr(this.state.pos - 1, 3)\n            .match(/^[0-7]+/);\n\n          // This is never null, because of the if condition above.\n          /*:: invariant(match !== null) */\n          let octalStr = match[0];\n\n          let octal = parseInt(octalStr, 8);\n          if (octal > 255) {\n            octalStr = octalStr.slice(0, -1);\n            octal = parseInt(octalStr, 8);\n          }\n          this.state.pos += octalStr.length - 1;\n          const next = this.input.charCodeAt(this.state.pos);\n          if (\n            octalStr !== \"0\" ||\n            next === charCodes.digit8 ||\n            next === charCodes.digit9\n          ) {\n            if (inTemplate) {\n              return null;\n            } else {\n              this.recordStrictModeErrors(codePos, Errors.StrictNumericEscape);\n            }\n          }\n\n          return String.fromCharCode(octal);\n        }\n\n        return String.fromCharCode(ch);\n    }\n  }\n\n  // Used to read character escape sequences ('\\x', '\\u').\n\n  readHexChar(\n    len: number,\n    forceLen: boolean,\n    throwOnInvalid: boolean,\n  ): number | null {\n    const codePos = this.state.pos;\n    const n = this.readInt(16, len, forceLen, false);\n    if (n === null) {\n      if (throwOnInvalid) {\n        this.raise(codePos, Errors.InvalidEscapeSequence);\n      } else {\n        this.state.pos = codePos - 1;\n      }\n    }\n    return n;\n  }\n\n  // Read an identifier, and return it as a string. Sets `this.state.containsEsc`\n  // to whether the word contained a '\\u' escape.\n  //\n  // Incrementally adds only escaped chars, adding other chunks as-is\n  // as a micro-optimization.\n  //\n  // When `firstCode` is given, it assumes it is always an identifier start and\n  // will skip reading start position again\n\n  readWord1(firstCode: number | void): string {\n    this.state.containsEsc = false;\n    let word = \"\";\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n    if (firstCode !== undefined) {\n      this.state.pos += firstCode <= 0xffff ? 1 : 2;\n    }\n\n    while (this.state.pos < this.length) {\n      const ch = this.codePointAtPos(this.state.pos);\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (ch === charCodes.backslash) {\n        this.state.containsEsc = true;\n\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.pos;\n        const identifierCheck =\n          this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n\n        if (this.input.charCodeAt(++this.state.pos) !== charCodes.lowercaseU) {\n          this.raise(this.state.pos, Errors.MissingUnicodeEscape);\n          chunkStart = this.state.pos - 1;\n          continue;\n        }\n\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(escStart, Errors.EscapedCharNotAnIdentifier);\n          }\n\n          word += String.fromCodePoint(esc);\n        }\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n\n  // Read an identifier or keyword token. Will check for reserved\n  // words when necessary.\n\n  readWord(firstCode: number | void): void {\n    const word = this.readWord1(firstCode);\n    const type = keywordTypes.get(word) || tt.name;\n    this.finishToken(type, word);\n  }\n\n  checkKeywordEscapes(): void {\n    const kw = this.state.type.keyword;\n    if (kw && this.state.containsEsc) {\n      this.raise(this.state.start, Errors.InvalidEscapedReservedWord, kw);\n    }\n  }\n\n  braceIsBlock(prevType: TokenType): boolean {\n    const parent = this.curContext();\n    if (parent === ct.functionExpression || parent === ct.functionStatement) {\n      return true;\n    }\n    if (\n      prevType === tt.colon &&\n      (parent === ct.braceStatement || parent === ct.braceExpression)\n    ) {\n      return !parent.isExpr;\n    }\n\n    // The check for `tt.name && exprAllowed` detects whether we are\n    // after a `yield` or `of` construct. See the `updateContext` for\n    // `tt.name`.\n    if (\n      prevType === tt._return ||\n      (prevType === tt.name && this.state.exprAllowed)\n    ) {\n      return this.hasPrecedingLineBreak();\n    }\n\n    if (\n      prevType === tt._else ||\n      prevType === tt.semi ||\n      prevType === tt.eof ||\n      prevType === tt.parenR ||\n      prevType === tt.arrow\n    ) {\n      return true;\n    }\n\n    if (prevType === tt.braceL) {\n      return parent === ct.braceStatement;\n    }\n\n    if (\n      prevType === tt._var ||\n      prevType === tt._const ||\n      prevType === tt.name\n    ) {\n      return false;\n    }\n\n    if (prevType === tt.relational) {\n      // `class C<T> { ... }`\n      return true;\n    }\n\n    return !this.state.exprAllowed;\n  }\n\n  updateContext(prevType: TokenType): void {\n    const type = this.state.type;\n    let update;\n\n    if (type.keyword && (prevType === tt.dot || prevType === tt.questionDot)) {\n      this.state.exprAllowed = false;\n    } else if ((update = type.updateContext)) {\n      update.call(this, prevType);\n    } else {\n      this.state.exprAllowed = type.beforeExpr;\n    }\n  }\n}\n","// @flow\n\nimport {\n  CLASS_ELEMENT_KIND_ACCESSOR,\n  CLASS_ELEMENT_FLAG_STATIC,\n  type ClassElementTypes,\n} from \"./scopeflags\";\nimport { Errors, type raiseFunction } from \"../parser/error\";\n\nexport class ClassScope {\n  // A list of private named declared in the current class\n  privateNames: Set<string> = new Set();\n\n  // A list of private getters of setters without their counterpart\n  loneAccessors: Map<string, ClassElementTypes> = new Map();\n\n  // A list of private names used before being defined, mapping to\n  // their position.\n  undefinedPrivateNames: Map<string, number> = new Map();\n}\n\nexport default class ClassScopeHandler {\n  stack: Array<ClassScope> = [];\n  declare raise: raiseFunction;\n  undefinedPrivateNames: Map<string, number> = new Map();\n\n  constructor(raise: raiseFunction) {\n    this.raise = raise;\n  }\n\n  current(): ClassScope {\n    return this.stack[this.stack.length - 1];\n  }\n\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n\n  exit() {\n    const oldClassScope = this.stack.pop();\n\n    // Migrate the usage of not yet defined private names to the outer\n    // class scope, or raise an error if we reached the top-level scope.\n\n    const current = this.current();\n\n    // Array.from is needed because this is compiled to an array-like for loop\n    for (const [name, pos] of Array.from(oldClassScope.undefinedPrivateNames)) {\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, pos);\n        }\n      } else {\n        this.raise(pos, Errors.InvalidPrivateFieldResolution, name);\n      }\n    }\n  }\n\n  declarePrivateName(\n    name: string,\n    elementType: ClassElementTypes,\n    pos: number,\n  ) {\n    const classScope = this.current();\n    let redefined = classScope.privateNames.has(name);\n\n    if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {\n      const accessor = redefined && classScope.loneAccessors.get(name);\n      if (accessor) {\n        const oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;\n        const newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;\n\n        const oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;\n        const newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;\n\n        // The private name can be duplicated only if it is used by\n        // two accessors with different kind (get and set), and if\n        // they have the same placement (static or not).\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n\n        if (!redefined) classScope.loneAccessors.delete(name);\n      } else if (!redefined) {\n        classScope.loneAccessors.set(name, elementType);\n      }\n    }\n\n    if (redefined) {\n      this.raise(pos, Errors.PrivateNameRedeclaration, name);\n    }\n\n    classScope.privateNames.add(name);\n    classScope.undefinedPrivateNames.delete(name);\n  }\n\n  usePrivateName(name: string, pos: number) {\n    let classScope;\n    for (classScope of this.stack) {\n      if (classScope.privateNames.has(name)) return;\n    }\n\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, pos);\n    } else {\n      // top-level\n      this.raise(pos, Errors.InvalidPrivateFieldResolution, name);\n    }\n  }\n}\n","// @flow\n\nimport type { ErrorTemplate, raiseFunction } from \"../parser/error\";\n\n/*:: declare var invariant; */\n/**\n * @module util/expression-scope\n\nExpressionScope is used to track declaration errors in these ambiguous patterns:\n\n- CoverParenthesizedExpressionAndArrowParameterList\n  e.g. we don't know if `({ x })` is an parenthesized expression or an\n  arrow function parameters until we see an `=>` after `)`.\n\n- CoverCallExpressionAndAsyncArrowHead\n   e.g. we don't know if `async({ x })` is a call expression or an async arrow\n   function parameters until we see an `=>` after `)`\n\nThe following declaration errors (@see parser/error-message) will be recorded in\nsome expression scopes and thrown later when we know what the ambigous pattern is\n\n- AwaitBindingIdentifier\n- AwaitExpressionFormalParameter\n- YieldInParameter\n- InvalidParenthesizedAssignment when parenthesized is an identifier\n\nThere are four different expression scope\n- Expression\n  A general scope that represents program / function body / static block. No errors\n  will be recorded nor thrown in this scope.\n\n- MaybeArrowParameterDeclaration\n  A scope that represents ambiguous arrow head e.g. `(x)`. Errors will be recorded\n  alongside parent scopes and thrown when `ExpressionScopeHandler#validateAsPattern`\n  is called.\n\n- MaybeAsyncArrowParameterDeclaration\n  A scope that represents ambiguous async arrow head e.g. `async(x)`. Errors will\n  be recorded alongside parent scopes and thrown when\n  `ExpressionScopeHandler#validateAsPattern` is called.\n\n- ParameterDeclaration\n  A scope that represents unambiguous function parameters `function(x)`. Errors\n  recorded in this scope will be thrown immediately. No errors will be recorded in\n  this scope.\n\n// @see {@link https://docs.google.com/document/d/1FAvEp9EUK-G8kHfDIEo_385Hs2SUBCYbJ5H-NnLvq8M|V8 Expression Scope design docs}\n */\n\nconst kExpression = 0,\n  kMaybeArrowParameterDeclaration = 1,\n  kMaybeAsyncArrowParameterDeclaration = 2,\n  kParameterDeclaration = 3;\n\ntype ExpressionScopeType = 0 | 1 | 2 | 3;\n\nclass ExpressionScope {\n  type: ExpressionScopeType;\n\n  constructor(type: ExpressionScopeType = kExpression) {\n    this.type = type;\n  }\n\n  canBeArrowParameterDeclaration() {\n    return (\n      this.type === kMaybeAsyncArrowParameterDeclaration ||\n      this.type === kMaybeArrowParameterDeclaration\n    );\n  }\n\n  isCertainlyParameterDeclaration() {\n    return this.type === kParameterDeclaration;\n  }\n}\n\nclass ArrowHeadParsingScope extends ExpressionScope {\n  errors: Map</* pos */ number, /* message */ ErrorTemplate> = new Map();\n  constructor(type: 1 | 2) {\n    super(type);\n  }\n  recordDeclarationError(pos: number, template: ErrorTemplate) {\n    this.errors.set(pos, template);\n  }\n  clearDeclarationError(pos: number) {\n    this.errors.delete(pos);\n  }\n  iterateErrors(iterator: (template: ErrorTemplate, pos: number) => void) {\n    this.errors.forEach(iterator);\n  }\n}\n\nexport default class ExpressionScopeHandler {\n  stack: Array<ExpressionScope> = [new ExpressionScope()];\n  declare raise: raiseFunction;\n  constructor(raise: raiseFunction) {\n    this.raise = raise;\n  }\n  enter(scope: ExpressionScope) {\n    this.stack.push(scope);\n  }\n\n  exit() {\n    this.stack.pop();\n  }\n\n  /**\n   * Record likely parameter initializer errors\n   *\n   * When current scope is a ParameterDeclaration, the error will be thrown immediately,\n   * otherwise it will be recorded to any ancestry MaybeArrowParameterDeclaration and\n   * MaybeAsyncArrowParameterDeclaration scope until an Expression scope is seen.\n   * @param {number} pos Error position\n   * @param {ErrorTemplate} template Error template\n   * @memberof ExpressionScopeHandler\n   */\n  recordParameterInitializerError(pos: number, template: ErrorTemplate): void {\n    const { stack } = this;\n    let i = stack.length - 1;\n    let scope: ExpressionScope = stack[i];\n    while (!scope.isCertainlyParameterDeclaration()) {\n      if (scope.canBeArrowParameterDeclaration()) {\n        /*:: invariant(scope instanceof ArrowHeadParsingScope) */\n        scope.recordDeclarationError(pos, template);\n      } else {\n        /*:: invariant(scope.type == kExpression) */\n        // Type-Expression is the boundary where initializer error can populate to\n        return;\n      }\n      scope = stack[--i];\n    }\n    /* eslint-disable @babel/development-internal/dry-error-messages */\n    this.raise(pos, template);\n  }\n\n  /**\n   * Record parenthesized identifier errors\n   *\n   * A parenthesized identifier in LHS can be ambiguous because the assignment\n   * can be transformed to an assignable later, but not vice versa:\n   * For example, in `([(a) = []] = []) => {}`, we think `(a) = []` is an LHS in `[(a) = []]`,\n   * an LHS within `[(a) = []] = []`. However the LHS chain is then transformed by toAssignable,\n   * and we should throw assignment `(a)`, which is only valid in LHS. Hence we record the\n   * location of parenthesized `(a)` to current scope if it is one of MaybeArrowParameterDeclaration\n   * and MaybeAsyncArrowParameterDeclaration\n   *\n   * Unlike `recordParameterInitializerError`, we don't record to ancestry scope because we\n   * validate arrow head parsing scope before exit, and then the LHS will be unambiguous:\n   * For example, in `( x = ( [(a) = []] = [] ) ) => {}`, we should not record `(a)` in `( x = ... ) =>`\n   * arrow scope because when we finish parsing `( [(a) = []] = [] )`, it is an unambiguous assignment\n   * expression and can not be cast to pattern\n   * @param {number} pos\n   * @param {ErrorTemplate} template\n   * @returns {void}\n   * @memberof ExpressionScopeHandler\n   */\n  recordParenthesizedIdentifierError(\n    pos: number,\n    template: ErrorTemplate,\n  ): void {\n    const { stack } = this;\n    const scope: ExpressionScope = stack[stack.length - 1];\n    if (scope.isCertainlyParameterDeclaration()) {\n      this.raise(pos, template);\n    } else if (scope.canBeArrowParameterDeclaration()) {\n      /*:: invariant(scope instanceof ArrowHeadParsingScope) */\n      scope.recordDeclarationError(pos, template);\n    } else {\n      return;\n    }\n  }\n\n  /**\n   * Record likely async arrow parameter errors\n   *\n   * Errors will be recorded to any ancestry MaybeAsyncArrowParameterDeclaration\n   * scope until an Expression scope is seen.\n   * @param {number} pos\n   * @param {ErrorTemplate} template\n   * @memberof ExpressionScopeHandler\n   */\n  recordAsyncArrowParametersError(pos: number, template: ErrorTemplate): void {\n    const { stack } = this;\n    let i = stack.length - 1;\n    let scope: ExpressionScope = stack[i];\n    while (scope.canBeArrowParameterDeclaration()) {\n      if (scope.type === kMaybeAsyncArrowParameterDeclaration) {\n        /*:: invariant(scope instanceof ArrowHeadParsingScope) */\n        scope.recordDeclarationError(pos, template);\n      }\n      scope = stack[--i];\n    }\n  }\n\n  validateAsPattern(): void {\n    const { stack } = this;\n    const currentScope = stack[stack.length - 1];\n    if (!currentScope.canBeArrowParameterDeclaration()) return;\n    /*:: invariant(currentScope instanceof ArrowHeadParsingScope) */\n    currentScope.iterateErrors((template, pos) => {\n      /* eslint-disable @babel/development-internal/dry-error-messages */\n      this.raise(pos, template);\n      // iterate from parent scope\n      let i = stack.length - 2;\n      let scope = stack[i];\n      while (scope.canBeArrowParameterDeclaration()) {\n        /*:: invariant(scope instanceof ArrowHeadParsingScope) */\n        scope.clearDeclarationError(pos);\n        scope = stack[--i];\n      }\n    });\n  }\n}\n\nexport function newParameterDeclarationScope() {\n  return new ExpressionScope(kParameterDeclaration);\n}\n\nexport function newArrowHeadScope() {\n  return new ArrowHeadParsingScope(kMaybeArrowParameterDeclaration);\n}\n\nexport function newAsyncArrowScope() {\n  return new ArrowHeadParsingScope(kMaybeAsyncArrowParameterDeclaration);\n}\n\nexport function newExpressionScope() {\n  return new ExpressionScope();\n}\n","// @flow\n\nimport { types as tt, TokenType } from \"../tokenizer/types\";\nimport Tokenizer from \"../tokenizer\";\nimport State from \"../tokenizer/state\";\nimport type { Node } from \"../types\";\nimport { lineBreak } from \"../util/whitespace\";\nimport { isIdentifierChar } from \"../util/identifier\";\nimport ClassScopeHandler from \"../util/class-scope\";\nimport ExpressionScopeHandler from \"../util/expression-scope\";\nimport { SCOPE_PROGRAM } from \"../util/scopeflags\";\nimport ProductionParameterHandler, {\n  PARAM_AWAIT,\n  PARAM,\n} from \"../util/production-parameter\";\nimport { Errors, type ErrorTemplate, ErrorCodes } from \"./error\";\n/*::\nimport type ScopeHandler from \"../util/scope\";\n*/\n\ntype TryParse<Node, Error, Thrown, Aborted, FailState> = {\n  node: Node,\n  error: Error,\n  thrown: Thrown,\n  aborted: Aborted,\n  failState: FailState,\n};\n\n// ## Parser utilities\n\nexport default class UtilParser extends Tokenizer {\n  // Forward-declaration: defined in parser/index.js\n  /*::\n  +getScopeHandler: () => Class<ScopeHandler<*>>;\n  */\n\n  // TODO\n\n  addExtra(node: Node, key: string, val: any): void {\n    if (!node) return;\n\n    const extra = (node.extra = node.extra || {});\n    extra[key] = val;\n  }\n\n  // TODO\n\n  isRelational(op: \"<\" | \">\"): boolean {\n    return this.match(tt.relational) && this.state.value === op;\n  }\n\n  // TODO\n\n  expectRelational(op: \"<\" | \">\"): void {\n    if (this.isRelational(op)) {\n      this.next();\n    } else {\n      this.unexpected(null, tt.relational);\n    }\n  }\n\n  // Tests whether parsed token is a contextual keyword.\n\n  isContextual(name: string): boolean {\n    return (\n      this.match(tt.name) &&\n      this.state.value === name &&\n      !this.state.containsEsc\n    );\n  }\n\n  isUnparsedContextual(nameStart: number, name: string): boolean {\n    const nameEnd = nameStart + name.length;\n    if (this.input.slice(nameStart, nameEnd) === name) {\n      const nextCh = this.input.charCodeAt(nameEnd);\n      return !(\n        isIdentifierChar(nextCh) ||\n        // check if `nextCh is between 0xd800 - 0xdbff,\n        // if `nextCh` is NaN, `NaN & 0xfc00` is 0, the function\n        // returns true\n        (nextCh & 0xfc00) === 0xd800\n      );\n    }\n    return false;\n  }\n\n  isLookaheadContextual(name: string): boolean {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n\n  // Consumes contextual keyword if possible.\n\n  eatContextual(name: string): boolean {\n    return this.isContextual(name) && this.eat(tt.name);\n  }\n\n  // Asserts that following token is given contextual keyword.\n\n  expectContextual(name: string, template?: ErrorTemplate): void {\n    if (!this.eatContextual(name)) this.unexpected(null, template);\n  }\n\n  // Test whether a semicolon can be inserted at the current position.\n\n  canInsertSemicolon(): boolean {\n    return (\n      this.match(tt.eof) ||\n      this.match(tt.braceR) ||\n      this.hasPrecedingLineBreak()\n    );\n  }\n\n  hasPrecedingLineBreak(): boolean {\n    return lineBreak.test(\n      this.input.slice(this.state.lastTokEnd, this.state.start),\n    );\n  }\n\n  hasFollowingLineBreak(): boolean {\n    return lineBreak.test(\n      this.input.slice(this.state.end, this.nextTokenStart()),\n    );\n  }\n\n  // TODO\n\n  isLineTerminator(): boolean {\n    return this.eat(tt.semi) || this.canInsertSemicolon();\n  }\n\n  // Consume a semicolon, or, failing that, see if we are allowed to\n  // pretend that there is a semicolon at this position.\n\n  semicolon(allowAsi: boolean = true): void {\n    if (allowAsi ? this.isLineTerminator() : this.eat(tt.semi)) return;\n    this.raise(this.state.lastTokEnd, Errors.MissingSemicolon);\n  }\n\n  // Expect a token of a given type. If found, consume it, otherwise,\n  // raise an unexpected token error at given pos.\n\n  expect(type: TokenType, pos?: ?number): void {\n    this.eat(type) || this.unexpected(pos, type);\n  }\n\n  // Throws if the current token and the prev one are separated by a space.\n  assertNoSpace(message: string = \"Unexpected space.\"): void {\n    if (this.state.start > this.state.lastTokEnd) {\n      /* eslint-disable @babel/development-internal/dry-error-messages */\n      this.raise(this.state.lastTokEnd, {\n        code: ErrorCodes.SyntaxError,\n        reasonCode: \"UnexpectedSpace\",\n        template: message,\n      });\n      /* eslint-enable @babel/development-internal/dry-error-messages */\n    }\n  }\n\n  // Raise an unexpected token error. Can take the expected token type\n  // instead of a message string.\n\n  unexpected(\n    pos: ?number,\n    messageOrType: ErrorTemplate | TokenType = {\n      code: ErrorCodes.SyntaxError,\n      reasonCode: \"UnexpectedToken\",\n      template: \"Unexpected token\",\n    },\n  ): empty {\n    if (messageOrType instanceof TokenType) {\n      messageOrType = {\n        code: ErrorCodes.SyntaxError,\n        reasonCode: \"UnexpectedToken\",\n        template: `Unexpected token, expected \"${messageOrType.label}\"`,\n      };\n    }\n    /* eslint-disable @babel/development-internal/dry-error-messages */\n    throw this.raise(pos != null ? pos : this.state.start, messageOrType);\n    /* eslint-enable @babel/development-internal/dry-error-messages */\n  }\n\n  expectPlugin(name: string, pos?: ?number): true {\n    if (!this.hasPlugin(name)) {\n      throw this.raiseWithData(\n        pos != null ? pos : this.state.start,\n        { missingPlugin: [name] },\n        `This experimental syntax requires enabling the parser plugin: '${name}'`,\n      );\n    }\n\n    return true;\n  }\n\n  expectOnePlugin(names: Array<string>, pos?: ?number): void {\n    if (!names.some(n => this.hasPlugin(n))) {\n      throw this.raiseWithData(\n        pos != null ? pos : this.state.start,\n        { missingPlugin: names },\n        `This experimental syntax requires enabling one of the following parser plugin(s): '${names.join(\n          \", \",\n        )}'`,\n      );\n    }\n  }\n\n  // tryParse will clone parser state.\n  // It is expensive and should be used with cautions\n  tryParse<T: Node | $ReadOnlyArray<Node>>(\n    fn: (abort: (node?: T) => empty) => T,\n    oldState: State = this.state.clone(),\n  ):\n    | TryParse<T, null, false, false, null>\n    | TryParse<T | null, SyntaxError, boolean, false, State>\n    | TryParse<T | null, null, false, true, State> {\n    const abortSignal: { node: T | null } = { node: null };\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        throw abortSignal;\n      });\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        // tokensLength should be preserved during error recovery mode\n        // since the parser does not halt and will instead parse the\n        // remaining tokens\n        this.state.tokensLength = failState.tokensLength;\n        return {\n          node,\n          error: (failState.errors[oldState.errors.length]: SyntaxError),\n          thrown: false,\n          aborted: false,\n          failState,\n        };\n      }\n\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null,\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n      if (error instanceof SyntaxError) {\n        return { node: null, error, thrown: true, aborted: false, failState };\n      }\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState,\n        };\n      }\n\n      throw error;\n    }\n  }\n\n  checkExpressionErrors(\n    refExpressionErrors: ?ExpressionErrors,\n    andThrow: boolean,\n  ) {\n    if (!refExpressionErrors) return false;\n    const { shorthandAssign, doubleProto } = refExpressionErrors;\n    if (!andThrow) return shorthandAssign >= 0 || doubleProto >= 0;\n    if (shorthandAssign >= 0) {\n      this.unexpected(shorthandAssign);\n    }\n    if (doubleProto >= 0) {\n      this.raise(doubleProto, Errors.DuplicateProto);\n    }\n  }\n\n  /**\n   * Test if current token is a literal property name\n   * https://tc39.es/ecma262/#prod-LiteralPropertyName\n   * LiteralPropertyName:\n   *   IdentifierName\n   *   StringLiteral\n   *   NumericLiteral\n   *   BigIntLiteral\n   */\n  isLiteralPropertyName(): boolean {\n    return (\n      this.match(tt.name) ||\n      !!this.state.type.keyword ||\n      this.match(tt.string) ||\n      this.match(tt.num) ||\n      this.match(tt.bigint) ||\n      this.match(tt.decimal)\n    );\n  }\n\n  /*\n   * Test if given node is a PrivateName\n   * will be overridden in ESTree plugin\n   */\n  isPrivateName(node: Node): boolean {\n    return node.type === \"PrivateName\";\n  }\n\n  /*\n   * Return the string value of a given private name\n   * WITHOUT `#`\n   * @see {@link https://tc39.es/proposal-class-fields/#sec-private-names-static-semantics-stringvalue}\n   */\n  getPrivateNameSV(node: Node): string {\n    return node.id.name;\n  }\n\n  /*\n   * Return whether the given node is a member/optional chain that\n   * contains a private name as its property\n   * It is overridden in ESTree plugin\n   */\n  hasPropertyAsPrivateName(node: Node): boolean {\n    return (\n      (node.type === \"MemberExpression\" ||\n        node.type === \"OptionalMemberExpression\") &&\n      this.isPrivateName(node.property)\n    );\n  }\n\n  isOptionalChain(node: Node): boolean {\n    return (\n      node.type === \"OptionalMemberExpression\" ||\n      node.type === \"OptionalCallExpression\"\n    );\n  }\n\n  isObjectProperty(node: Node): boolean {\n    return node.type === \"ObjectProperty\";\n  }\n\n  isObjectMethod(node: Node): boolean {\n    return node.type === \"ObjectMethod\";\n  }\n\n  initializeScopes(\n    inModule: boolean = this.options.sourceType === \"module\",\n  ): () => void {\n    // Initialize state\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n\n    const oldExportedIdentifiers = this.state.exportedIdentifiers;\n    this.state.exportedIdentifiers = [];\n\n    // initialize scopes\n    const oldInModule = this.inModule;\n    this.inModule = inModule;\n\n    const oldScope = this.scope;\n    const ScopeHandler = this.getScopeHandler();\n    this.scope = new ScopeHandler(this.raise.bind(this), this.inModule);\n\n    const oldProdParam = this.prodParam;\n    this.prodParam = new ProductionParameterHandler();\n\n    const oldClassScope = this.classScope;\n    this.classScope = new ClassScopeHandler(this.raise.bind(this));\n\n    const oldExpressionScope = this.expressionScope;\n    this.expressionScope = new ExpressionScopeHandler(this.raise.bind(this));\n\n    return () => {\n      // Revert state\n      this.state.labels = oldLabels;\n      this.state.exportedIdentifiers = oldExportedIdentifiers;\n\n      // Revert scopes\n      this.inModule = oldInModule;\n      this.scope = oldScope;\n      this.prodParam = oldProdParam;\n      this.classScope = oldClassScope;\n      this.expressionScope = oldExpressionScope;\n    };\n  }\n\n  enterInitialScopes() {\n    let paramFlags = PARAM;\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n  }\n}\n\n/**\n * The ExpressionErrors is a context struct used to track\n * - **shorthandAssign**: track initializer `=` position when parsing ambiguous\n *   patterns. When we are sure the parsed pattern is a RHS, which means it is\n *   not a pattern, we will throw on this position on invalid assign syntax,\n *   otherwise it will be reset to -1\n * - **doubleProto**: track the duplicate `__proto__` key position when parsing\n *   ambiguous object patterns. When we are sure the parsed pattern is a RHS,\n *   which means it is an object literal, we will throw on this position for\n *   __proto__ redefinition, otherwise it will be reset to -1\n */\nexport class ExpressionErrors {\n  shorthandAssign = -1;\n  doubleProto = -1;\n}\n","// @flow\n\nimport type Parser from \"./index\";\nimport UtilParser from \"./util\";\nimport { SourceLocation, type Position } from \"../util/location\";\nimport type { Comment, Node as NodeType, NodeBase } from \"../types\";\n\n// Start an AST node, attaching a start offset.\n\nclass Node implements NodeBase {\n  constructor(parser: Parser, pos: number, loc: Position) {\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser?.options.ranges) this.range = [pos, 0];\n    if (parser?.filename) this.loc.filename = parser.filename;\n  }\n\n  type: string;\n  start: number;\n  end: number;\n  loc: SourceLocation;\n  range: [number, number];\n  leadingComments: Array<Comment>;\n  trailingComments: Array<Comment>;\n  innerComments: Array<Comment>;\n  extra: { [key: string]: any };\n\n  __clone(): this {\n    // $FlowIgnore\n    const newNode: any = new Node();\n    const keys = Object.keys(this);\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      // Do not clone comments that are already attached to the node\n      if (\n        key !== \"leadingComments\" &&\n        key !== \"trailingComments\" &&\n        key !== \"innerComments\"\n      ) {\n        // $FlowIgnore\n        newNode[key] = this[key];\n      }\n    }\n\n    return newNode;\n  }\n}\n\nexport class NodeUtils extends UtilParser {\n  startNode<T: NodeType>(): T {\n    // $FlowIgnore\n    return new Node(this, this.state.start, this.state.startLoc);\n  }\n\n  startNodeAt<T: NodeType>(pos: number, loc: Position): T {\n    // $FlowIgnore\n    return new Node(this, pos, loc);\n  }\n\n  /** Start a new node with a previous node's location. */\n  startNodeAtNode<T: NodeType>(type: NodeType): T {\n    return this.startNodeAt(type.start, type.loc.start);\n  }\n\n  // Finish an AST node, adding `type` and `end` properties.\n\n  finishNode<T: NodeType>(node: T, type: string): T {\n    return this.finishNodeAt(\n      node,\n      type,\n      this.state.lastTokEnd,\n      this.state.lastTokEndLoc,\n    );\n  }\n\n  // Finish node at given position\n\n  finishNodeAt<T: NodeType>(\n    node: T,\n    type: string,\n    pos: number,\n    loc: Position,\n  ): T {\n    if (process.env.NODE_ENV !== \"production\" && node.end > 0) {\n      throw new Error(\n        \"Do not call finishNode*() twice on the same node.\" +\n          \" Instead use resetEndLocation() or change type directly.\",\n      );\n    }\n    node.type = type;\n    node.end = pos;\n    node.loc.end = loc;\n    if (this.options.ranges) node.range[1] = pos;\n    this.processComment(node);\n    return node;\n  }\n\n  resetStartLocation(node: NodeBase, start: number, startLoc: Position): void {\n    node.start = start;\n    node.loc.start = startLoc;\n    if (this.options.ranges) node.range[0] = start;\n  }\n\n  resetEndLocation(\n    node: NodeBase,\n    end?: number = this.state.lastTokEnd,\n    endLoc?: Position = this.state.lastTokEndLoc,\n  ): void {\n    node.end = end;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = end;\n  }\n\n  /**\n   * Reset the start location of node to the start location of locationNode\n   */\n  resetStartLocationFromNode(node: NodeBase, locationNode: NodeBase): void {\n    this.resetStartLocation(node, locationNode.start, locationNode.loc.start);\n  }\n}\n","// @flow\n\n/*:: declare var invariant; */\nimport * as charCodes from \"charcodes\";\nimport { types as tt, type TokenType } from \"../tokenizer/types\";\nimport type {\n  TSParameterProperty,\n  Decorator,\n  Expression,\n  Node,\n  Pattern,\n  RestElement,\n  SpreadElement,\n  /*:: Identifier, */\n  /*:: ObjectExpression, */\n  /*:: ObjectPattern, */\n} from \"../types\";\nimport type { Pos, Position } from \"../util/location\";\nimport {\n  isStrictBindOnlyReservedWord,\n  isStrictBindReservedWord,\n} from \"../util/identifier\";\nimport { NodeUtils } from \"./node\";\nimport { type BindingTypes, BIND_NONE } from \"../util/scopeflags\";\nimport { ExpressionErrors } from \"./util\";\nimport { Errors } from \"./error\";\n\nconst unwrapParenthesizedExpression = (node: Node): Node => {\n  return node.type === \"ParenthesizedExpression\"\n    ? unwrapParenthesizedExpression(node.expression)\n    : node;\n};\n\nexport default class LValParser extends NodeUtils {\n  // Forward-declaration: defined in expression.js\n  /*::\n  +parseIdentifier: (liberal?: boolean) => Identifier;\n  +parseMaybeAssignAllowIn: (\n    refExpressionErrors?: ?ExpressionErrors,\n    afterLeftParse?: Function,\n    refNeedsArrowPos?: ?Pos,\n  ) => Expression;\n  +parseObjectLike: <T: ObjectPattern | ObjectExpression>(\n    close: TokenType,\n    isPattern: boolean,\n    isRecord?: ?boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n  ) => T;\n  */\n  // Forward-declaration: defined in statement.js\n  /*::\n  +parseDecorator: () => Decorator;\n  */\n\n  /**\n   * Convert existing expression atom to assignable pattern\n   * if possible. Also checks invalid destructuring targets:\n\n   - Parenthesized Destructuring patterns\n   - RestElement is not the last element\n   - Missing `=` in assignment pattern\n\n   NOTE: There is a corresponding \"isAssignable\" method in flow.js.\n   When this one is updated, please check if also that one needs to be updated.\n\n   * @param {Node} node The expression atom\n   * @param {boolean} [isLHS=false] Whether we are parsing a LeftHandSideExpression. If isLHS is `true`, the following cases are allowed:\n                                    `[(a)] = [0]`, `[(a.b)] = [0]`\n\n   * @returns {Node} The converted assignable pattern\n   * @memberof LValParser\n   */\n  toAssignable(node: Node, isLHS: boolean = false): Node {\n    let parenthesized = undefined;\n    if (node.type === \"ParenthesizedExpression\" || node.extra?.parenthesized) {\n      parenthesized = unwrapParenthesizedExpression(node);\n      if (isLHS) {\n        // an LHS can be reinterpreted to a binding pattern but not vice versa.\n        // therefore a parenthesized identifier is ambiguous until we are sure it is an assignment expression\n        // i.e. `([(a) = []] = []) => {}`\n        // see also `recordParenthesizedIdentifierError` signature in packages/babel-parser/src/util/expression-scope.js\n        if (parenthesized.type === \"Identifier\") {\n          this.expressionScope.recordParenthesizedIdentifierError(\n            node.start,\n            Errors.InvalidParenthesizedAssignment,\n          );\n        } else if (parenthesized.type !== \"MemberExpression\") {\n          // A parenthesized member expression can be in LHS but not in pattern.\n          // If the LHS is later interpreted as a pattern, `checkLVal` will throw for member expression binding\n          // i.e. `([(a.b) = []] = []) => {}`\n          this.raise(node.start, Errors.InvalidParenthesizedAssignment);\n        }\n      } else {\n        this.raise(node.start, Errors.InvalidParenthesizedAssignment);\n      }\n    }\n\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n        break;\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n        for (\n          let i = 0, length = node.properties.length, last = length - 1;\n          i < length;\n          i++\n        ) {\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n\n          if (\n            isLast &&\n            prop.type === \"RestElement\" &&\n            node.extra?.trailingComma\n          ) {\n            this.raiseRestNotLast(node.extra.trailingComma);\n          }\n        }\n        break;\n\n      case \"ObjectProperty\":\n        this.toAssignable(node.value, isLHS);\n        break;\n\n      case \"SpreadElement\": {\n        this.checkToRestConversion(node);\n\n        node.type = \"RestElement\";\n        const arg = node.argument;\n        this.toAssignable(arg, isLHS);\n        break;\n      }\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(node.elements, node.extra?.trailingComma, isLHS);\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(node.left.end, Errors.MissingEqInAssignment);\n        }\n\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isLHS);\n        break;\n\n      case \"ParenthesizedExpression\":\n        /*::invariant (parenthesized !== undefined) */\n        this.toAssignable(parenthesized, isLHS);\n        break;\n\n      default:\n      // We don't know how to deal with this node. It will\n      // be reported by a later call to checkLVal\n    }\n    return node;\n  }\n\n  toAssignableObjectExpressionProp(\n    prop: Node,\n    isLast: boolean,\n    isLHS: boolean,\n  ) {\n    if (prop.type === \"ObjectMethod\") {\n      const error =\n        prop.kind === \"get\" || prop.kind === \"set\"\n          ? Errors.PatternHasAccessor\n          : Errors.PatternHasMethod;\n\n      /* eslint-disable @babel/development-internal/dry-error-messages */\n      this.raise(prop.key.start, error);\n      /* eslint-enable @babel/development-internal/dry-error-messages */\n    } else if (prop.type === \"SpreadElement\" && !isLast) {\n      this.raiseRestNotLast(prop.start);\n    } else {\n      this.toAssignable(prop, isLHS);\n    }\n  }\n\n  // Convert list of expression atoms to binding list.\n\n  toAssignableList(\n    exprList: Expression[],\n    trailingCommaPos?: ?number,\n    isLHS: boolean,\n  ): $ReadOnlyArray<Pattern> {\n    let end = exprList.length;\n    if (end) {\n      const last = exprList[end - 1];\n      if (last?.type === \"RestElement\") {\n        --end;\n      } else if (last?.type === \"SpreadElement\") {\n        last.type = \"RestElement\";\n        let arg = last.argument;\n        this.toAssignable(arg, isLHS);\n        arg = unwrapParenthesizedExpression(arg);\n        if (\n          arg.type !== \"Identifier\" &&\n          arg.type !== \"MemberExpression\" &&\n          arg.type !== \"ArrayPattern\" &&\n          arg.type !== \"ObjectPattern\"\n        ) {\n          this.unexpected(arg.start);\n        }\n\n        if (trailingCommaPos) {\n          this.raiseTrailingCommaAfterRest(trailingCommaPos);\n        }\n\n        --end;\n      }\n    }\n    for (let i = 0; i < end; i++) {\n      const elt = exprList[i];\n      if (elt) {\n        this.toAssignable(elt, isLHS);\n        if (elt.type === \"RestElement\") {\n          this.raiseRestNotLast(elt.start);\n        }\n      }\n    }\n    return exprList;\n  }\n\n  // Convert list of expression atoms to a list of\n\n  toReferencedList(\n    exprList: $ReadOnlyArray<?Expression>,\n    isParenthesizedExpr?: boolean, // eslint-disable-line no-unused-vars\n  ): $ReadOnlyArray<?Expression> {\n    return exprList;\n  }\n\n  toReferencedListDeep(\n    exprList: $ReadOnlyArray<?Expression>,\n    isParenthesizedExpr?: boolean,\n  ): void {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n\n    for (const expr of exprList) {\n      if (expr?.type === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n\n  // Parses spread element.\n\n  parseSpread(\n    refExpressionErrors: ?ExpressionErrors,\n    refNeedsArrowPos?: ?Pos,\n  ): SpreadElement {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssignAllowIn(\n      refExpressionErrors,\n      undefined,\n      refNeedsArrowPos,\n    );\n    return this.finishNode(node, \"SpreadElement\");\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingRestProperty\n  // https://tc39.es/ecma262/#prod-BindingRestElement\n  parseRestBinding(): RestElement {\n    const node = this.startNode();\n    this.next(); // eat `...`\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n\n  // Parses lvalue (assignable) atom.\n  parseBindingAtom(): Pattern {\n    // https://tc39.es/ecma262/#prod-BindingPattern\n    switch (this.state.type) {\n      case tt.bracketL: {\n        const node = this.startNode();\n        this.next();\n        node.elements = this.parseBindingList(\n          tt.bracketR,\n          charCodes.rightSquareBracket,\n          true,\n        );\n        return this.finishNode(node, \"ArrayPattern\");\n      }\n\n      case tt.braceL:\n        return this.parseObjectLike(tt.braceR, true);\n    }\n\n    // https://tc39.es/ecma262/#prod-BindingIdentifier\n    return this.parseIdentifier();\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingElementList\n  parseBindingList(\n    close: TokenType,\n    closeCharCode: $Values<typeof charCodes>,\n    allowEmpty?: boolean,\n    allowModifiers?: boolean,\n  ): $ReadOnlyArray<Pattern | TSParameterProperty> {\n    const elts: Array<Pattern | TSParameterProperty> = [];\n    let first = true;\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n      }\n      if (allowEmpty && this.match(tt.comma)) {\n        // $FlowFixMe This method returns `$ReadOnlyArray<?Pattern>` if `allowEmpty` is set.\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(tt.ellipsis)) {\n        elts.push(this.parseAssignableListItemTypes(this.parseRestBinding()));\n        this.checkCommaAfterRest(closeCharCode);\n        this.expect(close);\n        break;\n      } else {\n        const decorators = [];\n        if (this.match(tt.at) && this.hasPlugin(\"decorators\")) {\n          this.raise(this.state.start, Errors.UnsupportedParameterDecorator);\n        }\n        // invariant: hasPlugin(\"decorators-legacy\")\n        while (this.match(tt.at)) {\n          decorators.push(this.parseDecorator());\n        }\n        elts.push(this.parseAssignableListItem(allowModifiers, decorators));\n      }\n    }\n    return elts;\n  }\n\n  parseAssignableListItem(\n    allowModifiers: ?boolean,\n    decorators: Decorator[],\n  ): Pattern | TSParameterProperty {\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n    return elt;\n  }\n\n  // Used by flow/typescript plugin to add type annotations to binding elements\n  parseAssignableListItemTypes(param: Pattern): Pattern {\n    return param;\n  }\n\n  // Parses assignment pattern around given atom if possible.\n  // https://tc39.es/ecma262/#prod-BindingElement\n  parseMaybeDefault(\n    startPos?: ?number,\n    startLoc?: ?Position,\n    left?: ?Pattern,\n  ): Pattern {\n    startLoc = startLoc ?? this.state.startLoc;\n    startPos = startPos ?? this.state.start;\n    // $FlowIgnore\n    left = left ?? this.parseBindingAtom();\n    if (!this.eat(tt.eq)) return left;\n\n    const node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssignAllowIn();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n\n  /**\n   * Verify that if a node is an lval - something that can be assigned to.\n   *\n   * @param {Expression} expr The given node\n   * @param {string} contextDescription The auxiliary context information printed when error is thrown\n   * @param {BindingTypes} [bindingType=BIND_NONE] The desired binding type. If the given node is an identifier and `bindingType` is not\n                                                   BIND_NONE, `checkLVal` will register binding to the parser scope\n                                                   See also src/util/scopeflags.js\n   * @param {?Set<string>} checkClashes An optional string set to check if an identifier name is included. `checkLVal` will add checked\n                                        identifier name to `checkClashes` It is used in tracking duplicates in function parameter lists. If\n                                        it is nullish, `checkLVal` will skip duplicate checks\n   * @param {boolean} [disallowLetBinding] Whether an identifier named \"let\" should be disallowed\n   * @param {boolean} [strictModeChanged=false] Whether an identifier has been parsed in a sloppy context but should be reinterpreted as\n                                                strict-mode. e.g. `(arguments) => { \"use strict \"}`\n   * @memberof LValParser\n   */\n  checkLVal(\n    expr: Expression,\n    contextDescription: string,\n    bindingType: BindingTypes = BIND_NONE,\n    checkClashes: ?Set<string>,\n    disallowLetBinding?: boolean,\n    strictModeChanged?: boolean = false,\n  ): void {\n    switch (expr.type) {\n      case \"Identifier\": {\n        const { name } = expr;\n        if (\n          this.state.strict &&\n          // \"Global\" reserved words have already been checked by parseIdentifier,\n          // unless they have been found in the id or parameters of a strict-mode\n          // function in a sloppy context.\n          (strictModeChanged\n            ? isStrictBindReservedWord(name, this.inModule)\n            : isStrictBindOnlyReservedWord(name))\n        ) {\n          this.raise(\n            expr.start,\n            bindingType === BIND_NONE\n              ? Errors.StrictEvalArguments\n              : Errors.StrictEvalArgumentsBinding,\n            name,\n          );\n        }\n\n        if (checkClashes) {\n          if (checkClashes.has(name)) {\n            this.raise(expr.start, Errors.ParamDupe);\n          } else {\n            checkClashes.add(name);\n          }\n        }\n        if (disallowLetBinding && name === \"let\") {\n          this.raise(expr.start, Errors.LetInLexicalBinding);\n        }\n        if (!(bindingType & BIND_NONE)) {\n          this.scope.declareName(name, bindingType, expr.start);\n        }\n        break;\n      }\n\n      case \"MemberExpression\":\n        if (bindingType !== BIND_NONE) {\n          this.raise(expr.start, Errors.InvalidPropertyBindingPattern);\n        }\n        break;\n\n      case \"ObjectPattern\":\n        for (let prop of expr.properties) {\n          if (this.isObjectProperty(prop)) prop = prop.value;\n          // If we find here an ObjectMethod, it's because this was originally\n          // an ObjectExpression which has then been converted.\n          // toAssignable already reported this error with a nicer message.\n          else if (this.isObjectMethod(prop)) continue;\n\n          this.checkLVal(\n            prop,\n            \"object destructuring pattern\",\n            bindingType,\n            checkClashes,\n            disallowLetBinding,\n          );\n        }\n        break;\n\n      case \"ArrayPattern\":\n        for (const elem of expr.elements) {\n          if (elem) {\n            this.checkLVal(\n              elem,\n              \"array destructuring pattern\",\n              bindingType,\n              checkClashes,\n              disallowLetBinding,\n            );\n          }\n        }\n        break;\n\n      case \"AssignmentPattern\":\n        this.checkLVal(\n          expr.left,\n          \"assignment pattern\",\n          bindingType,\n          checkClashes,\n        );\n        break;\n\n      case \"RestElement\":\n        this.checkLVal(\n          expr.argument,\n          \"rest element\",\n          bindingType,\n          checkClashes,\n        );\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.checkLVal(\n          expr.expression,\n          \"parenthesized expression\",\n          bindingType,\n          checkClashes,\n        );\n        break;\n\n      default: {\n        this.raise(\n          expr.start,\n          bindingType === BIND_NONE\n            ? Errors.InvalidLhs\n            : Errors.InvalidLhsBinding,\n          contextDescription,\n        );\n      }\n    }\n  }\n\n  checkToRestConversion(node: SpreadElement): void {\n    if (\n      node.argument.type !== \"Identifier\" &&\n      node.argument.type !== \"MemberExpression\"\n    ) {\n      this.raise(node.argument.start, Errors.InvalidRestAssignmentPattern);\n    }\n  }\n\n  checkCommaAfterRest(close: $Values<typeof charCodes>): void {\n    if (this.match(tt.comma)) {\n      if (this.lookaheadCharCode() === close) {\n        this.raiseTrailingCommaAfterRest(this.state.start);\n      } else {\n        this.raiseRestNotLast(this.state.start);\n      }\n    }\n  }\n\n  raiseRestNotLast(pos: number) {\n    throw this.raise(pos, Errors.ElementAfterRest);\n  }\n\n  raiseTrailingCommaAfterRest(pos: number) {\n    this.raise(pos, Errors.RestTrailingComma);\n  }\n}\n","// @flow\n\n// A recursive descent parser operates by defining functions for all\n// syntactic elements, and recursively calling those, each function\n// advancing the input stream and returning an AST node. Precedence\n// of constructs (for example, the fact that `!x[1]` means `!(x[1])`\n// instead of `(!x)[1]` is handled by the fact that the parser\n// function that parses unary prefix operators is called first, and\n// in turn calls the function that parses `[]` subscripts — that\n// way, it'll receive the node for `x[1]` already parsed, and wraps\n// *that* in the unary operator node.\n//\n// Acorn uses an [operator precedence parser][opp] to handle binary\n// operator precedence, because it is much more compact than using\n// the technique outlined above, which uses different, nesting\n// functions to specify precedence, for all of the ten binary\n// precedence levels that JavaScript defines.\n//\n// [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser\n\nimport { types as tt, type TokenType } from \"../tokenizer/types\";\nimport { types as ct } from \"../tokenizer/context\";\nimport * as N from \"../types\";\nimport LValParser from \"./lval\";\nimport {\n  isKeyword,\n  isReservedWord,\n  isStrictReservedWord,\n  isStrictBindReservedWord,\n  isIdentifierStart,\n} from \"../util/identifier\";\nimport type { Pos } from \"../util/location\";\nimport { Position } from \"../util/location\";\nimport * as charCodes from \"charcodes\";\nimport {\n  BIND_OUTSIDE,\n  BIND_VAR,\n  SCOPE_ARROW,\n  SCOPE_CLASS,\n  SCOPE_DIRECT_SUPER,\n  SCOPE_FUNCTION,\n  SCOPE_SUPER,\n  SCOPE_PROGRAM,\n} from \"../util/scopeflags\";\nimport { ExpressionErrors } from \"./util\";\nimport {\n  PARAM_AWAIT,\n  PARAM_IN,\n  PARAM_RETURN,\n  PARAM,\n  functionFlags,\n} from \"../util/production-parameter\";\nimport {\n  newArrowHeadScope,\n  newAsyncArrowScope,\n  newExpressionScope,\n} from \"../util/expression-scope\";\nimport { Errors, SourceTypeModuleErrors } from \"./error\";\n\n/*::\nimport type { SourceType } from \"../options\";\n*/\n\nexport default class ExpressionParser extends LValParser {\n  // Forward-declaration: defined in statement.js\n  /*::\n  +parseBlock: (\n    allowDirectives?: boolean,\n    createNewLexicalScope?: boolean,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ) => N.BlockStatement;\n  +parseClass: (\n    node: N.Class,\n    isStatement: boolean,\n    optionalId?: boolean,\n  ) => N.Class;\n  +parseDecorators: (allowExport?: boolean) => void;\n  +parseFunction: <T: N.NormalFunction>(\n    node: T,\n    statement?: number,\n    allowExpressionBody?: boolean,\n    isAsync?: boolean,\n  ) => T;\n  +parseFunctionParams: (node: N.Function, allowModifiers?: boolean) => void;\n  +takeDecorators: (node: N.HasDecorators) => void;\n  +parseBlockOrModuleBlockBody: (\n    body: N.Statement[],\n    directives: ?(N.Directive[]),\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void\n  ) => void\n  +parseProgram: (\n    program: N.Program, end: TokenType, sourceType?: SourceType\n  ) => N.Program\n  */\n\n  // For object literal, check if property __proto__ has been used more than once.\n  // If the expression is a destructuring assignment, then __proto__ may appear\n  // multiple times. Otherwise, __proto__ is a duplicated key.\n\n  // For record expression, check if property __proto__ exists\n\n  checkProto(\n    prop: N.ObjectMember | N.SpreadElement,\n    isRecord: boolean,\n    protoRef: { used: boolean },\n    refExpressionErrors: ?ExpressionErrors,\n  ): void {\n    if (\n      prop.type === \"SpreadElement\" ||\n      this.isObjectMethod(prop) ||\n      prop.computed ||\n      // $FlowIgnore\n      prop.shorthand\n    ) {\n      return;\n    }\n\n    const key = prop.key;\n    // It is either an Identifier or a String/NumericLiteral\n    const name = key.type === \"Identifier\" ? key.name : key.value;\n\n    if (name === \"__proto__\") {\n      if (isRecord) {\n        this.raise(key.start, Errors.RecordNoProto);\n        return;\n      }\n      if (protoRef.used) {\n        if (refExpressionErrors) {\n          // Store the first redefinition's position, otherwise ignore because\n          // we are parsing ambiguous pattern\n          if (refExpressionErrors.doubleProto === -1) {\n            refExpressionErrors.doubleProto = key.start;\n          }\n        } else {\n          this.raise(key.start, Errors.DuplicateProto);\n        }\n      }\n\n      protoRef.used = true;\n    }\n  }\n\n  shouldExitDescending(expr: N.Expression, potentialArrowAt: number): boolean {\n    return (\n      expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt\n    );\n  }\n\n  // Convenience method to parse an Expression only\n  getExpression(): N.Expression & N.ParserOutput {\n    let paramFlags = PARAM;\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n    this.nextToken();\n    const expr = this.parseExpression();\n    if (!this.match(tt.eof)) {\n      this.unexpected();\n    }\n    expr.comments = this.state.comments;\n    expr.errors = this.state.errors;\n    if (this.options.tokens) {\n      expr.tokens = this.tokens;\n    }\n    return expr;\n  }\n\n  // ### Expression parsing\n\n  // These nest, from the most general expression type at the top to\n  // 'atomic', nondivisible expression types at the bottom. Most of\n  // the functions will simply let the function (s) below them parse,\n  // and, *if* the syntactic construct they handle is present, wrap\n  // the AST node that the inner parser gave them in another node.\n\n  // Parse a full expression.\n  // - `disallowIn`\n  //   is used to forbid the `in` operator (in for loops initialization expressions)\n  //   When `disallowIn` is true, the production parameter [In] is not present.\n\n  // - `refExpressionErrors `\n  //   provides reference for storing '=' operator inside shorthand\n  //   property assignment in contexts where both object expression\n  //   and object pattern might appear (so it's possible to raise\n  //   delayed syntax error at correct position).\n\n  parseExpression(\n    disallowIn?: boolean,\n    refExpressionErrors?: ExpressionErrors,\n  ): N.Expression {\n    if (disallowIn) {\n      return this.disallowInAnd(() =>\n        this.parseExpressionBase(refExpressionErrors),\n      );\n    }\n    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n  }\n\n  // https://tc39.es/ecma262/#prod-Expression\n  parseExpressionBase(refExpressionErrors?: ExpressionErrors): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(refExpressionErrors);\n    if (this.match(tt.comma)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n      while (this.eat(tt.comma)) {\n        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n      }\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n    return expr;\n  }\n\n  // Set [~In] parameter for assignment expression\n  parseMaybeAssignDisallowIn(\n    refExpressionErrors?: ?ExpressionErrors,\n    afterLeftParse?: Function,\n    refNeedsArrowPos?: ?Pos,\n  ) {\n    return this.disallowInAnd(() =>\n      this.parseMaybeAssign(\n        refExpressionErrors,\n        afterLeftParse,\n        refNeedsArrowPos,\n      ),\n    );\n  }\n\n  // Set [+In] parameter for assignment expression\n  parseMaybeAssignAllowIn(\n    refExpressionErrors?: ?ExpressionErrors,\n    afterLeftParse?: Function,\n    refNeedsArrowPos?: ?Pos,\n  ) {\n    return this.allowInAnd(() =>\n      this.parseMaybeAssign(\n        refExpressionErrors,\n        afterLeftParse,\n        refNeedsArrowPos,\n      ),\n    );\n  }\n\n  // Parse an assignment expression. This includes applications of\n  // operators like `+=`.\n\n  // https://tc39.es/ecma262/#prod-AssignmentExpression\n  parseMaybeAssign(\n    refExpressionErrors?: ?ExpressionErrors,\n    afterLeftParse?: Function,\n    refNeedsArrowPos?: ?Pos,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    if (this.isContextual(\"yield\")) {\n      if (this.prodParam.hasYield) {\n        // If we have [Yield] production, `yield` will start a YieldExpression thus\n        // regex is allowed following. Otherwise `yield` is an identifier and regex\n        // is disallowed in tt.name.updateContext\n        this.state.exprAllowed = true;\n        let left = this.parseYield();\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startPos, startLoc);\n        }\n        return left;\n      }\n    }\n\n    let ownExpressionErrors;\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n\n    if (this.match(tt.parenL) || this.match(tt.name)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n\n    let left = this.parseMaybeConditional(\n      refExpressionErrors,\n      refNeedsArrowPos,\n    );\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startPos, startLoc);\n    }\n    if (this.state.type.isAssign) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n\n      if (this.match(tt.eq)) {\n        node.left = this.toAssignable(left, /* isLHS */ true);\n        refExpressionErrors.doubleProto = -1; // reset because double __proto__ is valid in assignment expression\n      } else {\n        node.left = left;\n      }\n\n      if (refExpressionErrors.shorthandAssign >= node.left.start) {\n        refExpressionErrors.shorthandAssign = -1; // reset because shorthand default was used correctly\n      }\n\n      this.checkLVal(left, \"assignment expression\");\n\n      this.next();\n      node.right = this.parseMaybeAssign();\n      return this.finishNode(node, \"AssignmentExpression\");\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    return left;\n  }\n\n  // Parse a ternary conditional (`?:`) operator.\n  // https://tc39.es/ecma262/#prod-ConditionalExpression\n\n  parseMaybeConditional(\n    refExpressionErrors: ExpressionErrors,\n    refNeedsArrowPos?: ?Pos,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseConditional(expr, startPos, startLoc, refNeedsArrowPos);\n  }\n\n  parseConditional(\n    expr: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    // FIXME: Disabling this for now since can't seem to get it to play nicely\n    // eslint-disable-next-line no-unused-vars\n    refNeedsArrowPos?: ?Pos,\n  ): N.Expression {\n    if (this.eat(tt.question)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssignAllowIn();\n      this.expect(tt.colon);\n      node.alternate = this.parseMaybeAssign();\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n    return expr;\n  }\n\n  // Start the precedence parser.\n  // https://tc39.es/ecma262/#prod-ShortCircuitExpression\n\n  parseExprOps(refExpressionErrors: ExpressionErrors): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnary(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseExprOp(expr, startPos, startLoc, -1);\n  }\n\n  // Parse binary operators with the operator precedence parsing\n  // algorithm. `left` is the left-hand side of the operator.\n  // `minPrec` provides context that allows the function to stop and\n  // defer further parser to one of its callers when it encounters an\n  // operator that has a lower precedence than the set it is parsing.\n\n  parseExprOp(\n    left: N.Expression,\n    leftStartPos: number,\n    leftStartLoc: Position,\n    minPrec: number,\n  ): N.Expression {\n    let prec = this.state.type.binop;\n    if (prec != null && (this.prodParam.hasIn || !this.match(tt._in))) {\n      if (prec > minPrec) {\n        const op = this.state.type;\n        if (op === tt.pipeline) {\n          this.expectPlugin(\"pipelineOperator\");\n          if (this.state.inFSharpPipelineDirectBody) {\n            return left;\n          }\n          this.state.inPipeline = true;\n          this.checkPipelineAtInfixOperator(left, leftStartPos);\n        }\n        const node = this.startNodeAt(leftStartPos, leftStartLoc);\n        node.left = left;\n        node.operator = this.state.value;\n\n        const logical = op === tt.logicalOR || op === tt.logicalAND;\n        const coalesce = op === tt.nullishCoalescing;\n\n        if (coalesce) {\n          // Handle the precedence of `tt.coalesce` as equal to the range of logical expressions.\n          // In other words, `node.right` shouldn't contain logical expressions in order to check the mixed error.\n          prec = ((tt.logicalAND: any): { binop: number }).binop;\n        }\n\n        this.next();\n\n        if (\n          op === tt.pipeline &&\n          this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"minimal\"\n        ) {\n          if (\n            this.match(tt.name) &&\n            this.state.value === \"await\" &&\n            this.prodParam.hasAwait\n          ) {\n            throw this.raise(\n              this.state.start,\n              Errors.UnexpectedAwaitAfterPipelineBody,\n            );\n          }\n        }\n\n        node.right = this.parseExprOpRightExpr(op, prec);\n        this.finishNode(\n          node,\n          logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\",\n        );\n        /* this check is for all ?? operators\n         * a ?? b && c for this example\n         * when op is coalesce and nextOp is logical (&&), throw at the pos of nextOp that it can not be mixed.\n         * Symmetrically it also throws when op is logical and nextOp is coalesce\n         */\n        const nextOp = this.state.type;\n        if (\n          (coalesce && (nextOp === tt.logicalOR || nextOp === tt.logicalAND)) ||\n          (logical && nextOp === tt.nullishCoalescing)\n        ) {\n          throw this.raise(this.state.start, Errors.MixingCoalesceWithLogical);\n        }\n\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n      }\n    }\n    return left;\n  }\n\n  // Helper function for `parseExprOp`. Parse the right-hand side of binary-\n  // operator expressions, then apply any operator-specific functions.\n\n  parseExprOpRightExpr(op: TokenType, prec: number): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    switch (op) {\n      case tt.pipeline:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"smart\":\n            return this.withTopicPermittingContext(() => {\n              return this.parseSmartPipelineBody(\n                this.parseExprOpBaseRightExpr(op, prec),\n                startPos,\n                startLoc,\n              );\n            });\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec);\n            });\n        }\n      // falls through\n\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n\n  // Helper function for `parseExprOpRightExpr`. Parse the right-hand side of\n  // binary-operator expressions without applying any operator-specific functions.\n\n  parseExprOpBaseRightExpr(op: TokenType, prec: number): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    return this.parseExprOp(\n      this.parseMaybeUnary(),\n      startPos,\n      startLoc,\n      op.rightAssociative ? prec - 1 : prec,\n    );\n  }\n\n  checkExponentialAfterUnary(node: N.AwaitExpression | N.UnaryExpression) {\n    if (this.match(tt.exponent)) {\n      this.raise(\n        node.argument.start,\n        Errors.UnexpectedTokenUnaryExponentiation,\n      );\n    }\n  }\n\n  // Parse unary operators, both prefix and postfix.\n  // https://tc39.es/ecma262/#prod-UnaryExpression\n  parseMaybeUnary(\n    refExpressionErrors: ?ExpressionErrors,\n    sawUnary?: boolean,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isAwait = this.isContextual(\"await\");\n\n    if (isAwait && this.isAwaitAllowed()) {\n      this.next();\n      const expr = this.parseAwait(startPos, startLoc);\n      if (!sawUnary) this.checkExponentialAfterUnary(expr);\n      return expr;\n    }\n    if (\n      this.isContextual(\"module\") &&\n      this.lookaheadCharCode() === charCodes.leftCurlyBrace &&\n      !this.hasFollowingLineBreak()\n    ) {\n      return this.parseModuleExpression();\n    }\n    const update = this.match(tt.incDec);\n    const node = this.startNode();\n    if (this.state.type.prefix) {\n      node.operator = this.state.value;\n      node.prefix = true;\n\n      if (this.match(tt._throw)) {\n        this.expectPlugin(\"throwExpressions\");\n      }\n      const isDelete = this.match(tt._delete);\n      this.next();\n\n      node.argument = this.parseMaybeUnary(null, true);\n\n      this.checkExpressionErrors(refExpressionErrors, true);\n\n      if (this.state.strict && isDelete) {\n        const arg = node.argument;\n\n        if (arg.type === \"Identifier\") {\n          this.raise(node.start, Errors.StrictDelete);\n        } else if (this.hasPropertyAsPrivateName(arg)) {\n          this.raise(node.start, Errors.DeletePrivateField);\n        }\n      }\n\n      if (!update) {\n        if (!sawUnary) this.checkExponentialAfterUnary(node);\n        return this.finishNode(node, \"UnaryExpression\");\n      }\n    }\n\n    const expr = this.parseUpdate(node, update, refExpressionErrors);\n\n    if (isAwait) {\n      const startsExpr = this.hasPlugin(\"v8intrinsic\")\n        ? this.state.type.startsExpr\n        : this.state.type.startsExpr && !this.match(tt.modulo);\n      if (startsExpr && !this.isAmbiguousAwait()) {\n        this.raiseOverwrite(\n          startPos,\n          this.hasPlugin(\"topLevelAwait\")\n            ? Errors.AwaitNotInAsyncContext\n            : Errors.AwaitNotInAsyncFunction,\n        );\n        return this.parseAwait(startPos, startLoc);\n      }\n    }\n\n    return expr;\n  }\n\n  // https://tc39.es/ecma262/#prod-UpdateExpression\n  parseUpdate(\n    node: N.Expression,\n    update: boolean,\n    refExpressionErrors: ?ExpressionErrors,\n  ): N.Expression {\n    if (update) {\n      this.checkLVal(node.argument, \"prefix operation\");\n      return this.finishNode(node, \"UpdateExpression\");\n    }\n\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n    while (this.state.type.postfix && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.checkLVal(expr, \"postfix operation\");\n      this.next();\n      expr = this.finishNode(node, \"UpdateExpression\");\n    }\n    return expr;\n  }\n\n  // Parse call, dot, and `[]`-subscript expressions.\n  // https://tc39.es/ecma262/#prod-LeftHandSideExpression\n  parseExprSubscripts(refExpressionErrors: ?ExpressionErrors): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseSubscripts(expr, startPos, startLoc);\n  }\n\n  parseSubscripts(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    noCalls?: ?boolean,\n  ): N.Expression {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false,\n    };\n    do {\n      base = this.parseSubscript(base, startPos, startLoc, noCalls, state);\n\n      // After parsing a subscript, this isn't \"async\" for sure.\n      state.maybeAsyncArrow = false;\n    } while (!state.stop);\n    return base;\n  }\n\n  /**\n   * @param state Set 'state.stop = true' to indicate that we should stop parsing subscripts.\n   *   state.optionalChainMember to indicate that the member is currently in OptionalChain\n   */\n  parseSubscript(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    noCalls: ?boolean,\n    state: N.ParseSubscriptState,\n  ): N.Expression {\n    if (!noCalls && this.eat(tt.doubleColon)) {\n      return this.parseBind(base, startPos, startLoc, noCalls, state);\n    } else if (this.match(tt.backQuote)) {\n      return this.parseTaggedTemplateExpression(\n        base,\n        startPos,\n        startLoc,\n        state,\n      );\n    }\n\n    let optional = false;\n    if (this.match(tt.questionDot)) {\n      if (noCalls && this.lookaheadCharCode() === charCodes.leftParenthesis) {\n        // stop at `?.` when parsing `new a?.()`\n        state.stop = true;\n        return base;\n      }\n      state.optionalChainMember = optional = true;\n      this.next();\n    }\n\n    if (!noCalls && this.match(tt.parenL)) {\n      return this.parseCoverCallAndAsyncArrowHead(\n        base,\n        startPos,\n        startLoc,\n        state,\n        optional,\n      );\n    } else if (optional || this.match(tt.bracketL) || this.eat(tt.dot)) {\n      return this.parseMember(base, startPos, startLoc, state, optional);\n    } else {\n      state.stop = true;\n      return base;\n    }\n  }\n\n  // base[?Yield, ?Await] [ Expression[+In, ?Yield, ?Await] ]\n  // base[?Yield, ?Await] . IdentifierName\n  // base[?Yield, ?Await] . PrivateIdentifier\n  //   where `base` is one of CallExpression, MemberExpression and OptionalChain\n  parseMember(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n    optional: boolean,\n  ): N.OptionalMemberExpression | N.MemberExpression {\n    const node = this.startNodeAt(startPos, startLoc);\n    const computed = this.eat(tt.bracketL);\n    node.object = base;\n    node.computed = computed;\n    const privateName =\n      !computed && this.match(tt.privateName) && this.state.value;\n    const property = computed\n      ? this.parseExpression()\n      : privateName\n      ? this.parsePrivateName()\n      : this.parseIdentifier(true);\n\n    if (privateName !== false) {\n      if (node.object.type === \"Super\") {\n        this.raise(startPos, Errors.SuperPrivateField);\n      }\n      this.classScope.usePrivateName(privateName, property.start);\n    }\n    node.property = property;\n\n    if (computed) {\n      this.expect(tt.bracketR);\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n      return this.finishNode(node, \"OptionalMemberExpression\");\n    } else {\n      return this.finishNode(node, \"MemberExpression\");\n    }\n  }\n\n  // https://github.com/tc39/proposal-bind-operator#syntax\n  parseBind(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    noCalls: ?boolean,\n    state: N.ParseSubscriptState,\n  ): N.Expression {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    node.callee = this.parseNoCallExpr();\n    state.stop = true;\n    return this.parseSubscripts(\n      this.finishNode(node, \"BindExpression\"),\n      startPos,\n      startLoc,\n      noCalls,\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-CoverCallExpressionAndAsyncArrowHead\n  // CoverCallExpressionAndAsyncArrowHead\n  // CallExpression[?Yield, ?Await] Arguments[?Yield, ?Await]\n  // OptionalChain[?Yield, ?Await] Arguments[?Yield, ?Await]\n  parseCoverCallAndAsyncArrowHead(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n    optional: boolean,\n  ): N.Expression {\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = true;\n\n    this.next(); // eat `(`\n\n    let node = this.startNodeAt(startPos, startLoc);\n    node.callee = base;\n    if (state.maybeAsyncArrow) {\n      this.expressionScope.enter(newAsyncArrowScope());\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n    }\n    if (optional) {\n      node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n    } else {\n      node.arguments = this.parseCallExpressionArguments(\n        tt.parenR,\n        state.maybeAsyncArrow,\n        base.type === \"Import\",\n        base.type !== \"Super\",\n        node,\n      );\n    }\n    this.finishCallExpression(node, state.optionalChainMember);\n\n    if (state.maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n      state.stop = true;\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      node = this.parseAsyncArrowFromCallExpression(\n        this.startNodeAt(startPos, startLoc),\n        node,\n      );\n    } else {\n      if (state.maybeAsyncArrow) {\n        this.expressionScope.exit();\n      }\n      this.toReferencedArguments(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    return node;\n  }\n\n  toReferencedArguments(\n    node: N.CallExpression | N.OptionalCallExpression,\n    isParenthesizedExpr?: boolean,\n  ) {\n    this.toReferencedListDeep(node.arguments, isParenthesizedExpr);\n  }\n\n  // MemberExpression [?Yield, ?Await] TemplateLiteral[?Yield, ?Await, +Tagged]\n  // CallExpression [?Yield, ?Await] TemplateLiteral[?Yield, ?Await, +Tagged]\n  parseTaggedTemplateExpression(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n  ): N.TaggedTemplateExpression {\n    const node: N.TaggedTemplateExpression = this.startNodeAt(\n      startPos,\n      startLoc,\n    );\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n    if (state.optionalChainMember) {\n      this.raise(startPos, Errors.OptionalChainingNoTemplate);\n    }\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n\n  atPossibleAsyncArrow(base: N.Expression): boolean {\n    return (\n      base.type === \"Identifier\" &&\n      base.name === \"async\" &&\n      this.state.lastTokEnd === base.end &&\n      !this.canInsertSemicolon() &&\n      // check there are no escape sequences, such as \\u{61}sync\n      base.end - base.start === 5 &&\n      base.start === this.state.potentialArrowAt\n    );\n  }\n\n  finishCallExpression<T: N.CallExpression | N.OptionalCallExpression>(\n    node: T,\n    optional: boolean,\n  ): N.Expression {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length === 2) {\n        if (process.env.BABEL_8_BREAKING) {\n          this.expectPlugin(\"importAssertions\");\n        } else {\n          if (!this.hasPlugin(\"moduleAttributes\")) {\n            this.expectPlugin(\"importAssertions\");\n          }\n        }\n      }\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\n        this.raise(\n          node.start,\n          Errors.ImportCallArity,\n          this.hasPlugin(\"importAssertions\") ||\n            this.hasPlugin(\"moduleAttributes\")\n            ? \"one or two arguments\"\n            : \"one argument\",\n        );\n      } else {\n        for (const arg of node.arguments) {\n          if (arg.type === \"SpreadElement\") {\n            this.raise(arg.start, Errors.ImportCallSpreadArgument);\n          }\n        }\n      }\n    }\n    return this.finishNode(\n      node,\n      optional ? \"OptionalCallExpression\" : \"CallExpression\",\n    );\n  }\n\n  parseCallExpressionArguments(\n    close: TokenType,\n    possibleAsyncArrow: boolean,\n    dynamicImport?: boolean,\n    allowPlaceholder?: boolean,\n    nodeForExtra?: ?N.Node,\n  ): $ReadOnlyArray<?N.Expression> {\n    const elts = [];\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          if (\n            dynamicImport &&\n            !this.hasPlugin(\"importAssertions\") &&\n            !this.hasPlugin(\"moduleAttributes\")\n          ) {\n            this.raise(\n              this.state.lastTokStart,\n              Errors.ImportCallArgumentTrailingComma,\n            );\n          }\n          if (nodeForExtra) {\n            this.addExtra(\n              nodeForExtra,\n              \"trailingComma\",\n              this.state.lastTokStart,\n            );\n          }\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(\n        this.parseExprListItem(\n          false,\n          possibleAsyncArrow ? new ExpressionErrors() : undefined,\n          possibleAsyncArrow ? { start: 0 } : undefined,\n          allowPlaceholder,\n        ),\n      );\n    }\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    return elts;\n  }\n\n  shouldParseAsyncArrow(): boolean {\n    return this.match(tt.arrow) && !this.canInsertSemicolon();\n  }\n\n  parseAsyncArrowFromCallExpression(\n    node: N.ArrowFunctionExpression,\n    call: N.CallExpression,\n  ): N.ArrowFunctionExpression {\n    this.expect(tt.arrow);\n    this.parseArrowExpression(\n      node,\n      call.arguments,\n      true,\n      call.extra?.trailingComma,\n    );\n    return node;\n  }\n\n  // Parse a no-call expression (like argument of `new` or `::` operators).\n  // https://tc39.es/ecma262/#prod-MemberExpression\n  parseNoCallExpr(): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  }\n\n  // Parse an atomic expression — either a single token that is an\n  // expression, an expression started by a keyword like `function` or\n  // `new`, or an expression wrapped in punctuation like `()`, `[]`,\n  // or `{}`.\n\n  // https://tc39.es/ecma262/#prod-PrimaryExpression\n  // https://tc39.es/ecma262/#prod-AsyncArrowFunction\n  // PrimaryExpression\n  // Super\n  // Import\n  // AsyncArrowFunction\n\n  parseExprAtom(refExpressionErrors?: ?ExpressionErrors): N.Expression {\n    // If a division operator appears in an expression position, the\n    // tokenizer got confused, and we force it to read a regexp instead.\n    if (this.state.type === tt.slash) this.readRegexp();\n\n    const canBeArrow = this.state.potentialArrowAt === this.state.start;\n    let node;\n\n    switch (this.state.type) {\n      case tt._super:\n        return this.parseSuper();\n\n      case tt._import:\n        node = this.startNode();\n        this.next();\n\n        if (this.match(tt.dot)) {\n          return this.parseImportMetaProperty(node);\n        }\n\n        if (!this.match(tt.parenL)) {\n          this.raise(this.state.lastTokStart, Errors.UnsupportedImport);\n        }\n        return this.finishNode(node, \"Import\");\n      case tt._this:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n\n      case tt.name: {\n        const containsEsc = this.state.containsEsc;\n        const id = this.parseIdentifier();\n\n        if (!containsEsc && id.name === \"async\" && !this.canInsertSemicolon()) {\n          if (this.match(tt._function)) {\n            const last = this.state.context.length - 1;\n            if (this.state.context[last] !== ct.functionStatement) {\n              // Since \"async\" is an identifier and normally identifiers\n              // can't be followed by expression, the tokenizer assumes\n              // that \"function\" starts a statement.\n              // Fixing it in the tokenizer would mean tracking not only the\n              // previous token (\"async\"), but also the one before to know\n              // its beforeExpr value.\n              // It's easier and more efficient to adjust the context here.\n              throw new Error(\"Internal error\");\n            }\n            this.state.context[last] = ct.functionExpression;\n\n            this.next();\n            return this.parseFunction(\n              this.startNodeAtNode(id),\n              undefined,\n              true,\n            );\n          } else if (this.match(tt.name)) {\n            // If the next token begins with \"=\", commit to parsing an async\n            // arrow function. (Peeking ahead for \"=\" lets us avoid a more\n            // expensive full-token lookahead on this common path.)\n            if (this.lookaheadCharCode() === charCodes.equalsTo) {\n              return this.parseAsyncArrowUnaryFunction(id);\n            } else {\n              // Otherwise, treat \"async\" as an identifier and let calling code\n              // deal with the current tt.name token.\n              return id;\n            }\n          } else if (this.match(tt._do)) {\n            return this.parseDo(true);\n          }\n        }\n\n        if (canBeArrow && this.match(tt.arrow) && !this.canInsertSemicolon()) {\n          this.next();\n          return this.parseArrowExpression(\n            this.startNodeAtNode(id),\n            [id],\n            false,\n          );\n        }\n\n        return id;\n      }\n\n      case tt._do: {\n        return this.parseDo(false);\n      }\n\n      case tt.regexp: {\n        return this.parseRegExpLiteral(this.state.value);\n      }\n\n      case tt.num:\n        return this.parseNumericLiteral(this.state.value);\n\n      case tt.bigint:\n        return this.parseBigIntLiteral(this.state.value);\n\n      case tt.decimal:\n        return this.parseDecimalLiteral(this.state.value);\n\n      case tt.string:\n        return this.parseStringLiteral(this.state.value);\n\n      case tt._null:\n        return this.parseNullLiteral();\n\n      case tt._true:\n        return this.parseBooleanLiteral(true);\n      case tt._false:\n        return this.parseBooleanLiteral(false);\n\n      case tt.parenL:\n        return this.parseParenAndDistinguishExpression(canBeArrow);\n\n      case tt.bracketBarL:\n      case tt.bracketHashL: {\n        return this.parseArrayLike(\n          this.state.type === tt.bracketBarL ? tt.bracketBarR : tt.bracketR,\n          /* canBePattern */ false,\n          /* isTuple */ true,\n          refExpressionErrors,\n        );\n      }\n      case tt.bracketL: {\n        return this.parseArrayLike(\n          tt.bracketR,\n          /* canBePattern */ true,\n          /* isTuple */ false,\n          refExpressionErrors,\n        );\n      }\n      case tt.braceBarL:\n      case tt.braceHashL: {\n        return this.parseObjectLike(\n          this.state.type === tt.braceBarL ? tt.braceBarR : tt.braceR,\n          /* isPattern */ false,\n          /* isRecord */ true,\n          refExpressionErrors,\n        );\n      }\n      case tt.braceL: {\n        return this.parseObjectLike(\n          tt.braceR,\n          /* isPattern */ false,\n          /* isRecord */ false,\n          refExpressionErrors,\n        );\n      }\n      case tt._function:\n        return this.parseFunctionOrFunctionSent();\n\n      case tt.at:\n        this.parseDecorators();\n      // fall through\n      case tt._class:\n        node = this.startNode();\n        this.takeDecorators(node);\n        return this.parseClass(node, false);\n\n      case tt._new:\n        return this.parseNewOrNewTarget();\n\n      case tt.backQuote:\n        return this.parseTemplate(false);\n\n      // BindExpression[Yield]\n      //   :: MemberExpression[?Yield]\n      case tt.doubleColon: {\n        node = this.startNode();\n        this.next();\n        node.object = null;\n        const callee = (node.callee = this.parseNoCallExpr());\n        if (callee.type === \"MemberExpression\") {\n          return this.finishNode(node, \"BindExpression\");\n        } else {\n          throw this.raise(callee.start, Errors.UnsupportedBind);\n        }\n      }\n\n      case tt.privateName: {\n        // https://tc39.es/proposal-private-fields-in-in\n        // RelationalExpression [In, Yield, Await]\n        //   [+In] PrivateIdentifier in ShiftExpression[?Yield, ?Await]\n        const start = this.state.start;\n        const value = this.state.value;\n        node = this.parsePrivateName();\n        if (this.match(tt._in)) {\n          this.expectPlugin(\"privateIn\");\n          this.classScope.usePrivateName(value, node.start);\n        } else if (this.hasPlugin(\"privateIn\")) {\n          this.raise(this.state.start, Errors.PrivateInExpectedIn, value);\n        } else {\n          throw this.unexpected(start);\n        }\n        return node;\n      }\n      case tt.hash: {\n        if (this.state.inPipeline) {\n          node = this.startNode();\n\n          if (\n            this.getPluginOption(\"pipelineOperator\", \"proposal\") !== \"smart\"\n          ) {\n            this.raise(node.start, Errors.PrimaryTopicRequiresSmartPipeline);\n          }\n\n          this.next();\n\n          if (!this.primaryTopicReferenceIsAllowedInCurrentTopicContext()) {\n            this.raise(node.start, Errors.PrimaryTopicNotAllowed);\n          }\n\n          this.registerTopicReference();\n          return this.finishNode(node, \"PipelinePrimaryTopicReference\");\n        }\n      }\n      // fall through\n      case tt.relational: {\n        if (this.state.value === \"<\") {\n          const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n          if (\n            isIdentifierStart(lookaheadCh) || // Element/Type Parameter <foo>\n            lookaheadCh === charCodes.greaterThan // Fragment <>\n          ) {\n            this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n          }\n        }\n      }\n      // fall through\n      default:\n        throw this.unexpected();\n    }\n  }\n\n  // async [no LineTerminator here] AsyncArrowBindingIdentifier[?Yield] [no LineTerminator here] => AsyncConciseBody[?In]\n  parseAsyncArrowUnaryFunction(id: N.Expression): N.ArrowFunctionExpression {\n    const node = this.startNodeAtNode(id);\n    // We don't need to push a new ParameterDeclarationScope here since we are sure\n    // 1) it is an async arrow, 2) no biding pattern is allowed in params\n    this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));\n    const params = [this.parseIdentifier()];\n    this.prodParam.exit();\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.pos, Errors.LineTerminatorBeforeArrow);\n    }\n    this.expect(tt.arrow);\n    // let foo = async bar => {};\n    this.parseArrowExpression(node, params, true);\n    return node;\n  }\n\n  // https://github.com/tc39/proposal-do-expressions\n  // https://github.com/tc39/proposal-async-do-expressions\n  parseDo(isAsync: boolean): N.DoExpression {\n    this.expectPlugin(\"doExpressions\");\n    if (isAsync) {\n      this.expectPlugin(\"asyncDoExpressions\");\n    }\n    const node = this.startNode();\n    node.async = isAsync;\n    this.next(); // eat `do`\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    if (isAsync) {\n      // AsyncDoExpression :\n      // async [no LineTerminator here] do Block[~Yield, +Await, ~Return]\n      this.prodParam.enter(PARAM_AWAIT);\n      node.body = this.parseBlock();\n      this.prodParam.exit();\n    } else {\n      node.body = this.parseBlock();\n    }\n\n    this.state.labels = oldLabels;\n    return this.finishNode(node, \"DoExpression\");\n  }\n\n  // Parse the `super` keyword\n  parseSuper(): N.Super {\n    const node = this.startNode();\n    this.next(); // eat `super`\n    if (\n      this.match(tt.parenL) &&\n      !this.scope.allowDirectSuper &&\n      !this.options.allowSuperOutsideMethod\n    ) {\n      this.raise(node.start, Errors.SuperNotAllowed);\n    } else if (\n      !this.scope.allowSuper &&\n      !this.options.allowSuperOutsideMethod\n    ) {\n      this.raise(node.start, Errors.UnexpectedSuper);\n    }\n\n    if (\n      !this.match(tt.parenL) &&\n      !this.match(tt.bracketL) &&\n      !this.match(tt.dot)\n    ) {\n      this.raise(node.start, Errors.UnsupportedSuper);\n    }\n\n    return this.finishNode(node, \"Super\");\n  }\n\n  parseMaybePrivateName(\n    isPrivateNameAllowed: boolean,\n  ): N.PrivateName | N.Identifier {\n    const isPrivate = this.match(tt.privateName);\n\n    if (isPrivate) {\n      if (!isPrivateNameAllowed) {\n        this.raise(this.state.start + 1, Errors.UnexpectedPrivateField);\n      }\n      return this.parsePrivateName();\n    } else {\n      return this.parseIdentifier(true);\n    }\n  }\n\n  parsePrivateName(): N.PrivateName {\n    const node = this.startNode();\n    const id = this.startNodeAt(\n      this.state.start + 1,\n      // The position is hardcoded because we merge `#` and name into a single\n      // tt.privateName token\n      new Position(\n        this.state.curLine,\n        this.state.start + 1 - this.state.lineStart,\n      ),\n    );\n    const name = this.state.value;\n    this.next(); // eat #name;\n    node.id = this.createIdentifier(id, name);\n    return this.finishNode(node, \"PrivateName\");\n  }\n\n  parseFunctionOrFunctionSent(): N.FunctionExpression | N.MetaProperty {\n    const node = this.startNode();\n\n    // We do not do parseIdentifier here because when parseFunctionOrFunctionSent\n    // is called we already know that the current token is a \"name\" with the value \"function\"\n    // This will improve perf a tiny little bit as we do not do validation but more importantly\n    // here is that parseIdentifier will remove an item from the expression stack\n    // if \"function\" or \"class\" is parsed as identifier (in objects e.g.), which should not happen here.\n    this.next(); // eat `function`\n\n    if (this.prodParam.hasYield && this.match(tt.dot)) {\n      const meta = this.createIdentifier(\n        this.startNodeAtNode(node),\n        \"function\",\n      );\n      this.next(); // eat `.`\n      return this.parseMetaProperty(node, meta, \"sent\");\n    }\n    return this.parseFunction(node);\n  }\n\n  parseMetaProperty(\n    node: N.MetaProperty,\n    meta: N.Identifier,\n    propertyName: string,\n  ): N.MetaProperty {\n    node.meta = meta;\n\n    if (meta.name === \"function\" && propertyName === \"sent\") {\n      // https://github.com/tc39/proposal-function.sent#syntax-1\n      if (this.isContextual(propertyName)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        // The code wasn't `function.sent` but just `function.`, so a simple error is less confusing.\n        this.unexpected();\n      }\n    }\n\n    const containsEsc = this.state.containsEsc;\n\n    node.property = this.parseIdentifier(true);\n\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(\n        node.property.start,\n        Errors.UnsupportedMetaProperty,\n        meta.name,\n        propertyName,\n      );\n    }\n\n    return this.finishNode(node, \"MetaProperty\");\n  }\n\n  // https://tc39.es/ecma262/#prod-ImportMeta\n  parseImportMetaProperty(node: N.MetaProperty): N.MetaProperty {\n    const id = this.createIdentifier(this.startNodeAtNode(node), \"import\");\n    this.next(); // eat `.`\n\n    if (this.isContextual(\"meta\")) {\n      if (!this.inModule) {\n        this.raise(id.start, SourceTypeModuleErrors.ImportMetaOutsideModule);\n      }\n      this.sawUnambiguousESM = true;\n    }\n\n    return this.parseMetaProperty(node, id, \"meta\");\n  }\n\n  parseLiteralAtNode<T: N.Node>(\n    value: any,\n    type: $ElementType<T, \"type\">,\n    node: any,\n  ): T {\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(node, \"raw\", this.input.slice(node.start, this.state.end));\n    node.value = value;\n    this.next();\n    return this.finishNode<T>(node, type);\n  }\n\n  parseLiteral<T: N.Node>(value: any, type: $ElementType<T, \"type\">): T {\n    const node = this.startNode();\n    return this.parseLiteralAtNode(value, type, node);\n  }\n\n  parseStringLiteral(value: any) {\n    return this.parseLiteral<N.StringLiteral>(value, \"StringLiteral\");\n  }\n\n  parseNumericLiteral(value: any) {\n    return this.parseLiteral<N.NumericLiteral>(value, \"NumericLiteral\");\n  }\n\n  parseBigIntLiteral(value: any) {\n    return this.parseLiteral<N.BigIntLiteral>(value, \"BigIntLiteral\");\n  }\n\n  parseDecimalLiteral(value: any) {\n    return this.parseLiteral<N.DecimalLiteral>(value, \"DecimalLiteral\");\n  }\n\n  parseRegExpLiteral(value: { value: any, pattern: string, flags: string }) {\n    const node = this.parseLiteral<N.RegExpLiteral>(\n      value.value,\n      \"RegExpLiteral\",\n    );\n    node.pattern = value.pattern;\n    node.flags = value.flags;\n    return node;\n  }\n\n  parseBooleanLiteral(value: boolean) {\n    const node = this.startNode();\n    node.value = value;\n    this.next();\n    return this.finishNode<N.BooleanLiteral>(node, \"BooleanLiteral\");\n  }\n\n  parseNullLiteral() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode<N.NullLiteral>(node, \"NullLiteral\");\n  }\n\n  // https://tc39.es/ecma262/#prod-CoverParenthesizedExpressionAndArrowParameterList\n  parseParenAndDistinguishExpression(canBeArrow: boolean): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    let val;\n    this.next(); // eat `(`\n    this.expressionScope.enter(newArrowHeadScope());\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    const innerStartPos = this.state.start;\n    const innerStartLoc = this.state.startLoc;\n    const exprList = [];\n    const refExpressionErrors = new ExpressionErrors();\n    const refNeedsArrowPos = { start: 0 };\n    let first = true;\n    let spreadStart;\n    let optionalCommaStart;\n\n    while (!this.match(tt.parenR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma, refNeedsArrowPos.start || null);\n        if (this.match(tt.parenR)) {\n          optionalCommaStart = this.state.start;\n          break;\n        }\n      }\n\n      if (this.match(tt.ellipsis)) {\n        const spreadNodeStartPos = this.state.start;\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStart = this.state.start;\n        exprList.push(\n          this.parseParenItem(\n            this.parseRestBinding(),\n            spreadNodeStartPos,\n            spreadNodeStartLoc,\n          ),\n        );\n\n        this.checkCommaAfterRest(charCodes.rightParenthesis);\n\n        break;\n      } else {\n        exprList.push(\n          this.parseMaybeAssignAllowIn(\n            refExpressionErrors,\n            this.parseParenItem,\n            refNeedsArrowPos,\n          ),\n        );\n      }\n    }\n\n    const innerEndPos = this.state.lastTokEnd;\n    const innerEndLoc = this.state.lastTokEndLoc;\n    this.expect(tt.parenR);\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    let arrowNode = this.startNodeAt(startPos, startLoc);\n    if (\n      canBeArrow &&\n      this.shouldParseArrow() &&\n      (arrowNode = this.parseArrow(arrowNode))\n    ) {\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      this.parseArrowExpression(arrowNode, exprList, false);\n      return arrowNode;\n    }\n    this.expressionScope.exit();\n\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStart);\n    }\n    if (optionalCommaStart) this.unexpected(optionalCommaStart);\n    if (spreadStart) this.unexpected(spreadStart);\n    this.checkExpressionErrors(refExpressionErrors, true);\n    if (refNeedsArrowPos.start) this.unexpected(refNeedsArrowPos.start);\n\n    this.toReferencedListDeep(exprList, /* isParenthesizedExpr */ true);\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n\n    if (!this.options.createParenthesizedExpressions) {\n      this.addExtra(val, \"parenthesized\", true);\n      this.addExtra(val, \"parenStart\", startPos);\n      return val;\n    }\n\n    const parenExpression = this.startNodeAt(startPos, startLoc);\n    parenExpression.expression = val;\n    this.finishNode(parenExpression, \"ParenthesizedExpression\");\n    return parenExpression;\n  }\n\n  shouldParseArrow(): boolean {\n    return !this.canInsertSemicolon();\n  }\n\n  parseArrow(node: N.ArrowFunctionExpression): ?N.ArrowFunctionExpression {\n    if (this.eat(tt.arrow)) {\n      return node;\n    }\n  }\n\n  parseParenItem(\n    node: N.Expression,\n    startPos: number, // eslint-disable-line no-unused-vars\n    startLoc: Position, // eslint-disable-line no-unused-vars\n  ): N.Expression {\n    return node;\n  }\n\n  parseNewOrNewTarget(): N.NewExpression | N.MetaProperty {\n    const node = this.startNode();\n    this.next();\n    if (this.match(tt.dot)) {\n      // https://tc39.es/ecma262/#prod-NewTarget\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"new\");\n      this.next();\n      const metaProp = this.parseMetaProperty(node, meta, \"target\");\n\n      if (!this.scope.inNonArrowFunction && !this.scope.inClass) {\n        this.raise(metaProp.start, Errors.UnexpectedNewTarget);\n      }\n\n      return metaProp;\n    }\n\n    return this.parseNew(node);\n  }\n\n  // New's precedence is slightly tricky. It must allow its argument to\n  // be a `[]` or dot subscript expression, but not a call — at least,\n  // not without wrapping it in parentheses. Thus, it uses the noCalls\n  // argument to parseSubscripts to prevent it from consuming the\n  // argument list.\n  // https://tc39.es/ecma262/#prod-NewExpression\n  parseNew(node: N.Expression): N.NewExpression {\n    node.callee = this.parseNoCallExpr();\n    if (node.callee.type === \"Import\") {\n      this.raise(node.callee.start, Errors.ImportCallNotNewExpression);\n    } else if (this.isOptionalChain(node.callee)) {\n      this.raise(this.state.lastTokEnd, Errors.OptionalChainingNoNew);\n    } else if (this.eat(tt.questionDot)) {\n      this.raise(this.state.start, Errors.OptionalChainingNoNew);\n    }\n\n    this.parseNewArguments(node);\n    return this.finishNode(node, \"NewExpression\");\n  }\n\n  parseNewArguments(node: N.NewExpression): void {\n    if (this.eat(tt.parenL)) {\n      const args = this.parseExprList(tt.parenR);\n      this.toReferencedList(args);\n      // $FlowFixMe (parseExprList should be all non-null in this case)\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n  }\n\n  // Parse template expression.\n\n  parseTemplateElement(isTagged: boolean): N.TemplateElement {\n    const elem = this.startNode();\n    if (this.state.value === null) {\n      if (!isTagged) {\n        this.raise(this.state.start + 1, Errors.InvalidEscapeSequenceTemplate);\n      }\n    }\n    elem.value = {\n      raw: this.input\n        .slice(this.state.start, this.state.end)\n        .replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.state.value,\n    };\n    this.next();\n    elem.tail = this.match(tt.backQuote);\n    return this.finishNode(elem, \"TemplateElement\");\n  }\n\n  // https://tc39.es/ecma262/#prod-TemplateLiteral\n  parseTemplate(isTagged: boolean): N.TemplateLiteral {\n    const node = this.startNode();\n    this.next();\n    node.expressions = [];\n    let curElt = this.parseTemplateElement(isTagged);\n    node.quasis = [curElt];\n    while (!curElt.tail) {\n      this.expect(tt.dollarBraceL);\n      node.expressions.push(this.parseTemplateSubstitution());\n      this.expect(tt.braceR);\n      node.quasis.push((curElt = this.parseTemplateElement(isTagged)));\n    }\n    this.next();\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n\n  // This is overwritten by the TypeScript plugin to parse template types\n  parseTemplateSubstitution(): N.Expression {\n    return this.parseExpression();\n  }\n\n  // Parse an object literal, binding pattern, or record.\n\n  parseObjectLike<T: N.ObjectPattern | N.ObjectExpression>(\n    close: TokenType,\n    isPattern: boolean,\n    isRecord?: ?boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n  ): T {\n    if (isRecord) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const propHash: any = Object.create(null);\n    let first = true;\n    const node = this.startNode();\n\n    node.properties = [];\n    this.next();\n\n    while (!this.match(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\n          break;\n        }\n      }\n\n      const prop = this.parsePropertyDefinition(isPattern, refExpressionErrors);\n      if (!isPattern) {\n        // $FlowIgnore RestElement will never be returned if !isPattern\n        this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n      }\n\n      if (\n        isRecord &&\n        !this.isObjectProperty(prop) &&\n        prop.type !== \"SpreadElement\"\n      ) {\n        this.raise(prop.start, Errors.InvalidRecordProperty);\n      }\n\n      // $FlowIgnore\n      if (prop.shorthand) {\n        this.addExtra(prop, \"shorthand\", true);\n      }\n\n      node.properties.push(prop);\n    }\n\n    // The tokenizer uses `braceIsBlock` to detect whether `{` starts a block statement.\n    // If `{` is a block statement, `exprAllowed` will be `true`.\n    // However the tokenizer can not handle edge cases like `0 ? a : { a : 1 } / 2`, here\n    // we update `exprAllowed` when an object-like is parsed.\n    this.state.exprAllowed = false;\n    this.next();\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let type = \"ObjectExpression\";\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n    return this.finishNode(node, type);\n  }\n\n  // Check grammar production:\n  //   IdentifierName *_opt PropertyName\n  // It is used in `parsePropertyDefinition` to detect AsyncMethod and Accessors\n  maybeAsyncOrAccessorProp(prop: N.ObjectProperty): boolean {\n    return (\n      !prop.computed &&\n      prop.key.type === \"Identifier\" &&\n      (this.isLiteralPropertyName() ||\n        this.match(tt.bracketL) ||\n        this.match(tt.star))\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-PropertyDefinition\n  parsePropertyDefinition(\n    isPattern: boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n  ): N.ObjectMember | N.SpreadElement | N.RestElement {\n    let decorators = [];\n    if (this.match(tt.at)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(this.state.start, Errors.UnsupportedPropertyDecorator);\n      }\n\n      // we needn't check if decorators (stage 0) plugin is enabled since it's checked by\n      // the call to this.parseDecorator\n      while (this.match(tt.at)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n\n    const prop = this.startNode();\n    let isGenerator = false;\n    let isAsync = false;\n    let isAccessor = false;\n    let startPos;\n    let startLoc;\n\n    if (this.match(tt.ellipsis)) {\n      if (decorators.length) this.unexpected();\n      if (isPattern) {\n        this.next();\n        // Don't use parseRestBinding() as we only allow Identifier here.\n        prop.argument = this.parseIdentifier();\n        this.checkCommaAfterRest(charCodes.rightCurlyBrace);\n        return this.finishNode(prop, \"RestElement\");\n      }\n\n      return this.parseSpread();\n    }\n\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n\n    prop.method = false;\n\n    if (isPattern || refExpressionErrors) {\n      startPos = this.state.start;\n      startLoc = this.state.startLoc;\n    }\n\n    if (!isPattern) {\n      isGenerator = this.eat(tt.star);\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const key = this.parsePropertyName(prop, /* isPrivateNameAllowed */ false);\n\n    if (\n      !isPattern &&\n      !isGenerator &&\n      !containsEsc &&\n      this.maybeAsyncOrAccessorProp(prop)\n    ) {\n      const keyName = key.name;\n      // https://tc39.es/ecma262/#prod-AsyncMethod\n      // https://tc39.es/ecma262/#prod-AsyncGeneratorMethod\n      if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n        isAsync = true;\n        isGenerator = this.eat(tt.star);\n        this.parsePropertyName(prop, /* isPrivateNameAllowed */ false);\n      }\n      // get PropertyName[?Yield, ?Await] () { FunctionBody[~Yield, ~Await] }\n      // set PropertyName[?Yield, ?Await] ( PropertySetParameterList ) { FunctionBody[~Yield, ~Await] }\n      if (keyName === \"get\" || keyName === \"set\") {\n        isAccessor = true;\n        prop.kind = keyName;\n        if (this.match(tt.star)) {\n          isGenerator = true;\n          this.raise(this.state.pos, Errors.AccessorIsGenerator, keyName);\n          this.next();\n        }\n        this.parsePropertyName(prop, /* isPrivateNameAllowed */ false);\n      }\n    }\n\n    this.parseObjPropValue(\n      prop,\n      startPos,\n      startLoc,\n      isGenerator,\n      isAsync,\n      isPattern,\n      isAccessor,\n      refExpressionErrors,\n    );\n\n    return prop;\n  }\n\n  getGetterSetterExpectedParamCount(\n    method: N.ObjectMethod | N.ClassMethod,\n  ): number {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n\n  // This exists so we can override within the ESTree plugin\n  getObjectOrClassMethodParams(method: N.ObjectMethod | N.ClassMethod) {\n    return method.params;\n  }\n\n  // get methods aren't allowed to have any parameters\n  // set methods must have exactly 1 parameter which is not a rest parameter\n  checkGetterSetterParams(method: N.ObjectMethod | N.ClassMethod): void {\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n\n    const start = method.start;\n\n    if (params.length !== paramCount) {\n      if (method.kind === \"get\") {\n        this.raise(start, Errors.BadGetterArity);\n      } else {\n        this.raise(start, Errors.BadSetterArity);\n      }\n    }\n\n    if (\n      method.kind === \"set\" &&\n      params[params.length - 1]?.type === \"RestElement\"\n    ) {\n      this.raise(start, Errors.BadSetterRestParameter);\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-MethodDefinition\n  parseObjectMethod(\n    prop: N.ObjectMethod,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isPattern: boolean,\n    isAccessor: boolean,\n  ): ?N.ObjectMethod {\n    if (isAccessor) {\n      // isAccessor implies isAsync: false, isPattern: false, isGenerator: false\n      this.parseMethod(\n        prop,\n        // This _should_ be false, but with error recovery, we allow it to be\n        // set for informational purposes\n        isGenerator,\n        /* isAsync */ false,\n        /* isConstructor */ false,\n        false,\n        \"ObjectMethod\",\n      );\n      this.checkGetterSetterParams(prop);\n      return prop;\n    }\n\n    if (isAsync || isGenerator || this.match(tt.parenL)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        /* isConstructor */ false,\n        false,\n        \"ObjectMethod\",\n      );\n    }\n  }\n\n  // if `isPattern` is true, parse https://tc39.es/ecma262/#prod-BindingProperty\n  // else https://tc39.es/ecma262/#prod-PropertyDefinition\n  parseObjectProperty(\n    prop: N.ObjectProperty,\n    startPos: ?number,\n    startLoc: ?Position,\n    isPattern: boolean,\n    refExpressionErrors: ?ExpressionErrors,\n  ): ?N.ObjectProperty {\n    prop.shorthand = false;\n\n    if (this.eat(tt.colon)) {\n      prop.value = isPattern\n        ? this.parseMaybeDefault(this.state.start, this.state.startLoc)\n        : this.parseMaybeAssignAllowIn(refExpressionErrors);\n\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      // PropertyDefinition:\n      //   IdentifierReference\n      //   CoveredInitializedName\n      // Note: `{ eval } = {}` will be checked in `checkLVal` later.\n      this.checkReservedWord(prop.key.name, prop.key.start, true, false);\n\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(\n          startPos,\n          startLoc,\n          prop.key.__clone(),\n        );\n      } else if (this.match(tt.eq) && refExpressionErrors) {\n        if (refExpressionErrors.shorthandAssign === -1) {\n          refExpressionErrors.shorthandAssign = this.state.start;\n        }\n        prop.value = this.parseMaybeDefault(\n          startPos,\n          startLoc,\n          prop.key.__clone(),\n        );\n      } else {\n        prop.value = prop.key.__clone();\n      }\n      prop.shorthand = true;\n\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n  }\n\n  parseObjPropValue(\n    prop: any,\n    startPos: ?number,\n    startLoc: ?Position,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isPattern: boolean,\n    isAccessor: boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n  ): void {\n    const node =\n      this.parseObjectMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n      ) ||\n      this.parseObjectProperty(\n        prop,\n        startPos,\n        startLoc,\n        isPattern,\n        refExpressionErrors,\n      );\n\n    if (!node) this.unexpected();\n\n    // $FlowFixMe\n    return node;\n  }\n\n  parsePropertyName(\n    prop: N.ObjectOrClassMember | N.ClassMember | N.TsNamedTypeElementBase,\n    isPrivateNameAllowed: boolean,\n  ): N.Expression | N.Identifier {\n    if (this.eat(tt.bracketL)) {\n      (prop: $FlowSubtype<N.ObjectOrClassMember>).computed = true;\n      prop.key = this.parseMaybeAssignAllowIn();\n      this.expect(tt.bracketR);\n    } else {\n      const oldInPropertyName = this.state.inPropertyName;\n      this.state.inPropertyName = true;\n      // We check if it's valid for it to be a private name when we push it.\n      const type = this.state.type;\n      (prop: $FlowFixMe).key =\n        type === tt.num ||\n        type === tt.string ||\n        type === tt.bigint ||\n        type === tt.decimal\n          ? this.parseExprAtom()\n          : this.parseMaybePrivateName(isPrivateNameAllowed);\n\n      if (type !== tt.privateName) {\n        // ClassPrivateProperty is never computed, so we don't assign in that case.\n        prop.computed = false;\n      }\n\n      this.state.inPropertyName = oldInPropertyName;\n    }\n\n    return prop.key;\n  }\n\n  // Initialize empty function node.\n\n  initFunction(node: N.BodilessFunctionOrMethodBase, isAsync: ?boolean): void {\n    node.id = null;\n    node.generator = false;\n    node.async = !!isAsync;\n  }\n\n  // Parse object or class method.\n\n  parseMethod<T: N.MethodLike>(\n    node: T,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isConstructor: boolean,\n    allowDirectSuper: boolean,\n    type: string,\n    inClassScope: boolean = false,\n  ): T {\n    this.initFunction(node, isAsync);\n    node.generator = !!isGenerator;\n    const allowModifiers = isConstructor; // For TypeScript parameter properties\n    this.scope.enter(\n      SCOPE_FUNCTION |\n        SCOPE_SUPER |\n        (inClassScope ? SCOPE_CLASS : 0) |\n        (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0),\n    );\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams((node: any), allowModifiers);\n    this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n\n    return node;\n  }\n\n  // parse an array literal or tuple literal\n  // https://tc39.es/ecma262/#prod-ArrayLiteral\n  // https://tc39.es/proposal-record-tuple/#prod-TupleLiteral\n  parseArrayLike(\n    close: TokenType,\n    canBePattern: boolean,\n    isTuple: boolean,\n    refExpressionErrors: ?ExpressionErrors,\n  ): N.ArrayExpression | N.TupleExpression {\n    if (isTuple) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(\n      close,\n      /* allowEmpty */ !isTuple,\n      refExpressionErrors,\n      node,\n    );\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return this.finishNode(\n      node,\n      isTuple ? \"TupleExpression\" : \"ArrayExpression\",\n    );\n  }\n\n  // Parse arrow function expression.\n  // If the parameters are provided, they will be converted to an\n  // assignable list.\n  parseArrowExpression(\n    node: N.ArrowFunctionExpression,\n    params: ?(N.Expression[]),\n    isAsync: boolean,\n    trailingCommaPos: ?number,\n  ): N.ArrowFunctionExpression {\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    let flags = functionFlags(isAsync, false);\n    // ConciseBody and AsyncConciseBody inherit [In]\n    if (!this.match(tt.bracketL) && this.prodParam.hasIn) {\n      flags |= PARAM_IN;\n    }\n    this.prodParam.enter(flags);\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaPos);\n    }\n    this.state.maybeInArrowParameters = false;\n    this.parseFunctionBody(node, true);\n\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n\n  setArrowFunctionParameters(\n    node: N.ArrowFunctionExpression,\n    params: N.Expression[],\n    trailingCommaPos: ?number,\n  ): void {\n    node.params = this.toAssignableList(params, trailingCommaPos, false);\n  }\n\n  parseFunctionBodyAndFinish(\n    node: N.BodilessFunctionOrMethodBase,\n    type: string,\n    isMethod?: boolean = false,\n  ): void {\n    // $FlowIgnore (node is not bodiless if we get here)\n    this.parseFunctionBody(node, false, isMethod);\n    this.finishNode(node, type);\n  }\n\n  // Parse function body and check parameters.\n  parseFunctionBody(\n    node: N.Function,\n    allowExpression: ?boolean,\n    isMethod?: boolean = false,\n  ): void {\n    const isExpression = allowExpression && !this.match(tt.braceL);\n    this.expressionScope.enter(newExpressionScope());\n\n    if (isExpression) {\n      // https://tc39.es/ecma262/#prod-ExpressionBody\n      node.body = this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      // Start a new scope with regard to labels\n      // flag (restore them to their old value afterwards).\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n\n      // FunctionBody[Yield, Await]:\n      //   StatementList[?Yield, ?Await, +Return] opt\n      this.prodParam.enter(this.prodParam.currentFlags() | PARAM_RETURN);\n      node.body = this.parseBlock(\n        true,\n        false,\n        // Strict mode function checks after we parse the statements in the function body.\n        (hasStrictModeDirective: boolean) => {\n          const nonSimple = !this.isSimpleParamList(node.params);\n\n          if (hasStrictModeDirective && nonSimple) {\n            // This logic is here to align the error location with the ESTree plugin.\n            const errorPos =\n              // $FlowIgnore\n              (node.kind === \"method\" || node.kind === \"constructor\") &&\n              // $FlowIgnore\n              !!node.key\n                ? node.key.end\n                : node.start;\n            this.raise(errorPos, Errors.IllegalLanguageModeDirective);\n          }\n\n          const strictModeChanged = !oldStrict && this.state.strict;\n\n          // Add the params to varDeclaredNames to ensure that an error is thrown\n          // if a let/const declaration in the function clashes with one of the params.\n          this.checkParams(\n            node,\n            !this.state.strict && !allowExpression && !isMethod && !nonSimple,\n            allowExpression,\n            strictModeChanged,\n          );\n\n          // Ensure the function name isn't a forbidden identifier in strict mode, e.g. 'eval'\n          if (this.state.strict && node.id) {\n            this.checkLVal(\n              node.id,\n              \"function name\",\n              BIND_OUTSIDE,\n              undefined,\n              undefined,\n              strictModeChanged,\n            );\n          }\n        },\n      );\n      this.prodParam.exit();\n      this.expressionScope.exit();\n      this.state.labels = oldLabels;\n    }\n  }\n\n  isSimpleParamList(\n    params: $ReadOnlyArray<N.Pattern | N.TSParameterProperty>,\n  ): boolean {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (params[i].type !== \"Identifier\") return false;\n    }\n    return true;\n  }\n\n  checkParams(\n    node: N.Function,\n    allowDuplicates: boolean,\n    // eslint-disable-next-line no-unused-vars\n    isArrowFunction: ?boolean,\n    strictModeChanged?: boolean = true,\n  ): void {\n    const checkClashes = new Set();\n    for (const param of node.params) {\n      this.checkLVal(\n        param,\n        \"function parameter list\",\n        BIND_VAR,\n        allowDuplicates ? null : checkClashes,\n        undefined,\n        strictModeChanged,\n      );\n    }\n  }\n\n  // Parses a comma-separated list of expressions, and returns them as\n  // an array. `close` is the token type that ends the list, and\n  // `allowEmpty` can be turned on to allow subsequent commas with\n  // nothing in between them to be parsed as `null` (which is needed\n  // for array literals).\n\n  parseExprList(\n    close: TokenType,\n    allowEmpty?: boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n    nodeForExtra?: ?N.Node,\n  ): $ReadOnlyArray<?N.Expression> {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addExtra(\n              nodeForExtra,\n              \"trailingComma\",\n              this.state.lastTokStart,\n            );\n          }\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n    return elts;\n  }\n\n  parseExprListItem(\n    allowEmpty: ?boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n    refNeedsArrowPos: ?Pos,\n    allowPlaceholder: ?boolean,\n  ): ?N.Expression {\n    let elt;\n    if (this.match(tt.comma)) {\n      if (!allowEmpty) {\n        this.raise(this.state.pos, Errors.UnexpectedToken, \",\");\n      }\n      elt = null;\n    } else if (this.match(tt.ellipsis)) {\n      const spreadNodeStartPos = this.state.start;\n      const spreadNodeStartLoc = this.state.startLoc;\n      elt = this.parseParenItem(\n        this.parseSpread(refExpressionErrors, refNeedsArrowPos),\n        spreadNodeStartPos,\n        spreadNodeStartLoc,\n      );\n    } else if (this.match(tt.question)) {\n      this.expectPlugin(\"partialApplication\");\n      if (!allowPlaceholder) {\n        this.raise(this.state.start, Errors.UnexpectedArgumentPlaceholder);\n      }\n      const node = this.startNode();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssignAllowIn(\n        refExpressionErrors,\n        this.parseParenItem,\n        refNeedsArrowPos,\n      );\n    }\n    return elt;\n  }\n\n  // Parse the next token as an identifier. If `liberal` is true (used\n  // when parsing properties), it will also convert keywords into\n  // identifiers.\n  // This shouldn't be used to parse the keywords of meta properties, since they\n  // are not identifiers and cannot contain escape sequences.\n\n  parseIdentifier(liberal?: boolean): N.Identifier {\n    const node = this.startNode();\n    const name = this.parseIdentifierName(node.start, liberal);\n\n    return this.createIdentifier(node, name);\n  }\n\n  createIdentifier(node: N.Identifier, name: string): N.Identifier {\n    node.name = name;\n    node.loc.identifierName = name;\n\n    return this.finishNode(node, \"Identifier\");\n  }\n\n  parseIdentifierName(pos: number, liberal?: boolean): string {\n    let name: string;\n\n    const { start, type } = this.state;\n\n    if (type === tt.name) {\n      name = this.state.value;\n    } else if (type.keyword) {\n      name = type.keyword;\n\n      // `class` and `function` keywords push function-type token context into this.context.\n      // But there is no chance to pop the context if the keyword is consumed\n      // as an identifier such as a property name.\n      const curContext = this.curContext();\n      if (\n        (type === tt._class || type === tt._function) &&\n        (curContext === ct.functionStatement ||\n          curContext === ct.functionExpression)\n      ) {\n        this.state.context.pop();\n      }\n    } else {\n      throw this.unexpected();\n    }\n\n    if (liberal) {\n      // If the current token is not used as a keyword, set its type to \"tt.name\".\n      // This will prevent this.next() from throwing about unexpected escapes.\n      this.state.type = tt.name;\n    } else {\n      this.checkReservedWord(name, start, !!type.keyword, false);\n    }\n\n    this.next();\n\n    return name;\n  }\n\n  checkReservedWord(\n    word: string,\n    startLoc: number,\n    checkKeywords: boolean,\n    isBinding: boolean,\n  ): void {\n    if (this.prodParam.hasYield && word === \"yield\") {\n      this.raise(startLoc, Errors.YieldBindingIdentifier);\n      return;\n    }\n\n    if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(startLoc, Errors.AwaitBindingIdentifier);\n        return;\n      } else if (this.scope.inStaticBlock && !this.scope.inNonArrowFunction) {\n        this.raise(startLoc, Errors.AwaitBindingIdentifierInStaticBlock);\n        return;\n      } else {\n        this.expressionScope.recordAsyncArrowParametersError(\n          startLoc,\n          Errors.AwaitBindingIdentifier,\n        );\n      }\n    }\n\n    if (\n      this.scope.inClass &&\n      !this.scope.inNonArrowFunction &&\n      word === \"arguments\"\n    ) {\n      this.raise(startLoc, Errors.ArgumentsInClass);\n      return;\n    }\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(startLoc, Errors.UnexpectedKeyword, word);\n      return;\n    }\n\n    const reservedTest = !this.state.strict\n      ? isReservedWord\n      : isBinding\n      ? isStrictBindReservedWord\n      : isStrictReservedWord;\n\n    if (reservedTest(word, this.inModule)) {\n      this.raise(startLoc, Errors.UnexpectedReservedWord, word);\n    }\n  }\n\n  isAwaitAllowed(): boolean {\n    if (this.prodParam.hasAwait) return true;\n    if (this.options.allowAwaitOutsideFunction && !this.scope.inFunction) {\n      return true;\n    }\n    return false;\n  }\n\n  // Parses await expression inside async function.\n\n  parseAwait(startPos: number, startLoc: Position): N.AwaitExpression {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    this.expressionScope.recordParameterInitializerError(\n      node.start,\n      Errors.AwaitExpressionFormalParameter,\n    );\n\n    if (this.eat(tt.star)) {\n      this.raise(node.start, Errors.ObsoleteAwaitStar);\n    }\n\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n      if (this.isAmbiguousAwait()) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary(null, true);\n    }\n\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n\n  isAmbiguousAwait(): boolean {\n    return (\n      this.hasPrecedingLineBreak() ||\n      // All the following expressions are ambiguous:\n      //   await + 0, await - 0, await ( 0 ), await [ 0 ], await / 0 /u, await ``\n      this.match(tt.plusMin) ||\n      this.match(tt.parenL) ||\n      this.match(tt.bracketL) ||\n      this.match(tt.backQuote) ||\n      // Sometimes the tokenizer generates tt.slash for regexps, and this is\n      // handler by parseExprAtom\n      this.match(tt.regexp) ||\n      this.match(tt.slash) ||\n      // This code could be parsed both as a modulo operator or as an intrinsic:\n      //   await %x(0)\n      (this.hasPlugin(\"v8intrinsic\") && this.match(tt.modulo))\n    );\n  }\n\n  // Parses yield expression inside generator.\n\n  parseYield(): N.YieldExpression {\n    const node = this.startNode();\n\n    this.expressionScope.recordParameterInitializerError(\n      node.start,\n      Errors.YieldInParameter,\n    );\n\n    this.next();\n    if (\n      this.match(tt.semi) ||\n      (!this.match(tt.star) && !this.state.type.startsExpr) ||\n      this.hasPrecedingLineBreak()\n    ) {\n      node.delegate = false;\n      node.argument = null;\n    } else {\n      node.delegate = this.eat(tt.star);\n      node.argument = this.parseMaybeAssign();\n    }\n    return this.finishNode(node, \"YieldExpression\");\n  }\n\n  // Validates a pipeline (for any of the pipeline Babylon plugins) at the point\n  // of the infix operator `|>`.\n\n  checkPipelineAtInfixOperator(left: N.Expression, leftStartPos: number) {\n    if (this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"smart\") {\n      if (left.type === \"SequenceExpression\") {\n        // Ensure that the pipeline head is not a comma-delimited\n        // sequence expression.\n        this.raise(leftStartPos, Errors.PipelineHeadSequenceExpression);\n      }\n    }\n  }\n\n  parseSmartPipelineBody(\n    childExpression: N.Expression,\n    startPos: number,\n    startLoc: Position,\n  ): N.PipelineBody {\n    this.checkSmartPipelineBodyEarlyErrors(childExpression, startPos);\n\n    return this.parseSmartPipelineBodyInStyle(\n      childExpression,\n      startPos,\n      startLoc,\n    );\n  }\n\n  checkSmartPipelineBodyEarlyErrors(\n    childExpression: N.Expression,\n    startPos: number,\n  ): void {\n    if (this.match(tt.arrow)) {\n      // If the following token is invalidly `=>`, then throw a human-friendly error\n      // instead of something like 'Unexpected token, expected \";\"'.\n      throw this.raise(this.state.start, Errors.PipelineBodyNoArrow);\n    } else if (childExpression.type === \"SequenceExpression\") {\n      this.raise(startPos, Errors.PipelineBodySequenceExpression);\n    }\n  }\n\n  parseSmartPipelineBodyInStyle(\n    childExpression: N.Expression,\n    startPos: number,\n    startLoc: Position,\n  ): N.PipelineBody {\n    const bodyNode = this.startNodeAt(startPos, startLoc);\n    const isSimpleReference = this.isSimpleReference(childExpression);\n    if (isSimpleReference) {\n      bodyNode.callee = childExpression;\n    } else {\n      if (!this.topicReferenceWasUsedInCurrentTopicContext()) {\n        this.raise(startPos, Errors.PipelineTopicUnused);\n      }\n      bodyNode.expression = childExpression;\n    }\n    return this.finishNode(\n      bodyNode,\n      isSimpleReference ? \"PipelineBareFunction\" : \"PipelineTopicExpression\",\n    );\n  }\n\n  isSimpleReference(expression: N.Expression): boolean {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return (\n          !expression.computed && this.isSimpleReference(expression.object)\n        );\n      case \"Identifier\":\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  // Enable topic references from outer contexts within smart pipeline bodies.\n  // The function modifies the parser's topic-context state to enable or disable\n  // the use of topic references with the smartPipelines plugin. They then run a\n  // callback, then they reset the parser to the old topic-context state that it\n  // had before the function was called.\n\n  withTopicPermittingContext<T>(callback: () => T): T {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      // Enable the use of the primary topic reference.\n      maxNumOfResolvableTopics: 1,\n      // Hide the use of any topic references from outer contexts.\n      maxTopicIndex: null,\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  // Disable topic references from outer contexts within syntax constructs\n  // such as the bodies of iteration statements.\n  // The function modifies the parser's topic-context state to enable or disable\n  // the use of topic references with the smartPipelines plugin. They then run a\n  // callback, then they reset the parser to the old topic-context state that it\n  // had before the function was called.\n\n  withTopicForbiddingContext<T>(callback: () => T): T {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      // Disable the use of the primary topic reference.\n      maxNumOfResolvableTopics: 0,\n      // Hide the use of any topic references from outer contexts.\n      maxTopicIndex: null,\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withSoloAwaitPermittingContext<T>(callback: () => T): T {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n\n  allowInAnd<T>(callback: () => T): T {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToSet = PARAM_IN & ~flags;\n    if (prodParamToSet) {\n      this.prodParam.enter(flags | PARAM_IN);\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n    return callback();\n  }\n\n  disallowInAnd<T>(callback: () => T): T {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToClear = PARAM_IN & flags;\n    if (prodParamToClear) {\n      this.prodParam.enter(flags & ~PARAM_IN);\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n    return callback();\n  }\n\n  // Register the use of a primary topic reference (`#`) within the current\n  // topic context.\n  registerTopicReference(): void {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n\n  primaryTopicReferenceIsAllowedInCurrentTopicContext(): boolean {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n\n  topicReferenceWasUsedInCurrentTopicContext(): boolean {\n    return (\n      this.state.topicContext.maxTopicIndex != null &&\n      this.state.topicContext.maxTopicIndex >= 0\n    );\n  }\n\n  parseFSharpPipelineBody(prec: number): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n\n    const ret = this.parseExprOp(\n      this.parseMaybeUnary(),\n      startPos,\n      startLoc,\n      prec,\n    );\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    return ret;\n  }\n\n  // https://github.com/tc39/proposal-js-module-blocks\n  parseModuleExpression(): N.ModuleExpression {\n    this.expectPlugin(\"moduleBlocks\");\n    const node = this.startNode<N.ModuleExpression>();\n    this.next(); // eat \"module\"\n    this.eat(tt.braceL);\n\n    const revertScopes = this.initializeScopes(/** inModule */ true);\n    this.enterInitialScopes();\n\n    const program = this.startNode<N.Program>();\n    try {\n      node.body = this.parseProgram(program, tt.braceR, \"module\");\n    } finally {\n      revertScopes();\n    }\n    this.eat(tt.braceR);\n    return this.finishNode<N.ModuleExpression>(node, \"ModuleExpression\");\n  }\n}\n","// @flow\n\nimport * as N from \"../types\";\nimport { types as tt, type TokenType } from \"../tokenizer/types\";\nimport ExpressionParser from \"./expression\";\nimport { Errors, SourceTypeModuleErrors } from \"./error\";\nimport { isIdentifierChar, isIdentifierStart } from \"../util/identifier\";\nimport { lineBreak } from \"../util/whitespace\";\nimport * as charCodes from \"charcodes\";\nimport {\n  BIND_CLASS,\n  BIND_LEXICAL,\n  BIND_VAR,\n  BIND_FUNCTION,\n  SCOPE_CLASS,\n  SCOPE_FUNCTION,\n  SCOPE_OTHER,\n  SCOPE_SIMPLE_CATCH,\n  SCOPE_STATIC_BLOCK,\n  SCOPE_SUPER,\n  CLASS_ELEMENT_OTHER,\n  CLASS_ELEMENT_INSTANCE_GETTER,\n  CLASS_ELEMENT_INSTANCE_SETTER,\n  CLASS_ELEMENT_STATIC_GETTER,\n  CLASS_ELEMENT_STATIC_SETTER,\n  type BindingTypes,\n} from \"../util/scopeflags\";\nimport { ExpressionErrors } from \"./util\";\nimport { PARAM, functionFlags } from \"../util/production-parameter\";\nimport {\n  newExpressionScope,\n  newParameterDeclarationScope,\n} from \"../util/expression-scope\";\nimport type { SourceType } from \"../options\";\nimport { Token } from \"../tokenizer\";\nimport { Position } from \"../util/location\";\n\nconst loopLabel = { kind: \"loop\" },\n  switchLabel = { kind: \"switch\" };\n\nconst FUNC_NO_FLAGS = 0b000,\n  FUNC_STATEMENT = 0b001,\n  FUNC_HANGING_STATEMENT = 0b010,\n  FUNC_NULLABLE_ID = 0b100;\n\nconst loneSurrogate = /[\\uD800-\\uDFFF]/u;\n\nconst keywordRelationalOperator = /in(?:stanceof)?/y;\n\n/**\n * Convert tt.privateName to tt.hash + tt.name for backward Babel 7 compat.\n * For performance reasons this routine mutates `tokens`, it is okay\n * here since we execute `parseTopLevel` once for every file.\n * @param {*} tokens\n * @returns\n */\nfunction babel7CompatTokens(tokens) {\n  if (!process.env.BABEL_8_BREAKING) {\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n      if (token.type === tt.privateName) {\n        const { loc, start, value, end } = token;\n        const hashEndPos = start + 1;\n        const hashEndLoc = new Position(loc.start.line, loc.start.column + 1);\n        tokens.splice(\n          i,\n          1,\n          // $FlowIgnore: hacky way to create token\n          new Token({\n            type: tt.hash,\n            value: \"#\",\n            start: start,\n            end: hashEndPos,\n            startLoc: loc.start,\n            endLoc: hashEndLoc,\n          }),\n          // $FlowIgnore: hacky way to create token\n          new Token({\n            type: tt.name,\n            value: value,\n            start: hashEndPos,\n            end: end,\n            startLoc: hashEndLoc,\n            endLoc: loc.end,\n          }),\n        );\n      }\n    }\n  }\n  return tokens;\n}\nexport default class StatementParser extends ExpressionParser {\n  // ### Statement parsing\n\n  // Parse a program. Initializes the parser, reads any number of\n  // statements, and wraps them in a Program node.  Optionally takes a\n  // `program` argument.  If present, the statements will be appended\n  // to its body instead of creating a new node.\n\n  parseTopLevel(file: N.File, program: N.Program): N.File {\n    file.program = this.parseProgram(program);\n    file.comments = this.state.comments;\n\n    if (this.options.tokens) file.tokens = babel7CompatTokens(this.tokens);\n\n    return this.finishNode(file, \"File\");\n  }\n\n  parseProgram(\n    program: N.Program,\n    end: TokenType = tt.eof,\n    sourceType: SourceType = this.options.sourceType,\n  ): N.Program {\n    program.sourceType = sourceType;\n    program.interpreter = this.parseInterpreterDirective();\n    this.parseBlockBody(program, true, true, end);\n    if (\n      this.inModule &&\n      !this.options.allowUndeclaredExports &&\n      this.scope.undefinedExports.size > 0\n    ) {\n      for (const [name] of Array.from(this.scope.undefinedExports)) {\n        const pos = this.scope.undefinedExports.get(name);\n        // $FlowIssue\n        this.raise(pos, Errors.ModuleExportUndefined, name);\n      }\n    }\n    return this.finishNode<N.Program>(program, \"Program\");\n  }\n\n  // TODO\n\n  stmtToDirective(stmt: N.Statement): N.Directive {\n    const expr = stmt.expression;\n\n    const directiveLiteral = this.startNodeAt(expr.start, expr.loc.start);\n    const directive = this.startNodeAt(stmt.start, stmt.loc.start);\n\n    const raw = this.input.slice(expr.start, expr.end);\n    const val = (directiveLiteral.value = raw.slice(1, -1)); // remove quotes\n\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n\n    directive.value = this.finishNodeAt(\n      directiveLiteral,\n      \"DirectiveLiteral\",\n      expr.end,\n      expr.loc.end,\n    );\n\n    return this.finishNodeAt(directive, \"Directive\", stmt.end, stmt.loc.end);\n  }\n\n  parseInterpreterDirective(): N.InterpreterDirective | null {\n    if (!this.match(tt.interpreterDirective)) {\n      return null;\n    }\n\n    const node = this.startNode();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n\n  isLet(context: ?string): boolean {\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n    return this.isLetKeyword(context);\n  }\n\n  /**\n   * Assuming we have seen a contextual `let`, check if it starts a variable declaration\n   so that `left` should be interpreted as a `let` keyword.\n   *\n   * @param {?string} context When `context` is non nullish, it will return early and _skip_ checking\n                              if the next token after `let` is `{` or a keyword relational operator\n   * @returns {boolean}\n   * @memberof StatementParser\n   */\n  isLetKeyword(context: ?string): boolean {\n    const next = this.nextTokenStart();\n    const nextCh = this.codePointAtPos(next);\n    // For ambiguous cases, determine if a LexicalDeclaration (or only a\n    // Statement) is allowed here. If context is not empty then only a Statement\n    // is allowed. However, `let [` is an explicit negative lookahead for\n    // ExpressionStatement, so special-case it first.\n    // Also, `let \\` is never valid as an expression so this must be a keyword.\n    if (\n      nextCh === charCodes.backslash ||\n      nextCh === charCodes.leftSquareBracket\n    ) {\n      return true;\n    }\n    if (context) return false;\n\n    if (nextCh === charCodes.leftCurlyBrace) return true;\n\n    if (isIdentifierStart(nextCh)) {\n      keywordRelationalOperator.lastIndex = next;\n      const matched = keywordRelationalOperator.exec(this.input);\n      if (matched !== null) {\n        // We have seen `in` or `instanceof` so far, now check if the identfier\n        // ends here\n        const endCh = this.codePointAtPos(next + matched[0].length);\n        if (!isIdentifierChar(endCh) && endCh !== charCodes.backslash) {\n          return false;\n        }\n      }\n      return true;\n    }\n    return false;\n  }\n\n  // Parse a single statement.\n  //\n  // If expecting a statement and finding a slash operator, parse a\n  // regular expression literal. This is to handle cases like\n  // `if (foo) /blah/.exec(foo)`, where looking at the previous token\n  // does not help.\n  // https://tc39.es/ecma262/#prod-Statement\n  // ImportDeclaration and ExportDeclaration are also handled here so we can throw recoverable errors\n  // when they are not at the top level\n  parseStatement(context: ?string, topLevel?: boolean): N.Statement {\n    if (this.match(tt.at)) {\n      this.parseDecorators(true);\n    }\n    return this.parseStatementContent(context, topLevel);\n  }\n\n  parseStatementContent(context: ?string, topLevel: ?boolean): N.Statement {\n    let starttype = this.state.type;\n    const node = this.startNode();\n    let kind;\n\n    if (this.isLet(context)) {\n      starttype = tt._var;\n      kind = \"let\";\n    }\n\n    // Most types of statements are recognized by the keyword they\n    // start with. Many are trivial to parse, some require a bit of\n    // complexity.\n\n    switch (starttype) {\n      case tt._break:\n      case tt._continue:\n        // $FlowFixMe\n        return this.parseBreakContinueStatement(node, starttype.keyword);\n      case tt._debugger:\n        return this.parseDebuggerStatement(node);\n      case tt._do:\n        return this.parseDoStatement(node);\n      case tt._for:\n        return this.parseForStatement(node);\n      case tt._function:\n        if (this.lookaheadCharCode() === charCodes.dot) break;\n        if (context) {\n          if (this.state.strict) {\n            this.raise(this.state.start, Errors.StrictFunction);\n          } else if (context !== \"if\" && context !== \"label\") {\n            this.raise(this.state.start, Errors.SloppyFunction);\n          }\n        }\n        return this.parseFunctionStatement(node, false, !context);\n\n      case tt._class:\n        if (context) this.unexpected();\n        return this.parseClass(node, true);\n\n      case tt._if:\n        return this.parseIfStatement(node);\n      case tt._return:\n        return this.parseReturnStatement(node);\n      case tt._switch:\n        return this.parseSwitchStatement(node);\n      case tt._throw:\n        return this.parseThrowStatement(node);\n      case tt._try:\n        return this.parseTryStatement(node);\n\n      case tt._const:\n      case tt._var:\n        kind = kind || this.state.value;\n        if (context && kind !== \"var\") {\n          this.raise(this.state.start, Errors.UnexpectedLexicalDeclaration);\n        }\n        return this.parseVarStatement(node, kind);\n\n      case tt._while:\n        return this.parseWhileStatement(node);\n      case tt._with:\n        return this.parseWithStatement(node);\n      case tt.braceL:\n        return this.parseBlock();\n      case tt.semi:\n        return this.parseEmptyStatement(node);\n      case tt._import: {\n        const nextTokenCharCode = this.lookaheadCharCode();\n        if (\n          nextTokenCharCode === charCodes.leftParenthesis || // import()\n          nextTokenCharCode === charCodes.dot // import.meta\n        ) {\n          break;\n        }\n      }\n      // fall through\n      case tt._export: {\n        if (!this.options.allowImportExportEverywhere && !topLevel) {\n          this.raise(this.state.start, Errors.UnexpectedImportExport);\n        }\n\n        this.next(); // eat `import`/`export`\n\n        let result;\n        if (starttype === tt._import) {\n          result = this.parseImport(node);\n\n          if (\n            result.type === \"ImportDeclaration\" &&\n            (!result.importKind || result.importKind === \"value\")\n          ) {\n            this.sawUnambiguousESM = true;\n          }\n        } else {\n          result = this.parseExport(node);\n\n          if (\n            (result.type === \"ExportNamedDeclaration\" &&\n              (!result.exportKind || result.exportKind === \"value\")) ||\n            (result.type === \"ExportAllDeclaration\" &&\n              (!result.exportKind || result.exportKind === \"value\")) ||\n            result.type === \"ExportDefaultDeclaration\"\n          ) {\n            this.sawUnambiguousESM = true;\n          }\n        }\n\n        this.assertModuleNodeAllowed(node);\n\n        return result;\n      }\n\n      default: {\n        if (this.isAsyncFunction()) {\n          if (context) {\n            this.raise(\n              this.state.start,\n              Errors.AsyncFunctionInSingleStatementContext,\n            );\n          }\n          this.next();\n          return this.parseFunctionStatement(node, true, !context);\n        }\n      }\n    }\n\n    // If the statement does not start with a statement keyword or a\n    // brace, it's an ExpressionStatement or LabeledStatement. We\n    // simply start parsing an expression, and afterwards, if the\n    // next token is a colon and the expression was a simple\n    // Identifier node, we switch to interpreting it as a label.\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n\n    if (\n      starttype === tt.name &&\n      expr.type === \"Identifier\" &&\n      this.eat(tt.colon)\n    ) {\n      return this.parseLabeledStatement(node, maybeName, expr, context);\n    } else {\n      return this.parseExpressionStatement(node, expr);\n    }\n  }\n\n  assertModuleNodeAllowed(node: N.Node): void {\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\n      this.raise(node.start, SourceTypeModuleErrors.ImportOutsideModule);\n    }\n  }\n\n  takeDecorators(node: N.HasDecorators): void {\n    const decorators =\n      this.state.decoratorStack[this.state.decoratorStack.length - 1];\n    if (decorators.length) {\n      node.decorators = decorators;\n      this.resetStartLocationFromNode(node, decorators[0]);\n      this.state.decoratorStack[this.state.decoratorStack.length - 1] = [];\n    }\n  }\n\n  canHaveLeadingDecorator(): boolean {\n    return this.match(tt._class);\n  }\n\n  parseDecorators(allowExport?: boolean): void {\n    const currentContextDecorators =\n      this.state.decoratorStack[this.state.decoratorStack.length - 1];\n    while (this.match(tt.at)) {\n      const decorator = this.parseDecorator();\n      currentContextDecorators.push(decorator);\n    }\n\n    if (this.match(tt._export)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n\n      if (\n        this.hasPlugin(\"decorators\") &&\n        !this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")\n      ) {\n        this.raise(this.state.start, Errors.DecoratorExportClass);\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(this.state.start, Errors.UnexpectedLeadingDecorator);\n    }\n  }\n\n  parseDecorator(): N.Decorator {\n    this.expectOnePlugin([\"decorators-legacy\", \"decorators\"]);\n\n    const node = this.startNode();\n    this.next();\n\n    if (this.hasPlugin(\"decorators\")) {\n      // Every time a decorator class expression is evaluated, a new empty array is pushed onto the stack\n      // So that the decorators of any nested class expressions will be dealt with separately\n      this.state.decoratorStack.push([]);\n\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let expr: N.Expression;\n\n      if (this.eat(tt.parenL)) {\n        expr = this.parseExpression();\n        this.expect(tt.parenR);\n      } else {\n        expr = this.parseIdentifier(false);\n\n        while (this.eat(tt.dot)) {\n          const node = this.startNodeAt(startPos, startLoc);\n          node.object = expr;\n          node.property = this.parseIdentifier(true);\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n      }\n\n      node.expression = this.parseMaybeDecoratorArguments(expr);\n      this.state.decoratorStack.pop();\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n    return this.finishNode(node, \"Decorator\");\n  }\n\n  parseMaybeDecoratorArguments(expr: N.Expression): N.Expression {\n    if (this.eat(tt.parenL)) {\n      const node = this.startNodeAtNode(expr);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n\n    return expr;\n  }\n\n  parseBreakContinueStatement(\n    node: N.BreakStatement | N.ContinueStatement,\n    keyword: string,\n  ): N.BreakStatement | N.ContinueStatement {\n    const isBreak = keyword === \"break\";\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n\n    this.verifyBreakContinue(node, keyword);\n\n    return this.finishNode(\n      node,\n      isBreak ? \"BreakStatement\" : \"ContinueStatement\",\n    );\n  }\n\n  verifyBreakContinue(\n    node: N.BreakStatement | N.ContinueStatement,\n    keyword: string,\n  ) {\n    const isBreak = keyword === \"break\";\n    let i;\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n        if (node.label && isBreak) break;\n      }\n    }\n    if (i === this.state.labels.length) {\n      this.raise(node.start, Errors.IllegalBreakContinue, keyword);\n    }\n  }\n\n  parseDebuggerStatement(node: N.DebuggerStatement): N.DebuggerStatement {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n\n  parseHeaderExpression(): N.Expression {\n    this.expect(tt.parenL);\n    const val = this.parseExpression();\n    this.expect(tt.parenR);\n    return val;\n  }\n\n  parseDoStatement(node: N.DoWhileStatement): N.DoWhileStatement {\n    this.next();\n    this.state.labels.push(loopLabel);\n\n    node.body =\n      // For the smartPipelines plugin: Disable topic references from outer\n      // contexts within the loop body. They are permitted in test expressions,\n      // outside of the loop body.\n      this.withTopicForbiddingContext(() =>\n        // Parse the loop body's body.\n        this.parseStatement(\"do\"),\n      );\n\n    this.state.labels.pop();\n\n    this.expect(tt._while);\n    node.test = this.parseHeaderExpression();\n    this.eat(tt.semi);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n\n  // Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n  // loop is non-trivial. Basically, we have to parse the init `var`\n  // statement or expression, disallowing the `in` operator (see\n  // the second parameter to `parseExpression`), and then check\n  // whether the next token is `in` or `of`. When there is no init\n  // part (semicolon immediately after the opening parenthesis), it\n  // is a regular `for` loop.\n\n  parseForStatement(node: N.Node): N.ForLike {\n    this.next();\n    this.state.labels.push(loopLabel);\n\n    let awaitAt = -1;\n    if (this.isAwaitAllowed() && this.eatContextual(\"await\")) {\n      awaitAt = this.state.lastTokStart;\n    }\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(tt.parenL);\n\n    if (this.match(tt.semi)) {\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n      return this.parseFor(node, null);\n    }\n\n    const startsWithLet = this.isContextual(\"let\");\n    const isLet = startsWithLet && this.isLetKeyword();\n    if (this.match(tt._var) || this.match(tt._const) || isLet) {\n      const init = this.startNode();\n      const kind = isLet ? \"let\" : this.state.value;\n      this.next();\n      this.parseVar(init, true, kind);\n      this.finishNode(init, \"VariableDeclaration\");\n\n      if (\n        (this.match(tt._in) || this.isContextual(\"of\")) &&\n        init.declarations.length === 1\n      ) {\n        return this.parseForIn(node, init, awaitAt);\n      }\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n      return this.parseFor(node, init);\n    }\n\n    // Check whether the first token is possibly a contextual keyword, so that\n    // we can forbid `for (async of` if this turns out to be a for-of loop.\n    const startsWithUnescapedName =\n      this.match(tt.name) && !this.state.containsEsc;\n\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n    const isForOf = this.isContextual(\"of\");\n    if (isForOf) {\n      // Check for leading tokens that are forbidden in for-of loops:\n      if (startsWithLet) {\n        this.raise(init.start, Errors.ForOfLet);\n      } else if (\n        // `for await (async of []);` is allowed.\n        awaitAt === -1 &&\n        startsWithUnescapedName &&\n        init.type === \"Identifier\" &&\n        init.name === \"async\"\n      ) {\n        // This catches the case where the `async` in `for (async of` was\n        // parsed as an identifier. If it was parsed as the start of an async\n        // arrow function (e.g. `for (async of => {} of []);`), the LVal check\n        // further down will raise a more appropriate error.\n        this.raise(init.start, Errors.ForOfAsync);\n      }\n    }\n    if (isForOf || this.match(tt._in)) {\n      this.toAssignable(init, /* isLHS */ true);\n      const description = isForOf ? \"for-of statement\" : \"for-in statement\";\n      this.checkLVal(init, description);\n      return this.parseForIn(node, init, awaitAt);\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n    if (awaitAt > -1) {\n      this.unexpected(awaitAt);\n    }\n    return this.parseFor(node, init);\n  }\n\n  parseFunctionStatement(\n    node: N.FunctionDeclaration,\n    isAsync?: boolean,\n    declarationPosition?: boolean,\n  ): N.FunctionDeclaration {\n    this.next();\n    return this.parseFunction(\n      node,\n      FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT),\n      isAsync,\n    );\n  }\n\n  parseIfStatement(node: N.IfStatement): N.IfStatement {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(tt._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n\n  parseReturnStatement(node: N.ReturnStatement): N.ReturnStatement {\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n      this.raise(this.state.start, Errors.IllegalReturn);\n    }\n\n    this.next();\n\n    // In `return` (and `break`/`continue`), the keywords with\n    // optional arguments, we eagerly look for a semicolon or the\n    // possibility to insert one.\n\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n\n  parseSwitchStatement(node: N.SwitchStatement): N.SwitchStatement {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases = (node.cases = []);\n    this.expect(tt.braceL);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(SCOPE_OTHER);\n\n    // Statements under must be grouped (by label) in SwitchCase\n    // nodes. `cur` is used to keep the node that we are currently\n    // adding statements to.\n\n    let cur;\n    for (let sawDefault; !this.match(tt.braceR); ) {\n      if (this.match(tt._case) || this.match(tt._default)) {\n        const isCase = this.match(tt._case);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        cases.push((cur = this.startNode()));\n        cur.consequent = [];\n        this.next();\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(\n              this.state.lastTokStart,\n              Errors.MultipleDefaultsInSwitch,\n            );\n          }\n          sawDefault = true;\n          cur.test = null;\n        }\n        this.expect(tt.colon);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatement(null));\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next(); // Closing brace\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n\n  parseThrowStatement(node: N.ThrowStatement): N.ThrowStatement {\n    this.next();\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.lastTokEnd, Errors.NewlineAfterThrow);\n    }\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n\n  parseCatchClauseParam(): N.Pattern {\n    const param = this.parseBindingAtom();\n\n    const simple = param.type === \"Identifier\";\n    this.scope.enter(simple ? SCOPE_SIMPLE_CATCH : 0);\n    this.checkLVal(param, \"catch clause\", BIND_LEXICAL);\n\n    return param;\n  }\n\n  parseTryStatement(node: N.TryStatement): N.TryStatement {\n    this.next();\n\n    node.block = this.parseBlock();\n    node.handler = null;\n\n    if (this.match(tt._catch)) {\n      const clause = this.startNode();\n      this.next();\n      if (this.match(tt.parenL)) {\n        this.expect(tt.parenL);\n        clause.param = this.parseCatchClauseParam();\n        this.expect(tt.parenR);\n      } else {\n        clause.param = null;\n        this.scope.enter(SCOPE_OTHER);\n      }\n\n      clause.body =\n        // For the smartPipelines plugin: Disable topic references from outer\n        // contexts within the catch clause's body.\n        this.withTopicForbiddingContext(() =>\n          // Parse the catch clause's body.\n          this.parseBlock(false, false),\n        );\n      this.scope.exit();\n\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n\n    node.finalizer = this.eat(tt._finally) ? this.parseBlock() : null;\n\n    if (!node.handler && !node.finalizer) {\n      this.raise(node.start, Errors.NoCatchOrFinally);\n    }\n\n    return this.finishNode(node, \"TryStatement\");\n  }\n\n  parseVarStatement(\n    node: N.VariableDeclaration,\n    kind: \"var\" | \"let\" | \"const\",\n  ): N.VariableDeclaration {\n    this.next();\n    this.parseVar(node, false, kind);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n\n  parseWhileStatement(node: N.WhileStatement): N.WhileStatement {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the loop body.\n      // They are permitted in test expressions, outside of the loop body.\n      this.withTopicForbiddingContext(() =>\n        // Parse loop body.\n        this.parseStatement(\"while\"),\n      );\n\n    this.state.labels.pop();\n\n    return this.finishNode(node, \"WhileStatement\");\n  }\n\n  parseWithStatement(node: N.WithStatement): N.WithStatement {\n    if (this.state.strict) {\n      this.raise(this.state.start, Errors.StrictWith);\n    }\n    this.next();\n    node.object = this.parseHeaderExpression();\n\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the with statement's body.\n      // They are permitted in function default-parameter expressions, which are\n      // part of the outer context, outside of the with statement's body.\n      this.withTopicForbiddingContext(() =>\n        // Parse the statement body.\n        this.parseStatement(\"with\"),\n      );\n\n    return this.finishNode(node, \"WithStatement\");\n  }\n\n  parseEmptyStatement(node: N.EmptyStatement): N.EmptyStatement {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n\n  parseLabeledStatement(\n    node: N.LabeledStatement,\n    maybeName: string,\n    expr: N.Identifier,\n    context: ?string,\n  ): N.LabeledStatement {\n    for (const label of this.state.labels) {\n      if (label.name === maybeName) {\n        this.raise(expr.start, Errors.LabelRedeclaration, maybeName);\n      }\n    }\n\n    const kind = this.state.type.isLoop\n      ? \"loop\"\n      : this.match(tt._switch)\n      ? \"switch\"\n      : null;\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n      if (label.statementStart === node.start) {\n        label.statementStart = this.state.start;\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.state.start,\n    });\n    node.body = this.parseStatement(\n      context\n        ? context.indexOf(\"label\") === -1\n          ? context + \"label\"\n          : context\n        : \"label\",\n    );\n\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n\n  parseExpressionStatement(\n    node: N.ExpressionStatement,\n    expr: N.Expression,\n  ): N.Statement {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n\n  // Parse a semicolon-enclosed block of statements, handling `\"use\n  // strict\"` declarations when `allowDirectives` is true (used for\n  // function bodies).\n\n  parseBlock(\n    allowDirectives?: boolean = false,\n    createNewLexicalScope?: boolean = true,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): N.BlockStatement {\n    const node = this.startNode();\n    if (allowDirectives) {\n      this.state.strictErrors.clear();\n    }\n    this.expect(tt.braceL);\n    if (createNewLexicalScope) {\n      this.scope.enter(SCOPE_OTHER);\n    }\n    this.parseBlockBody(\n      node,\n      allowDirectives,\n      false,\n      tt.braceR,\n      afterBlockParse,\n    );\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n    return this.finishNode(node, \"BlockStatement\");\n  }\n\n  isValidDirective(stmt: N.Statement): boolean {\n    return (\n      stmt.type === \"ExpressionStatement\" &&\n      stmt.expression.type === \"StringLiteral\" &&\n      !stmt.expression.extra.parenthesized\n    );\n  }\n\n  parseBlockBody(\n    node: N.BlockStatementLike,\n    allowDirectives: ?boolean,\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): void {\n    const body = (node.body = []);\n    const directives = (node.directives = []);\n    this.parseBlockOrModuleBlockBody(\n      body,\n      allowDirectives ? directives : undefined,\n      topLevel,\n      end,\n      afterBlockParse,\n    );\n  }\n\n  // Undefined directives means that directives are not allowed.\n  // https://tc39.es/ecma262/#prod-Block\n  // https://tc39.es/ecma262/#prod-ModuleBody\n  parseBlockOrModuleBlockBody(\n    body: N.Statement[],\n    directives: ?(N.Directive[]),\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): void {\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n\n    while (!this.match(end)) {\n      const stmt = this.parseStatement(null, topLevel);\n\n      if (directives && !parsedNonDirective) {\n        if (this.isValidDirective(stmt)) {\n          const directive = this.stmtToDirective(stmt);\n          directives.push(directive);\n\n          if (\n            !hasStrictModeDirective &&\n            directive.value.value === \"use strict\"\n          ) {\n            hasStrictModeDirective = true;\n            this.setStrict(true);\n          }\n\n          continue;\n        }\n        parsedNonDirective = true;\n        // clear strict errors since the strict mode will not change within the block\n        this.state.strictErrors.clear();\n      }\n      body.push(stmt);\n    }\n\n    if (afterBlockParse) {\n      afterBlockParse.call(this, hasStrictModeDirective);\n    }\n\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n\n    this.next();\n  }\n\n  // Parse a regular `for` loop. The disambiguation code in\n  // `parseStatement` will already have parsed the init statement or\n  // expression.\n\n  parseFor(\n    node: N.ForStatement,\n    init: ?(N.VariableDeclaration | N.Expression),\n  ): N.ForStatement {\n    node.init = init;\n    this.semicolon(/* allowAsi */ false);\n    node.test = this.match(tt.semi) ? null : this.parseExpression();\n    this.semicolon(/* allowAsi */ false);\n    node.update = this.match(tt.parenR) ? null : this.parseExpression();\n    this.expect(tt.parenR);\n\n    node.body =\n      // For the smartPipelines plugin: Disable topic references from outer\n      // contexts within the loop body. They are permitted in test expressions,\n      // outside of the loop body.\n      this.withTopicForbiddingContext(() =>\n        // Parse the loop body.\n        this.parseStatement(\"for\"),\n      );\n\n    this.scope.exit();\n    this.state.labels.pop();\n\n    return this.finishNode(node, \"ForStatement\");\n  }\n\n  // Parse a `for`/`in` and `for`/`of` loop, which are almost\n  // same from parser's perspective.\n\n  parseForIn(\n    node: N.ForInOf,\n    init: N.VariableDeclaration | N.AssignmentPattern,\n    awaitAt: number,\n  ): N.ForInOf {\n    const isForIn = this.match(tt._in);\n    this.next();\n\n    if (isForIn) {\n      if (awaitAt > -1) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt > -1;\n    }\n\n    if (\n      init.type === \"VariableDeclaration\" &&\n      init.declarations[0].init != null &&\n      (!isForIn ||\n        this.state.strict ||\n        init.kind !== \"var\" ||\n        init.declarations[0].id.type !== \"Identifier\")\n    ) {\n      this.raise(\n        init.start,\n        Errors.ForInOfLoopInitializer,\n        isForIn ? \"for-in\" : \"for-of\",\n      );\n    } else if (init.type === \"AssignmentPattern\") {\n      this.raise(init.start, Errors.InvalidLhs, \"for-loop\");\n    }\n\n    node.left = init;\n    node.right = isForIn\n      ? this.parseExpression()\n      : this.parseMaybeAssignAllowIn();\n    this.expect(tt.parenR);\n\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the loop body.\n      // They are permitted in test expressions, outside of the loop body.\n      this.withTopicForbiddingContext(() =>\n        // Parse loop body.\n        this.parseStatement(\"for\"),\n      );\n\n    this.scope.exit();\n    this.state.labels.pop();\n\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n\n  // Parse a list of variable declarations.\n\n  parseVar(\n    node: N.VariableDeclaration,\n    isFor: boolean,\n    kind: \"var\" | \"let\" | \"const\",\n  ): N.VariableDeclaration {\n    const declarations = (node.declarations = []);\n    const isTypescript = this.hasPlugin(\"typescript\");\n    node.kind = kind;\n    for (;;) {\n      const decl = this.startNode();\n      this.parseVarId(decl, kind);\n      if (this.eat(tt.eq)) {\n        decl.init = isFor\n          ? this.parseMaybeAssignDisallowIn()\n          : this.parseMaybeAssignAllowIn();\n      } else {\n        if (\n          kind === \"const\" &&\n          !(this.match(tt._in) || this.isContextual(\"of\"))\n        ) {\n          // `const` with no initializer is allowed in TypeScript.\n          // It could be a declaration like `const x: number;`.\n          if (!isTypescript) {\n            this.raise(\n              this.state.lastTokEnd,\n              Errors.DeclarationMissingInitializer,\n              \"Const declarations\",\n            );\n          }\n        } else if (\n          decl.id.type !== \"Identifier\" &&\n          !(isFor && (this.match(tt._in) || this.isContextual(\"of\")))\n        ) {\n          this.raise(\n            this.state.lastTokEnd,\n            Errors.DeclarationMissingInitializer,\n            \"Complex binding patterns\",\n          );\n        }\n        decl.init = null;\n      }\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(tt.comma)) break;\n    }\n    return node;\n  }\n\n  parseVarId(decl: N.VariableDeclarator, kind: \"var\" | \"let\" | \"const\"): void {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(\n      decl.id,\n      \"variable declaration\",\n      kind === \"var\" ? BIND_VAR : BIND_LEXICAL,\n      undefined,\n      kind !== \"var\",\n    );\n  }\n\n  // Parse a function declaration or literal (depending on the\n  // `isStatement` parameter).\n\n  parseFunction<T: N.NormalFunction>(\n    node: T,\n    statement?: number = FUNC_NO_FLAGS,\n    isAsync?: boolean = false,\n  ): T {\n    const isStatement = statement & FUNC_STATEMENT;\n    const isHangingStatement = statement & FUNC_HANGING_STATEMENT;\n    const requireId = !!isStatement && !(statement & FUNC_NULLABLE_ID);\n\n    this.initFunction(node, isAsync);\n\n    if (this.match(tt.star) && isHangingStatement) {\n      this.raise(this.state.start, Errors.GeneratorInSingleStatementContext);\n    }\n    node.generator = this.eat(tt.star);\n\n    if (isStatement) {\n      node.id = this.parseFunctionId(requireId);\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = false;\n    this.scope.enter(SCOPE_FUNCTION);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n\n    if (!isStatement) {\n      node.id = this.parseFunctionId();\n    }\n\n    this.parseFunctionParams(node, /* allowModifiers */ false);\n\n    // For the smartPipelines plugin: Disable topic references from outer\n    // contexts within the function body. They are permitted in function\n    // default-parameter expressions, outside of the function body.\n    this.withTopicForbiddingContext(() => {\n      // Parse the function body.\n      this.parseFunctionBodyAndFinish(\n        node,\n        isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\",\n      );\n    });\n\n    this.prodParam.exit();\n    this.scope.exit();\n\n    if (isStatement && !isHangingStatement) {\n      // We need to register this _after_ parsing the function body\n      // because of TypeScript body-less function declarations,\n      // which shouldn't be added to the scope.\n      this.registerFunctionStatementId(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  parseFunctionId(requireId?: boolean): ?N.Identifier {\n    return requireId || this.match(tt.name) ? this.parseIdentifier() : null;\n  }\n\n  parseFunctionParams(node: N.Function, allowModifiers?: boolean): void {\n    this.expect(tt.parenL);\n    this.expressionScope.enter(newParameterDeclarationScope());\n    node.params = this.parseBindingList(\n      tt.parenR,\n      charCodes.rightParenthesis,\n      /* allowEmpty */ false,\n      allowModifiers,\n    );\n\n    this.expressionScope.exit();\n  }\n\n  registerFunctionStatementId(node: N.Function): void {\n    if (!node.id) return;\n\n    // If it is a regular function declaration in sloppy mode, then it is\n    // subject to Annex B semantics (BIND_FUNCTION). Otherwise, the binding\n    // mode depends on properties of the current scope (see\n    // treatFunctionsAsVar).\n    this.scope.declareName(\n      node.id.name,\n      this.state.strict || node.generator || node.async\n        ? this.scope.treatFunctionsAsVar\n          ? BIND_VAR\n          : BIND_LEXICAL\n        : BIND_FUNCTION,\n      node.id.start,\n    );\n  }\n\n  // Parse a class declaration or literal (depending on the\n  // `isStatement` parameter).\n\n  parseClass<T: N.Class>(\n    node: T,\n    isStatement: /* T === ClassDeclaration */ boolean,\n    optionalId?: boolean,\n  ): T {\n    this.next();\n    this.takeDecorators(node);\n\n    // A class definition is always strict mode code.\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    // this.state.strict is restored in parseClassBody\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n\n    return this.finishNode(\n      node,\n      isStatement ? \"ClassDeclaration\" : \"ClassExpression\",\n    );\n  }\n\n  isClassProperty(): boolean {\n    return this.match(tt.eq) || this.match(tt.semi) || this.match(tt.braceR);\n  }\n\n  isClassMethod(): boolean {\n    return this.match(tt.parenL);\n  }\n\n  isNonstaticConstructor(method: N.ClassMethod | N.ClassProperty): boolean {\n    return (\n      !method.computed &&\n      !method.static &&\n      (method.key.name === \"constructor\" || // Identifier\n        method.key.value === \"constructor\") // String literal\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassBody\n  parseClassBody(hadSuperClass: boolean, oldStrict: boolean): N.ClassBody {\n    this.classScope.enter();\n\n    const state: N.ParseClassMemberState = {\n      hadConstructor: false,\n      hadSuperClass,\n    };\n    let decorators: N.Decorator[] = [];\n    const classBody: N.ClassBody = this.startNode();\n    classBody.body = [];\n\n    this.expect(tt.braceL);\n\n    // For the smartPipelines plugin: Disable topic references from outer\n    // contexts within the class body.\n    this.withTopicForbiddingContext(() => {\n      while (!this.match(tt.braceR)) {\n        if (this.eat(tt.semi)) {\n          if (decorators.length > 0) {\n            throw this.raise(this.state.lastTokEnd, Errors.DecoratorSemicolon);\n          }\n          continue;\n        }\n\n        if (this.match(tt.at)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n\n        const member = this.startNode();\n\n        // steal the decorators if there are any\n        if (decorators.length) {\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n\n        this.parseClassMember(classBody, member, state);\n\n        if (\n          member.kind === \"constructor\" &&\n          member.decorators &&\n          member.decorators.length > 0\n        ) {\n          this.raise(member.start, Errors.DecoratorConstructor);\n        }\n      }\n    });\n\n    this.state.strict = oldStrict;\n\n    this.next(); // eat `}`\n\n    if (decorators.length) {\n      throw this.raise(this.state.start, Errors.TrailingDecorator);\n    }\n\n    this.classScope.exit();\n\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n\n  // returns true if the current identifier is a method/field name,\n  // false if it is a modifier\n  parseClassMemberFromModifier(\n    classBody: N.ClassBody,\n    member: N.ClassMember,\n  ): boolean {\n    const key = this.parseIdentifier(true); // eats the modifier\n\n    if (this.isClassMethod()) {\n      const method: N.ClassMethod = (member: any);\n\n      // a method named like the modifier\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(\n        classBody,\n        method,\n        false,\n        false,\n        /* isConstructor */ false,\n        false,\n      );\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop: N.ClassProperty = (member: any);\n\n      // a property named like the modifier\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    }\n    return false;\n  }\n\n  parseClassMember(\n    classBody: N.ClassBody,\n    member: N.ClassMember,\n    state: N.ParseClassMemberState,\n  ): void {\n    const isStatic = this.isContextual(\"static\");\n\n    if (isStatic) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        // a class element named 'static'\n        return;\n      }\n      if (this.eat(tt.braceL)) {\n        this.parseClassStaticBlock(classBody, ((member: any): N.StaticBlock));\n        return;\n      }\n    }\n\n    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parseClassMemberWithIsStatic(\n    classBody: N.ClassBody,\n    member: N.ClassMember,\n    state: N.ParseClassMemberState,\n    isStatic: boolean,\n  ) {\n    const publicMethod: $FlowSubtype<N.ClassMethod> = member;\n    const privateMethod: $FlowSubtype<N.ClassPrivateMethod> = member;\n    const publicProp: $FlowSubtype<N.ClassMethod> = member;\n    const privateProp: $FlowSubtype<N.ClassPrivateMethod> = member;\n\n    const method: typeof publicMethod | typeof privateMethod = publicMethod;\n    const publicMember: typeof publicMethod | typeof publicProp = publicMethod;\n\n    member.static = isStatic;\n\n    if (this.eat(tt.star)) {\n      // a generator\n      method.kind = \"method\";\n      const isPrivateName = this.match(tt.privateName);\n      this.parseClassElementName(method);\n\n      if (isPrivateName) {\n        // Private generator method\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(publicMethod.key.start, Errors.ConstructorIsGenerator);\n      }\n\n      this.pushClassMethod(\n        classBody,\n        publicMethod,\n        true,\n        false,\n        /* isConstructor */ false,\n        false,\n      );\n\n      return;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const isPrivate = this.match(tt.privateName);\n    const key = this.parseClassElementName(member);\n    // Check the key is not a computed expression or string literal.\n    const isSimple = key.type === \"Identifier\";\n    const maybeQuestionTokenStart = this.state.start;\n\n    this.parsePostMemberNameModifiers(publicMember);\n\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n\n      // a normal method\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n\n        // TypeScript allows multiple overloaded constructor declarations.\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(key.start, Errors.DuplicateConstructor);\n        }\n        if (isConstructor && this.hasPlugin(\"typescript\") && member.override) {\n          this.raise(key.start, Errors.OverrideOnConstructor);\n        }\n        state.hadConstructor = true;\n        allowsDirectSuper = state.hadSuperClass;\n      }\n\n      this.pushClassMethod(\n        classBody,\n        publicMethod,\n        false,\n        false,\n        isConstructor,\n        allowsDirectSuper,\n      );\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (\n      isSimple &&\n      key.name === \"async\" &&\n      !containsEsc &&\n      !this.isLineTerminator()\n    ) {\n      // an async method\n      const isGenerator = this.eat(tt.star);\n\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStart);\n      }\n\n      method.kind = \"method\";\n      // The so-called parsed name would have been \"async\": get the real name.\n      const isPrivate = this.match(tt.privateName);\n      this.parseClassElementName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n\n      if (isPrivate) {\n        // private async method\n        this.pushClassPrivateMethod(\n          classBody,\n          privateMethod,\n          isGenerator,\n          true,\n        );\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, Errors.ConstructorIsAsync);\n        }\n\n        this.pushClassMethod(\n          classBody,\n          publicMethod,\n          isGenerator,\n          true,\n          /* isConstructor */ false,\n          false,\n        );\n      }\n    } else if (\n      isSimple &&\n      (key.name === \"get\" || key.name === \"set\") &&\n      !containsEsc &&\n      !(this.match(tt.star) && this.isLineTerminator())\n    ) {\n      // `get\\n*` is an uninitialized property named 'get' followed by a generator.\n      // a getter or setter\n      method.kind = key.name;\n      // The so-called parsed name would have been \"get/set\": get the real name.\n      const isPrivate = this.match(tt.privateName);\n      this.parseClassElementName(publicMethod);\n\n      if (isPrivate) {\n        // private getter/setter\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, Errors.ConstructorIsAccessor);\n        }\n        this.pushClassMethod(\n          classBody,\n          publicMethod,\n          false,\n          false,\n          /* isConstructor */ false,\n          false,\n        );\n      }\n\n      this.checkGetterSetterParams(publicMethod);\n    } else if (this.isLineTerminator()) {\n      // an uninitialized class property (due to ASI, since we don't otherwise recognize the next token)\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n\n  // https://tc39.es/proposal-class-fields/#prod-ClassElementName\n  parseClassElementName(member: N.ClassMember): N.Expression | N.Identifier {\n    const { type, value, start } = this.state;\n    if (\n      (type === tt.name || type === tt.string) &&\n      member.static &&\n      value === \"prototype\"\n    ) {\n      this.raise(start, Errors.StaticPrototype);\n    }\n\n    if (type === tt.privateName && value === \"constructor\") {\n      this.raise(start, Errors.ConstructorClassPrivateField);\n    }\n\n    return this.parsePropertyName(member, /* isPrivateNameAllowed */ true);\n  }\n\n  parseClassStaticBlock(\n    classBody: N.ClassBody,\n    member: N.StaticBlock & { decorators?: Array<N.Decorator> },\n  ) {\n    this.expectPlugin(\"classStaticBlock\", member.start);\n    // Start a new lexical scope\n    this.scope.enter(SCOPE_CLASS | SCOPE_STATIC_BLOCK | SCOPE_SUPER);\n    // Start a new scope with regard to loop labels\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    // ClassStaticBlockStatementList:\n    //   StatementList[~Yield, ~Await, ~Return] opt\n    this.prodParam.enter(PARAM);\n    const body = (member.body = []);\n    this.parseBlockOrModuleBlockBody(body, undefined, false, tt.braceR);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.labels = oldLabels;\n    classBody.body.push(this.finishNode<N.StaticBlock>(member, \"StaticBlock\"));\n    if (member.decorators?.length) {\n      this.raise(member.start, Errors.DecoratorStaticBlock);\n    }\n  }\n\n  pushClassProperty(classBody: N.ClassBody, prop: N.ClassProperty) {\n    if (\n      !prop.computed &&\n      (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")\n    ) {\n      // Non-computed field, which is either an identifier named \"constructor\"\n      // or a string literal named \"constructor\"\n      this.raise(prop.key.start, Errors.ConstructorClassField);\n    }\n\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n\n  pushClassPrivateProperty(\n    classBody: N.ClassBody,\n    prop: N.ClassPrivateProperty,\n  ) {\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n\n    this.classScope.declarePrivateName(\n      this.getPrivateNameSV(node.key),\n      CLASS_ELEMENT_OTHER,\n      node.key.start,\n    );\n  }\n\n  pushClassMethod(\n    classBody: N.ClassBody,\n    method: N.ClassMethod,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isConstructor: boolean,\n    allowsDirectSuper: boolean,\n  ): void {\n    classBody.body.push(\n      this.parseMethod(\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n        \"ClassMethod\",\n        true,\n      ),\n    );\n  }\n\n  pushClassPrivateMethod(\n    classBody: N.ClassBody,\n    method: N.ClassPrivateMethod,\n    isGenerator: boolean,\n    isAsync: boolean,\n  ): void {\n    const node = this.parseMethod(\n      method,\n      isGenerator,\n      isAsync,\n      /* isConstructor */ false,\n      false,\n      \"ClassPrivateMethod\",\n      true,\n    );\n    classBody.body.push(node);\n\n    const kind =\n      node.kind === \"get\"\n        ? node.static\n          ? CLASS_ELEMENT_STATIC_GETTER\n          : CLASS_ELEMENT_INSTANCE_GETTER\n        : node.kind === \"set\"\n        ? node.static\n          ? CLASS_ELEMENT_STATIC_SETTER\n          : CLASS_ELEMENT_INSTANCE_SETTER\n        : CLASS_ELEMENT_OTHER;\n    this.classScope.declarePrivateName(\n      this.getPrivateNameSV(node.key),\n      kind,\n      node.key.start,\n    );\n  }\n\n  // Overridden in typescript.js\n  parsePostMemberNameModifiers(\n    // eslint-disable-next-line no-unused-vars\n    methodOrProp: N.ClassMethod | N.ClassProperty,\n  ): void {}\n\n  // https://tc39.es/proposal-class-fields/#prod-FieldDefinition\n  parseClassPrivateProperty(\n    node: N.ClassPrivateProperty,\n  ): N.ClassPrivateProperty {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n\n  // https://tc39.es/proposal-class-fields/#prod-FieldDefinition\n  parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassProperty\");\n  }\n\n  // https://tc39.es/proposal-class-fields/#prod-Initializer\n  parseInitializer(node: N.ClassProperty | N.ClassPrivateProperty): void {\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    this.expressionScope.enter(newExpressionScope());\n    this.prodParam.enter(PARAM);\n    node.value = this.eat(tt.eq) ? this.parseMaybeAssignAllowIn() : null;\n    this.expressionScope.exit();\n    this.prodParam.exit();\n    this.scope.exit();\n  }\n\n  parseClassId(\n    node: N.Class,\n    isStatement: boolean,\n    optionalId: ?boolean,\n    bindingType: BindingTypes = BIND_CLASS,\n  ): void {\n    if (this.match(tt.name)) {\n      node.id = this.parseIdentifier();\n      if (isStatement) {\n        this.checkLVal(node.id, \"class name\", bindingType);\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        this.unexpected(null, Errors.MissingClassName);\n      }\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassHeritage\n  parseClassSuper(node: N.Class): void {\n    node.superClass = this.eat(tt._extends) ? this.parseExprSubscripts() : null;\n  }\n\n  // Parses module export declaration.\n  // https://tc39.es/ecma262/#prod-ExportDeclaration\n\n  parseExport(node: N.Node): N.AnyExport {\n    const hasDefault = this.maybeParseExportDefaultSpecifier(node);\n    const parseAfterDefault = !hasDefault || this.eat(tt.comma);\n    const hasStar = parseAfterDefault && this.eatExportStar(node);\n    const hasNamespace =\n      hasStar && this.maybeParseExportNamespaceSpecifier(node);\n    const parseAfterNamespace =\n      parseAfterDefault && (!hasNamespace || this.eat(tt.comma));\n    const isFromRequired = hasDefault || hasStar;\n\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      this.parseExportFrom(node, true);\n\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(node);\n\n    if (\n      (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers) ||\n      (hasNamespace && parseAfterNamespace && !hasSpecifiers)\n    ) {\n      throw this.unexpected(null, tt.braceL);\n    }\n\n    let hasDeclaration;\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      this.parseExportFrom(node, isFromRequired);\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(node);\n    }\n\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      this.checkExport(node, true, false, !!node.source);\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    if (this.eat(tt._default)) {\n      // export default ...\n      node.declaration = this.parseExportDefaultExpression();\n      this.checkExport(node, true, true);\n\n      return this.finishNode(node, \"ExportDefaultDeclaration\");\n    }\n\n    throw this.unexpected(null, tt.braceL);\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  eatExportStar(node: N.Node): boolean {\n    return this.eat(tt.star);\n  }\n\n  maybeParseExportDefaultSpecifier(node: N.Node): boolean {\n    if (this.isExportDefaultSpecifier()) {\n      // export defaultObj ...\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = this.parseIdentifier(true);\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node: N.Node): boolean {\n    if (this.isContextual(\"as\")) {\n      if (!node.specifiers) node.specifiers = [];\n\n      const specifier = this.startNodeAt(\n        this.state.lastTokStart,\n        this.state.lastTokStartLoc,\n      );\n\n      this.next();\n\n      specifier.exported = this.parseModuleExportName();\n      node.specifiers.push(\n        this.finishNode(specifier, \"ExportNamespaceSpecifier\"),\n      );\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportNamedSpecifiers(node: N.Node): boolean {\n    if (this.match(tt.braceL)) {\n      if (!node.specifiers) node.specifiers = [];\n      node.specifiers.push(...this.parseExportSpecifiers());\n\n      node.source = null;\n      node.declaration = null;\n\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportDeclaration(node: N.Node): boolean {\n    if (this.shouldParseExportDeclaration()) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.parseExportDeclaration(node);\n      return true;\n    }\n    return false;\n  }\n\n  isAsyncFunction(): boolean {\n    if (!this.isContextual(\"async\")) return false;\n    const next = this.nextTokenStart();\n    return (\n      !lineBreak.test(this.input.slice(this.state.pos, next)) &&\n      this.isUnparsedContextual(next, \"function\")\n    );\n  }\n\n  parseExportDefaultExpression(): N.Expression | N.Declaration {\n    const expr = this.startNode();\n\n    const isAsync = this.isAsyncFunction();\n\n    if (this.match(tt._function) || isAsync) {\n      this.next();\n      if (isAsync) {\n        this.next();\n      }\n\n      return this.parseFunction(\n        expr,\n        FUNC_STATEMENT | FUNC_NULLABLE_ID,\n        isAsync,\n      );\n    } else if (this.match(tt._class)) {\n      return this.parseClass(expr, true, true);\n    } else if (this.match(tt.at)) {\n      if (\n        this.hasPlugin(\"decorators\") &&\n        this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")\n      ) {\n        this.raise(this.state.start, Errors.DecoratorBeforeExport);\n      }\n      this.parseDecorators(false);\n      return this.parseClass(expr, true, true);\n    } else if (this.match(tt._const) || this.match(tt._var) || this.isLet()) {\n      throw this.raise(this.state.start, Errors.UnsupportedDefaultExport);\n    } else {\n      const res = this.parseMaybeAssignAllowIn();\n      this.semicolon();\n      return res;\n    }\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  parseExportDeclaration(node: N.ExportNamedDeclaration): ?N.Declaration {\n    return this.parseStatement(null);\n  }\n\n  isExportDefaultSpecifier(): boolean {\n    if (this.match(tt.name)) {\n      const value = this.state.value;\n      if ((value === \"async\" && !this.state.containsEsc) || value === \"let\") {\n        return false;\n      }\n      if (\n        (value === \"type\" || value === \"interface\") &&\n        !this.state.containsEsc\n      ) {\n        const l = this.lookahead();\n        // If we see any variable name other than `from` after `type` keyword,\n        // we consider it as flow/typescript type exports\n        // note that this approach may fail on some pedantic cases\n        // export type from = number\n        if (\n          (l.type === tt.name && l.value !== \"from\") ||\n          l.type === tt.braceL\n        ) {\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\n          return false;\n        }\n      }\n    } else if (!this.match(tt._default)) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\n    if (\n      this.input.charCodeAt(next) === charCodes.comma ||\n      (this.match(tt.name) && hasFrom)\n    ) {\n      return true;\n    }\n    // lookahead again when `export default from` is seen\n    if (this.match(tt._default) && hasFrom) {\n      const nextAfterFrom = this.input.charCodeAt(\n        this.nextTokenStartSince(next + 4),\n      );\n      return (\n        nextAfterFrom === charCodes.quotationMark ||\n        nextAfterFrom === charCodes.apostrophe\n      );\n    }\n    return false;\n  }\n\n  parseExportFrom(node: N.ExportNamedDeclaration, expect?: boolean): void {\n    if (this.eatContextual(\"from\")) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n      const assertions = this.maybeParseImportAssertions();\n      if (assertions) {\n        node.assertions = assertions;\n      }\n    } else {\n      if (expect) {\n        this.unexpected();\n      } else {\n        node.source = null;\n      }\n    }\n\n    this.semicolon();\n  }\n\n  shouldParseExportDeclaration(): boolean {\n    if (this.match(tt.at)) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n      if (this.hasPlugin(\"decorators\")) {\n        if (this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n          this.unexpected(this.state.start, Errors.DecoratorBeforeExport);\n        } else {\n          return true;\n        }\n      }\n    }\n\n    return (\n      this.state.type.keyword === \"var\" ||\n      this.state.type.keyword === \"const\" ||\n      this.state.type.keyword === \"function\" ||\n      this.state.type.keyword === \"class\" ||\n      this.isLet() ||\n      this.isAsyncFunction()\n    );\n  }\n\n  checkExport(\n    node: N.ExportNamedDeclaration,\n    checkNames?: boolean,\n    isDefault?: boolean,\n    isFrom?: boolean,\n  ): void {\n    if (checkNames) {\n      // Check for duplicate exports\n      if (isDefault) {\n        // Default exports\n        this.checkDuplicateExports(node, \"default\");\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\n          const declaration = ((node: any): N.ExportDefaultDeclaration)\n            .declaration;\n          if (\n            declaration.type === \"Identifier\" &&\n            declaration.name === \"from\" &&\n            declaration.end - declaration.start === 4 && // does not contain escape\n            !declaration.extra?.parenthesized\n          ) {\n            this.raise(declaration.start, Errors.ExportDefaultFromAsIdentifier);\n          }\n        }\n      } else if (node.specifiers && node.specifiers.length) {\n        // Named exports\n        for (const specifier of node.specifiers) {\n          const { exported } = specifier;\n          const exportedName =\n            exported.type === \"Identifier\" ? exported.name : exported.value;\n          this.checkDuplicateExports(specifier, exportedName);\n          // $FlowIgnore\n          if (!isFrom && specifier.local) {\n            const { local } = specifier;\n            if (local.type !== \"Identifier\") {\n              this.raise(\n                specifier.start,\n                Errors.ExportBindingIsString,\n                local.value,\n                exportedName,\n              );\n            } else {\n              // check for keywords used as local names\n              this.checkReservedWord(local.name, local.start, true, false);\n              // check if export is defined\n              this.scope.checkLocalExport(local);\n            }\n          }\n        }\n      } else if (node.declaration) {\n        // Exported declarations\n        if (\n          node.declaration.type === \"FunctionDeclaration\" ||\n          node.declaration.type === \"ClassDeclaration\"\n        ) {\n          const id = node.declaration.id;\n          if (!id) throw new Error(\"Assertion failure\");\n\n          this.checkDuplicateExports(node, id.name);\n        } else if (node.declaration.type === \"VariableDeclaration\") {\n          for (const declaration of node.declaration.declarations) {\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n\n    const currentContextDecorators =\n      this.state.decoratorStack[this.state.decoratorStack.length - 1];\n    // If node.declaration is a class, it will take all decorators in the current context.\n    // Thus we should throw if we see non-empty decorators here.\n    if (currentContextDecorators.length) {\n      throw this.raise(node.start, Errors.UnsupportedDecoratorExport);\n    }\n  }\n\n  checkDeclaration(node: N.Pattern | N.ObjectProperty): void {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (const prop of node.properties) {\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (const elem of node.elements) {\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n\n  checkDuplicateExports(\n    node:\n      | N.Identifier\n      | N.StringLiteral\n      | N.ExportNamedDeclaration\n      | N.ExportSpecifier\n      | N.ExportDefaultSpecifier,\n    name: string,\n  ): void {\n    if (this.state.exportedIdentifiers.indexOf(name) > -1) {\n      this.raise(\n        node.start,\n        name === \"default\"\n          ? Errors.DuplicateDefaultExport\n          : Errors.DuplicateExport,\n        name,\n      );\n    }\n    this.state.exportedIdentifiers.push(name);\n  }\n\n  // Parses a comma-separated list of module exports.\n\n  parseExportSpecifiers(): Array<N.ExportSpecifier> {\n    const nodes = [];\n    let first = true;\n\n    // export { x, y as z } [from '...']\n    this.expect(tt.braceL);\n\n    while (!this.eat(tt.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.eat(tt.braceR)) break;\n      }\n\n      const node = this.startNode();\n      node.local = this.parseModuleExportName();\n      node.exported = this.eatContextual(\"as\")\n        ? this.parseModuleExportName()\n        : node.local.__clone();\n      nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n    }\n\n    return nodes;\n  }\n\n  // https://tc39.es/ecma262/#prod-ModuleExportName\n  parseModuleExportName(): N.StringLiteral | N.Identifier {\n    if (this.match(tt.string)) {\n      const result = this.parseStringLiteral(this.state.value);\n      const surrogate = result.value.match(loneSurrogate);\n      if (surrogate) {\n        this.raise(\n          result.start,\n          Errors.ModuleExportNameHasLoneSurrogate,\n          surrogate[0].charCodeAt(0).toString(16),\n        );\n      }\n      return result;\n    }\n    return this.parseIdentifier(true);\n  }\n\n  // Parses import declaration.\n  // https://tc39.es/ecma262/#prod-ImportDeclaration\n\n  parseImport(node: N.Node): N.AnyImport {\n    // import '...'\n    node.specifiers = [];\n    if (!this.match(tt.string)) {\n      // check if we have a default import like\n      // import React from \"react\";\n      const hasDefault = this.maybeParseDefaultImportSpecifier(node);\n      /* we are checking if we do not have a default import, then it is obvious that we need named imports\n       * import { get } from \"axios\";\n       * but if we do have a default import\n       * we need to check if we have a comma after that and\n       * that is where this `|| this.eat` condition comes into play\n       */\n      const parseNext = !hasDefault || this.eat(tt.comma);\n      // if we do have to parse the next set of specifiers, we first check for star imports\n      // import React, * from \"react\";\n      const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n      // now we check if we need to parse the next imports\n      // but only if they are not importing * (everything)\n      if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n      this.expectContextual(\"from\");\n    }\n    node.source = this.parseImportSource();\n    // https://github.com/tc39/proposal-import-assertions\n    // parse module import assertions if the next token is `assert` or ignore\n    // and finish the ImportDeclaration node.\n    const assertions = this.maybeParseImportAssertions();\n    if (assertions) {\n      node.assertions = assertions;\n    } else if (!process.env.BABEL_8_BREAKING) {\n      const attributes = this.maybeParseModuleAttributes();\n      if (attributes) {\n        node.attributes = attributes;\n      }\n    }\n\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource(): N.StringLiteral {\n    if (!this.match(tt.string)) this.unexpected();\n    return this.parseExprAtom();\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  shouldParseDefaultImport(node: N.ImportDeclaration): boolean {\n    return this.match(tt.name);\n  }\n\n  parseImportSpecifierLocal(\n    node: N.ImportDeclaration,\n    specifier: N.Node,\n    type: string,\n    contextDescription: string,\n  ): void {\n    specifier.local = this.parseIdentifier();\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  /**\n   * parse assert entries\n   *\n   * @see {@link https://tc39.es/proposal-import-assertions/#prod-AssertEntries |AssertEntries}\n   * @returns {N.ImportAttribute[]}\n   * @memberof StatementParser\n   */\n  parseAssertEntries(): N.ImportAttribute[] {\n    const attrs = [];\n    const attrNames = new Set();\n\n    do {\n      if (this.match(tt.braceR)) {\n        break;\n      }\n\n      const node = this.startNode<N.ImportAttribute>();\n\n      // parse AssertionKey : IdentifierName, StringLiteral\n      const keyName = this.state.value;\n      if (this.match(tt.string)) {\n        node.key = this.parseStringLiteral(keyName);\n      } else {\n        node.key = this.parseIdentifier(true);\n      }\n      this.expect(tt.colon);\n\n      // for now we are only allowing `type` as the only allowed module attribute\n      if (keyName !== \"type\") {\n        this.raise(\n          node.key.start,\n          Errors.ModuleAttributeDifferentFromType,\n          keyName,\n        );\n      }\n      // check if we already have an entry for an attribute\n      // if a duplicate entry is found, throw an error\n      // for now this logic will come into play only when someone declares `type` twice\n      if (attrNames.has(keyName)) {\n        this.raise(\n          node.key.start,\n          Errors.ModuleAttributesWithDuplicateKeys,\n          keyName,\n        );\n      }\n      attrNames.add(keyName);\n\n      if (!this.match(tt.string)) {\n        throw this.unexpected(\n          this.state.start,\n          Errors.ModuleAttributeInvalidValue,\n        );\n      }\n      node.value = this.parseStringLiteral(this.state.value);\n      this.finishNode<N.ImportAttribute>(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(tt.comma));\n\n    return attrs;\n  }\n\n  /**\n   * parse module attributes\n   * @deprecated It will be removed in Babel 8\n   * @returns\n   * @memberof StatementParser\n   */\n  maybeParseModuleAttributes() {\n    if (this.match(tt._with) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"moduleAttributes\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"moduleAttributes\")) return [];\n      return null;\n    }\n    const attrs = [];\n    const attributes = new Set();\n    do {\n      const node = this.startNode();\n      node.key = this.parseIdentifier(true);\n\n      if (node.key.name !== \"type\") {\n        this.raise(\n          node.key.start,\n          Errors.ModuleAttributeDifferentFromType,\n          node.key.name,\n        );\n      }\n\n      if (attributes.has(node.key.name)) {\n        this.raise(\n          node.key.start,\n          Errors.ModuleAttributesWithDuplicateKeys,\n          node.key.name,\n        );\n      }\n      attributes.add(node.key.name);\n      this.expect(tt.colon);\n      if (!this.match(tt.string)) {\n        throw this.unexpected(\n          this.state.start,\n          Errors.ModuleAttributeInvalidValue,\n        );\n      }\n      node.value = this.parseStringLiteral(this.state.value);\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(tt.comma));\n\n    return attrs;\n  }\n\n  maybeParseImportAssertions() {\n    // [no LineTerminator here] AssertClause\n    if (this.isContextual(\"assert\") && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"importAssertions\");\n      this.next(); // eat `assert`\n    } else {\n      if (this.hasPlugin(\"importAssertions\")) return [];\n      return null;\n    }\n    // https://tc39.es/proposal-import-assertions/#prod-AssertClause\n    this.eat(tt.braceL);\n    const attrs = this.parseAssertEntries();\n    this.eat(tt.braceR);\n\n    return attrs;\n  }\n\n  maybeParseDefaultImportSpecifier(node: N.ImportDeclaration): boolean {\n    if (this.shouldParseDefaultImport(node)) {\n      // import defaultObj, { x, y as z } from '...'\n      this.parseImportSpecifierLocal(\n        node,\n        this.startNode(),\n        \"ImportDefaultSpecifier\",\n        \"default import specifier\",\n      );\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseStarImportSpecifier(node: N.ImportDeclaration): boolean {\n    if (this.match(tt.star)) {\n      const specifier = this.startNode();\n      this.next();\n      this.expectContextual(\"as\");\n\n      this.parseImportSpecifierLocal(\n        node,\n        specifier,\n        \"ImportNamespaceSpecifier\",\n        \"import namespace specifier\",\n      );\n      return true;\n    }\n    return false;\n  }\n\n  parseNamedImportSpecifiers(node: N.ImportDeclaration) {\n    let first = true;\n    this.expect(tt.braceL);\n    while (!this.eat(tt.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        // Detect an attempt to deep destructure\n        if (this.eat(tt.colon)) {\n          throw this.raise(this.state.start, Errors.DestructureNamedImport);\n        }\n\n        this.expect(tt.comma);\n        if (this.eat(tt.braceR)) break;\n      }\n\n      this.parseImportSpecifier(node);\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-ImportSpecifier\n  parseImportSpecifier(node: N.ImportDeclaration): void {\n    const specifier = this.startNode();\n    const importedIsString = this.match(tt.string);\n    specifier.imported = this.parseModuleExportName();\n    if (this.eatContextual(\"as\")) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      const { imported } = specifier;\n      if (importedIsString) {\n        throw this.raise(\n          specifier.start,\n          Errors.ImportBindingIsString,\n          imported.value,\n        );\n      }\n      this.checkReservedWord(imported.name, specifier.start, true, true);\n      specifier.local = imported.__clone();\n    }\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n  }\n\n  // This is used in flow and typescript plugin\n  // Determine whether a parameter is a this param\n  isThisParam(\n    param: N.Pattern | N.Identifier | N.TSParameterProperty,\n  ): boolean {\n    return param.type === \"Identifier\" && param.name === \"this\";\n  }\n}\n","// @flow\n\nimport type { Options } from \"../options\";\nimport type { File /*::, JSXOpeningElement */ } from \"../types\";\nimport type { PluginList } from \"../plugin-utils\";\nimport { getOptions } from \"../options\";\nimport StatementParser from \"./statement\";\nimport ScopeHandler from \"../util/scope\";\n\nexport type PluginsMap = Map<string, { [string]: any }>;\n\nexport default class Parser extends StatementParser {\n  // Forward-declaration so typescript plugin can override jsx plugin\n  /*::\n  +jsxParseOpeningElementAfterName: (\n    node: JSXOpeningElement,\n  ) => JSXOpeningElement;\n  */\n\n  constructor(options: ?Options, input: string) {\n    options = getOptions(options);\n    super(options, input);\n\n    this.options = options;\n    this.initializeScopes();\n    this.plugins = pluginsMap(this.options.plugins);\n    this.filename = options.sourceFilename;\n  }\n\n  // This can be overwritten, for example, by the TypeScript plugin.\n  getScopeHandler(): Class<ScopeHandler<*>> {\n    return ScopeHandler;\n  }\n\n  parse(): File {\n    this.enterInitialScopes();\n    const file = this.startNode();\n    const program = this.startNode();\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    return file;\n  }\n}\n\nfunction pluginsMap(plugins: PluginList): PluginsMap {\n  const pluginMap: PluginsMap = new Map();\n  for (const plugin of plugins) {\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n  }\n  return pluginMap;\n}\n","// @flow\n\nimport { type Options } from \"./options\";\nimport {\n  hasPlugin,\n  validatePlugins,\n  mixinPluginNames,\n  mixinPlugins,\n  type PluginList,\n} from \"./plugin-utils\";\nimport Parser from \"./parser\";\n\nimport { types as tokTypes } from \"./tokenizer/types\";\nimport \"./tokenizer/context\";\n\nimport type { Expression, File } from \"./types\";\n\nexport function parse(input: string, options?: Options): File {\n  if (options?.sourceType === \"unambiguous\") {\n    options = {\n      ...options,\n    };\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n\n      if (parser.ambiguousScriptDifferentAst) {\n        // Top level await introduces code which can be both a valid script and\n        // a valid module, but which produces different ASTs:\n        //    await\n        //    0\n        // can be parsed either as an AwaitExpression, or as two ExpressionStatements.\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch {}\n      } else {\n        // This is both a valid module and a valid script, but\n        // we parse it as a script by default\n        ast.program.sourceType = \"script\";\n      }\n\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch {}\n\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\n\nexport function parseExpression(input: string, options?: Options): Expression {\n  const parser = getParser(options, input);\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n  return parser.getExpression();\n}\n\nexport { tokTypes };\n\nfunction getParser(options: ?Options, input: string): Parser {\n  let cls = Parser;\n  if (options?.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n\n  return new cls(options, input);\n}\n\nconst parserClassCache: { [key: string]: Class<Parser> } = {};\n\n/** Get a Parser class with plugins applied. */\nfunction getParserClass(pluginsFromOptions: PluginList): Class<Parser> {\n  const pluginList = mixinPluginNames.filter(name =>\n    hasPlugin(pluginsFromOptions, name),\n  );\n\n  const key = pluginList.join(\"/\");\n  let cls = parserClassCache[key];\n  if (!cls) {\n    cls = Parser;\n    for (const plugin of pluginList) {\n      cls = mixinPlugins[plugin](cls);\n    }\n    parserClassCache[key] = cls;\n  }\n  return cls;\n}\n",null,null,null,null,null,null,null,"<template>\n  <div>\n    <h1>Hello world</h1>\n  </div>\n</template>\n\n<script lang='ts'>\nimport { defineComponent } from 'vue';\n\nexport default defineComponent({\n  name: 'App',\n});\n</script>",null],"names":["HMR_HOST","HMR_PORT","HMR_SECURE","HMR_ENV_HASH","module","bundle","HMR_BUNDLE_ID","OVERLAY_ID","OldModule","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","undefined","checkedAssets","acceptedAssets","assetsToAccept","location","protocol","indexOf","hostname","port","parent","isParcelRequire","WebSocket","getHostname","getPort","test","ws","onmessage","event","JSON","parse","type","removeErrorOverlay","assets","filter","asset","envHash","handled","forEach","didAccept","hmrAcceptCheck","root","id","depsByBundle","console","clear","hmrApply","i","length","hmrAcceptRun","window","reload","ansiDiagnostic","diagnostics","ansi","stack","codeframe","error","message","hints","join","overlay","createErrorOverlay","html","document","body","appendChild","onerror","e","onclose","warn","getElementById","remove","log","createElement","errorHTML","diagnostic","map","hint","innerHTML","modules","parents","k","d","dep","Array","isArray","concat","getParents","link","newLink","cloneNode","onload","parentNode","removeChild","setAttribute","getAttribute","split","Date","now","insertBefore","nextSibling","cssTimeout","setTimeout","links","querySelectorAll","href","servedFromHMRServer","RegExp","absolute","origin","updateLink","reloadCSS","deps","Function","output","cached","cache","some","v","cb","assetsToAlsoAccept","apply","render","h","mount","exports","require","Object","defineProperty","value","str","expectsLowerCase","create","list","val","toLowerCase","PatchFlagNames","slotFlagsText","GLOBALS_WHITE_LISTED","isGloballyWhitelisted","makeMap","range","source","start","end","lines","count","res","j","line","repeat","Math","max","String","lineLength","pad","min","specialBooleanAttrs","isSpecialBooleanAttr","isBooleanAttr","unsafeAttrCharRE","attrValidationCache","name","hasOwnProperty","isUnsafe","propsToAttrMap","acceptCharset","className","htmlFor","httpEquiv","isNoUnitNumericStyleProp","isKnownAttr","item","normalized","normalizeStyle","isString","parseStringStyle","key","isObject","listDelimiterRE","propertyDelimiterRE","cssText","ret","tmp","trim","styles","normalizedKey","startsWith","hyphenate","normalizeClass","HTML_TAGS","SVG_TAGS","VOID_TAGS","isHTMLTag","isSVGTag","isVoidTag","escapeRE","string","match","exec","escaped","index","lastIndex","charCodeAt","substring","commentStripRE","src","replace","a","b","equal","looseEqual","aValidType","isDate","bValidType","getTime","looseCompareArrays","aKeysCount","keys","bKeysCount","aHasKey","bHasKey","arr","findIndex","toDisplayString","stringify","replacer","_key","isMap","size","entries","reduce","isSet","values","isPlainObject","babelParserDefaultPlugins","EMPTY_OBJ","freeze","EMPTY_ARR","NOOP","NO","onRE","isOn","isModelListener","extend","assign","el","splice","prototype","hasOwn","toTypeString","isFunction","isSymbol","isPromise","then","catch","objectToString","toString","toRawType","slice","isIntegerKey","parseInt","isReservedProp","cacheStringFunction","hit","camelizeRE","camelize","_","c","toUpperCase","hyphenateRE","capitalize","charAt","toHandlerKey","hasChanged","oldValue","invokeArrayFns","fns","arg","def","obj","configurable","enumerable","toNumber","n","parseFloat","isNaN","_globalThis","getGlobalThis","globalThis","self","global","escapeHtml","escapeHtmlComment","generateCodeFrame","isSSRSafeAttrName","looseIndexOf","stringifyStyle","beforeExpr","startsExpr","isLoop","isAssign","prefix","postfix","TokenType","constructor","label","conf","keyword","rightAssociative","binop","updateContext","keywords","Map","createKeyword","options","token","set","createBinop","types","num","bigint","decimal","regexp","privateName","eof","bracketL","bracketHashL","bracketBarL","bracketR","bracketBarR","braceL","braceBarL","braceHashL","braceR","braceBarR","parenL","parenR","comma","semi","colon","doubleColon","dot","question","questionDot","arrow","template","ellipsis","backQuote","dollarBraceL","at","hash","interpreterDirective","eq","incDec","bang","tilde","pipeline","nullishCoalescing","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","star","slash","exponent","_break","_case","_catch","_continue","_debugger","_default","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_const","_while","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_in","_instanceof","_typeof","_void","_delete","lineBreak","lineBreakG","isNewLine","code","skipWhiteSpace","isWhitespace","Position","col","column","SourceLocation","filename","identifierName","getLineInfo","input","offset","lineStart","BaseParser","sawUnambiguousESM","ambiguousScriptDifferentAst","hasPlugin","plugins","has","getPluginOption","plugin","get","last","CommentsParser","addComment","comment","loc","state","trailingComments","leadingComments","adjustCommentsAfterTrailingComma","node","elements","takeAllComments","lastElement","commentPreviousNode","newTrailingComments","leadingComment","processComment","commentStack","firstChild","lastChild","lastInStack","pop","properties","arguments","innerComments","firstTrailingCommentIndex","ErrorCodes","SyntaxError","SourceTypeModuleError","ErrorMessages","makeErrorTemplates","AccessorIsGenerator","ArgumentsInClass","AsyncFunctionInSingleStatementContext","AwaitBindingIdentifier","AwaitBindingIdentifierInStaticBlock","AwaitExpressionFormalParameter","AwaitNotInAsyncContext","AwaitNotInAsyncFunction","BadGetterArity","BadSetterArity","BadSetterRestParameter","ConstructorClassField","ConstructorClassPrivateField","ConstructorIsAccessor","ConstructorIsAsync","ConstructorIsGenerator","DeclarationMissingInitializer","DecoratorBeforeExport","DecoratorConstructor","DecoratorExportClass","DecoratorSemicolon","DecoratorStaticBlock","DeletePrivateField","DestructureNamedImport","DuplicateConstructor","DuplicateDefaultExport","DuplicateExport","DuplicateProto","DuplicateRegExpFlags","ElementAfterRest","EscapedCharNotAnIdentifier","ExportBindingIsString","ExportDefaultFromAsIdentifier","ForInOfLoopInitializer","ForOfAsync","ForOfLet","GeneratorInSingleStatementContext","IllegalBreakContinue","IllegalLanguageModeDirective","IllegalReturn","ImportBindingIsString","ImportCallArgumentTrailingComma","ImportCallArity","ImportCallNotNewExpression","ImportCallSpreadArgument","InvalidBigIntLiteral","InvalidCodePoint","InvalidDecimal","InvalidDigit","InvalidEscapeSequence","InvalidEscapeSequenceTemplate","InvalidEscapedReservedWord","InvalidIdentifier","InvalidLhs","InvalidLhsBinding","InvalidNumber","InvalidOrMissingExponent","InvalidOrUnexpectedToken","InvalidParenthesizedAssignment","InvalidPrivateFieldResolution","InvalidPropertyBindingPattern","InvalidRecordProperty","InvalidRestAssignmentPattern","LabelRedeclaration","LetInLexicalBinding","LineTerminatorBeforeArrow","MalformedRegExpFlags","MissingClassName","MissingEqInAssignment","MissingSemicolon","MissingUnicodeEscape","MixingCoalesceWithLogical","ModuleAttributeDifferentFromType","ModuleAttributeInvalidValue","ModuleAttributesWithDuplicateKeys","ModuleExportNameHasLoneSurrogate","ModuleExportUndefined","MultipleDefaultsInSwitch","NewlineAfterThrow","NoCatchOrFinally","NumberIdentifier","NumericSeparatorInEscapeSequence","ObsoleteAwaitStar","OptionalChainingNoNew","OptionalChainingNoTemplate","OverrideOnConstructor","ParamDupe","PatternHasAccessor","PatternHasMethod","PipelineBodyNoArrow","PipelineBodySequenceExpression","PipelineHeadSequenceExpression","PipelineTopicUnused","PrimaryTopicNotAllowed","PrimaryTopicRequiresSmartPipeline","PrivateInExpectedIn","PrivateNameRedeclaration","RecordExpressionBarIncorrectEndSyntaxType","RecordExpressionBarIncorrectStartSyntaxType","RecordExpressionHashIncorrectStartSyntaxType","RecordNoProto","RestTrailingComma","SloppyFunction","StaticPrototype","StrictDelete","StrictEvalArguments","StrictEvalArgumentsBinding","StrictFunction","StrictNumericEscape","StrictOctalLiteral","StrictWith","SuperNotAllowed","SuperPrivateField","TrailingDecorator","TupleExpressionBarIncorrectEndSyntaxType","TupleExpressionBarIncorrectStartSyntaxType","TupleExpressionHashIncorrectStartSyntaxType","UnexpectedArgumentPlaceholder","UnexpectedAwaitAfterPipelineBody","UnexpectedDigitAfterHash","UnexpectedImportExport","UnexpectedKeyword","UnexpectedLeadingDecorator","UnexpectedLexicalDeclaration","UnexpectedNewTarget","UnexpectedNumericSeparator","UnexpectedPrivateField","UnexpectedReservedWord","UnexpectedSuper","UnexpectedToken","UnexpectedTokenUnaryExponentiation","UnsupportedBind","UnsupportedDecoratorExport","UnsupportedDefaultExport","UnsupportedImport","UnsupportedMetaProperty","UnsupportedParameterDecorator","UnsupportedPropertyDecorator","UnsupportedSuper","UnterminatedComment","UnterminatedRegExp","UnterminatedString","UnterminatedTemplate","VarRedeclaration","YieldBindingIdentifier","YieldInParameter","ZeroDigitNumericSeparator","SourceTypeModuleErrorMessages","ImportMetaOutsideModule","ImportOutsideModule","messages","templates","reasonCode","ParserError","getLocationForPosition","pos","startLoc","lastTokStart","lastTokStartLoc","endLoc","lastTokEnd","lastTokEndLoc","raise","params","raiseWithData","raiseOverwrite","errorRecovery","errors","_raise","errorTemplate","errorContext","err","isLookahead","superClass","parseRegExpLiteral","pattern","flags","regex","estreeParseLiteral","parseBigIntLiteral","bigInt","BigInt","parseDecimalLiteral","parseLiteral","parseStringLiteral","parseNumericLiteral","parseNullLiteral","parseBooleanLiteral","directiveToStmt","directive","directiveLiteral","stmt","startNodeAt","expression","extra","expressionValue","raw","finishNodeAt","initFunction","isAsync","checkDeclaration","isObjectProperty","getObjectOrClassMethodParams","method","isValidDirective","parenthesized","stmtToDirective","addExtra","parseBlockBody","args","directiveStatements","directives","pushClassMethod","classBody","isGenerator","isConstructor","allowsDirectSuper","parseMethod","typeParameters","parseMaybePrivateName","convertPrivateNameToPrivateIdentifier","getPrivateNameSV","isPrivateName","parseFunctionBody","allowExpression","isMethod","allowDirectSuper","inClassScope","funcNode","startNode","kind","computed","finishNode","parseClassProperty","propertyNode","parseClassPrivateProperty","parseObjectMethod","prop","isPattern","isAccessor","shorthand","parseObjectProperty","startPos","refExpressionErrors","toAssignable","isLHS","toAssignableObjectExpressionProp","Errors","finishCallExpression","optional","callee","attributes","toReferencedArguments","parseExport","exported","specifiers","parseSubscript","base","noCalls","optionalChainMember","stop","chain","startNodeAtNode","hasPropertyAsPrivateName","isOptionalChain","isObjectMethod","TokContext","isExpr","preserveSpace","braceStatement","braceExpression","recordExpression","templateQuasi","parenStatement","parenExpression","functionExpression","functionStatement","tt","context","exprAllowed","out","curContext","prevType","allowed","braceIsBlock","statementParens","hasPrecedingLineBreak","b_stat","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","isIdentifierStart","fromCharCode","isIdentifierChar","reservedWords","strict","strictBind","Set","reservedWordsStrictSet","reservedWordsStrictBindSet","isReservedWord","word","inModule","isStrictReservedWord","isStrictBindOnlyReservedWord","isStrictBindReservedWord","isKeyword","isIteratorStart","current","next","SCOPE_OTHER","SCOPE_PROGRAM","SCOPE_FUNCTION","SCOPE_ARROW","SCOPE_SIMPLE_CATCH","SCOPE_SUPER","SCOPE_DIRECT_SUPER","SCOPE_CLASS","SCOPE_STATIC_BLOCK","SCOPE_TS_MODULE","SCOPE_VAR","BIND_KIND_VALUE","BIND_KIND_TYPE","BIND_SCOPE_VAR","BIND_SCOPE_LEXICAL","BIND_SCOPE_FUNCTION","BIND_FLAGS_NONE","BIND_FLAGS_CLASS","BIND_FLAGS_TS_ENUM","BIND_FLAGS_TS_CONST_ENUM","BIND_FLAGS_TS_EXPORT_ONLY","BIND_FLAGS_FLOW_DECLARE_FN","BIND_CLASS","BIND_LEXICAL","BIND_VAR","BIND_FUNCTION","BIND_TS_INTERFACE","BIND_TS_TYPE","BIND_TS_ENUM","BIND_TS_AMBIENT","BIND_NONE","BIND_OUTSIDE","BIND_TS_CONST_ENUM","BIND_TS_NAMESPACE","BIND_FLOW_DECLARE_FN","CLASS_ELEMENT_FLAG_STATIC","CLASS_ELEMENT_KIND_GETTER","CLASS_ELEMENT_KIND_SETTER","CLASS_ELEMENT_KIND_ACCESSOR","CLASS_ELEMENT_STATIC_GETTER","CLASS_ELEMENT_STATIC_SETTER","CLASS_ELEMENT_INSTANCE_GETTER","CLASS_ELEMENT_INSTANCE_SETTER","CLASS_ELEMENT_OTHER","Scope","var","lexical","functions","ScopeHandler","scopeStack","undefinedExports","undefinedPrivateNames","inFunction","currentVarScope","allowSuper","currentThisScope","inClass","inStaticBlock","inNonArrowFunction","treatFunctionsAsVar","treatFunctionsAsVarInScope","currentScope","createScope","enter","exit","scope","declareName","bindingType","checkRedeclarationInScope","maybeExportDefined","delete","isRedeclaredInScope","checkLocalExport","FlowScope","declareFunctions","FlowScopeHandler","includes","reservedTypes","FlowErrors","AmbiguousConditionalArrow","AmbiguousDeclareModuleKind","AssignReservedType","DeclareClassElement","DeclareClassFieldInitializer","DuplicateDeclareModuleExports","EnumBooleanMemberNotInitialized","EnumDuplicateMemberName","EnumInconsistentMemberValues","EnumInvalidExplicitType","EnumInvalidExplicitTypeUnknownSupplied","EnumInvalidMemberInitializerPrimaryType","EnumInvalidMemberInitializerSymbolType","EnumInvalidMemberInitializerUnknownType","EnumInvalidMemberName","EnumNumberMemberNotInitialized","EnumStringMemberInconsistentlyInitailized","GetterMayNotHaveThisParam","ImportTypeShorthandOnlyInPureImport","InexactInsideExact","InexactInsideNonObject","InexactVariance","InvalidNonTypeImportInDeclareModule","MissingTypeParamDefault","NestedDeclareModule","NestedFlowComment","OptionalBindingPattern","SetterMayNotHaveThisParam","SpreadVariance","ThisParamAnnotationRequired","ThisParamBannedInConstructor","ThisParamMayNotBeOptional","ThisParamMustBeFirst","ThisParamNoDefault","TypeBeforeInitializer","TypeCastInPattern","UnexpectedExplicitInexactInObject","UnexpectedReservedType","UnexpectedReservedUnderscore","UnexpectedSpaceBetweenModuloChecks","UnexpectedSpreadType","UnexpectedSubtractionOperand","UnexpectedTokenAfterTypeParameter","UnexpectedTypeParameterBeforeAsyncArrowFunction","UnsupportedDeclareExportKind","UnsupportedStatementInDeclareModule","UnterminatedFlowComment","isEsModuleType","bodyElement","declaration","hasTypeImportKind","importKind","isMaybeDefaultImport","exportSuggestions","const","let","interface","partition","list1","list2","FLOW_PRAGMA_REGEX","flowPragma","getScopeHandler","shouldParseTypes","shouldParseEnums","finishToken","matches","Error","flowParseTypeInitialiser","tok","oldInType","inType","expect","flowParseType","flowParsePredicate","moduloPos","expectContextual","eat","parseExpression","flowParseTypeAndPredicateInitialiser","predicate","flowParseDeclareClass","flowParseInterfaceish","flowParseDeclareFunction","parseIdentifier","typeNode","typeContainer","isRelational","flowParseTypeParameterDeclaration","flowParseFunctionTypeParams","rest","this","returnType","typeAnnotation","resetEndLocation","semicolon","flowParseDeclare","insideModule","flowParseDeclareVariable","eatContextual","flowParseDeclareModuleExports","flowParseDeclareModule","isContextual","flowParseDeclareTypeAlias","flowParseDeclareOpaqueType","flowParseDeclareInterface","flowParseDeclareExportDeclaration","unexpected","flowParseTypeAnnotatableIdentifier","parseExprAtom","bodyNode","parseImport","hasModuleExport","default","isLet","suggestion","exportKind","flowParseTypeAnnotation","flowParseTypeAlias","flowParseOpaqueType","isClass","flowParseRestrictedIdentifier","extends","implements","mixins","flowParseInterfaceExtends","flowParseObjectType","allowStatic","allowExact","allowSpread","allowProto","allowInexact","flowParseQualifiedTypeIdentifier","flowParseTypeParameterInstantiation","flowParseInterface","checkNotUnderscore","checkReservedType","liberal","right","declare","supertype","impltype","flowParseTypeParameter","requireDefault","nodeStart","variance","flowParseVariance","ident","bound","jsxTagStart","defaultRequired","typeParameter","expectRelational","oldNoAnonFunctionType","noAnonFunctionType","flowParseTypeParameterInstantiationCallOrNew","flowParseTypeOrImplicitInstantiation","flowParseInterfaceType","flowParseObjectPropertyKey","flowParseObjectTypeIndexer","isStatic","static","lookahead","flowParseObjectTypeInternalSlot","flowParseObjectTypeMethodish","flowParseFunctionTypeParam","flowParseObjectTypeCallProperty","valueNode","callProperties","indexers","internalSlots","endDelim","exact","inexact","protoStart","inexactStart","propOrInexact","flowParseObjectTypeProperty","flowObjectTypeSemicolon","isInexactToken","argument","proto","flowCheckGetterSetterParams","property","paramCount","node2","qualification","flowParseGenericType","flowParseTypeofType","flowParsePrimaryType","flowParseTupleType","first","lh","isThis","reinterpretTypeAsFunctionTypeParam","flowIdentToTypeAnnotation","isGroupedType","parseLiteralAtNode","createIdentifier","flowParsePostfixType","seenOptionalIndexedAccess","canInsertSemicolon","elementType","objectType","indexType","flowParsePrefixType","flowParseAnonFunctionWithoutParens","param","flowParseIntersectionType","flowParseUnionType","allowPrimitiveOverride","typeCastToParameter","allowExpressionBody","forwardNoArrowParamsConversionAt","parseFunctionBodyAndFinish","parseStatement","topLevel","flowParseEnumDeclaration","parseExpressionStatement","expr","shouldParseExportDeclaration","isExportDefaultSpecifier","parseExportDefaultExpression","parseConditional","refNeedsArrowPos","result","tryParse","failState","clone","originalNoArrowAt","noArrowAt","consequent","failed","tryParseConditionalConsequent","valid","invalid","getArrowLikeExpressions","alternate","parseMaybeAssign","noArrowParamsConversionAt","parseMaybeAssignAllowIn","disallowInvalid","arrows","finishArrowValidation","every","isAssignable","toAssignableList","trailingComma","checkParams","parseParenItem","typeCastNode","assertModuleNodeAllowed","decl","parseExportDeclaration","declarationNode","parseExportSpecifiers","parseExportFrom","eatExportStar","maybeParseExportNamespaceSpecifier","hasNamespace","parseClassId","isStatement","optionalId","parseClassMember","member","parseClassMemberFromModifier","isIterator","readIterator","readWord1","fullWord","getTokenFromCode","finishOp","isBinding","element","operator","exprList","trailingCommaPos","toReferencedList","isParenthesizedExpr","parseArrayLike","close","canBePattern","isTuple","maybeInArrowParameters","checkLVal","isClassMethod","isClassProperty","isNonstaticConstructor","isThisParam","pushClassPrivateMethod","parseClassSuper","superTypeParameters","implemented","checkGetterSetterParams","parsePropertyName","isPrivateNameAllowed","parseObjPropValue","parseAssignableListItemTypes","parseMaybeDefault","left","shouldParseDefaultImport","parseImportSpecifierLocal","specifier","contextDescription","local","maybeParseDefaultImportSpecifier","parseImportSpecifier","firstIdentIsString","firstIdent","parseModuleExportName","specifierTypeKind","isLookaheadContextual","as_ident","imported","__clone","nodeIsTypeImport","specifierIsTypeImport","checkReservedWord","parseBindingAtom","parseFunctionParams","allowModifiers","parseVarId","parseAsyncArrowFromCallExpression","shouldParseAsyncArrow","afterLeftParse","jsx","tc","j_oTag","j_expr","abort","arrowExpression","resetStartLocationFromNode","maybeUnwrapTypeCastExpression","aborted","async","thrown","parseArrow","shouldParseArrow","setArrowFunctionParameters","allowDuplicates","isArrowFunction","parseParenAndDistinguishExpression","canBeArrow","parseSubscripts","parseCallExpressionArguments","parseAsyncArrowWithTypeParameters","subscriptState","isLookaheadToken_lt","typeArguments","parseNewArguments","targs","parseArrowExpression","readToken_mult_modulo","hasFlowComment","nextToken","readToken_pipe_amp","parseTopLevel","file","program","fileNode","skipBlockComment","skipFlowComment","hasFlowCommentCompletion","shiftToFirstNonWhiteSpace","ch2","ch3","flowEnumErrorBooleanMemberNotInitialized","enumName","memberName","flowEnumErrorInvalidMemberName","flowEnumErrorDuplicateMemberName","flowEnumErrorInconsistentMemberValues","flowEnumErrorInvalidExplicitType","suppliedType","flowEnumErrorInvalidMemberInitializer","explicitType","flowEnumErrorNumberMemberNotInitialized","flowEnumErrorStringMemberInconsistentlyInitailized","flowEnumMemberInit","endOfInit","literal","flowEnumMemberRaw","init","flowEnumCheckExplicitTypeMismatch","expectedType","flowEnumMembers","seenNames","members","booleanMembers","numberMembers","stringMembers","defaultedMembers","hasUnknownMembers","memberNode","add","flowEnumStringMembers","initializedMembers","flowEnumParseExplicitType","flowEnumBody","nameLoc","empty","boolsLen","numsLen","strsLen","defaultedLen","nextTokenStart","afterNext","entities","quot","amp","apos","lt","gt","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","State","curLine","potentialArrowAt","inPipeline","inPropertyName","isAmbientContext","inAbstractClass","topicContext","maxNumOfResolvableTopics","maxTopicIndex","soloAwait","inFSharpPipelineDirectBody","labels","decoratorStack","comments","ct","containsEsc","strictErrors","exportedIdentifiers","tokensLength","strictMode","sourceType","startLine","curPosition","skipArrays","HEX_NUMBER","DECIMAL_NUMBER","JsxErrors","AttributeIsEmpty","MissingClosingTagElement","MissingClosingTagFragment","UnexpectedSequenceExpression","UnsupportedJsxValue","UnterminatedJsxContent","UnwrappedAdjacentJSXElements","j_cTag","jsxName","jsxText","jsxTagEnd","isFragment","object","getQualifiedJSXName","namespace","jsxReadToken","chunkStart","ch","jsxReadEntity","jsxReadNewLine","normalizeCRLF","jsxReadString","quote","entity","substr","fromCodePoint","XHTMLEntities","jsxReadWord","jsxParseIdentifier","jsxParseNamespacedName","jsxParseElementName","newNode","jsxParseAttributeValue","jsxParseExpressionContainer","jsxParseEmptyExpression","jsxParseSpreadChild","jsxParseAttribute","jsxParseOpeningElementAt","jsxParseOpeningElementAfterName","selfClosing","jsxParseClosingElementAt","jsxParseElementAt","children","openingElement","closingElement","contents","openingFragment","closingFragment","jsxParseElement","createLookaheadState","lookaheadState","TypeScriptScope","enums","constEnums","classes","exportOnlyBindings","TypeScriptScopeHandler","isConst","wasConst","PARAM","PARAM_YIELD","PARAM_AWAIT","PARAM_RETURN","PARAM_IN","ProductionParameterHandler","stacks","currentFlags","hasAwait","hasYield","hasReturn","hasIn","functionFlags","nonNull","x","assert","TSErrors","AbstractMethodHasImplementation","AccesorCannotDeclareThisParameter","AccesorCannotHaveTypeParameters","ClassMethodHasDeclare","ClassMethodHasReadonly","ConstructorHasTypeParameters","DeclareAccessor","DeclareClassFieldHasInitializer","DeclareFunctionHasImplementation","DuplicateAccessibilityModifier","DuplicateModifier","EmptyHeritageClauseType","EmptyTypeArguments","EmptyTypeParameters","ExpectedAmbientAfterExportDeclare","ImportAliasHasImportType","IncompatibleModifiers","IndexSignatureHasAbstract","IndexSignatureHasAccessibility","IndexSignatureHasDeclare","IndexSignatureHasOverride","IndexSignatureHasStatic","InvalidModifierOnTypeMember","InvalidModifiersOrder","InvalidTupleMemberLabel","MixedLabeledAndUnlabeledElements","NonAbstractClassHasAbstractMethod","NonClassMethodPropertyHasAbstractModifer","OptionalTypeBeforeRequired","OverrideNotInSubClass","PatternIsOptional","PrivateElementHasAbstract","PrivateElementHasAccessibility","ReadonlyForMethodSignature","SetAccesorCannotHaveOptionalParameter","SetAccesorCannotHaveRestParameter","SetAccesorCannotHaveReturnType","StaticBlockCannotHaveModifier","TypeAnnotationAfterAssign","TypeImportCannotSpecifyDefaultAndNamed","UnexpectedParameterModifier","UnexpectedReadonly","UnexpectedTypeAnnotation","UnexpectedTypeCastInParameter","UnsupportedImportTypeArgument","UnsupportedParameterPropertyKind","UnsupportedSignatureParameterKind","keywordTypeFromName","tsIsAccessModifier","modifier","tsIsIdentifier","tsTokenCanFollowModifier","isLiteralPropertyName","tsNextTokenCanFollowModifier","tsParseModifier","allowedModifiers","tsTryParse","bind","tsParseModifiers","modified","disallowedModifiers","enforceOrder","before","after","incompatible","mod1","mod2","accessibility","tsIsListTerminator","tsParseList","parseElement","tsParseDelimitedList","tsParseDelimitedListWorker","expectSuccess","tsParseBracketedList","bracket","skipFirstToken","tsParseImportType","qualifier","tsParseEntityName","tsParseTypeArguments","allowReservedWords","tsParseTypeReference","typeName","tsParseThisTypePredicate","lhs","parameterName","tsParseTypeAnnotation","asserts","tsParseThisTypeNode","tsParseTypeQuery","exprName","tsParseTypeParameter","parseIdentifierName","constraint","tsEatThenParseType","tsTryParseTypeParameters","tsParseTypeParameters","tsTryNextParseConstantContext","tsFillSignature","returnToken","signature","returnTokenRequired","parameters","tsParseBindingListForSignature","tsParseTypeOrTypePredicateAnnotation","parseBindingList","tsParseTypeMemberSemicolon","isLineTerminator","tsParseSignatureMember","tsIsUnambiguouslyIndexSignature","tsTryParseIndexSignature","tsLookAhead","tsTryParseTypeAnnotation","tsParsePropertyOrMethodSignature","readonly","nodeAny","firstParameter","tsParseTypeMember","idx","tsParseTypeLiteral","tsParseObjectTypeMembers","tsIsStartOfMappedType","tsParseMappedTypeParameter","tsExpectThenParseType","tsParseMappedType","nameType","tsParseType","tsTryParseType","tsParseTupleType","elementTypes","tsParseTupleElementType","seenOptionalElement","labeledElements","elementNode","isLabeled","labeled","labeledNode","optionalTypeNode","restNode","tsParseParenthesizedType","tsParseFunctionOrConstructorType","abstract","tsParseLiteralTypeNode","tsParseTemplateLiteralType","parseTemplate","parseTemplateSubstitution","tsParseThisTypeOrThisTypePredicate","thisKeyword","tsParseNonArrayType","lookaheadCharCode","parseMaybeUnary","tsParseArrayTypeOrHigher","tsParseTypeOperator","tsParseTypeOperatorOrHigher","tsCheckTypeAnnotationForReadOnly","tsParseInferType","find","kw","tsParseUnionOrIntersectionType","parseConstituentType","hasLeadingOperator","tsParseIntersectionTypeOrHigher","tsParseUnionTypeOrHigher","tsIsStartOfFunctionType","tsIsUnambiguouslyStartOfFunctionType","tsSkipParameterStart","braceStackCounter","tsInType","t","tsParseTypePredicateAsserts","thisTypePredicate","typePredicateVariable","tsParseTypePredicatePrefix","tsTryParseTypeOrTypePredicateAnnotation","eatColon","tsParseNonConditionalType","checkType","extendsType","trueType","falseType","isAbstractConstructorSignature","tsParseTypeAssertion","tsNextThenParseType","tsParseHeritageClause","descriptor","originalStart","delimitedList","tsParseExpressionWithTypeArguments","tsParseInterfaceDeclaration","tsParseTypeAliasDeclaration","tsInNoContext","oldContext","tsDoThenParseType","tsParseEnumMember","initializer","tsParseEnumDeclaration","tsParseModuleBlock","parseBlockOrModuleBlockBody","tsParseModuleOrNamespaceDeclaration","nested","inner","prodParam","tsParseAmbientExternalModuleDeclaration","tsParseImportEqualsDeclaration","isExport","moduleReference","tsParseModuleReference","tsIsExternalModuleReference","tsParseExternalModuleReference","f","tsTryParseAndCatch","tsTryParseDeclare","nany","starttype","tsInAmbientContext","parseFunctionStatement","parseClass","parseVarStatement","tsParseDeclaration","tsTryParseExportDeclaration","tsParseExpressionStatement","mod","tsCheckLineTerminator","tsParseAbstractDeclaration","hasFollowingLineBreak","tsTryParseGenericAsyncArrowFunction","oldMaybeInArrowParameters","tsIsDeclarationStart","parseAssignableListItem","decorators","parseAccessModifier","elt","pp","parameter","bodilessType","registerFunctionStatementId","tsCheckForInvalidTypeCasts","items","isInParens","nonNullExpression","atPossibleAsyncArrow","asyncArrowFn","parseTaggedTemplateExpression","parseExprOp","leftStartPos","leftStartLoc","minPrec","reScan_lt_gt","checkKeywords","checkDuplicateExports","ahead","importNode","isAbstractClass","cls","parseStatementContent","tsHasSomeModifiers","modifiers","invalidModifersForStaticBlocks","callParseClassMemberWithIsStatic","parseClassStaticBlock","parseClassMemberWithIsStatic","override","hadSuperClass","parsePostMemberNameModifiers","methodOrProp","isDeclare","resetStartLocation","parseClassPropertyAnnotation","definite","typeCast","toAssignableParenthesizedExpression","parseMaybeDecoratorArguments","checkCommaAfterRest","readToken_lt_gt","canHaveLeadingDecorator","getGetterSetterExpectedParamCount","baseCount","firstParam","hasContextParam","parseCatchClauseParam","oldIsAmbientContext","oldInAbstractClass","hasBody","shouldParseAsAmbientContext","getExpression","placeholder","PlaceHolderErrors","ClassNameIsRequired","parsePlaceholder","expectedNode","assertNoSpace","finishPlaceholder","isFinished","verifyBreakContinue","parseBlock","parseFunctionId","takeDecorators","oldStrict","parseClassBody","expectPlugin","isUnparsedContextual","nextTokenStartSince","maybeParseExportDefaultSpecifier","checkExport","hasStarImport","maybeParseStarImportSpecifier","parseNamedImportSpecifiers","parseImportSource","parseV8Intrinsic","v8IntrinsicStart","identifier","option","PIPELINE_PROPOSALS","RECORD_AND_TUPLE_SYNTAX_TYPES","validatePlugins","decoratorsBeforeExport","p","moduleAttributesVerionPluginOption","missingPlugins","mixinPlugins","estree","flow","typescript","v8intrinsic","placeholders","mixinPluginNames","defaultOptions","sourceFilename","allowAwaitOutsideFunction","allowReturnOutsideFunction","allowImportExportEverywhere","allowSuperOutsideMethod","allowUndeclaredExports","ranges","tokens","createParenthesizedExpressions","getOptions","opts","isDigit","VALID_REGEX_FLAGS","forbiddenNumericSeparatorSiblings","decBinOct","hex","allowedNumericSeparatorSiblings","bin","oct","dec","Token","Tokenizer","ParserErrors","pushToken","checkKeywordEscapes","old","curr","skip","codePointAtPos","cp","trail","setStrict","skipSpace","readTmplToken","pushComment","block","text","skipLineComment","startSkip","loop","readToken_numberSign","readToken_interpreter","nextPos","readToken_dot","readNumber","readToken_slash","readRegexp","width","readToken_caret","readToken_plus_min","readToken_eq_excl","readToken_question","next2","readRadixNumber","readString","readWord","content","mods","char","charCode","readInt","radix","len","forceLen","allowNumSeparator","forbiddenSiblings","allowedSiblings","total","Infinity","prev","Number","isBigInt","startsWithDot","isFloat","isDecimal","hasExponent","isOctal","hasLeadingZero","integer","recordStrictModeErrors","underscorePos","readCodePoint","throwOnInvalid","codePos","readHexChar","readEscapedChar","containsInvalid","inTemplate","octalStr","octal","firstCode","escStart","identifierCheck","esc","keywordTypes","update","ClassScope","privateNames","loneAccessors","ClassScopeHandler","oldClassScope","from","declarePrivateName","classScope","redefined","accessor","oldStatic","newStatic","oldKind","newKind","usePrivateName","kExpression","kMaybeArrowParameterDeclaration","kMaybeAsyncArrowParameterDeclaration","kParameterDeclaration","ExpressionScope","canBeArrowParameterDeclaration","isCertainlyParameterDeclaration","ArrowHeadParsingScope","recordDeclarationError","clearDeclarationError","iterateErrors","iterator","ExpressionScopeHandler","recordParameterInitializerError","recordParenthesizedIdentifierError","recordAsyncArrowParametersError","validateAsPattern","newParameterDeclarationScope","newArrowHeadScope","newAsyncArrowScope","newExpressionScope","UtilParser","op","nameStart","nameEnd","nextCh","allowAsi","messageOrType","missingPlugin","expectOnePlugin","names","oldState","abortSignal","checkExpressionErrors","andThrow","shorthandAssign","doubleProto","initializeScopes","oldLabels","oldExportedIdentifiers","oldInModule","oldScope","oldProdParam","oldExpressionScope","expressionScope","enterInitialScopes","paramFlags","ExpressionErrors","Node","parser","NodeUtils","locationNode","unwrapParenthesizedExpression","LValParser","isLast","raiseRestNotLast","checkToRestConversion","raiseTrailingCommaAfterRest","toReferencedListDeep","parseSpread","parseRestBinding","parseObjectLike","closeCharCode","allowEmpty","elts","parseDecorator","checkClashes","disallowLetBinding","strictModeChanged","elem","ExpressionParser","checkProto","isRecord","protoRef","used","shouldExitDescending","disallowIn","disallowInAnd","parseExpressionBase","allowInAnd","expressions","parseMaybeAssignDisallowIn","parseYield","ownExpressionErrors","parseMaybeConditional","parseExprOps","prec","checkPipelineAtInfixOperator","logical","coalesce","parseExprOpRightExpr","nextOp","withTopicPermittingContext","parseSmartPipelineBody","parseExprOpBaseRightExpr","withSoloAwaitPermittingContext","parseFSharpPipelineBody","checkExponentialAfterUnary","sawUnary","isAwait","isAwaitAllowed","parseAwait","parseModuleExpression","isDelete","parseUpdate","isAmbiguousAwait","parseExprSubscripts","maybeAsyncArrow","parseBind","parseCoverCallAndAsyncArrowHead","parseMember","parsePrivateName","parseNoCallExpr","tag","quasi","possibleAsyncArrow","dynamicImport","allowPlaceholder","nodeForExtra","oldInFSharpPipelineDirectBody","parseExprListItem","parseSuper","parseImportMetaProperty","parseFunction","parseAsyncArrowUnaryFunction","parseDo","parseFunctionOrFunctionSent","parseDecorators","parseNewOrNewTarget","primaryTopicReferenceIsAllowedInCurrentTopicContext","registerTopicReference","lookaheadCh","codePointAt","isPrivate","meta","parseMetaProperty","propertyName","SourceTypeModuleErrors","innerStartPos","innerStartLoc","spreadStart","optionalCommaStart","spreadNodeStartPos","spreadNodeStartLoc","innerEndPos","innerEndLoc","arrowNode","metaProp","parseNew","parseExprList","parseTemplateElement","isTagged","cooked","tail","curElt","quasis","propHash","parsePropertyDefinition","maybeAsyncOrAccessorProp","keyName","oldInPropertyName","generator","isExpression","hasStrictModeDirective","nonSimple","isSimpleParamList","errorPos","reservedTest","delegate","childExpression","checkSmartPipelineBodyEarlyErrors","parseSmartPipelineBodyInStyle","isSimpleReference","topicReferenceWasUsedInCurrentTopicContext","callback","outerContextTopicState","withTopicForbiddingContext","outerContextSoloAwaitState","prodParamToSet","prodParamToClear","revertScopes","parseProgram","loopLabel","switchLabel","FUNC_NO_FLAGS","FUNC_STATEMENT","FUNC_HANGING_STATEMENT","FUNC_NULLABLE_ID","loneSurrogate","keywordRelationalOperator","babel7CompatTokens","hashEndPos","hashEndLoc","StatementParser","interpreter","parseInterpreterDirective","isLetKeyword","matched","endCh","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseWhileStatement","parseWithStatement","parseEmptyStatement","nextTokenCharCode","isAsyncFunction","maybeName","parseLabeledStatement","allowExport","currentContextDecorators","decorator","isBreak","lab","parseHeaderExpression","awaitAt","parseFor","startsWithLet","parseVar","declarations","parseForIn","startsWithUnescapedName","isForOf","description","declarationPosition","discriminant","cases","cur","sawDefault","isCase","simple","handler","clause","finalizer","statementStart","allowDirectives","createNewLexicalScope","afterBlockParse","parsedNonDirective","isForIn","await","isFor","isTypescript","statement","isHangingStatement","requireId","hadConstructor","publicMethod","privateMethod","publicProp","privateProp","publicMember","parseClassElementName","isSimple","maybeQuestionTokenStart","pushClassPrivateProperty","pushClassProperty","parseInitializer","hasDefault","parseAfterDefault","hasStar","parseAfterNamespace","isFromRequired","hasSpecifiers","maybeParseExportNamedSpecifiers","hasDeclaration","maybeParseExportDeclaration","l","hasFrom","nextAfterFrom","assertions","maybeParseImportAssertions","checkNames","isDefault","isFrom","exportedName","nodes","surrogate","parseNext","maybeParseModuleAttributes","parseAssertEntries","attrs","attrNames","importedIsString","Parser","pluginsMap","pluginMap","getParser","ast","moduleError","getParserClass","parserClassCache","pluginsFromOptions","pluginList","factory","define","amd","estreeWalker","should_skip","should_remove","replacement","WalkerBase","leave","visit","_should_skip","_should_remove","_replacement","skipped","removed","instance","SyncWalker","AsyncWalker","asyncWalk","walk","reactivity","shared","vnode","msg","pauseTracking","component","appWarnHandler","appContext","config","warnHandler","trace","getComponentTrace","callWithErrorHandling","proxy","formatComponentName","warnArgs","formatTrace","resetTracking","currentVNode","normalizedStack","recurseCount","parentInstance","logs","entry","formatTraceEntry","isRoot","open","props","formatProps","formatProp","isRef","toRaw","ErrorTypeStrings","handleError","callWithAsyncErrorHandling","throwInDev","contextVNode","exposedInstance","errorInfo","errorCapturedHooks","ec","appErrorHandler","errorHandler","logError","info","pushWarningContext","popWarningContext","isFlushing","isFlushPending","queue","flushIndex","pendingPreFlushCbs","activePreFlushCbs","preFlushIndex","pendingPostFlushCbs","activePostFlushCbs","postFlushIndex","resolvedPromise","Promise","resolve","currentFlushPromise","currentPreFlushParentJob","RECURSION_LIMIT","job","jobId","getId","middle","middleJobId","allowRecurse","findInsertionIndex","queueFlush","flushJobs","activeQueue","pendingQueue","queueCb","seen","parentJob","checkRecursiveUpdates","flushPreFlushCbs","deduped","sort","flushPostFlushCbs","isHmrUpdating","hmrDirtyComponents","globalObject","__VUE_HMR_RUNTIME__","createRecord","tryWrap","rerender","__hmrId","record","instances","isClassComponent","__vccOpts","newRender","renderCache","newComp","queuePostFlushCb","queueJob","hook","devtools","app","version","emit","Fragment","Text","Comment","Static","devtoolsComponentAdded","createDevtoolsComponentHook","devtoolsComponentUpdated","devtoolsComponentRemoved","uid","rawArgs","emitsOptions","propsOptions","validator","isValid","modelArg","modifiersKey","number","devtoolsComponentEmit","lowerCaseEvent","handlerName","onceHandler","emitted","comp","asMixin","deopt","__emits","emits","hasExtends","extendEmits","normalizedFromExtend","normalizeEmitsOptions","isRenderingCompiledSlot","setCompiledSlotRendering","slots","fallback","noSlotted","slot","openBlock","validSlotContent","ensureValidVNode","rendered","createBlock","scopeId","slotScopeIds","vnodes","child","isVNode","currentRenderingInstance","currentScopeId","__scopeId","withScopeId","_id","withCtx","ctx","renderFnWithContext","prevInstance","setCurrentRenderingInstance","closeBlock","_c","accessedAttrs","Component","withProxy","setupState","fallthroughAttrs","shapeFlag","proxyToUse","normalizeVNode","markAttrsAccessed","getFunctionalFallthrough","setRoot","patchFlag","getChildRoot","inheritAttrs","filterModelListeners","cloneVNode","allAttrs","eventAttrs","extraAttrs","dirs","isElementRoot","transition","blockStack","createVNode","rawChildren","dynamicChildren","childRoot","filterSingleRoot","dynamicIndex","updatedRoot","singleRoot","prevVNode","nextVNode","optimized","prevProps","prevChildren","nextProps","nextChildren","hasPropsChanged","dynamicProps","isEmitListener","$stable","nextKeys","subTree","isSuspense","__isSuspense","SuspenseImpl","process","n1","n2","container","anchor","parentComponent","parentSuspense","isSVG","rendererInternals","mountSuspense","patchSuspense","hydrate","hydrateSuspense","createSuspenseBoundary","Suspense","patch","o","hiddenContainer","suspense","pendingBranch","ssContent","ssFallback","setActiveBranch","um","unmount","newBranch","newFallback","activeBranch","isInFallback","isHydrating","isSameVNodeType","pendingId","effects","onPending","timeout","hasWarned","m","move","isUnmounted","resume","delayEnter","mode","afterLeave","hasUnresolvedAncestor","onResolve","fallbackVNode","onFallback","mountFallback","registerDep","setupRenderEffect","isInPendingSuspense","hydratedEl","asyncDep","asyncSetupResult","suspenseId","asyncResolved","handleSetupResult","updateHOCHostEl","doRemove","hydrateNode","normalizeSuspenseSlot","s","singleChild","branch","rawProps","isStateful","isSSR","InternalObjectKey","propsDefaults","setFullProps","validateProps","shallowReactive","rawPrevProps","rawCurrentProps","propsToUpdate","camelizedKey","resolvePropValue","kebabKey","trigger","needCastKeys","camelKey","opt","defaultValue","setCurrentInstance","__props","extendProps","normalizePropsOptions","validatePropName","booleanIndex","getTypeIndex","Boolean","stringIndex","ctor","getType","expectedTypes","isSameType","resolvedValues","validateProp","isAbsent","required","assertType","getInvalidTypeMessage","isSimpleType","receivedType","expectedValue","styleValue","receivedValue","isExplicable","isBoolean","explicitTypes","target","currentInstance","prepend","hooks","wrappedHook","__weh","unshift","apiName","createHook","lifecycle","isInSSRComponentSetup","injectHook","onBeforeMount","onMounted","onBeforeUpdate","onUpdated","onBeforeUnmount","onUnmounted","onRenderTriggered","onRenderTracked","onErrorCaptured","effect","doWatch","INITIAL_WATCHER_VALUE","immediate","deep","flush","onTrack","onTrigger","warnInvalidSource","getter","forceTrigger","_shallow","isReactive","traverse","cleanup","onInvalidate","baseGetter","runner","onStop","active","newValue","scheduler","queuePostRenderEffect","isMounted","queuePreFlushCb","lazy","recordInstanceBoundEffect","publicThis","isLeaving","isUnmounting","leavingVNodes","TransitionHookValidator","BaseTransitionImpl","appear","persisted","onBeforeEnter","onEnter","onAfterEnter","onEnterCancelled","onBeforeLeave","onLeave","onAfterLeave","onLeaveCancelled","onBeforeAppear","onAppear","onAfterAppear","onAppearCancelled","setup","getCurrentInstance","useTransitionState","prevTransitionKey","getTransitionRawChildren","emptyPlaceholder","innerChild","getKeepAliveChild","enterHooks","resolveTransitionHooks","setTransitionHooks","oldChild","oldInnerChild","transitionKeyChanged","getTransitionKey","leavingHooks","delayLeave","earlyRemove","delayedLeave","leavingVNodesCache","getLeavingNodesForType","_leaveCb","BaseTransition","callHook","beforeEnter","leavingVNode","afterHook","cancelHook","called","done","_enterCb","cancelled","isKeepAlive","keepComment","keyedFragmentCount","__isKeepAlive","KeepAliveImpl","include","exclude","sharedContext","renderer","_unmount","storageContainer","activate","isDeactivated","vnodeHook","onVnodeMounted","invokeVNodeHook","deactivate","da","onVnodeUnmounted","resetShapeFlag","getComponentName","pruneCacheEntry","watch","pruneCache","pendingCacheKey","cacheSubtree","getInnerChild","rawVNode","cachedVNode","KeepAlive","registerKeepAliveHook","__wdc","injectToKeepAliveRoot","keepAliveRoot","injected","isInternalKey","normalizeSlotValue","normalizeSlot","rawSlot","normalizeObjectSlots","rawSlots","_ctx","normalizeVNodeSlots","initSlots","updateSlots","needDeletionCheck","deletionComparisonTarget","isBuiltInDirective","internalInstance","bindings","dir","mounted","updated","oldBindings","binding","isNativeTag","performance","globalProperties","optionMergeStrategies","isCustomElement","components","provides","rootComponent","rootProps","createAppContext","installedPlugins","_uid","_component","_props","_container","_context","use","install","mixin","validateComponentName","validateDirectiveName","rootContainer","isHydrate","__vue_app__","devtoolsInitApp","devtoolsUnmountApp","provide","hasMismatch","isSVGContainer","namespaceURI","tagName","isComment","nodeType","mt","mountComponent","patchProp","insert","createComment","hasChildNodes","isFragmentStart","onMismatch","handleMismatch","ref","domType","nextNode","needToAdoptContent","staticCount","outerHTML","hydrateFragment","hydrateElement","hydrateComponent","loadAsync","__asyncLoader","locateClosingAsyncAnchor","hydrateChildren","setRef","invokeDirectiveHook","onClick","vnodeHooks","onVnodeBeforeMount","queueEffectWithSuspense","textContent","parentVNode","fragmentSlotScopeIds","supported","perf","isSupported","mark","startTag","endTag","measure","clearMarks","isAsyncWrapper","loader","loadingComponent","errorComponent","delay","suspensible","onError","userOnError","pendingRequest","resolvedComp","retries","retry","load","thisRequest","reject","userRetry","userFail","__esModule","Symbol","toStringTag","defineComponent","createInnerComp","loaded","delayed","rtc","rtg","rawRef","oldRawRef","r","exposed","owner","oldRef","refs","doSet","baseCreateRenderer","createHydrationFunctions","createHydrationFns","__VUE__","setDevtoolsHook","__VUE_DEVTOOLS_GLOBAL_HOOK__","hostInsert","hostRemove","hostPatchProp","forcePatchProp","hostForcePatchProp","hostCreateElement","createText","hostCreateText","hostCreateComment","setText","hostSetText","setElementText","hostSetElementText","hostParentNode","hostNextSibling","setScopeId","hostSetScopeId","hostCloneNode","insertStaticContent","hostInsertStaticContent","getNextHostNode","processText","processCommentNode","mountStaticNode","patchStaticNode","processFragment","processElement","processComponent","internals","removeStaticNode","moveStaticNode","mountElement","patchElement","is","mountChildren","unmountChildren","needCallTransitionHooks","cloneIfMounted","oldProps","newProps","onVnodeBeforeUpdate","patchProps","class","style","areChildrenSVG","patchBlockChildren","traverseStaticChildren","patchChildren","onVnodeUpdated","oldChildren","newChildren","fallbackContainer","oldVNode","newVNode","fragmentStartAnchor","fragmentEndAnchor","updateComponent","initialVNode","createComponentInstance","registerHMR","startMeasure","setupComponent","endMeasure","shouldUpdateComponent","updateComponentPreRender","invalidateJob","bm","renderComponentRoot","scopedInitialVNode","bu","u","originNext","nextTree","prevTree","createDevEffectOptions","updateProps","c1","prevShapeFlag","c2","patchKeyedChildren","patchUnkeyedChildren","oldLength","newLength","commonLength","nextChild","parentAnchor","l2","e1","e2","s1","s2","keyToNewIndexMap","patched","toBePatched","moved","maxNewIndexSoFar","newIndexToOldIndexMap","prevChild","newIndex","increasingNewIndexSequence","getSequence","nextIndex","moveType","needTransition","performLeave","shouldInvokeDirs","onVnodeBeforeUnmount","unmountComponent","removeFragment","performRemove","unregisterHMR","bum","_vnode","mc","pc","pbc","createApp","createAppAPI","shallow","ch1","arrI","isTeleport","__isTeleport","isTeleportDisabled","disabled","isTargetSVG","SVGElement","resolveTarget","select","targetSelector","to","TeleportImpl","querySelector","mainAnchor","targetAnchor","wasDisabled","currentContainer","currentAnchor","moveTeleport","nextTarget","hydrateTeleport","isReorder","targetNode","_lpa","Teleport","COMPONENTS","DIRECTIVES","maybeSelfReference","resolveAsset","NULL_DYNAMIC_COMPONENT","warnMissing","selfName","registry","currentBlock","disableTracking","shouldTrack","__v_isVNode","vnodeArgsTransformer","transformer","createVNodeWithArgsTransform","_createVNode","normalizeKey","normalizeRef","isBlockNode","cloned","normalizeChildren","isProxy","klass","normalizeSuspenseChildren","extraProps","mergeRef","mergedProps","mergeProps","deepCloneVNode","flag","numberOfNodes","asBlock","slotFlag","createTextVNode","toMerge","existing","incoming","parentProvides","treatDefaultAsFactory","shouldCacheAccess","deferredData","deferredWatch","deferredProvide","extendsOptions","dataOptions","computedOptions","methods","watchOptions","provideOptions","inject","injectOptions","beforeMount","beforeUpdate","activated","deactivated","beforeDestroy","beforeUnmount","destroyed","unmounted","renderTracked","renderTriggered","errorCaptured","expose","globalMixins","callSyncHook","applyMixins","applyOptions","checkDuplicateProperties","createDuplicateChecker","methodHandler","writable","dataFn","resolveData","rawData","createWatcher","Reflect","ownKeys","onActivated","onDeactivated","proxyRefs","toRef","callHookWithMixinAndExtends","selfHook","reactive","createPathGetter","path","segments","__merged","mergeOptions","strats","getPublicInstance","isStatefulComponent","publicPropertiesMap","$","$el","$data","$props","shallowReadonly","$attrs","$slots","$refs","$parent","$root","$emit","$options","resolveMergedOptions","$forceUpdate","$nextTick","nextTick","$watch","instanceWatch","PublicInstanceProxyHandlers","accessCache","normalizedProps","publicGetter","cssModule","track","__cssModules","RuntimeCompiledPublicInstanceProxyHandlers","unscopables","emptyAppContext","uid$1","setupContext","bc","createRenderContext","isBuiltInTag","appIsNativeTag","initProps","setupResult","setupStatefulComponent","Proxy","exposePropsOnRenderContext","createSetupContext","resolvedResult","finishComponentSetup","__ssrInlineRender","ssrRender","devtoolsRawSetupState","exposeSetupStateOnRenderContext","compile","isRuntimeOnly","_compile","delimiters","_rc","attrHandlers","deleteProperty","classifyRE","classify","displayName","__file","inferFromRegistry","getterOrOptions","propsOrChildren","ssrContextKey","useSSRContext","vueStyle","numberStyle","stringStyle","keywordStyle","formatter","header","__isVue","genRefFlag","formatValue","isReadonly","formatInstance","blocks","createInstanceBlock","extractKeys","asRaw","Comp","extracted","isKeyOfType","devtoolsFormatters","renderItem","isInteger","dynamicSlots","_ssrUtils","ssrUtils","customRef","markRaw","shallowRef","toRefs","triggerRef","unref","createCommentVNode","createHydrationRenderer","createRenderer","createSlots","createStaticVNode","defineAsyncComponent","defineEmit","defineProps","initCustomFormatter","popScopeId","pushScopeId","registerRuntimeCompiler","renderList","renderSlot","resolveComponent","resolveDirective","resolveDynamicComponent","setBlockTracking","toHandlers","transformVNodeArgs","useContext","watchEffect","withDirectives","script","initialize","_withId","_hoisted_1","_cache"],"version":3,"file":"index.HASH_REF_043affa210fd5d10be6d99797cacc1f4.js.map","sourceRoot":"/__parcel_source_root/"}